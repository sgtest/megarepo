// This file is autogenerated. DO NOT EDIT.
// Generated by gen.go
// Run `make gen-jsonnet` from repository root to regenerate.

local grafana = import "grizzly/grafana.libsonnet";
local resource = import "grizzly/resource.libsonnet";
local dashboard = grafana.dashboard;

{
  folders: [grafana.folder.new('dev-dashboards', 'dev-dashboards')],
  dashboards: [
    dashboard.new('Repeating-Kitchen-Sink', import '../dev-dashboards/e2e-repeats/Repeating-Kitchen-Sink.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('Repeating-a-panel-horizontally', import '../dev-dashboards/e2e-repeats/Repeating-a-panel-horizontally.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('Repeating-a-panel-vertically', import '../dev-dashboards/e2e-repeats/Repeating-a-panel-vertically.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('Repeating-a-row-with-a-non-repeating-pan', import '../dev-dashboards/e2e-repeats/Repeating-a-row-with-a-non-repeating-panel-and-horizontal-repeating-panel.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('Repeating-a-row-with-a-non-repeating-pan', import '../dev-dashboards/e2e-repeats/Repeating-a-row-with-a-non-repeating-panel-and-vertical-repeating-panel.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('Repeating-a-row-with-a-non-repeating-pan', import '../dev-dashboards/e2e-repeats/Repeating-a-row-with-a-non-repeating-panel.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('Repeating-a-row-with-a-repeating-horizon', import '../dev-dashboards/e2e-repeats/Repeating-a-row-with-a-repeating-horizontal-panel.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('Repeating-a-row-with-a-repeating-vertica', import '../dev-dashboards/e2e-repeats/Repeating-a-row-with-a-repeating-vertical-panel.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('Repeating-an-empty-row', import '../dev-dashboards/e2e-repeats/Repeating-an-empty-row.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('all-panels', import '../dev-dashboards/all-panels.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('annotation-filtering', import '../dev-dashboards/annotations/annotation-filtering.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('auto_decimals', import '../dev-dashboards/panel-common/auto_decimals.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('bar-gauge-demo2', import '../dev-dashboards/datasource-testdata/bar-gauge-demo2.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('bar_gauge_demo', import '../dev-dashboards/panel-bargauge/bar_gauge_demo.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('barchart-autosizing', import '../dev-dashboards/panel-barchart/barchart-autosizing.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('barchart-label-rotation-skipping', import '../dev-dashboards/panel-barchart/barchart-label-rotation-skipping.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('barchart-thresholds-mappings', import '../dev-dashboards/panel-barchart/barchart-thresholds-mappings.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('barchart-tooltips', import '../dev-dashboards/panel-barchart/barchart-tooltips.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('candlestick', import '../dev-dashboards/panel-candlestick/candlestick.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('canvas-connection-examples', import '../dev-dashboards/panel-canvas/canvas-connection-examples.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('canvas-examples', import '../dev-dashboards/panel-canvas/canvas-examples.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('color_modes', import '../dev-dashboards/panel-common/color_modes.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('config-from-query', import '../dev-dashboards/transforms/config-from-query.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('datadata-macros', import '../dev-dashboards/feature-templating/datadata-macros.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('datagrid_metric_values', import '../dev-dashboards/panel-datagrid/datagrid_metric_values.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('demo1', import '../dev-dashboards/datasource-testdata/demo1.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('elasticsearch_complex', import '../dev-dashboards/datasource-elasticsearch/elasticsearch_complex.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('elasticsearch_migration', import '../dev-dashboards/datasource-elasticsearch/elasticsearch_migration.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('elasticsearch_simple', import '../dev-dashboards/datasource-elasticsearch/elasticsearch_simple.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('extract-json-paths', import '../dev-dashboards/transforms/extract-json-paths.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('filter', import '../dev-dashboards/transforms/filter.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('gauge-multi-series', import '../dev-dashboards/panel-gauge/gauge-multi-series.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('gauge_tests', import '../dev-dashboards/panel-gauge/gauge_tests.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('geomap-color-field', import '../dev-dashboards/panel-geomap/geomap-color-field.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('geomap-photo-layer', import '../dev-dashboards/panel-geomap/geomap-photo-layer.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('geomap-route-layer', import '../dev-dashboards/panel-geomap/geomap-route-layer.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('geomap-spatial-operations-transformer', import '../dev-dashboards/panel-geomap/geomap-spatial-operations-transformer.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('geomap-v91', import '../dev-dashboards/panel-geomap/geomap-v91.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('geomap_multi-layers', import '../dev-dashboards/panel-geomap/geomap_multi-layers.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('global-variables-and-interpolation', import '../dev-dashboards/feature-templating/global-variables-and-interpolation.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('graph-gradient-area-fills', import '../dev-dashboards/panel-graph/graph-gradient-area-fills.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('graph-shared-tooltips', import '../dev-dashboards/panel-graph/graph-shared-tooltips.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('graph-time-regions', import '../dev-dashboards/panel-graph/graph-time-regions.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('graph_tests', import '../dev-dashboards/panel-graph/graph_tests.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('graph_y_axis', import '../dev-dashboards/panel-graph/graph_y_axis.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('heatmap-calculate-log', import '../dev-dashboards/panel-heatmap/heatmap-calculate-log.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('heatmap-legacy', import '../dev-dashboards/panel-heatmap/heatmap-legacy.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('heatmap-x', import '../dev-dashboards/panel-heatmap/heatmap-x.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('histogram_tests', import '../dev-dashboards/panel-histogram/histogram_tests.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('home', import '../dev-dashboards/home.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('influxdb-logs', import '../dev-dashboards/datasource-influxdb/influxdb-logs.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('influxdb-templated', import '../dev-dashboards/datasource-influxdb/influxdb-templated.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('join-by-field', import '../dev-dashboards/transforms/join-by-field.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('join-by-labels', import '../dev-dashboards/transforms/join-by-labels.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('lazy_loading', import '../dev-dashboards/panel-common/lazy_loading.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('linked-viz', import '../dev-dashboards/panel-common/linked-viz.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('loki_fakedata', import '../dev-dashboards/datasource-loki/loki_fakedata.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('migrations', import '../dev-dashboards/migrations/migrations.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('mssql_fakedata', import '../dev-dashboards/datasource-mssql/mssql_fakedata.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('mssql_unittest', import '../dev-dashboards/datasource-mssql/mssql_unittest.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('mysql_fakedata', import '../dev-dashboards/datasource-mysql/mysql_fakedata.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('mysql_unittest', import '../dev-dashboards/datasource-mysql/mysql_unittest.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('new_features_in_v62', import '../dev-dashboards/datasource-testdata/new_features_in_v62.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('new_features_in_v74', import '../dev-dashboards/datasource-testdata/new_features_in_v74.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('new_features_in_v8', import '../dev-dashboards/datasource-testdata/new_features_in_v8.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('opentsdb', import '../dev-dashboards/datasource-opentsdb/opentsdb.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('opentsdb_v23', import '../dev-dashboards/datasource-opentsdb/opentsdb_v23.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('panel-geomap', import '../dev-dashboards/panel-geomap/panel-geomap.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('panel-stat-tests', import '../dev-dashboards/panel-stat/panel-stat-tests.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('panel_test_piechart', import '../dev-dashboards/panel-piechart/panel_test_piechart.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('panel_tests_bar_gauge', import '../dev-dashboards/panel-bargauge/panel_tests_bar_gauge.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('panel_tests_bar_gauge2', import '../dev-dashboards/panel-bargauge/panel_tests_bar_gauge2.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('panels_without_title', import '../dev-dashboards/panel-common/panels_without_title.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('polystat_test', import '../dev-dashboards/panel-polystat/polystat_test.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('postgres_fakedata', import '../dev-dashboards/datasource-postgres/postgres_fakedata.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('postgres_unittest', import '../dev-dashboards/datasource-postgres/postgres_unittest.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('reuse', import '../dev-dashboards/transforms/reuse.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('rows-to-fields', import '../dev-dashboards/transforms/rows-to-fields.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('shared_queries', import '../dev-dashboards/panel-common/shared_queries.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('slow_queries_and_annotations', import '../dev-dashboards/scenarios/slow_queries_and_annotations.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('table_pagination', import '../dev-dashboards/panel-table/table_pagination.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('table_sparkline_cell', import '../dev-dashboards/panel-table/table_sparkline_cell.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('table_tests', import '../dev-dashboards/panel-table/table_tests.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('table_tests_new', import '../dev-dashboards/panel-table/table_tests_new.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('templating-dashboard-links-and-variables', import '../dev-dashboards/feature-templating/templating-dashboard-links-and-variables.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('templating-textbox-e2e-scenarios', import '../dev-dashboards/feature-templating/templating-textbox-e2e-scenarios.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('testdata-datalinks', import '../dev-dashboards/feature-templating/testdata-datalinks.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('testdata-nested-variables', import '../dev-dashboards/feature-templating/testdata-nested-variables.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('testdata-nested-variables-drilldown', import '../dev-dashboards/feature-templating/testdata-nested-variables-drilldown.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('testdata-repeating', import '../dev-dashboards/feature-templating/testdata-repeating.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('testdata-test-variable-output', import '../dev-dashboards/feature-templating/testdata-test-variable-output.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('testdata-variables-textbox', import '../dev-dashboards/feature-templating/testdata-variables-textbox.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('testdata-variables-that-update-on-time-c', import '../dev-dashboards/feature-templating/testdata-variables-that-update-on-time-change.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('testdata_alerts', import '../dev-dashboards/alerting/testdata_alerts.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('text-options', import '../dev-dashboards/panel-text/text-options.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('time_zone_support', import '../dev-dashboards/scenarios/time_zone_support.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('timeline-demo', import '../dev-dashboards/panel-timeline/timeline-demo.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('timeline-modes', import '../dev-dashboards/panel-timeline/timeline-modes.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('timeline-thresholds-mappings', import '../dev-dashboards/panel-timeline/timeline-thresholds-mappings.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('timeseries', import '../dev-dashboards/panel-timeseries/timeseries.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('timeseries-by-value-color-schemes', import '../dev-dashboards/panel-timeseries/timeseries-by-value-color-schemes.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('timeseries-formats', import '../dev-dashboards/panel-timeseries/timeseries-formats.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('timeseries-gradient-area', import '../dev-dashboards/panel-timeseries/timeseries-gradient-area.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('timeseries-hue-gradients', import '../dev-dashboards/panel-timeseries/timeseries-hue-gradients.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('timeseries-nulls', import '../dev-dashboards/panel-timeseries/timeseries-nulls.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('timeseries-out-of-rage', import '../dev-dashboards/panel-timeseries/timeseries-out-of-rage.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('timeseries-shared-tooltip-cursor-positio', import '../dev-dashboards/panel-timeseries/timeseries-shared-tooltip-cursor-position.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('timeseries-soft-limits', import '../dev-dashboards/panel-timeseries/timeseries-soft-limits.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('timeseries-stacking', import '../dev-dashboards/panel-timeseries/timeseries-stacking.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('timeseries-stacking2', import '../dev-dashboards/panel-timeseries/timeseries-stacking2.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('timeseries-thresholds', import '../dev-dashboards/panel-timeseries/timeseries-thresholds.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('timeseries-time', import '../dev-dashboards/panel-timeseries/timeseries-time.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('timeseries-y-ticks-zero-decimals', import '../dev-dashboards/panel-timeseries/timeseries-y-ticks-zero-decimals.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('timeseries-yaxis-ticks', import '../dev-dashboards/panel-timeseries/timeseries-yaxis-ticks.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
    dashboard.new('trend_example', import '../dev-dashboards/panel-trend/trend_example.json') +
    resource.addMetadata('folder', 'dev-dashboards') +
    {
      spec+: {
        id: 0,
      }
    },
  ],
} 