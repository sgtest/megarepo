name: CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
<%- unless skip_brakeman? -%>
  scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for security vulnerabilities
        run: bin/brakeman
<% end -%>
<%- unless skip_rubocop? -%>

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Lint code for consistent style
        run: bin/rubocop
<% end -%>

  test:
    runs-on: ubuntu-latest

    <%- if options[:database] == "sqlite3" -%>
    # services:
    #  redis:
    #    image: redis
    #    ports:
    #      - 6379:6379
    #    options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5
    <%- else -%>
    services:
      <%- if options[:database] == "mysql" || options[:database] == "trilogy" -%>
      mysql:
        image: mysql
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      <%- elsif options[:database] == "postgresql" -%>
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: --health-cmd="pg_isready" --health-interval=10s --health-timeout=5s --health-retries=3
      <%- end -%>

      # redis:
      #   image: redis
      #   ports:
      #     - 6379:6379
      #   options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5

    <%- end -%>
    steps:
      - name: Install packages
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y google-chrome-stable <%= (dockerfile_deploy_packages + [build_package_for_database]).join(" ") %>

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Configure parallelization
        run: echo "PARALLEL_WORKERS=$(nproc)" >> $GITHUB_ENV

      - name: Run tests
        env:
          RAILS_ENV: test
          <%- if options[:database] == "mysql" || options[:database] == "trilogy" -%>
          DATABASE_URL: mysql2://127.0.0.1:3306
          <%- elsif options[:database] == "postgresql" -%>
          DATABASE_URL: postgres://postgres:postgres@localhost:5432
          <%- end -%>
          # REDIS_URL: redis://localhost:6379/0
        run: bin/rails db:setup test test:system

      - name: Keep screenshots from failed system tests
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots
          path: ${{ github.workspace }}/tmp/screenshots
          if-no-files-found: ignore
