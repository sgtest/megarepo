
running 2 tests
test $DIR/non-local-defs-impl.rs - doctest (line 13) - compile ... FAILED
test $DIR/non-local-defs-impl.rs - doctest (line 22) - compile ... ok

failures:

---- $DIR/non-local-defs-impl.rs - doctest (line 13) stdout ----
error: non-local `impl` definition, `impl` blocks should be written at the same level as their item
  --> $DIR/non-local-defs-impl.rs:18:1
   |
LL | impl Trait for &Local {}
   | ^^^^^-----^^^^^------
   |      |         |
   |      |         `&'_ Local` is not local
   |      |         help: remove `&` to make the `impl` local
   |      `Trait` is not local
   |
   = note: `impl` may be usable in bounds, etc. from outside the expression, which might e.g. make something constructible that previously wasn't, because it's still on a publicly-visible type
   = note: an `impl` is never scoped, even when it is nested inside an item, as it may impact type checking outside of that item, which can be the case if neither the trait or the self type are at the same nesting level as the `impl`
   = help: make this doc-test a standalone test with its own `fn main() { ... }`
   = note: this lint may become deny-by-default in the edition 2024 and higher, see the tracking issue <https://github.com/rust-lang/rust/issues/120363>
note: the lint level is defined here
  --> $DIR/non-local-defs-impl.rs:11:9
   |
LL | #![deny(non_local_definitions)]
   |         ^^^^^^^^^^^^^^^^^^^^^

error: aborting due to 1 previous error

Couldn't compile the test.

failures:
    $DIR/non-local-defs-impl.rs - doctest (line 13)

test result: FAILED. 1 passed; 1 failed; 0 ignored; 0 measured; 0 filtered out; finished in $TIME

