error[E0277]: `UnsafeCell<MySync<{integer}>>` cannot be shared between threads safely
  --> $DIR/typeck-unsafe-always-share.rs:19:10
   |
LL |     test(us);
   |     ---- ^^ `UnsafeCell<MySync<{integer}>>` cannot be shared between threads safely
   |     |
   |     required by a bound introduced by this call
   |
   = help: the trait `Sync` is not implemented for `UnsafeCell<MySync<{integer}>>`
   = note: consider using `std::sync::Arc<UnsafeCell<MySync<{integer}>>>`; for more information visit <https://doc.rust-lang.org/book/ch16-03-shared-state.html>
note: required by a bound in `test`
  --> $DIR/typeck-unsafe-always-share.rs:15:12
   |
LL | fn test<T: Sync>(s: T) {}
   |            ^^^^ required by this bound in `test`

error[E0277]: `UnsafeCell<NoSync>` cannot be shared between threads safely
  --> $DIR/typeck-unsafe-always-share.rs:23:10
   |
LL |     test(uns);
   |     ---- ^^^ `UnsafeCell<NoSync>` cannot be shared between threads safely
   |     |
   |     required by a bound introduced by this call
   |
   = help: the trait `Sync` is not implemented for `UnsafeCell<NoSync>`
   = note: consider using `std::sync::Arc<UnsafeCell<NoSync>>`; for more information visit <https://doc.rust-lang.org/book/ch16-03-shared-state.html>
note: required by a bound in `test`
  --> $DIR/typeck-unsafe-always-share.rs:15:12
   |
LL | fn test<T: Sync>(s: T) {}
   |            ^^^^ required by this bound in `test`

error[E0277]: `UnsafeCell<NoSync>` cannot be shared between threads safely
  --> $DIR/typeck-unsafe-always-share.rs:27:10
   |
LL |     test(ms);
   |     ---- ^^ `UnsafeCell<NoSync>` cannot be shared between threads safely
   |     |
   |     required by a bound introduced by this call
   |
   = help: within `MySync<NoSync>`, the trait `Sync` is not implemented for `UnsafeCell<NoSync>`
   = note: consider using `std::sync::Arc<UnsafeCell<NoSync>>`; for more information visit <https://doc.rust-lang.org/book/ch16-03-shared-state.html>
note: required because it appears within the type `MySync<NoSync>`
  --> $DIR/typeck-unsafe-always-share.rs:8:8
   |
LL | struct MySync<T> {
   |        ^^^^^^
note: required by a bound in `test`
  --> $DIR/typeck-unsafe-always-share.rs:15:12
   |
LL | fn test<T: Sync>(s: T) {}
   |            ^^^^ required by this bound in `test`

error[E0277]: `NoSync` cannot be shared between threads safely
  --> $DIR/typeck-unsafe-always-share.rs:30:10
   |
LL |     test(NoSync);
   |     ---- ^^^^^^ `NoSync` cannot be shared between threads safely
   |     |
   |     required by a bound introduced by this call
   |
   = help: the trait `Sync` is not implemented for `NoSync`
   = note: consider using `std::sync::Arc<NoSync>`; for more information visit <https://doc.rust-lang.org/book/ch16-03-shared-state.html>
note: required by a bound in `test`
  --> $DIR/typeck-unsafe-always-share.rs:15:12
   |
LL | fn test<T: Sync>(s: T) {}
   |            ^^^^ required by this bound in `test`

error: aborting due to 4 previous errors

For more information about this error, try `rustc --explain E0277`.
