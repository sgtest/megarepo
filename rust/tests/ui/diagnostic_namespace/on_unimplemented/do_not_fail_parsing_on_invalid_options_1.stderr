warning: `#[diagnostic::on_unimplemented]` can only be applied to trait definitions
  --> $DIR/do_not_fail_parsing_on_invalid_options_1.rs:8:1
   |
LL | #[diagnostic::on_unimplemented(message = "Baz")]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unknown_or_malformed_diagnostic_attributes)]` on by default

warning: malformed `on_unimplemented` attribute
  --> $DIR/do_not_fail_parsing_on_invalid_options_1.rs:3:32
   |
LL | #[diagnostic::on_unimplemented(unsupported = "foo")]
   |                                ^^^^^^^^^^^^^^^^^^^

warning: malformed `on_unimplemented` attribute
  --> $DIR/do_not_fail_parsing_on_invalid_options_1.rs:12:50
   |
LL | #[diagnostic::on_unimplemented(message = "Boom", unsupported = "Bar")]
   |                                                  ^^^^^^^^^^^^^^^^^^^

warning: malformed `on_unimplemented` attribute
  --> $DIR/do_not_fail_parsing_on_invalid_options_1.rs:17:50
   |
LL | #[diagnostic::on_unimplemented(message = "Boom", on(_Self = "i32", message = "whatever"))]
   |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: malformed `on_unimplemented` attribute
  --> $DIR/do_not_fail_parsing_on_invalid_options_1.rs:22:1
   |
LL | #[diagnostic::on_unimplemented = "boom"]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: malformed `on_unimplemented` attribute
  --> $DIR/do_not_fail_parsing_on_invalid_options_1.rs:3:32
   |
LL | #[diagnostic::on_unimplemented(unsupported = "foo")]
   |                                ^^^^^^^^^^^^^^^^^^^

error[E0277]: the trait bound `i32: Foo` is not satisfied
  --> $DIR/do_not_fail_parsing_on_invalid_options_1.rs:31:14
   |
LL |     take_foo(1_i32);
   |     -------- ^^^^^ the trait `Foo` is not implemented for `i32`
   |     |
   |     required by a bound introduced by this call
   |
help: this trait has no implementations, consider adding one
  --> $DIR/do_not_fail_parsing_on_invalid_options_1.rs:6:1
   |
LL | trait Foo {}
   | ^^^^^^^^^
note: required by a bound in `take_foo`
  --> $DIR/do_not_fail_parsing_on_invalid_options_1.rs:26:21
   |
LL | fn take_foo(_: impl Foo) {}
   |                     ^^^ required by this bound in `take_foo`

warning: malformed `on_unimplemented` attribute
  --> $DIR/do_not_fail_parsing_on_invalid_options_1.rs:12:50
   |
LL | #[diagnostic::on_unimplemented(message = "Boom", unsupported = "Bar")]
   |                                                  ^^^^^^^^^^^^^^^^^^^

error[E0277]: Boom
  --> $DIR/do_not_fail_parsing_on_invalid_options_1.rs:33:14
   |
LL |     take_baz(1_i32);
   |     -------- ^^^^^ the trait `Baz` is not implemented for `i32`
   |     |
   |     required by a bound introduced by this call
   |
help: this trait has no implementations, consider adding one
  --> $DIR/do_not_fail_parsing_on_invalid_options_1.rs:15:1
   |
LL | trait Baz {}
   | ^^^^^^^^^
note: required by a bound in `take_baz`
  --> $DIR/do_not_fail_parsing_on_invalid_options_1.rs:27:21
   |
LL | fn take_baz(_: impl Baz) {}
   |                     ^^^ required by this bound in `take_baz`

warning: malformed `on_unimplemented` attribute
  --> $DIR/do_not_fail_parsing_on_invalid_options_1.rs:17:50
   |
LL | #[diagnostic::on_unimplemented(message = "Boom", on(_Self = "i32", message = "whatever"))]
   |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0277]: Boom
  --> $DIR/do_not_fail_parsing_on_invalid_options_1.rs:35:15
   |
LL |     take_boom(1_i32);
   |     --------- ^^^^^ the trait `Boom` is not implemented for `i32`
   |     |
   |     required by a bound introduced by this call
   |
help: this trait has no implementations, consider adding one
  --> $DIR/do_not_fail_parsing_on_invalid_options_1.rs:20:1
   |
LL | trait Boom {}
   | ^^^^^^^^^^
note: required by a bound in `take_boom`
  --> $DIR/do_not_fail_parsing_on_invalid_options_1.rs:28:22
   |
LL | fn take_boom(_: impl Boom) {}
   |                      ^^^^ required by this bound in `take_boom`

error: aborting due to 3 previous errors; 8 warnings emitted

For more information about this error, try `rustc --explain E0277`.
