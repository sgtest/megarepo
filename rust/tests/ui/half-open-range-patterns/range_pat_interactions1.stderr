error: expected a pattern range bound, found an expression
  --> $DIR/range_pat_interactions1.rs:19:16
   |
LL |             0..5+1 => errors_only.push(x),
   |                ^^^ arbitrary expressions are not allowed in patterns

error[E0408]: variable `n` is not bound in all patterns
  --> $DIR/range_pat_interactions1.rs:10:25
   |
LL |         if let n @ 2..3|4 = x {
   |                -        ^ pattern doesn't bind `n`
   |                |
   |                variable not in all patterns

error[E0658]: inline-const in pattern position is experimental
  --> $DIR/range_pat_interactions1.rs:26:20
   |
LL |             y @ 0..const { 5 + 1 } => assert_eq!(y, 5),
   |                    ^^^^^
   |
   = note: see issue #76001 <https://github.com/rust-lang/rust/issues/76001> for more information
   = help: add `#![feature(inline_const_pat)]` to the crate attributes to enable
   = note: this compiler was built on YYYY-MM-DD; consider upgrading it if it is out of date

error[E0658]: exclusive range pattern syntax is experimental
  --> $DIR/range_pat_interactions1.rs:10:20
   |
LL |         if let n @ 2..3|4 = x {
   |                    ^^^^
   |
   = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for more information
   = help: add `#![feature(exclusive_range_pattern)]` to the crate attributes to enable
   = note: this compiler was built on YYYY-MM-DD; consider upgrading it if it is out of date
   = help: use an inclusive range pattern, like N..=M

error[E0658]: exclusive range pattern syntax is experimental
  --> $DIR/range_pat_interactions1.rs:14:23
   |
LL |         } else if let 2..3 | 4 = x {
   |                       ^^^^
   |
   = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for more information
   = help: add `#![feature(exclusive_range_pattern)]` to the crate attributes to enable
   = note: this compiler was built on YYYY-MM-DD; consider upgrading it if it is out of date
   = help: use an inclusive range pattern, like N..=M

error[E0658]: exclusive range pattern syntax is experimental
  --> $DIR/range_pat_interactions1.rs:19:13
   |
LL |             0..5+1 => errors_only.push(x),
   |             ^^^^^^
   |
   = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for more information
   = help: add `#![feature(exclusive_range_pattern)]` to the crate attributes to enable
   = note: this compiler was built on YYYY-MM-DD; consider upgrading it if it is out of date
   = help: use an inclusive range pattern, like N..=M

error[E0658]: exclusive range pattern syntax is experimental
  --> $DIR/range_pat_interactions1.rs:22:17
   |
LL |             1 | -3..0 => first_or.push(x),
   |                 ^^^^^
   |
   = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for more information
   = help: add `#![feature(exclusive_range_pattern)]` to the crate attributes to enable
   = note: this compiler was built on YYYY-MM-DD; consider upgrading it if it is out of date
   = help: use an inclusive range pattern, like N..=M

error[E0658]: exclusive range pattern syntax is experimental
  --> $DIR/range_pat_interactions1.rs:24:18
   |
LL |             y @ (0..5 | 6) => or_two.push(y),
   |                  ^^^^
   |
   = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for more information
   = help: add `#![feature(exclusive_range_pattern)]` to the crate attributes to enable
   = note: this compiler was built on YYYY-MM-DD; consider upgrading it if it is out of date
   = help: use an inclusive range pattern, like N..=M

error[E0658]: exclusive range pattern syntax is experimental
  --> $DIR/range_pat_interactions1.rs:26:17
   |
LL |             y @ 0..const { 5 + 1 } => assert_eq!(y, 5),
   |                 ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for more information
   = help: add `#![feature(exclusive_range_pattern)]` to the crate attributes to enable
   = note: this compiler was built on YYYY-MM-DD; consider upgrading it if it is out of date
   = help: use an inclusive range pattern, like N..=M

error[E0658]: exclusive range pattern syntax is experimental
  --> $DIR/range_pat_interactions1.rs:30:17
   |
LL |             y @ ..-7 => assert_eq!(y, -8),
   |                 ^^^^
   |
   = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for more information
   = help: add `#![feature(exclusive_range_pattern)]` to the crate attributes to enable
   = note: this compiler was built on YYYY-MM-DD; consider upgrading it if it is out of date
   = help: use an inclusive range pattern, like N..=M

error: aborting due to 10 previous errors

Some errors have detailed explanations: E0408, E0658.
For more information about an error, try `rustc --explain E0408`.
