error[E0635]: unknown feature `const_cmp`
  --> $DIR/derive-const-use.rs:2:30
   |
LL | #![feature(const_trait_impl, const_cmp, const_default_impls, derive_const)]
   |                              ^^^^^^^^^

error[E0635]: unknown feature `const_default_impls`
  --> $DIR/derive-const-use.rs:2:41
   |
LL | #![feature(const_trait_impl, const_cmp, const_default_impls, derive_const)]
   |                                         ^^^^^^^^^^^^^^^^^^^

error: const `impl` for trait `Default` which is not marked with `#[const_trait]`
  --> $DIR/derive-const-use.rs:6:12
   |
LL | impl const Default for A {
   |            ^^^^^^^
   |
   = note: marking a trait with `#[const_trait]` ensures all default method bodies are `const`
   = note: adding a non-const method body in the future would be a breaking change

error: const `impl` for trait `PartialEq` which is not marked with `#[const_trait]`
  --> $DIR/derive-const-use.rs:10:12
   |
LL | impl const PartialEq for A {
   |            ^^^^^^^^^
   |
   = note: marking a trait with `#[const_trait]` ensures all default method bodies are `const`
   = note: adding a non-const method body in the future would be a breaking change

error: const `impl` for trait `Default` which is not marked with `#[const_trait]`
  --> $DIR/derive-const-use.rs:14:16
   |
LL | #[derive_const(Default, PartialEq)]
   |                ^^^^^^^
   |
   = note: marking a trait with `#[const_trait]` ensures all default method bodies are `const`
   = note: adding a non-const method body in the future would be a breaking change
   = note: this error originates in the derive macro `Default` (in Nightly builds, run with -Z macro-backtrace for more info)

error: const `impl` for trait `PartialEq` which is not marked with `#[const_trait]`
  --> $DIR/derive-const-use.rs:14:25
   |
LL | #[derive_const(Default, PartialEq)]
   |                         ^^^^^^^^^
   |
   = note: marking a trait with `#[const_trait]` ensures all default method bodies are `const`
   = note: adding a non-const method body in the future would be a breaking change
   = note: this error originates in the derive macro `PartialEq` (in Nightly builds, run with -Z macro-backtrace for more info)

error: aborting due to 6 previous errors

For more information about this error, try `rustc --explain E0635`.
