warning: function pointers and raw pointers not derived from integers in patterns behave unpredictably and should not be relied upon. See https://github.com/rust-lang/rust/issues/70861 for details.
  --> $DIR/consts-opaque.rs:96:9
   |
LL |         QUUX => {}
   |         ^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #62411 <https://github.com/rust-lang/rust/issues/70861>
   = note: `#[warn(pointer_structural_match)]` on by default

warning: function pointers and raw pointers not derived from integers in patterns behave unpredictably and should not be relied upon. See https://github.com/rust-lang/rust/issues/70861 for details.
  --> $DIR/consts-opaque.rs:98:9
   |
LL |         QUUX => {}
   |         ^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #62411 <https://github.com/rust-lang/rust/issues/70861>

warning: function pointers and raw pointers not derived from integers in patterns behave unpredictably and should not be relied upon. See https://github.com/rust-lang/rust/issues/70861 for details.
  --> $DIR/consts-opaque.rs:108:9
   |
LL |         WRAPQUUX => {}
   |         ^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #62411 <https://github.com/rust-lang/rust/issues/70861>

warning: function pointers and raw pointers not derived from integers in patterns behave unpredictably and should not be relied upon. See https://github.com/rust-lang/rust/issues/70861 for details.
  --> $DIR/consts-opaque.rs:110:9
   |
LL |         WRAPQUUX => {}
   |         ^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #62411 <https://github.com/rust-lang/rust/issues/70861>

warning: function pointers and raw pointers not derived from integers in patterns behave unpredictably and should not be relied upon. See https://github.com/rust-lang/rust/issues/70861 for details.
  --> $DIR/consts-opaque.rs:117:9
   |
LL |         WRAPQUUX => {}
   |         ^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #62411 <https://github.com/rust-lang/rust/issues/70861>

warning: function pointers and raw pointers not derived from integers in patterns behave unpredictably and should not be relied upon. See https://github.com/rust-lang/rust/issues/70861 for details.
  --> $DIR/consts-opaque.rs:127:9
   |
LL |         WRAPQUUX => {}
   |         ^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #62411 <https://github.com/rust-lang/rust/issues/70861>

warning: function pointers and raw pointers not derived from integers in patterns behave unpredictably and should not be relied upon. See https://github.com/rust-lang/rust/issues/70861 for details.
  --> $DIR/consts-opaque.rs:139:9
   |
LL |         WHOKNOWSQUUX => {}
   |         ^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #62411 <https://github.com/rust-lang/rust/issues/70861>

warning: function pointers and raw pointers not derived from integers in patterns behave unpredictably and should not be relied upon. See https://github.com/rust-lang/rust/issues/70861 for details.
  --> $DIR/consts-opaque.rs:142:9
   |
LL |         WHOKNOWSQUUX => {}
   |         ^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #62411 <https://github.com/rust-lang/rust/issues/70861>

error: unreachable pattern
  --> $DIR/consts-opaque.rs:48:9
   |
LL |         Bar => {}
   |         --- matches any value
LL |         BAR => {}
   |         ^^^ unreachable pattern
   |
note: the lint level is defined here
  --> $DIR/consts-opaque.rs:6:9
   |
LL | #![deny(unreachable_patterns)]
   |         ^^^^^^^^^^^^^^^^^^^^

error: unreachable pattern
  --> $DIR/consts-opaque.rs:50:9
   |
LL |         Bar => {}
   |         --- matches any value
...
LL |         _ => {}
   |         ^ unreachable pattern

error: unreachable pattern
  --> $DIR/consts-opaque.rs:56:9
   |
LL |         BAR => {}
   |         --- matches any value
LL |         Bar => {}
   |         ^^^ unreachable pattern

error: unreachable pattern
  --> $DIR/consts-opaque.rs:58:9
   |
LL |         BAR => {}
   |         --- matches any value
...
LL |         _ => {}
   |         ^ unreachable pattern

error: unreachable pattern
  --> $DIR/consts-opaque.rs:64:9
   |
LL |         BAR => {}
   |         --- matches any value
LL |         BAR => {} // should not be emitting unreachable warning
   |         ^^^ unreachable pattern

error: unreachable pattern
  --> $DIR/consts-opaque.rs:66:9
   |
LL |         BAR => {}
   |         --- matches any value
...
LL |         _ => {} // should not be emitting unreachable warning
   |         ^ unreachable pattern

error: unreachable pattern
  --> $DIR/consts-opaque.rs:72:9
   |
LL |         Baz::Baz1 => {} // should not be emitting unreachable warning
   |         ^^^^^^^^^

error: unreachable pattern
  --> $DIR/consts-opaque.rs:79:9
   |
LL |         BAZ => {}
   |         ^^^

error: unreachable pattern
  --> $DIR/consts-opaque.rs:87:9
   |
LL |         _ => {} // should not be emitting unreachable warning
   |         ^

error[E0004]: non-exhaustive patterns: `Wrap(_)` not covered
  --> $DIR/consts-opaque.rs:125:11
   |
LL |     match WRAPQUUX {
   |           ^^^^^^^^ pattern `Wrap(_)` not covered
   |
note: `Wrap<fn(usize, usize) -> usize>` defined here
  --> $DIR/consts-opaque.rs:104:12
   |
LL |     struct Wrap<T>(T);
   |            ^^^^
   = note: the matched value is of type `Wrap<fn(usize, usize) -> usize>`
help: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern or an explicit pattern as shown
   |
LL |         WRAPQUUX => {}, Wrap(_) => todo!()
   |                       ++++++++++++++++++++

error: aborting due to 10 previous errors; 8 warnings emitted

For more information about this error, try `rustc --explain E0004`.
