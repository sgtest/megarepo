error: unreachable pattern
  --> $DIR/empty-match-check-notes.rs:17:9
   |
LL |         _ => {}
   |         ^
   |
note: the lint level is defined here
  --> $DIR/empty-match-check-notes.rs:7:9
   |
LL | #![deny(unreachable_patterns)]
   |         ^^^^^^^^^^^^^^^^^^^^

error: unreachable pattern
  --> $DIR/empty-match-check-notes.rs:20:9
   |
LL |         _ if false => {}
   |         ^

error: unreachable pattern
  --> $DIR/empty-match-check-notes.rs:27:9
   |
LL |         _ => {}
   |         ^

error: unreachable pattern
  --> $DIR/empty-match-check-notes.rs:30:9
   |
LL |         _ if false => {}
   |         ^

error[E0005]: refutable pattern in local binding
  --> $DIR/empty-match-check-notes.rs:35:9
   |
LL |     let None = x;
   |         ^^^^ pattern `Some(_)` not covered
   |
   = note: `let` bindings require an "irrefutable pattern", like a `struct` or an `enum` with only one variant
   = note: for more information, visit https://doc.rust-lang.org/book/ch18-02-refutability.html
   = note: the matched value is of type `Option<SecretlyUninhabitedForeignStruct>`
help: you might want to use `if let` to ignore the variant that isn't matched
   |
LL |     if let None = x { todo!() };
   |     ++              +++++++++++

error[E0004]: non-exhaustive patterns: `_` not covered
  --> $DIR/empty-match-check-notes.rs:45:11
   |
LL |     match 0u8 {
   |           ^^^ pattern `_` not covered
   |
   = note: the matched value is of type `u8`
   = note: match arms with guards don't count towards exhaustivity
help: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern or an explicit pattern as shown
   |
LL ~         _ if false => {},
LL +         _ => todo!()
   |

error: aborting due to 6 previous errors

Some errors have detailed explanations: E0004, E0005.
For more information about an error, try `rustc --explain E0004`.
