warning: the feature `min_exhaustive_patterns` is incomplete and may not be safe to use and/or cause compiler crashes
  --> $DIR/match-privately-empty.rs:3:46
   |
LL | #![cfg_attr(min_exhaustive_patterns, feature(min_exhaustive_patterns))]
   |                                              ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #119612 <https://github.com/rust-lang/rust/issues/119612> for more information
   = note: `#[warn(incomplete_features)]` on by default

error[E0004]: non-exhaustive patterns: `Some(Private { misc: true, .. })` not covered
  --> $DIR/match-privately-empty.rs:16:11
   |
LL |     match private::DATA {
   |           ^^^^^^^^^^^^^ pattern `Some(Private { misc: true, .. })` not covered
   |
note: `Option<Private>` defined here
  --> $SRC_DIR/core/src/option.rs:LL:COL
  ::: $SRC_DIR/core/src/option.rs:LL:COL
   |
   = note: not covered
   = note: the matched value is of type `Option<Private>`
help: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern or an explicit pattern as shown
   |
LL ~         Some(private::Private { misc: false, .. }) => {},
LL +         Some(Private { misc: true, .. }) => todo!()
   |

error: aborting due to 1 previous error; 1 warning emitted

For more information about this error, try `rustc --explain E0004`.
