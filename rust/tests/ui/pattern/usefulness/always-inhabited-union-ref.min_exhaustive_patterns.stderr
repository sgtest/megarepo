warning: the feature `min_exhaustive_patterns` is incomplete and may not be safe to use and/or cause compiler crashes
  --> $DIR/always-inhabited-union-ref.rs:7:46
   |
LL | #![cfg_attr(min_exhaustive_patterns, feature(min_exhaustive_patterns))]
   |                                              ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #119612 <https://github.com/rust-lang/rust/issues/119612> for more information
   = note: `#[warn(incomplete_features)]` on by default

error[E0004]: non-exhaustive patterns: type `&!` is non-empty
  --> $DIR/always-inhabited-union-ref.rs:26:11
   |
LL |     match uninhab_ref() {
   |           ^^^^^^^^^^^^^
   |
   = note: the matched value is of type `&!`
   = note: references are always considered inhabited
help: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown
   |
LL ~     match uninhab_ref() {
LL +         _ => todo!(),
LL +     }
   |

error[E0004]: non-exhaustive patterns: type `Foo` is non-empty
  --> $DIR/always-inhabited-union-ref.rs:30:11
   |
LL |     match uninhab_union() {
   |           ^^^^^^^^^^^^^^^
   |
note: `Foo` defined here
  --> $DIR/always-inhabited-union-ref.rs:13:11
   |
LL | pub union Foo {
   |           ^^^
   = note: the matched value is of type `Foo`
help: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown
   |
LL ~     match uninhab_union() {
LL +         _ => todo!(),
LL +     }
   |

error: aborting due to 2 previous errors; 1 warning emitted

For more information about this error, try `rustc --explain E0004`.
