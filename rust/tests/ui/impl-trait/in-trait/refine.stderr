error: impl trait in impl method signature does not match trait method signature
  --> $DIR/refine.rs:9:22
   |
LL |     fn bar() -> impl Sized;
   |                 ---------- return type from trait method defined here
...
LL |     fn bar() -> impl Copy {}
   |                      ^^^^ this bound is stronger than that defined on the trait
   |
   = note: add `#[allow(refining_impl_trait)]` if it is intended for this to be part of the public API of this crate
note: the lint level is defined here
  --> $DIR/refine.rs:1:9
   |
LL | #![deny(refining_impl_trait)]
   |         ^^^^^^^^^^^^^^^^^^^
help: replace the return type so that it matches the trait
   |
LL |     fn bar() -> impl Sized {}
   |                 ~~~~~~~~~~

error: impl trait in impl method signature does not match trait method signature
  --> $DIR/refine.rs:15:5
   |
LL |     fn bar() -> impl Sized;
   |                 ---------- return type from trait method defined here
...
LL |     fn bar() {}
   |     ^^^^^^^^
   |
   = note: add `#[allow(refining_impl_trait)]` if it is intended for this to be part of the public API of this crate
help: replace the return type so that it matches the trait
   |
LL |     fn bar()-> impl Sized  {}
   |             +++++++++++++

error: impl trait in impl method signature does not match trait method signature
  --> $DIR/refine.rs:21:17
   |
LL |     fn bar() -> impl Sized;
   |                 ---------- return type from trait method defined here
...
LL |     fn bar() -> () {}
   |                 ^^
   |
   = note: add `#[allow(refining_impl_trait)]` if it is intended for this to be part of the public API of this crate
help: replace the return type so that it matches the trait
   |
LL |     fn bar() -> impl Sized {}
   |                 ~~~~~~~~~~

error: impl trait in impl method signature does not match trait method signature
  --> $DIR/refine.rs:43:27
   |
LL |     fn bar<'a>(&'a self) -> impl Sized + 'a;
   |                             --------------- return type from trait method defined here
...
LL |     fn bar(&self) -> impl Copy + '_ {}
   |                           ^^^^ this bound is stronger than that defined on the trait
   |
   = note: add `#[allow(refining_impl_trait)]` if it is intended for this to be part of the public API of this crate
help: replace the return type so that it matches the trait
   |
LL |     fn bar(&self) -> impl Sized + '_ {}
   |                      ~~~~~~~~~~~~~~~

error: aborting due to 4 previous errors

