error[E0277]: `[String; 0]` cannot be safely transmuted into `()` in the defining scope of `assert::Context`
  --> $DIR/should_require_well_defined_layout.rs:26:52
   |
LL |         assert::is_maybe_transmutable::<repr_rust, ()>();
   |                                                    ^^ `[String; 0]` does not have a well-specified layout
   |
note: required by a bound in `is_maybe_transmutable`
  --> $DIR/should_require_well_defined_layout.rs:13:14
   |
LL |       pub fn is_maybe_transmutable<Src, Dst>()
   |              --------------------- required by a bound in this function
LL |       where
LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {
   |  ______________^
LL | |             Assume::ALIGNMENT
LL | |                 .and(Assume::LIFETIMES)
LL | |                 .and(Assume::SAFETY)
LL | |                 .and(Assume::VALIDITY)
LL | |         }>
   | |__________^ required by this bound in `is_maybe_transmutable`

error[E0277]: `u128` cannot be safely transmuted into `[String; 0]` in the defining scope of `assert::Context`
  --> $DIR/should_require_well_defined_layout.rs:27:47
   |
LL |         assert::is_maybe_transmutable::<u128, repr_rust>();
   |                                               ^^^^^^^^^ `[String; 0]` does not have a well-specified layout
   |
note: required by a bound in `is_maybe_transmutable`
  --> $DIR/should_require_well_defined_layout.rs:13:14
   |
LL |       pub fn is_maybe_transmutable<Src, Dst>()
   |              --------------------- required by a bound in this function
LL |       where
LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {
   |  ______________^
LL | |             Assume::ALIGNMENT
LL | |                 .and(Assume::LIFETIMES)
LL | |                 .and(Assume::SAFETY)
LL | |                 .and(Assume::VALIDITY)
LL | |         }>
   | |__________^ required by this bound in `is_maybe_transmutable`

error[E0277]: `[String; 1]` cannot be safely transmuted into `()` in the defining scope of `assert::Context`
  --> $DIR/should_require_well_defined_layout.rs:32:52
   |
LL |         assert::is_maybe_transmutable::<repr_rust, ()>();
   |                                                    ^^ `[String; 1]` does not have a well-specified layout
   |
note: required by a bound in `is_maybe_transmutable`
  --> $DIR/should_require_well_defined_layout.rs:13:14
   |
LL |       pub fn is_maybe_transmutable<Src, Dst>()
   |              --------------------- required by a bound in this function
LL |       where
LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {
   |  ______________^
LL | |             Assume::ALIGNMENT
LL | |                 .and(Assume::LIFETIMES)
LL | |                 .and(Assume::SAFETY)
LL | |                 .and(Assume::VALIDITY)
LL | |         }>
   | |__________^ required by this bound in `is_maybe_transmutable`

error[E0277]: `u128` cannot be safely transmuted into `[String; 1]` in the defining scope of `assert::Context`
  --> $DIR/should_require_well_defined_layout.rs:33:47
   |
LL |         assert::is_maybe_transmutable::<u128, repr_rust>();
   |                                               ^^^^^^^^^ `[String; 1]` does not have a well-specified layout
   |
note: required by a bound in `is_maybe_transmutable`
  --> $DIR/should_require_well_defined_layout.rs:13:14
   |
LL |       pub fn is_maybe_transmutable<Src, Dst>()
   |              --------------------- required by a bound in this function
LL |       where
LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {
   |  ______________^
LL | |             Assume::ALIGNMENT
LL | |                 .and(Assume::LIFETIMES)
LL | |                 .and(Assume::SAFETY)
LL | |                 .and(Assume::VALIDITY)
LL | |         }>
   | |__________^ required by this bound in `is_maybe_transmutable`

error[E0277]: `[String; 2]` cannot be safely transmuted into `()` in the defining scope of `assert::Context`
  --> $DIR/should_require_well_defined_layout.rs:38:52
   |
LL |         assert::is_maybe_transmutable::<repr_rust, ()>();
   |                                                    ^^ `[String; 2]` does not have a well-specified layout
   |
note: required by a bound in `is_maybe_transmutable`
  --> $DIR/should_require_well_defined_layout.rs:13:14
   |
LL |       pub fn is_maybe_transmutable<Src, Dst>()
   |              --------------------- required by a bound in this function
LL |       where
LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {
   |  ______________^
LL | |             Assume::ALIGNMENT
LL | |                 .and(Assume::LIFETIMES)
LL | |                 .and(Assume::SAFETY)
LL | |                 .and(Assume::VALIDITY)
LL | |         }>
   | |__________^ required by this bound in `is_maybe_transmutable`

error[E0277]: `u128` cannot be safely transmuted into `[String; 2]` in the defining scope of `assert::Context`
  --> $DIR/should_require_well_defined_layout.rs:39:47
   |
LL |         assert::is_maybe_transmutable::<u128, repr_rust>();
   |                                               ^^^^^^^^^ `[String; 2]` does not have a well-specified layout
   |
note: required by a bound in `is_maybe_transmutable`
  --> $DIR/should_require_well_defined_layout.rs:13:14
   |
LL |       pub fn is_maybe_transmutable<Src, Dst>()
   |              --------------------- required by a bound in this function
LL |       where
LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {
   |  ______________^
LL | |             Assume::ALIGNMENT
LL | |                 .and(Assume::LIFETIMES)
LL | |                 .and(Assume::SAFETY)
LL | |                 .and(Assume::VALIDITY)
LL | |         }>
   | |__________^ required by this bound in `is_maybe_transmutable`

error: aborting due to 6 previous errors

For more information about this error, try `rustc --explain E0277`.
