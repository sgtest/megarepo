warning: the feature `generic_const_exprs` is incomplete and may not be safe to use and/or cause compiler crashes
  --> $DIR/constifconst-call-in-const-position.rs:3:30
   |
LL | #![feature(const_trait_impl, generic_const_exprs)]
   |                              ^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #76560 <https://github.com/rust-lang/rust/issues/76560> for more information
   = note: `#[warn(incomplete_features)]` on by default

error[E0015]: cannot call non-const fn `<T as Tr>::a` in constants
  --> $DIR/constifconst-call-in-const-position.rs:17:9
   |
LL |     [0; T::a()]
   |         ^^^^^^
   |
   = note: calls in constants are limited to constant functions, tuple structs and tuple variants
help: add `#![feature(effects)]` to the crate attributes to enable
   |
LL + #![feature(effects)]
   |

error[E0015]: cannot call non-const fn `<T as Tr>::a` in constants
  --> $DIR/constifconst-call-in-const-position.rs:16:38
   |
LL | const fn foo<T: ~const Tr>() -> [u8; T::a()] {
   |                                      ^^^^^^
   |
   = note: calls in constants are limited to constant functions, tuple structs and tuple variants
help: add `#![feature(effects)]` to the crate attributes to enable
   |
LL + #![feature(effects)]
   |

error: aborting due to 2 previous errors; 1 warning emitted

For more information about this error, try `rustc --explain E0015`.
