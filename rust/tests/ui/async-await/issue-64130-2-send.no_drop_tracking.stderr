error: future cannot be sent between threads safely
  --> $DIR/issue-64130-2-send.rs:24:13
   |
LL |     is_send(bar());
   |             ^^^^^ future returned by `bar` is not `Send`
   |
   = note: the trait bound `Unique<Foo>: Send` is not satisfied
note: future is not `Send` as this value is used across an await
  --> $DIR/issue-64130-2-send.rs:18:10
   |
LL |     let x = Box::new(Foo);
   |         - has type `Box<Foo>` which is not `Send`
LL |     baz().await;
   |          ^^^^^^ await occurs here, with `x` maybe used later
LL | }
   | - `x` is later dropped here
note: required by a bound in `is_send`
  --> $DIR/issue-64130-2-send.rs:14:15
   |
LL | fn is_send<T: Send>(t: T) { }
   |               ^^^^ required by this bound in `is_send`
help: consider borrowing here
   |
LL |     is_send(&bar());
   |             +

error: aborting due to previous error

