- // MIR for `main` before Inline
+ // MIR for `main` after Inline
  
  fn main() -> () {
      let mut _0: ();                      // return place in scope 0 at $DIR/exponential_runtime.rs:+0:11: +0:11
      let _1: ();                          // in scope 0 at $DIR/exponential_runtime.rs:+1:5: +1:22
+     scope 1 (inlined <() as G>::call) {  // at $DIR/exponential_runtime.rs:87:5: 87:22
+         let _2: ();                      // in scope 1 at $DIR/exponential_runtime.rs:74:9: 74:25
+         let _3: ();                      // in scope 1 at $DIR/exponential_runtime.rs:75:9: 75:25
+         let _4: ();                      // in scope 1 at $DIR/exponential_runtime.rs:76:9: 76:25
+         scope 2 (inlined <() as F>::call) { // at $DIR/exponential_runtime.rs:74:9: 74:25
+             let _5: ();                  // in scope 2 at $DIR/exponential_runtime.rs:62:9: 62:25
+             let _6: ();                  // in scope 2 at $DIR/exponential_runtime.rs:63:9: 63:25
+             let _7: ();                  // in scope 2 at $DIR/exponential_runtime.rs:64:9: 64:25
+         }
+     }
  
      bb0: {
          StorageLive(_1);                 // scope 0 at $DIR/exponential_runtime.rs:+1:5: +1:22
-         _1 = <() as G>::call() -> bb1;   // scope 0 at $DIR/exponential_runtime.rs:+1:5: +1:22
+         StorageLive(_2);                 // scope 0 at $DIR/exponential_runtime.rs:+1:5: +1:22
+         StorageLive(_3);                 // scope 0 at $DIR/exponential_runtime.rs:+1:5: +1:22
+         StorageLive(_4);                 // scope 0 at $DIR/exponential_runtime.rs:+1:5: +1:22
+         StorageLive(_5);                 // scope 1 at $DIR/exponential_runtime.rs:74:9: 74:25
+         StorageLive(_6);                 // scope 1 at $DIR/exponential_runtime.rs:74:9: 74:25
+         StorageLive(_7);                 // scope 1 at $DIR/exponential_runtime.rs:74:9: 74:25
+         _5 = <() as E>::call() -> bb4;   // scope 2 at $DIR/exponential_runtime.rs:62:9: 62:25
                                           // mir::Constant
-                                          // + span: $DIR/exponential_runtime.rs:87:5: 87:20
-                                          // + literal: Const { ty: fn() {<() as G>::call}, val: Value(<ZST>) }
+                                          // + span: $DIR/exponential_runtime.rs:62:9: 62:23
+                                          // + literal: Const { ty: fn() {<() as E>::call}, val: Value(<ZST>) }
      }
  
      bb1: {
+         StorageDead(_4);                 // scope 0 at $DIR/exponential_runtime.rs:+1:5: +1:22
+         StorageDead(_3);                 // scope 0 at $DIR/exponential_runtime.rs:+1:5: +1:22
+         StorageDead(_2);                 // scope 0 at $DIR/exponential_runtime.rs:+1:5: +1:22
          StorageDead(_1);                 // scope 0 at $DIR/exponential_runtime.rs:+1:22: +1:23
          _0 = const ();                   // scope 0 at $DIR/exponential_runtime.rs:+0:11: +2:2
          return;                          // scope 0 at $DIR/exponential_runtime.rs:+2:2: +2:2
+     }
+ 
+     bb2: {
+         StorageDead(_7);                 // scope 1 at $DIR/exponential_runtime.rs:74:9: 74:25
+         StorageDead(_6);                 // scope 1 at $DIR/exponential_runtime.rs:74:9: 74:25
+         StorageDead(_5);                 // scope 1 at $DIR/exponential_runtime.rs:74:9: 74:25
+         _3 = <() as F>::call() -> bb3;   // scope 1 at $DIR/exponential_runtime.rs:75:9: 75:25
+                                          // mir::Constant
+                                          // + span: $DIR/exponential_runtime.rs:75:9: 75:23
+                                          // + literal: Const { ty: fn() {<() as F>::call}, val: Value(<ZST>) }
+     }
+ 
+     bb3: {
+         _4 = <() as F>::call() -> bb1;   // scope 1 at $DIR/exponential_runtime.rs:76:9: 76:25
+                                          // mir::Constant
+                                          // + span: $DIR/exponential_runtime.rs:76:9: 76:23
+                                          // + literal: Const { ty: fn() {<() as F>::call}, val: Value(<ZST>) }
+     }
+ 
+     bb4: {
+         _6 = <() as E>::call() -> bb5;   // scope 2 at $DIR/exponential_runtime.rs:63:9: 63:25
+                                          // mir::Constant
+                                          // + span: $DIR/exponential_runtime.rs:63:9: 63:23
+                                          // + literal: Const { ty: fn() {<() as E>::call}, val: Value(<ZST>) }
+     }
+ 
+     bb5: {
+         _7 = <() as E>::call() -> bb2;   // scope 2 at $DIR/exponential_runtime.rs:64:9: 64:25
+                                          // mir::Constant
+                                          // + span: $DIR/exponential_runtime.rs:64:9: 64:23
+                                          // + literal: Const { ty: fn() {<() as E>::call}, val: Value(<ZST>) }
      }
  }
  
