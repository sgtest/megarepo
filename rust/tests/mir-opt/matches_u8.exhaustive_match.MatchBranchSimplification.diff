- // MIR for `exhaustive_match` before MatchBranchSimplification
+ // MIR for `exhaustive_match` after MatchBranchSimplification
  
  fn exhaustive_match(_1: E) -> u8 {
      debug e => _1;
      let mut _0: u8;
      let mut _2: isize;
  
      bb0: {
          _2 = discriminant(_1);
          switchInt(move _2) -> [0: bb3, 1: bb1, otherwise: bb2];
      }
  
      bb1: {
          _0 = const 1_u8;
          goto -> bb4;
      }
  
      bb2: {
          unreachable;
      }
  
      bb3: {
          _0 = const 0_u8;
          goto -> bb4;
      }
  
      bb4: {
          return;
      }
  }
  
