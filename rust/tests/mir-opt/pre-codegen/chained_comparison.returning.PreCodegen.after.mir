// MIR for `returning` after PreCodegen

fn returning(_1: &Blueprint, _2: &Blueprint) -> bool {
    debug a => _1;                       // in scope 0 at $DIR/chained_comparison.rs:+0:18: +0:19
    debug b => _2;                       // in scope 0 at $DIR/chained_comparison.rs:+0:33: +0:34
    let mut _0: bool;                    // return place in scope 0 at $DIR/chained_comparison.rs:+0:51: +0:55
    let mut _3: u32;                     // in scope 0 at $DIR/chained_comparison.rs:+1:8: +1:24
    let mut _4: u32;                     // in scope 0 at $DIR/chained_comparison.rs:+1:28: +1:44
    let mut _5: bool;                    // in scope 0 at $DIR/chained_comparison.rs:+1:8: +1:44
    let mut _6: u32;                     // in scope 0 at $DIR/chained_comparison.rs:+4:8: +4:17
    let mut _7: u32;                     // in scope 0 at $DIR/chained_comparison.rs:+4:21: +4:30
    let mut _8: bool;                    // in scope 0 at $DIR/chained_comparison.rs:+4:8: +4:30
    let mut _9: u32;                     // in scope 0 at $DIR/chained_comparison.rs:+7:8: +7:24
    let mut _10: u32;                    // in scope 0 at $DIR/chained_comparison.rs:+7:28: +7:44
    let mut _11: bool;                   // in scope 0 at $DIR/chained_comparison.rs:+7:8: +7:44
    let mut _12: u32;                    // in scope 0 at $DIR/chained_comparison.rs:+10:8: +10:21
    let mut _13: u32;                    // in scope 0 at $DIR/chained_comparison.rs:+10:25: +10:38
    let mut _14: bool;                   // in scope 0 at $DIR/chained_comparison.rs:+10:8: +10:38
    let mut _15: u32;                    // in scope 0 at $DIR/chained_comparison.rs:+13:8: +13:17
    let mut _16: u32;                    // in scope 0 at $DIR/chained_comparison.rs:+13:21: +13:30
    let mut _17: bool;                   // in scope 0 at $DIR/chained_comparison.rs:+13:8: +13:30

    bb0: {
        StorageLive(_5);                 // scope 0 at $DIR/chained_comparison.rs:+1:8: +1:44
        StorageLive(_3);                 // scope 0 at $DIR/chained_comparison.rs:+1:8: +1:24
        _3 = ((*_1).0: u32);             // scope 0 at $DIR/chained_comparison.rs:+1:8: +1:24
        StorageLive(_4);                 // scope 0 at $DIR/chained_comparison.rs:+1:28: +1:44
        _4 = ((*_2).0: u32);             // scope 0 at $DIR/chained_comparison.rs:+1:28: +1:44
        _5 = Ne(move _3, move _4);       // scope 0 at $DIR/chained_comparison.rs:+1:8: +1:44
        StorageDead(_4);                 // scope 0 at $DIR/chained_comparison.rs:+1:43: +1:44
        StorageDead(_3);                 // scope 0 at $DIR/chained_comparison.rs:+1:43: +1:44
        switchInt(move _5) -> [0: bb1, otherwise: bb10]; // scope 0 at $DIR/chained_comparison.rs:+1:8: +1:44
    }

    bb1: {
        StorageDead(_5);                 // scope 0 at $DIR/chained_comparison.rs:+3:5: +3:6
        StorageLive(_8);                 // scope 0 at $DIR/chained_comparison.rs:+4:8: +4:30
        StorageLive(_6);                 // scope 0 at $DIR/chained_comparison.rs:+4:8: +4:17
        _6 = ((*_1).1: u32);             // scope 0 at $DIR/chained_comparison.rs:+4:8: +4:17
        StorageLive(_7);                 // scope 0 at $DIR/chained_comparison.rs:+4:21: +4:30
        _7 = ((*_2).1: u32);             // scope 0 at $DIR/chained_comparison.rs:+4:21: +4:30
        _8 = Ne(move _6, move _7);       // scope 0 at $DIR/chained_comparison.rs:+4:8: +4:30
        StorageDead(_7);                 // scope 0 at $DIR/chained_comparison.rs:+4:29: +4:30
        StorageDead(_6);                 // scope 0 at $DIR/chained_comparison.rs:+4:29: +4:30
        switchInt(move _8) -> [0: bb2, otherwise: bb9]; // scope 0 at $DIR/chained_comparison.rs:+4:8: +4:30
    }

    bb2: {
        StorageDead(_8);                 // scope 0 at $DIR/chained_comparison.rs:+6:5: +6:6
        StorageLive(_11);                // scope 0 at $DIR/chained_comparison.rs:+7:8: +7:44
        StorageLive(_9);                 // scope 0 at $DIR/chained_comparison.rs:+7:8: +7:24
        _9 = ((*_1).2: u32);             // scope 0 at $DIR/chained_comparison.rs:+7:8: +7:24
        StorageLive(_10);                // scope 0 at $DIR/chained_comparison.rs:+7:28: +7:44
        _10 = ((*_2).2: u32);            // scope 0 at $DIR/chained_comparison.rs:+7:28: +7:44
        _11 = Ne(move _9, move _10);     // scope 0 at $DIR/chained_comparison.rs:+7:8: +7:44
        StorageDead(_10);                // scope 0 at $DIR/chained_comparison.rs:+7:43: +7:44
        StorageDead(_9);                 // scope 0 at $DIR/chained_comparison.rs:+7:43: +7:44
        switchInt(move _11) -> [0: bb3, otherwise: bb8]; // scope 0 at $DIR/chained_comparison.rs:+7:8: +7:44
    }

    bb3: {
        StorageDead(_11);                // scope 0 at $DIR/chained_comparison.rs:+9:5: +9:6
        StorageLive(_14);                // scope 0 at $DIR/chained_comparison.rs:+10:8: +10:38
        StorageLive(_12);                // scope 0 at $DIR/chained_comparison.rs:+10:8: +10:21
        _12 = ((*_1).3: u32);            // scope 0 at $DIR/chained_comparison.rs:+10:8: +10:21
        StorageLive(_13);                // scope 0 at $DIR/chained_comparison.rs:+10:25: +10:38
        _13 = ((*_2).3: u32);            // scope 0 at $DIR/chained_comparison.rs:+10:25: +10:38
        _14 = Ne(move _12, move _13);    // scope 0 at $DIR/chained_comparison.rs:+10:8: +10:38
        StorageDead(_13);                // scope 0 at $DIR/chained_comparison.rs:+10:37: +10:38
        StorageDead(_12);                // scope 0 at $DIR/chained_comparison.rs:+10:37: +10:38
        switchInt(move _14) -> [0: bb4, otherwise: bb7]; // scope 0 at $DIR/chained_comparison.rs:+10:8: +10:38
    }

    bb4: {
        StorageDead(_14);                // scope 0 at $DIR/chained_comparison.rs:+12:5: +12:6
        StorageLive(_17);                // scope 0 at $DIR/chained_comparison.rs:+13:8: +13:30
        StorageLive(_15);                // scope 0 at $DIR/chained_comparison.rs:+13:8: +13:17
        _15 = ((*_1).4: u32);            // scope 0 at $DIR/chained_comparison.rs:+13:8: +13:17
        StorageLive(_16);                // scope 0 at $DIR/chained_comparison.rs:+13:21: +13:30
        _16 = ((*_2).4: u32);            // scope 0 at $DIR/chained_comparison.rs:+13:21: +13:30
        _17 = Ne(move _15, move _16);    // scope 0 at $DIR/chained_comparison.rs:+13:8: +13:30
        StorageDead(_16);                // scope 0 at $DIR/chained_comparison.rs:+13:29: +13:30
        StorageDead(_15);                // scope 0 at $DIR/chained_comparison.rs:+13:29: +13:30
        switchInt(move _17) -> [0: bb5, otherwise: bb6]; // scope 0 at $DIR/chained_comparison.rs:+13:8: +13:30
    }

    bb5: {
        StorageDead(_17);                // scope 0 at $DIR/chained_comparison.rs:+15:5: +15:6
        _0 = const true;                 // scope 0 at $DIR/chained_comparison.rs:+16:5: +16:9
        goto -> bb11;                    // scope 0 at $DIR/chained_comparison.rs:+17:2: +17:2
    }

    bb6: {
        _0 = const false;                // scope 0 at $DIR/chained_comparison.rs:+14:16: +14:21
        StorageDead(_17);                // scope 0 at $DIR/chained_comparison.rs:+15:5: +15:6
        goto -> bb11;                    // scope 0 at no-location
    }

    bb7: {
        _0 = const false;                // scope 0 at $DIR/chained_comparison.rs:+11:16: +11:21
        StorageDead(_14);                // scope 0 at $DIR/chained_comparison.rs:+12:5: +12:6
        goto -> bb11;                    // scope 0 at no-location
    }

    bb8: {
        _0 = const false;                // scope 0 at $DIR/chained_comparison.rs:+8:16: +8:21
        StorageDead(_11);                // scope 0 at $DIR/chained_comparison.rs:+9:5: +9:6
        goto -> bb11;                    // scope 0 at no-location
    }

    bb9: {
        _0 = const false;                // scope 0 at $DIR/chained_comparison.rs:+5:16: +5:21
        StorageDead(_8);                 // scope 0 at $DIR/chained_comparison.rs:+6:5: +6:6
        goto -> bb11;                    // scope 0 at no-location
    }

    bb10: {
        _0 = const false;                // scope 0 at $DIR/chained_comparison.rs:+2:16: +2:21
        StorageDead(_5);                 // scope 0 at $DIR/chained_comparison.rs:+3:5: +3:6
        goto -> bb11;                    // scope 0 at no-location
    }

    bb11: {
        return;                          // scope 0 at $DIR/chained_comparison.rs:+17:2: +17:2
    }
}
