// MIR for `slice_iter_mut_next_back` after PreCodegen

fn slice_iter_mut_next_back(_1: &mut std::slice::IterMut<'_, T>) -> Option<&mut T> {
    debug it => _1;                      // in scope 0 at $DIR/slice_iter.rs:+0:40: +0:42
    let mut _0: std::option::Option<&mut T>; // return place in scope 0 at $DIR/slice_iter.rs:+0:80: +0:97

    bb0: {
        _0 = <std::slice::IterMut<'_, T> as DoubleEndedIterator>::next_back(_1) -> bb1; // scope 0 at $DIR/slice_iter.rs:+1:5: +1:19
                                         // mir::Constant
                                         // + span: $DIR/slice_iter.rs:23:8: 23:17
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::slice::IterMut<'_, T>) -> Option<<std::slice::IterMut<'_, T> as Iterator>::Item> {<std::slice::IterMut<'_, T> as DoubleEndedIterator>::next_back}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at $DIR/slice_iter.rs:+2:2: +2:2
    }
}
