// MIR for `slice_iter_next` after PreCodegen

fn slice_iter_next(_1: &mut std::slice::Iter<'_, T>) -> Option<&T> {
    debug it => _1;                      // in scope 0 at $DIR/slice_iter.rs:+0:31: +0:33
    let mut _0: std::option::Option<&T>; // return place in scope 0 at $DIR/slice_iter.rs:+0:68: +0:81

    bb0: {
        _0 = <std::slice::Iter<'_, T> as Iterator>::next(_1) -> [return: bb1, unwind unreachable]; // scope 0 at $DIR/slice_iter.rs:+1:5: +1:14
                                         // mir::Constant
                                         // + span: $DIR/slice_iter.rs:19:8: 19:12
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::slice::Iter<'_, T>) -> Option<<std::slice::Iter<'_, T> as Iterator>::Item> {<std::slice::Iter<'_, T> as Iterator>::next}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at $DIR/slice_iter.rs:+2:2: +2:2
    }
}
