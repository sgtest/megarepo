// MIR for `f` after built

fn f(_1: i32, _2: bool) -> i32 {
    let mut _0: i32;
    let mut _3: (i32, bool);

    bb0: {
        _1 = Neg(_1);
        _2 = Not(_2);
        _1 = Add(_1, _1);
        _1 = Sub(_1, _1);
        _1 = Mul(_1, _1);
        _1 = Div(_1, _1);
        _1 = Rem(_1, _1);
        _1 = BitXor(_1, _1);
        _1 = BitAnd(_1, _1);
        _1 = Shl(_1, _1);
        _1 = Shr(_1, _1);
        _2 = Eq(_1, _1);
        _2 = Lt(_1, _1);
        _2 = Le(_1, _1);
        _2 = Ge(_1, _1);
        _2 = Gt(_1, _1);
        _3 = AddWithOverflow(_1, _1);
        _2 = (_3.1: bool);
        _1 = (_3.0: i32);
        _0 = _1;
        return;
    }
}
