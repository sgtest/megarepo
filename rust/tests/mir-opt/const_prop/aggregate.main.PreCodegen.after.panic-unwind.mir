// MIR for `main` after PreCodegen

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at $DIR/aggregate.rs:+0:11: +0:11
    let _1: u8;                          // in scope 0 at $DIR/aggregate.rs:+1:9: +1:10
    let mut _2: u8;                      // in scope 0 at $DIR/aggregate.rs:+1:13: +1:24
    let mut _3: (i32, u8, i32);          // in scope 0 at $DIR/aggregate.rs:+1:13: +1:22
    let _4: ();                          // in scope 0 at $DIR/aggregate.rs:+2:5: +2:11
    let mut _5: u8;                      // in scope 0 at $DIR/aggregate.rs:+2:9: +2:10
    scope 1 {
        debug x => _1;                   // in scope 1 at $DIR/aggregate.rs:+1:9: +1:10
    }

    bb0: {
        StorageLive(_1);                 // scope 0 at $DIR/aggregate.rs:+1:9: +1:10
        StorageLive(_2);                 // scope 0 at $DIR/aggregate.rs:+1:13: +1:24
        StorageLive(_3);                 // scope 0 at $DIR/aggregate.rs:+1:13: +1:22
        _3 = (const 0_i32, const 1_u8, const 2_i32); // scope 0 at $DIR/aggregate.rs:+1:13: +1:22
        _2 = const 1_u8;                 // scope 0 at $DIR/aggregate.rs:+1:13: +1:24
        _1 = const 1_u8;                 // scope 0 at $DIR/aggregate.rs:+1:13: +1:28
        StorageDead(_2);                 // scope 0 at $DIR/aggregate.rs:+1:27: +1:28
        StorageDead(_3);                 // scope 0 at $DIR/aggregate.rs:+1:28: +1:29
        StorageLive(_4);                 // scope 1 at $DIR/aggregate.rs:+2:5: +2:11
        StorageLive(_5);                 // scope 1 at $DIR/aggregate.rs:+2:9: +2:10
        _5 = const 1_u8;                 // scope 1 at $DIR/aggregate.rs:+2:9: +2:10
        _4 = foo(move _5) -> bb1;        // scope 1 at $DIR/aggregate.rs:+2:5: +2:11
                                         // mir::Constant
                                         // + span: $DIR/aggregate.rs:9:5: 9:8
                                         // + literal: Const { ty: fn(u8) {foo}, val: Value(<ZST>) }
    }

    bb1: {
        StorageDead(_5);                 // scope 1 at $DIR/aggregate.rs:+2:10: +2:11
        StorageDead(_4);                 // scope 1 at $DIR/aggregate.rs:+2:11: +2:12
        _0 = const ();                   // scope 0 at $DIR/aggregate.rs:+0:11: +3:2
        StorageDead(_1);                 // scope 0 at $DIR/aggregate.rs:+3:1: +3:2
        return;                          // scope 0 at $DIR/aggregate.rs:+3:2: +3:2
    }
}
