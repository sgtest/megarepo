- // MIR for `variant_a::{closure#0}` before DestinationPropagation
+ // MIR for `variant_a::{closure#0}` after DestinationPropagation
  
  fn variant_a::{closure#0}(_1: &mut [closure@$DIR/slice_filter.rs:8:25: 8:39], _2: &&(usize, usize, usize, usize)) -> bool {
      let mut _0: bool;                    // return place in scope 0 at $DIR/slice_filter.rs:+0:40: +0:40
      let _3: &usize;                      // in scope 0 at $DIR/slice_filter.rs:+0:27: +0:28
      let _4: &usize;                      // in scope 0 at $DIR/slice_filter.rs:+0:30: +0:31
      let _5: &usize;                      // in scope 0 at $DIR/slice_filter.rs:+0:33: +0:34
      let _6: &usize;                      // in scope 0 at $DIR/slice_filter.rs:+0:36: +0:37
      let mut _7: bool;                    // in scope 0 at $DIR/slice_filter.rs:+0:40: +0:56
      let mut _8: bool;                    // in scope 0 at $DIR/slice_filter.rs:+0:40: +0:46
      let mut _9: &&usize;                 // in scope 0 at $DIR/slice_filter.rs:+0:40: +0:41
      let mut _10: &&usize;                // in scope 0 at $DIR/slice_filter.rs:+0:45: +0:46
      let _11: &usize;                     // in scope 0 at $DIR/slice_filter.rs:+0:45: +0:46
      let mut _12: bool;                   // in scope 0 at $DIR/slice_filter.rs:+0:50: +0:56
      let mut _13: &&usize;                // in scope 0 at $DIR/slice_filter.rs:+0:50: +0:51
      let mut _14: &&usize;                // in scope 0 at $DIR/slice_filter.rs:+0:55: +0:56
      let _15: &usize;                     // in scope 0 at $DIR/slice_filter.rs:+0:55: +0:56
      let mut _16: bool;                   // in scope 0 at $DIR/slice_filter.rs:+0:60: +0:76
      let mut _17: bool;                   // in scope 0 at $DIR/slice_filter.rs:+0:60: +0:66
      let mut _18: &&usize;                // in scope 0 at $DIR/slice_filter.rs:+0:60: +0:61
      let mut _19: &&usize;                // in scope 0 at $DIR/slice_filter.rs:+0:65: +0:66
      let _20: &usize;                     // in scope 0 at $DIR/slice_filter.rs:+0:65: +0:66
      let mut _21: bool;                   // in scope 0 at $DIR/slice_filter.rs:+0:70: +0:76
      let mut _22: &&usize;                // in scope 0 at $DIR/slice_filter.rs:+0:70: +0:71
      let mut _23: &&usize;                // in scope 0 at $DIR/slice_filter.rs:+0:75: +0:76
      let _24: &usize;                     // in scope 0 at $DIR/slice_filter.rs:+0:75: +0:76
      let mut _25: &(usize, usize, usize, usize); // in scope 0 at $DIR/slice_filter.rs:+0:26: +0:38
      let mut _26: &(usize, usize, usize, usize); // in scope 0 at $DIR/slice_filter.rs:+0:26: +0:38
      let mut _27: &(usize, usize, usize, usize); // in scope 0 at $DIR/slice_filter.rs:+0:26: +0:38
      let mut _28: &(usize, usize, usize, usize); // in scope 0 at $DIR/slice_filter.rs:+0:26: +0:38
      scope 1 {
          debug a => _3;                   // in scope 1 at $DIR/slice_filter.rs:+0:27: +0:28
          debug b => _4;                   // in scope 1 at $DIR/slice_filter.rs:+0:30: +0:31
          debug c => _5;                   // in scope 1 at $DIR/slice_filter.rs:+0:33: +0:34
          debug d => _6;                   // in scope 1 at $DIR/slice_filter.rs:+0:36: +0:37
          scope 2 (inlined cmp::impls::<impl PartialOrd for &usize>::le) { // at $DIR/slice_filter.rs:8:40: 8:46
              debug self => _9;            // in scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL
              debug other => _10;          // in scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL
              let mut _29: &usize;         // in scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL
              let mut _30: &usize;         // in scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL
              scope 3 (inlined cmp::impls::<impl PartialOrd for usize>::le) { // at $SRC_DIR/core/src/cmp.rs:LL:COL
                  debug self => _29;       // in scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL
                  debug other => _30;      // in scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL
                  let mut _31: usize;      // in scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL
                  let mut _32: usize;      // in scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL
              }
          }
          scope 4 (inlined cmp::impls::<impl PartialOrd for &usize>::le) { // at $DIR/slice_filter.rs:8:60: 8:66
              debug self => _18;           // in scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL
              debug other => _19;          // in scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL
              let mut _33: &usize;         // in scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL
              let mut _34: &usize;         // in scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL
              scope 5 (inlined cmp::impls::<impl PartialOrd for usize>::le) { // at $SRC_DIR/core/src/cmp.rs:LL:COL
                  debug self => _33;       // in scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL
                  debug other => _34;      // in scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL
                  let mut _35: usize;      // in scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL
                  let mut _36: usize;      // in scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL
              }
          }
          scope 6 (inlined cmp::impls::<impl PartialOrd for &usize>::le) { // at $DIR/slice_filter.rs:8:50: 8:56
              debug self => _13;           // in scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL
              debug other => _14;          // in scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL
              let mut _37: &usize;         // in scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL
              let mut _38: &usize;         // in scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL
              scope 7 (inlined cmp::impls::<impl PartialOrd for usize>::le) { // at $SRC_DIR/core/src/cmp.rs:LL:COL
                  debug self => _37;       // in scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL
                  debug other => _38;      // in scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL
                  let mut _39: usize;      // in scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL
                  let mut _40: usize;      // in scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL
              }
          }
          scope 8 (inlined cmp::impls::<impl PartialOrd for &usize>::le) { // at $DIR/slice_filter.rs:8:70: 8:76
              debug self => _22;           // in scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL
              debug other => _23;          // in scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL
              let mut _41: &usize;         // in scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL
              let mut _42: &usize;         // in scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL
              scope 9 (inlined cmp::impls::<impl PartialOrd for usize>::le) { // at $SRC_DIR/core/src/cmp.rs:LL:COL
                  debug self => _41;       // in scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL
                  debug other => _42;      // in scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL
                  let mut _43: usize;      // in scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL
                  let mut _44: usize;      // in scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL
              }
          }
      }
  
      bb0: {
          _25 = deref_copy (*_2);          // scope 0 at $DIR/slice_filter.rs:+0:27: +0:28
          _3 = &((*_25).0: usize);         // scope 0 at $DIR/slice_filter.rs:+0:27: +0:28
          _26 = deref_copy (*_2);          // scope 0 at $DIR/slice_filter.rs:+0:30: +0:31
          _4 = &((*_26).1: usize);         // scope 0 at $DIR/slice_filter.rs:+0:30: +0:31
          _27 = deref_copy (*_2);          // scope 0 at $DIR/slice_filter.rs:+0:33: +0:34
          _5 = &((*_27).2: usize);         // scope 0 at $DIR/slice_filter.rs:+0:33: +0:34
          _28 = deref_copy (*_2);          // scope 0 at $DIR/slice_filter.rs:+0:36: +0:37
          _6 = &((*_28).3: usize);         // scope 0 at $DIR/slice_filter.rs:+0:36: +0:37
-         StorageLive(_7);                 // scope 1 at $DIR/slice_filter.rs:+0:40: +0:56
+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:40: +0:56
          StorageLive(_8);                 // scope 1 at $DIR/slice_filter.rs:+0:40: +0:46
          StorageLive(_9);                 // scope 1 at $DIR/slice_filter.rs:+0:40: +0:41
          _9 = &_3;                        // scope 1 at $DIR/slice_filter.rs:+0:40: +0:41
          StorageLive(_10);                // scope 1 at $DIR/slice_filter.rs:+0:45: +0:46
          StorageLive(_11);                // scope 1 at $DIR/slice_filter.rs:+0:45: +0:46
          _11 = _5;                        // scope 1 at $DIR/slice_filter.rs:+0:45: +0:46
          _10 = &_11;                      // scope 1 at $DIR/slice_filter.rs:+0:45: +0:46
          _29 = deref_copy (*_9);          // scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL
          _30 = deref_copy (*_10);         // scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL
          StorageLive(_31);                // scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL
          _31 = (*_29);                    // scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL
          StorageLive(_32);                // scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL
          _32 = (*_30);                    // scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL
          _8 = Le(move _31, move _32);     // scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL
          StorageDead(_32);                // scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL
          StorageDead(_31);                // scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL
          StorageDead(_11);                // scope 1 at $DIR/slice_filter.rs:+0:45: +0:46
          StorageDead(_10);                // scope 1 at $DIR/slice_filter.rs:+0:45: +0:46
          StorageDead(_9);                 // scope 1 at $DIR/slice_filter.rs:+0:45: +0:46
          switchInt(move _8) -> [0: bb4, otherwise: bb5]; // scope 1 at $DIR/slice_filter.rs:+0:40: +0:56
      }
  
      bb1: {
          _0 = const true;                 // scope 1 at $DIR/slice_filter.rs:+0:40: +0:76
          goto -> bb3;                     // scope 1 at $DIR/slice_filter.rs:+0:40: +0:76
      }
  
      bb2: {
-         StorageLive(_16);                // scope 1 at $DIR/slice_filter.rs:+0:60: +0:76
+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:60: +0:76
          StorageLive(_17);                // scope 1 at $DIR/slice_filter.rs:+0:60: +0:66
          StorageLive(_18);                // scope 1 at $DIR/slice_filter.rs:+0:60: +0:61
          _18 = &_5;                       // scope 1 at $DIR/slice_filter.rs:+0:60: +0:61
          StorageLive(_19);                // scope 1 at $DIR/slice_filter.rs:+0:65: +0:66
          StorageLive(_20);                // scope 1 at $DIR/slice_filter.rs:+0:65: +0:66
          _20 = _3;                        // scope 1 at $DIR/slice_filter.rs:+0:65: +0:66
          _19 = &_20;                      // scope 1 at $DIR/slice_filter.rs:+0:65: +0:66
          _33 = deref_copy (*_18);         // scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL
          _34 = deref_copy (*_19);         // scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL
          StorageLive(_35);                // scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL
          _35 = (*_33);                    // scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL
          StorageLive(_36);                // scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL
          _36 = (*_34);                    // scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL
          _17 = Le(move _35, move _36);    // scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL
          StorageDead(_36);                // scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL
          StorageDead(_35);                // scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL
          StorageDead(_20);                // scope 1 at $DIR/slice_filter.rs:+0:65: +0:66
          StorageDead(_19);                // scope 1 at $DIR/slice_filter.rs:+0:65: +0:66
          StorageDead(_18);                // scope 1 at $DIR/slice_filter.rs:+0:65: +0:66
          switchInt(move _17) -> [0: bb6, otherwise: bb7]; // scope 1 at $DIR/slice_filter.rs:+0:60: +0:76
      }
  
      bb3: {
-         StorageDead(_16);                // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76
-         StorageDead(_7);                 // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76
+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76
+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76
          return;                          // scope 0 at $DIR/slice_filter.rs:+0:76: +0:76
      }
  
      bb4: {
-         StorageDead(_12);                // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56
+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56
          StorageDead(_8);                 // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56
          goto -> bb2;                     // scope 1 at $DIR/slice_filter.rs:+0:40: +0:56
      }
  
      bb5: {
-         StorageLive(_12);                // scope 1 at $DIR/slice_filter.rs:+0:50: +0:56
+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:50: +0:56
          StorageLive(_13);                // scope 1 at $DIR/slice_filter.rs:+0:50: +0:51
          _13 = &_6;                       // scope 1 at $DIR/slice_filter.rs:+0:50: +0:51
          StorageLive(_14);                // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56
          StorageLive(_15);                // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56
          _15 = _4;                        // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56
          _14 = &_15;                      // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56
          _37 = deref_copy (*_13);         // scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL
          _38 = deref_copy (*_14);         // scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL
          StorageLive(_39);                // scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL
          _39 = (*_37);                    // scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL
          StorageLive(_40);                // scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL
          _40 = (*_38);                    // scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL
          _12 = Le(move _39, move _40);    // scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL
          StorageDead(_40);                // scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL
          StorageDead(_39);                // scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL
          StorageDead(_15);                // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56
          StorageDead(_14);                // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56
          StorageDead(_13);                // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56
-         _7 = move _12;                   // scope 1 at $DIR/slice_filter.rs:+0:40: +0:56
-         StorageDead(_12);                // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56
+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:40: +0:56
+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56
          StorageDead(_8);                 // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56
-         switchInt(move _7) -> [0: bb2, otherwise: bb1]; // scope 1 at $DIR/slice_filter.rs:+0:40: +0:76
+         switchInt(move _12) -> [0: bb2, otherwise: bb1]; // scope 1 at $DIR/slice_filter.rs:+0:40: +0:76
      }
  
      bb6: {
-         _16 = const false;               // scope 1 at $DIR/slice_filter.rs:+0:60: +0:76
+         _0 = const false;                // scope 1 at $DIR/slice_filter.rs:+0:60: +0:76
          goto -> bb8;                     // scope 1 at $DIR/slice_filter.rs:+0:60: +0:76
      }
  
      bb7: {
-         StorageLive(_21);                // scope 1 at $DIR/slice_filter.rs:+0:70: +0:76
+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:70: +0:76
          StorageLive(_22);                // scope 1 at $DIR/slice_filter.rs:+0:70: +0:71
          _22 = &_4;                       // scope 1 at $DIR/slice_filter.rs:+0:70: +0:71
          StorageLive(_23);                // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76
          StorageLive(_24);                // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76
          _24 = _6;                        // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76
          _23 = &_24;                      // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76
          _41 = deref_copy (*_22);         // scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL
          _42 = deref_copy (*_23);         // scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL
          StorageLive(_43);                // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL
          _43 = (*_41);                    // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL
          StorageLive(_44);                // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL
          _44 = (*_42);                    // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL
-         _21 = Le(move _43, move _44);    // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL
+         _0 = Le(move _43, move _44);     // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL
          StorageDead(_44);                // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL
          StorageDead(_43);                // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL
          StorageDead(_24);                // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76
          StorageDead(_23);                // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76
          StorageDead(_22);                // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76
-         _16 = move _21;                  // scope 1 at $DIR/slice_filter.rs:+0:60: +0:76
+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:60: +0:76
          goto -> bb8;                     // scope 1 at $DIR/slice_filter.rs:+0:60: +0:76
      }
  
      bb8: {
-         StorageDead(_21);                // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76
+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76
          StorageDead(_17);                // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76
-         _0 = move _16;                   // scope 1 at $DIR/slice_filter.rs:+0:40: +0:76
+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:40: +0:76
          goto -> bb3;                     // scope 1 at $DIR/slice_filter.rs:+0:40: +0:76
      }
  }
  
