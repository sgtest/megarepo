- // MIR for `main` before ConstProp
+ // MIR for `main` after ConstProp
  
  fn main() -> () {
      let mut _0: ();                      // return place in scope 0 at $DIR/simplify_match.rs:+0:11: +0:11
      let mut _1: bool;                    // in scope 0 at $DIR/simplify_match.rs:+1:11: +1:31
      let _2: bool;                        // in scope 0 at $DIR/simplify_match.rs:+1:17: +1:18
      scope 1 {
          debug x => _2;                   // in scope 1 at $DIR/simplify_match.rs:+1:17: +1:18
      }
  
      bb0: {
          _2 = const false;                // scope 0 at $DIR/simplify_match.rs:+1:21: +1:26
-         switchInt(_2) -> [0: bb1, otherwise: bb2]; // scope 0 at $DIR/simplify_match.rs:+1:5: +1:31
+         switchInt(const false) -> [0: bb1, otherwise: bb2]; // scope 0 at $DIR/simplify_match.rs:+1:5: +1:31
      }
  
      bb1: {
          goto -> bb3;                     // scope 0 at $DIR/simplify_match.rs:+3:18: +3:20
      }
  
      bb2: {
          _0 = noop() -> bb3;              // scope 0 at $DIR/simplify_match.rs:+2:17: +2:23
                                           // mir::Constant
                                           // + span: $DIR/simplify_match.rs:8:17: 8:21
                                           // + literal: Const { ty: fn() {noop}, val: Value(<ZST>) }
      }
  
      bb3: {
          return;                          // scope 0 at $DIR/simplify_match.rs:+5:2: +5:2
      }
  }
  
