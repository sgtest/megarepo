- // MIR for `trunc` before EnumSizeOpt
+ // MIR for `trunc` after EnumSizeOpt
  
  fn trunc() -> NotTrunctable {
      let mut _0: NotTrunctable;           // return place in scope 0 at $DIR/enum_opt.rs:+0:19: +0:32
      let mut _1: NotTrunctable;           // in scope 0 at $DIR/enum_opt.rs:+1:7: +1:12
      let mut _2: NotTrunctable;           // in scope 0 at $DIR/enum_opt.rs:+2:7: +2:34
      let mut _3: [u8; 1024];              // in scope 0 at $DIR/enum_opt.rs:+2:24: +2:33
      let mut _4: NotTrunctable;           // in scope 0 at $DIR/enum_opt.rs:+3:7: +3:34
      let mut _5: [u8; 4096];              // in scope 0 at $DIR/enum_opt.rs:+3:24: +3:33
      scope 1 {
          debug a => _1;                   // in scope 1 at $DIR/enum_opt.rs:+1:7: +1:12
      }
  
      bb0: {
          StorageLive(_1);                 // scope 0 at $DIR/enum_opt.rs:+1:7: +1:12
          _1 = NotTrunctable::A;           // scope 0 at $DIR/enum_opt.rs:+1:15: +1:31
          StorageLive(_2);                 // scope 1 at $DIR/enum_opt.rs:+2:7: +2:34
          StorageLive(_3);                 // scope 1 at $DIR/enum_opt.rs:+2:24: +2:33
          _3 = [const 0_u8; 1024];         // scope 1 at $DIR/enum_opt.rs:+2:24: +2:33
          _2 = NotTrunctable::B(move _3);  // scope 1 at $DIR/enum_opt.rs:+2:7: +2:34
          StorageDead(_3);                 // scope 1 at $DIR/enum_opt.rs:+2:33: +2:34
          _1 = move _2;                    // scope 1 at $DIR/enum_opt.rs:+2:3: +2:34
          StorageDead(_2);                 // scope 1 at $DIR/enum_opt.rs:+2:33: +2:34
          StorageLive(_4);                 // scope 1 at $DIR/enum_opt.rs:+3:7: +3:34
          StorageLive(_5);                 // scope 1 at $DIR/enum_opt.rs:+3:24: +3:33
          _5 = [const 0_u8; 4096];         // scope 1 at $DIR/enum_opt.rs:+3:24: +3:33
          _4 = NotTrunctable::C(move _5);  // scope 1 at $DIR/enum_opt.rs:+3:7: +3:34
          StorageDead(_5);                 // scope 1 at $DIR/enum_opt.rs:+3:33: +3:34
          _1 = move _4;                    // scope 1 at $DIR/enum_opt.rs:+3:3: +3:34
          StorageDead(_4);                 // scope 1 at $DIR/enum_opt.rs:+3:33: +3:34
          _0 = move _1;                    // scope 1 at $DIR/enum_opt.rs:+4:3: +4:4
          StorageDead(_1);                 // scope 0 at $DIR/enum_opt.rs:+5:1: +5:2
          return;                          // scope 0 at $DIR/enum_opt.rs:+5:2: +5:2
      }
  }
  
