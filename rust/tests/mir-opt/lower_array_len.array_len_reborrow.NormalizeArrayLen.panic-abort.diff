- // MIR for `array_len_reborrow` before NormalizeArrayLen
+ // MIR for `array_len_reborrow` after NormalizeArrayLen
  
  fn array_len_reborrow(_1: [u8; N]) -> usize {
      debug arr => _1;                     // in scope 0 at $DIR/lower_array_len.rs:+0:43: +0:50
      let mut _0: usize;                   // return place in scope 0 at $DIR/lower_array_len.rs:+0:64: +0:69
      let _2: &mut [u8];                   // in scope 0 at $DIR/lower_array_len.rs:+1:9: +1:12
      let mut _3: &mut [u8; N];            // in scope 0 at $DIR/lower_array_len.rs:+1:25: +1:33
      let mut _4: &mut [u8; N];            // in scope 0 at $DIR/lower_array_len.rs:+1:25: +1:33
      let mut _6: &[u8];                   // in scope 0 at $DIR/lower_array_len.rs:+3:5: +3:14
      scope 1 {
          debug arr => _2;                 // in scope 1 at $DIR/lower_array_len.rs:+1:9: +1:12
          let _5: &[u8];                   // in scope 1 at $DIR/lower_array_len.rs:+2:9: +2:12
          scope 2 {
              debug arr => _5;             // in scope 2 at $DIR/lower_array_len.rs:+2:9: +2:12
          }
      }
  
      bb0: {
          StorageLive(_2);                 // scope 0 at $DIR/lower_array_len.rs:+1:9: +1:12
          StorageLive(_3);                 // scope 0 at $DIR/lower_array_len.rs:+1:25: +1:33
          StorageLive(_4);                 // scope 0 at $DIR/lower_array_len.rs:+1:25: +1:33
          _4 = &mut _1;                    // scope 0 at $DIR/lower_array_len.rs:+1:25: +1:33
          _3 = &mut (*_4);                 // scope 0 at $DIR/lower_array_len.rs:+1:25: +1:33
          _2 = move _3 as &mut [u8] (Pointer(Unsize)); // scope 0 at $DIR/lower_array_len.rs:+1:25: +1:33
          StorageDead(_3);                 // scope 0 at $DIR/lower_array_len.rs:+1:32: +1:33
          StorageDead(_4);                 // scope 0 at $DIR/lower_array_len.rs:+1:33: +1:34
          StorageLive(_5);                 // scope 1 at $DIR/lower_array_len.rs:+2:9: +2:12
          _5 = &(*_2);                     // scope 1 at $DIR/lower_array_len.rs:+2:15: +2:20
          StorageLive(_6);                 // scope 2 at $DIR/lower_array_len.rs:+3:5: +3:14
          _6 = &(*_5);                     // scope 2 at $DIR/lower_array_len.rs:+3:5: +3:14
-         _0 = Len((*_6));                 // scope 2 at $DIR/lower_array_len.rs:+3:5: +3:14
+         _0 = const N;                    // scope 2 at $DIR/lower_array_len.rs:+3:5: +3:14
          goto -> bb1;                     // scope 2 at $DIR/lower_array_len.rs:+3:5: +3:14
      }
  
      bb1: {
          StorageDead(_6);                 // scope 2 at $DIR/lower_array_len.rs:+3:13: +3:14
          StorageDead(_5);                 // scope 1 at $DIR/lower_array_len.rs:+4:1: +4:2
          StorageDead(_2);                 // scope 0 at $DIR/lower_array_len.rs:+4:1: +4:2
          return;                          // scope 0 at $DIR/lower_array_len.rs:+4:2: +4:2
      }
  }
  
