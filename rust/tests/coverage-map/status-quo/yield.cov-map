Function name: yield::main
Raw bytes (118): 0x[01, 01, 11, 01, 00, 05, 09, 0d, 00, 0d, 11, 32, 15, 0d, 11, 11, 15, 2e, 00, 32, 15, 0d, 11, 2e, 00, 32, 15, 0d, 11, 19, 1d, 21, 00, 25, 29, 2d, 00, 10, 01, 07, 01, 01, 16, 03, 06, 0b, 00, 2e, 0d, 01, 27, 00, 29, 07, 01, 0e, 00, 34, 0b, 02, 0b, 00, 2e, 32, 01, 22, 00, 27, 2e, 00, 2c, 00, 2e, 1b, 01, 0e, 00, 34, 1f, 03, 09, 00, 16, 2b, 07, 0b, 00, 2e, 21, 01, 27, 00, 29, 37, 01, 0e, 00, 34, 3b, 02, 0b, 00, 2e, 2d, 01, 27, 00, 29, 3f, 01, 0e, 00, 34, 43, 02, 01, 00, 02]
Number of files: 1
- file 0 => global file 1
Number of expressions: 17
- expression 0 operands: lhs = Counter(0), rhs = Zero
- expression 1 operands: lhs = Counter(1), rhs = Counter(2)
- expression 2 operands: lhs = Counter(3), rhs = Zero
- expression 3 operands: lhs = Counter(3), rhs = Counter(4)
- expression 4 operands: lhs = Expression(12, Sub), rhs = Counter(5)
- expression 5 operands: lhs = Counter(3), rhs = Counter(4)
- expression 6 operands: lhs = Counter(4), rhs = Counter(5)
- expression 7 operands: lhs = Expression(11, Sub), rhs = Zero
- expression 8 operands: lhs = Expression(12, Sub), rhs = Counter(5)
- expression 9 operands: lhs = Counter(3), rhs = Counter(4)
- expression 10 operands: lhs = Expression(11, Sub), rhs = Zero
- expression 11 operands: lhs = Expression(12, Sub), rhs = Counter(5)
- expression 12 operands: lhs = Counter(3), rhs = Counter(4)
- expression 13 operands: lhs = Counter(6), rhs = Counter(7)
- expression 14 operands: lhs = Counter(8), rhs = Zero
- expression 15 operands: lhs = Counter(9), rhs = Counter(10)
- expression 16 operands: lhs = Counter(11), rhs = Zero
Number of file 0 mappings: 16
- Code(Counter(0)) at (prev + 7, 1) to (start + 1, 22)
- Code(Expression(0, Add)) at (prev + 6, 11) to (start + 0, 46)
    = (c0 + Zero)
- Code(Counter(3)) at (prev + 1, 39) to (start + 0, 41)
- Code(Expression(1, Add)) at (prev + 1, 14) to (start + 0, 52)
    = (c1 + c2)
- Code(Expression(2, Add)) at (prev + 2, 11) to (start + 0, 46)
    = (c3 + Zero)
- Code(Expression(12, Sub)) at (prev + 1, 34) to (start + 0, 39)
    = (c3 - c4)
- Code(Expression(11, Sub)) at (prev + 0, 44) to (start + 0, 46)
    = ((c3 - c4) - c5)
- Code(Expression(6, Add)) at (prev + 1, 14) to (start + 0, 52)
    = (c4 + c5)
- Code(Expression(7, Add)) at (prev + 3, 9) to (start + 0, 22)
    = (((c3 - c4) - c5) + Zero)
- Code(Expression(10, Add)) at (prev + 7, 11) to (start + 0, 46)
    = (((c3 - c4) - c5) + Zero)
- Code(Counter(8)) at (prev + 1, 39) to (start + 0, 41)
- Code(Expression(13, Add)) at (prev + 1, 14) to (start + 0, 52)
    = (c6 + c7)
- Code(Expression(14, Add)) at (prev + 2, 11) to (start + 0, 46)
    = (c8 + Zero)
- Code(Counter(11)) at (prev + 1, 39) to (start + 0, 41)
- Code(Expression(15, Add)) at (prev + 1, 14) to (start + 0, 52)
    = (c9 + c10)
- Code(Expression(16, Add)) at (prev + 2, 1) to (start + 0, 2)
    = (c11 + Zero)

Function name: yield::main::{closure#0}
Raw bytes (14): 0x[01, 01, 00, 02, 01, 08, 1c, 01, 10, 05, 02, 10, 01, 06]
Number of files: 1
- file 0 => global file 1
Number of expressions: 0
Number of file 0 mappings: 2
- Code(Counter(0)) at (prev + 8, 28) to (start + 1, 16)
- Code(Counter(1)) at (prev + 2, 16) to (start + 1, 6)

Function name: yield::main::{closure#1}
Raw bytes (24): 0x[01, 01, 00, 04, 01, 16, 1c, 01, 10, 05, 02, 09, 00, 10, 09, 01, 09, 00, 10, 0d, 01, 10, 01, 06]
Number of files: 1
- file 0 => global file 1
Number of expressions: 0
Number of file 0 mappings: 4
- Code(Counter(0)) at (prev + 22, 28) to (start + 1, 16)
- Code(Counter(1)) at (prev + 2, 9) to (start + 0, 16)
- Code(Counter(2)) at (prev + 1, 9) to (start + 0, 16)
- Code(Counter(3)) at (prev + 1, 16) to (start + 1, 6)

