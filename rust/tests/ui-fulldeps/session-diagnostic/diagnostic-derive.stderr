error: unsupported type attribute for diagnostic derive enum
  --> $DIR/diagnostic-derive.rs:41:1
   |
LL | #[diag(no_crate_example, code = "E0123")]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: diagnostic slug not specified
  --> $DIR/diagnostic-derive.rs:44:5
   |
LL |     Foo,
   |     ^^^
   |
   = help: specify the slug as the first argument to the `#[diag(...)]` attribute, such as `#[diag(hir_analysis_example_error)]`

error: diagnostic slug not specified
  --> $DIR/diagnostic-derive.rs:46:5
   |
LL |     Bar,
   |     ^^^
   |
   = help: specify the slug as the first argument to the `#[diag(...)]` attribute, such as `#[diag(hir_analysis_example_error)]`

error: `#[diag = ...]` is not a valid attribute
  --> $DIR/diagnostic-derive.rs:52:1
   |
LL | #[diag = "E0123"]
   | ^^^^^^^^^^^^^^^^^

error: `#[nonsense(...)]` is not a valid attribute
  --> $DIR/diagnostic-derive.rs:57:1
   |
LL | #[nonsense(no_crate_example, code = "E0123")]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: diagnostic slug not specified
  --> $DIR/diagnostic-derive.rs:57:1
   |
LL | / #[nonsense(no_crate_example, code = "E0123")]
LL | |
LL | |
LL | |
LL | | struct InvalidStructAttr {}
   | |___________________________^
   |
   = help: specify the slug as the first argument to the `#[diag(...)]` attribute, such as `#[diag(hir_analysis_example_error)]`

error: `#[diag("...")]` is not a valid attribute
  --> $DIR/diagnostic-derive.rs:64:8
   |
LL | #[diag("E0123")]
   |        ^^^^^^^
   |
   = help: a diagnostic slug is required as the first argument

error: diagnostic slug not specified
  --> $DIR/diagnostic-derive.rs:64:1
   |
LL | / #[diag("E0123")]
LL | |
LL | |
LL | | struct InvalidLitNestedAttr {}
   | |______________________________^
   |
   = help: specify the slug as the first argument to the `#[diag(...)]` attribute, such as `#[diag(hir_analysis_example_error)]`

error: `#[diag(nonsense(...))]` is not a valid attribute
  --> $DIR/diagnostic-derive.rs:75:8
   |
LL | #[diag(nonsense("foo"), code = "E0123", slug = "foo")]
   |        ^^^^^^^^^^^^^^^
   |
   = help: a diagnostic slug is required as the first argument

error: diagnostic slug not specified
  --> $DIR/diagnostic-derive.rs:75:1
   |
LL | / #[diag(nonsense("foo"), code = "E0123", slug = "foo")]
LL | |
LL | |
LL | | struct InvalidNestedStructAttr1 {}
   | |__________________________________^
   |
   = help: specify the slug as the first argument to the `#[diag(...)]` attribute, such as `#[diag(hir_analysis_example_error)]`

error: `#[diag(nonsense = ...)]` is not a valid attribute
  --> $DIR/diagnostic-derive.rs:81:8
   |
LL | #[diag(nonsense = "...", code = "E0123", slug = "foo")]
   |        ^^^^^^^^^^^^^^^^
   |
   = help: only `code` is a valid nested attributes following the slug

error: `#[diag(slug = ...)]` is not a valid attribute
  --> $DIR/diagnostic-derive.rs:81:42
   |
LL | #[diag(nonsense = "...", code = "E0123", slug = "foo")]
   |                                          ^^^^^^^^^^^^
   |
   = help: only `code` is a valid nested attributes following the slug

error: diagnostic slug not specified
  --> $DIR/diagnostic-derive.rs:81:1
   |
LL | / #[diag(nonsense = "...", code = "E0123", slug = "foo")]
LL | |
LL | |
LL | |
LL | | struct InvalidNestedStructAttr2 {}
   | |__________________________________^
   |
   = help: specify the slug as the first argument to the `#[diag(...)]` attribute, such as `#[diag(hir_analysis_example_error)]`

error: `#[diag(nonsense = ...)]` is not a valid attribute
  --> $DIR/diagnostic-derive.rs:88:8
   |
LL | #[diag(nonsense = 4, code = "E0123", slug = "foo")]
   |        ^^^^^^^^^^^^

error: `#[diag(slug = ...)]` is not a valid attribute
  --> $DIR/diagnostic-derive.rs:88:38
   |
LL | #[diag(nonsense = 4, code = "E0123", slug = "foo")]
   |                                      ^^^^^^^^^^^^
   |
   = help: only `code` is a valid nested attributes following the slug

error: diagnostic slug not specified
  --> $DIR/diagnostic-derive.rs:88:1
   |
LL | / #[diag(nonsense = 4, code = "E0123", slug = "foo")]
LL | |
LL | |
LL | |
LL | | struct InvalidNestedStructAttr3 {}
   | |__________________________________^
   |
   = help: specify the slug as the first argument to the `#[diag(...)]` attribute, such as `#[diag(hir_analysis_example_error)]`

error: `#[diag(slug = ...)]` is not a valid attribute
  --> $DIR/diagnostic-derive.rs:95:42
   |
LL | #[diag(no_crate_example, code = "E0123", slug = "foo")]
   |                                          ^^^^^^^^^^^^
   |
   = help: only `code` is a valid nested attributes following the slug

error: `#[suggestion = ...]` is not a valid attribute
  --> $DIR/diagnostic-derive.rs:102:5
   |
LL |     #[suggestion = "bar"]
   |     ^^^^^^^^^^^^^^^^^^^^^

error: specified multiple times
  --> $DIR/diagnostic-derive.rs:109:8
   |
LL | #[diag(no_crate_example, code = "E0456")]
   |        ^^^^^^^^^^^^^^^^
   |
note: previously specified here
  --> $DIR/diagnostic-derive.rs:108:8
   |
LL | #[diag(no_crate_example, code = "E0123")]
   |        ^^^^^^^^^^^^^^^^

error: specified multiple times
  --> $DIR/diagnostic-derive.rs:109:33
   |
LL | #[diag(no_crate_example, code = "E0456")]
   |                                 ^^^^^^^
   |
note: previously specified here
  --> $DIR/diagnostic-derive.rs:108:33
   |
LL | #[diag(no_crate_example, code = "E0123")]
   |                                 ^^^^^^^

error: specified multiple times
  --> $DIR/diagnostic-derive.rs:115:49
   |
LL | #[diag(no_crate_example, code = "E0456", code = "E0457")]
   |                                                 ^^^^^^^
   |
note: previously specified here
  --> $DIR/diagnostic-derive.rs:115:33
   |
LL | #[diag(no_crate_example, code = "E0456", code = "E0457")]
   |                                 ^^^^^^^

error: `#[diag(no_crate::example)]` is not a valid attribute
  --> $DIR/diagnostic-derive.rs:120:26
   |
LL | #[diag(no_crate_example, no_crate::example, code = "E0456")]
   |                          ^^^^^^^^^^^^^^^^^
   |
   = help: diagnostic slug must be the first argument

error: diagnostic slug not specified
  --> $DIR/diagnostic-derive.rs:125:1
   |
LL | struct KindNotProvided {}
   | ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: specify the slug as the first argument to the `#[diag(...)]` attribute, such as `#[diag(hir_analysis_example_error)]`

error: diagnostic slug not specified
  --> $DIR/diagnostic-derive.rs:128:1
   |
LL | / #[diag(code = "E0456")]
LL | |
LL | | struct SlugNotProvided {}
   | |_________________________^
   |
   = help: specify the slug as the first argument to the `#[diag(...)]` attribute, such as `#[diag(hir_analysis_example_error)]`

error: the `#[primary_span]` attribute can only be applied to fields of type `Span` or `MultiSpan`
  --> $DIR/diagnostic-derive.rs:139:5
   |
LL |     #[primary_span]
   |     ^^^^^^^^^^^^^^^

error: `#[nonsense]` is not a valid attribute
  --> $DIR/diagnostic-derive.rs:147:5
   |
LL |     #[nonsense]
   |     ^^^^^^^^^^^

error: the `#[label(...)]` attribute can only be applied to fields of type `Span` or `MultiSpan`
  --> $DIR/diagnostic-derive.rs:164:5
   |
LL |     #[label(no_crate_label)]
   |     ^^^^^^^^^^^^^^^^^^^^^^^^

error: `name` doesn't refer to a field on this type
  --> $DIR/diagnostic-derive.rs:172:46
   |
LL |     #[suggestion(no_crate_suggestion, code = "{name}")]
   |                                              ^^^^^^^^

error: invalid format string: expected `'}'` but string was terminated
  --> $DIR/diagnostic-derive.rs:177:10
   |
LL | #[derive(Diagnostic)]
   |          ^^^^^^^^^^ expected `'}'` in format string
   |
   = note: if you intended to print `{`, you can escape it using `{{`
   = note: this error originates in the derive macro `Diagnostic` (in Nightly builds, run with -Z macro-backtrace for more info)

error: invalid format string: unmatched `}` found
  --> $DIR/diagnostic-derive.rs:187:10
   |
LL | #[derive(Diagnostic)]
   |          ^^^^^^^^^^ unmatched `}` in format string
   |
   = note: if you intended to print `}`, you can escape it using `}}`
   = note: this error originates in the derive macro `Diagnostic` (in Nightly builds, run with -Z macro-backtrace for more info)

error: the `#[label(...)]` attribute can only be applied to fields of type `Span` or `MultiSpan`
  --> $DIR/diagnostic-derive.rs:207:5
   |
LL |     #[label(no_crate_label)]
   |     ^^^^^^^^^^^^^^^^^^^^^^^^

error: suggestion without `code = "..."`
  --> $DIR/diagnostic-derive.rs:226:5
   |
LL |     #[suggestion(no_crate_suggestion)]
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: `#[suggestion(nonsense = ...)]` is not a valid attribute
  --> $DIR/diagnostic-derive.rs:234:18
   |
LL |     #[suggestion(nonsense = "bar")]
   |                  ^^^^^^^^^^^^^^^^
   |
   = help: only `style`, `code` and `applicability` are valid nested attributes

error: suggestion without `code = "..."`
  --> $DIR/diagnostic-derive.rs:234:5
   |
LL |     #[suggestion(nonsense = "bar")]
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: `#[suggestion(msg = ...)]` is not a valid attribute
  --> $DIR/diagnostic-derive.rs:243:18
   |
LL |     #[suggestion(msg = "bar")]
   |                  ^^^^^^^^^^^
   |
   = help: only `style`, `code` and `applicability` are valid nested attributes

error: suggestion without `code = "..."`
  --> $DIR/diagnostic-derive.rs:243:5
   |
LL |     #[suggestion(msg = "bar")]
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

error: wrong field type for suggestion
  --> $DIR/diagnostic-derive.rs:266:5
   |
LL | /     #[suggestion(no_crate_suggestion, code = "This is suggested code")]
LL | |
LL | |     suggestion: Applicability,
   | |_____________________________^
   |
   = help: `#[suggestion(...)]` should be applied to fields of type `Span` or `(Span, Applicability)`

error: specified multiple times
  --> $DIR/diagnostic-derive.rs:282:24
   |
LL |     suggestion: (Span, Span, Applicability),
   |                        ^^^^
   |
note: previously specified here
  --> $DIR/diagnostic-derive.rs:282:18
   |
LL |     suggestion: (Span, Span, Applicability),
   |                  ^^^^

error: specified multiple times
  --> $DIR/diagnostic-derive.rs:290:33
   |
LL |     suggestion: (Applicability, Applicability, Span),
   |                                 ^^^^^^^^^^^^^
   |
note: previously specified here
  --> $DIR/diagnostic-derive.rs:290:18
   |
LL |     suggestion: (Applicability, Applicability, Span),
   |                  ^^^^^^^^^^^^^

error: `#[label = ...]` is not a valid attribute
  --> $DIR/diagnostic-derive.rs:297:5
   |
LL |     #[label = "bar"]
   |     ^^^^^^^^^^^^^^^^

error: specified multiple times
  --> $DIR/diagnostic-derive.rs:448:53
   |
LL |     #[suggestion(no_crate_suggestion, code = "...", applicability = "maybe-incorrect")]
   |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: previously specified here
  --> $DIR/diagnostic-derive.rs:450:24
   |
LL |     suggestion: (Span, Applicability),
   |                        ^^^^^^^^^^^^^

error: invalid applicability
  --> $DIR/diagnostic-derive.rs:456:53
   |
LL |     #[suggestion(no_crate_suggestion, code = "...", applicability = "batman")]
   |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^

error: `#[label(foo)]` is not a valid attribute
  --> $DIR/diagnostic-derive.rs:519:29
   |
LL |     #[label(no_crate_label, foo)]
   |                             ^^^
   |
   = help: a diagnostic slug must be the first argument to the attribute

error: `#[label(foo = ...)]` is not a valid attribute
  --> $DIR/diagnostic-derive.rs:527:29
   |
LL |     #[label(no_crate_label, foo = "...")]
   |                             ^^^^^^^^^^^

error: `#[label(foo(...))]` is not a valid attribute
  --> $DIR/diagnostic-derive.rs:535:29
   |
LL |     #[label(no_crate_label, foo("..."))]
   |                             ^^^^^^^^^^

error: `#[primary_span]` is not a valid attribute
  --> $DIR/diagnostic-derive.rs:547:5
   |
LL |     #[primary_span]
   |     ^^^^^^^^^^^^^^^
   |
   = help: the `primary_span` field attribute is not valid for lint diagnostics

error: `#[error(...)]` is not a valid attribute
  --> $DIR/diagnostic-derive.rs:567:1
   |
LL | #[error(no_crate_example, code = "E0123")]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: diagnostic slug not specified
  --> $DIR/diagnostic-derive.rs:567:1
   |
LL | / #[error(no_crate_example, code = "E0123")]
LL | |
LL | |
LL | |
LL | | struct ErrorAttribute {}
   | |________________________^
   |
   = help: specify the slug as the first argument to the `#[diag(...)]` attribute, such as `#[diag(hir_analysis_example_error)]`

error: `#[warn_(...)]` is not a valid attribute
  --> $DIR/diagnostic-derive.rs:574:1
   |
LL | #[warn_(no_crate_example, code = "E0123")]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: diagnostic slug not specified
  --> $DIR/diagnostic-derive.rs:574:1
   |
LL | / #[warn_(no_crate_example, code = "E0123")]
LL | |
LL | |
LL | |
LL | | struct WarnAttribute {}
   | |_______________________^
   |
   = help: specify the slug as the first argument to the `#[diag(...)]` attribute, such as `#[diag(hir_analysis_example_error)]`

error: `#[lint(...)]` is not a valid attribute
  --> $DIR/diagnostic-derive.rs:581:1
   |
LL | #[lint(no_crate_example, code = "E0123")]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: diagnostic slug not specified
  --> $DIR/diagnostic-derive.rs:581:1
   |
LL | / #[lint(no_crate_example, code = "E0123")]
LL | |
LL | |
LL | |
LL | | struct LintAttributeOnSessionDiag {}
   | |____________________________________^
   |
   = help: specify the slug as the first argument to the `#[diag(...)]` attribute, such as `#[diag(hir_analysis_example_error)]`

error: `#[lint(...)]` is not a valid attribute
  --> $DIR/diagnostic-derive.rs:588:1
   |
LL | #[lint(no_crate_example, code = "E0123")]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: `#[lint(...)]` is not a valid attribute
  --> $DIR/diagnostic-derive.rs:588:1
   |
LL | #[lint(no_crate_example, code = "E0123")]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: diagnostic slug not specified
  --> $DIR/diagnostic-derive.rs:588:1
   |
LL | / #[lint(no_crate_example, code = "E0123")]
LL | |
LL | |
LL | |
LL | |
LL | | struct LintAttributeOnLintDiag {}
   | |_________________________________^
   |
   = help: specify the slug as the first argument to the attribute, such as `#[diag(compiletest_example)]`

error: specified multiple times
  --> $DIR/diagnostic-derive.rs:598:53
   |
LL |     #[suggestion(no_crate_suggestion, code = "...", code = ",,,")]
   |                                                     ^^^^^^^^^^^^
   |
note: previously specified here
  --> $DIR/diagnostic-derive.rs:598:39
   |
LL |     #[suggestion(no_crate_suggestion, code = "...", code = ",,,")]
   |                                       ^^^^^^^^^^^^

error: wrong types for suggestion
  --> $DIR/diagnostic-derive.rs:607:24
   |
LL |     suggestion: (Span, usize),
   |                        ^^^^^
   |
   = help: `#[suggestion(...)]` on a tuple field must be applied to fields of type `(Span, Applicability)`

error: wrong types for suggestion
  --> $DIR/diagnostic-derive.rs:615:17
   |
LL |     suggestion: (Span,),
   |                 ^^^^^^^
   |
   = help: `#[suggestion(...)]` on a tuple field must be applied to fields of type `(Span, Applicability)`

error: suggestion without `code = "..."`
  --> $DIR/diagnostic-derive.rs:622:5
   |
LL |     #[suggestion(no_crate_suggestion)]
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: `#[multipart_suggestion(...)]` is not a valid attribute
  --> $DIR/diagnostic-derive.rs:629:1
   |
LL | #[multipart_suggestion(no_crate_suggestion)]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider creating a `Subdiagnostic` instead

error: `#[multipart_suggestion(...)]` is not a valid attribute
  --> $DIR/diagnostic-derive.rs:632:1
   |
LL | #[multipart_suggestion()]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider creating a `Subdiagnostic` instead

error: `#[multipart_suggestion(...)]` is not a valid attribute
  --> $DIR/diagnostic-derive.rs:636:5
   |
LL |     #[multipart_suggestion(no_crate_suggestion)]
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider creating a `Subdiagnostic` instead

error: `#[suggestion(...)]` is not a valid attribute
  --> $DIR/diagnostic-derive.rs:644:1
   |
LL | #[suggestion(no_crate_suggestion, code = "...")]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: `#[label]` and `#[suggestion]` can only be applied to fields

error: `#[label]` is not a valid attribute
  --> $DIR/diagnostic-derive.rs:653:1
   |
LL | #[label]
   | ^^^^^^^^
   |
   = help: `#[label]` and `#[suggestion]` can only be applied to fields

error: `#[subdiagnostic(...)]` is not a valid attribute
  --> $DIR/diagnostic-derive.rs:687:5
   |
LL |     #[subdiagnostic(bad)]
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: `eager` is the only supported nested attribute for `subdiagnostic`

error: `#[subdiagnostic = ...]` is not a valid attribute
  --> $DIR/diagnostic-derive.rs:695:5
   |
LL |     #[subdiagnostic = "bad"]
   |     ^^^^^^^^^^^^^^^^^^^^^^^^

error: `#[subdiagnostic(...)]` is not a valid attribute
  --> $DIR/diagnostic-derive.rs:703:5
   |
LL |     #[subdiagnostic(bad, bad)]
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: `eager` is the only supported nested attribute for `subdiagnostic`

error: `#[subdiagnostic(...)]` is not a valid attribute
  --> $DIR/diagnostic-derive.rs:711:5
   |
LL |     #[subdiagnostic("bad")]
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: `eager` is the only supported nested attribute for `subdiagnostic`

error: `#[subdiagnostic(...)]` is not a valid attribute
  --> $DIR/diagnostic-derive.rs:719:5
   |
LL |     #[subdiagnostic(eager)]
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: eager subdiagnostics are not supported on lints

error: expected at least one string literal for `code(...)`
  --> $DIR/diagnostic-derive.rs:777:18
   |
LL |     #[suggestion(code())]
   |                  ^^^^^^

error: `code(...)` must contain only string literals
  --> $DIR/diagnostic-derive.rs:785:23
   |
LL |     #[suggestion(code(foo))]
   |                       ^^^

error: `code = "..."`/`code(...)` must contain only string literals
  --> $DIR/diagnostic-derive.rs:793:18
   |
LL |     #[suggestion(code = 3)]
   |                  ^^^^^^^^

error: `#[suggestion(...)]` is not a valid attribute
  --> $DIR/diagnostic-derive.rs:808:5
   |
LL |     #[suggestion(no_crate_suggestion, code = "")]
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[suggestion(...)]` applied to `Vec` field is ambiguous
   = help: to show a suggestion consisting of multiple parts, use a `Subdiagnostic` annotated with `#[multipart_suggestion(...)]`
   = help: to show a variable set of suggestions, use a `Vec` of `Subdiagnostic`s annotated with `#[suggestion(...)]`

error: cannot find attribute `nonsense` in this scope
  --> $DIR/diagnostic-derive.rs:57:3
   |
LL | #[nonsense(no_crate_example, code = "E0123")]
   |   ^^^^^^^^

error: cannot find attribute `nonsense` in this scope
  --> $DIR/diagnostic-derive.rs:147:7
   |
LL |     #[nonsense]
   |       ^^^^^^^^

error: cannot find attribute `error` in this scope
  --> $DIR/diagnostic-derive.rs:567:3
   |
LL | #[error(no_crate_example, code = "E0123")]
   |   ^^^^^

error: cannot find attribute `warn_` in this scope
  --> $DIR/diagnostic-derive.rs:574:3
   |
LL | #[warn_(no_crate_example, code = "E0123")]
   |   ^^^^^ help: a built-in attribute with a similar name exists: `warn`

error: cannot find attribute `lint` in this scope
  --> $DIR/diagnostic-derive.rs:581:3
   |
LL | #[lint(no_crate_example, code = "E0123")]
   |   ^^^^ help: a built-in attribute with a similar name exists: `link`

error: cannot find attribute `lint` in this scope
  --> $DIR/diagnostic-derive.rs:588:3
   |
LL | #[lint(no_crate_example, code = "E0123")]
   |   ^^^^ help: a built-in attribute with a similar name exists: `link`

error: cannot find attribute `multipart_suggestion` in this scope
  --> $DIR/diagnostic-derive.rs:629:3
   |
LL | #[multipart_suggestion(no_crate_suggestion)]
   |   ^^^^^^^^^^^^^^^^^^^^

error: cannot find attribute `multipart_suggestion` in this scope
  --> $DIR/diagnostic-derive.rs:632:3
   |
LL | #[multipart_suggestion()]
   |   ^^^^^^^^^^^^^^^^^^^^

error: cannot find attribute `multipart_suggestion` in this scope
  --> $DIR/diagnostic-derive.rs:636:7
   |
LL |     #[multipart_suggestion(no_crate_suggestion)]
   |       ^^^^^^^^^^^^^^^^^^^^

error[E0425]: cannot find value `nonsense` in module `crate::fluent_generated`
  --> $DIR/diagnostic-derive.rs:70:8
   |
LL | #[diag(nonsense, code = "E0123")]
   |        ^^^^^^^^ not found in `crate::fluent_generated`

error[E0277]: the trait bound `Hello: IntoDiagnosticArg` is not satisfied
  --> $DIR/diagnostic-derive.rs:341:10
   |
LL | #[derive(Diagnostic)]
   |          ^^^^^^^^^^ the trait `IntoDiagnosticArg` is not implemented for `Hello`
   |
   = help: normalized in stderr
note: required by a bound in `DiagnosticBuilder::<'a, G>::set_arg`
  --> $COMPILER_DIR/rustc_errors/src/diagnostic_builder.rs:LL:CC
   = note: this error originates in the derive macro `Diagnostic` which comes from the expansion of the macro `forward` (in Nightly builds, run with -Z macro-backtrace for more info)

error: aborting due to 84 previous errors

Some errors have detailed explanations: E0277, E0425.
For more information about an error, try `rustc --explain E0277`.
