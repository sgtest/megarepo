# Japanese translations for Rust package
# Copyright (C) 2014 The Rust Project Developers
# This file is distributed under the same license as the Rust package.
# Automatically generated, 2014.
#
msgid ""
msgstr ""
"Project-Id-Version: Rust 0.10-pre\n"
"POT-Creation-Date: 2014-02-03 08:13+0900\n"
"PO-Revision-Date: 2014-01-13 12:01+0900\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. type: Plain text
#: src/doc/complement-cheatsheet.md:8
#, fuzzy
#| msgid ""
#| "[tarball]: http://static.rust-lang.org/dist/rust-0.7.tar.gz [win-exe]: "
#| "http://static.rust-lang.org/dist/rust-0.7-install.exe"
msgid ""
"Use [`ToStr`](http://static.rust-lang.org/doc/master/std/to_str/trait.ToStr."
"html)."
msgstr ""
"[tarball]: http://static.rust-lang.org/dist/rust-0.7.tar.gz\n"
"[win-exe]: http://static.rust-lang.org/dist/rust-0.7-install.exe"

#. type: Plain text
#: src/doc/complement-cheatsheet.md:13
#, fuzzy
#| msgid ""
#| "~~~~ let x: f64 = 4.0; let y: uint = x as uint; assert!(y == 4u); ~~~~"
msgid "~~~ let x: int = 42; let y: ~str = x.to_str(); ~~~"
msgstr ""
"~~~~\n"
"let x: f64 = 4.0;\n"
"let y: uint = x as uint;\n"
"assert!(y == 4u);\n"
"~~~~"

#. type: Plain text
#: src/doc/complement-cheatsheet.md:17
#, fuzzy
#| msgid ""
#| "[tarball]: http://static.rust-lang.org/dist/rust-0.7.tar.gz [win-exe]: "
#| "http://static.rust-lang.org/dist/rust-0.7-install.exe"
msgid ""
"Use [`FromStr`](http://static.rust-lang.org/doc/master/std/from_str/trait."
"FromStr.html), and its helper function, [`from_str`](http://static.rust-lang."
"org/doc/master/std/from_str/fn.from_str.html)."
msgstr ""
"[tarball]: http://static.rust-lang.org/dist/rust-0.7.tar.gz\n"
"[win-exe]: http://static.rust-lang.org/dist/rust-0.7-install.exe"

#. type: Plain text
#: src/doc/complement-cheatsheet.md:22
#, fuzzy
#| msgid ""
#| "~~~~ let x: f64 = 4.0; let y: uint = x as uint; assert!(y == 4u); ~~~~"
msgid "~~~ let x: Option<int> = from_str(\"42\"); let y: int = x.unwrap(); ~~~"
msgstr ""
"~~~~\n"
"let x: f64 = 4.0;\n"
"let y: uint = x as uint;\n"
"assert!(y == 4u);\n"
"~~~~"

#. type: Plain text
#: src/doc/complement-cheatsheet.md:26
#, fuzzy
#| msgid ""
#| "[tarball]: http://static.rust-lang.org/dist/rust-0.7.tar.gz [win-exe]: "
#| "http://static.rust-lang.org/dist/rust-0.7-install.exe"
msgid ""
"Use [`ToStrRadix`](http://static.rust-lang.org/doc/master/std/num/trait."
"ToStrRadix.html)."
msgstr ""
"[tarball]: http://static.rust-lang.org/dist/rust-0.7.tar.gz\n"
"[win-exe]: http://static.rust-lang.org/dist/rust-0.7-install.exe"

#. type: Plain text
#: src/doc/complement-cheatsheet.md:29
#, fuzzy
#| msgid "~~~~ use std::task::spawn;"
msgid "~~~ use std::num::ToStrRadix;"
msgstr ""
"~~~~\n"
"use std::task::spawn;"

#. type: Plain text
#: src/doc/complement-cheatsheet.md:33
#, fuzzy
#| msgid ""
#| "~~~~ let x: f64 = 4.0; let y: uint = x as uint; assert!(y == 4u); ~~~~"
msgid "let x: int = 42; let y: ~str = x.to_str_radix(16); ~~~"
msgstr ""
"~~~~\n"
"let x: f64 = 4.0;\n"
"let y: uint = x as uint;\n"
"assert!(y == 4u);\n"
"~~~~"

#. type: Plain text
#: src/doc/complement-cheatsheet.md:37
#, fuzzy
#| msgid ""
#| "[tarball]: http://static.rust-lang.org/dist/rust-0.7.tar.gz [win-exe]: "
#| "http://static.rust-lang.org/dist/rust-0.7-install.exe"
msgid ""
"Use [`FromStrRadix`](http://static.rust-lang.org/doc/master/std/num/trait."
"FromStrRadix.html), and its helper function, [`from_str_radix`](http://"
"static.rust-lang.org/doc/master/std/num/fn.from_str_radix.html)."
msgstr ""
"[tarball]: http://static.rust-lang.org/dist/rust-0.7.tar.gz\n"
"[win-exe]: http://static.rust-lang.org/dist/rust-0.7-install.exe"

#. type: Plain text
#: src/doc/complement-cheatsheet.md:40
#, fuzzy
#| msgid "~~~~ use std::task::spawn;"
msgid "~~~ use std::num::from_str_radix;"
msgstr ""
"~~~~\n"
"use std::task::spawn;"

#. type: Plain text
#: src/doc/complement-cheatsheet.md:44
#, fuzzy
#| msgid ""
#| "~~~~ let x: f64 = 4.0; let y: uint = x as uint; assert!(y == 4u); ~~~~"
msgid ""
"let x: Option<i64> = from_str_radix(\"deadbeef\", 16); let y: i64 = x."
"unwrap(); ~~~"
msgstr ""
"~~~~\n"
"let x: f64 = 4.0;\n"
"let y: uint = x as uint;\n"
"assert!(y == 4u);\n"
"~~~~"

#. type: Plain text
#: src/doc/complement-cheatsheet.md:46
#, fuzzy
#| msgid "## Operators"
msgid "# File operations"
msgstr "## 演算子"

#. type: Plain text
#: src/doc/complement-cheatsheet.md:50
#, fuzzy
#| msgid ""
#| "[tarball]: http://static.rust-lang.org/dist/rust-0.7.tar.gz [win-exe]: "
#| "http://static.rust-lang.org/dist/rust-0.7-install.exe"
msgid ""
"Use [`File::open`](http://static.rust-lang.org/doc/master/std/io/fs/struct."
"File.html#method.open) to create a [`File`](http://static.rust-lang.org/doc/"
"master/std/io/fs/struct.File.html) struct, which implements the [`Reader`]"
"(http://static.rust-lang.org/doc/master/std/io/trait.Reader.html) trait."
msgstr ""
"[tarball]: http://static.rust-lang.org/dist/rust-0.7.tar.gz\n"
"[win-exe]: http://static.rust-lang.org/dist/rust-0.7-install.exe"

#. type: Plain text
#: src/doc/complement-cheatsheet.md:54
#, fuzzy
#| msgid "~~~~ use std::task::spawn;"
msgid "~~~ {.ignore} use std::path::Path; use std::io::fs::File;"
msgstr ""
"~~~~\n"
"use std::task::spawn;"

#. type: Plain text
#: src/doc/complement-cheatsheet.md:63
#, fuzzy
#| msgid ""
#| "[tarball]: http://static.rust-lang.org/dist/rust-0.7.tar.gz [win-exe]: "
#| "http://static.rust-lang.org/dist/rust-0.7-install.exe"
msgid ""
"Use the [`lines`](http://static.rust-lang.org/doc/master/std/io/trait.Buffer."
"html#method.lines) method on a [`BufferedReader`](http://static.rust-lang."
"org/doc/master/std/io/buffered/struct.BufferedReader.html)."
msgstr ""
"[tarball]: http://static.rust-lang.org/dist/rust-0.7.tar.gz\n"
"[win-exe]: http://static.rust-lang.org/dist/rust-0.7-install.exe"

#. type: Plain text
#: src/doc/complement-cheatsheet.md:67
#, fuzzy
#| msgid "~~~~ use std::task::spawn;"
msgid "~~~ use std::io::BufferedReader; # use std::io::MemReader;"
msgstr ""
"~~~~\n"
"use std::task::spawn;"

#. type: Plain text
#: src/doc/complement-cheatsheet.md:77
#, fuzzy
#| msgid "## Using other crates"
msgid "# String operations"
msgstr "## 他のクレートの利用"

#. type: Plain text
#: src/doc/complement-cheatsheet.md:81
#, fuzzy
#| msgid ""
#| "[tarball]: http://static.rust-lang.org/dist/rust-0.7.tar.gz [win-exe]: "
#| "http://static.rust-lang.org/dist/rust-0.7-install.exe"
msgid ""
"Use the [`find_str`](http://static.rust-lang.org/doc/master/std/str/trait."
"StrSlice.html#tymethod.find_str) method."
msgstr ""
"[tarball]: http://static.rust-lang.org/dist/rust-0.7.tar.gz\n"
"[win-exe]: http://static.rust-lang.org/dist/rust-0.7-install.exe"

#. type: Plain text
#: src/doc/complement-cheatsheet.md:88 src/doc/guide-container.md:4
#, fuzzy
msgid "# Containers"
msgstr "## 本書の表記について"

#. type: Plain text
#: src/doc/complement-cheatsheet.md:92
#, fuzzy
#| msgid ""
#| "[tarball]: http://static.rust-lang.org/dist/rust-0.7.tar.gz [win-exe]: "
#| "http://static.rust-lang.org/dist/rust-0.7-install.exe"
msgid ""
"The [`Container`](http://static.rust-lang.org/doc/master/std/container/trait."
"Container.html) trait provides the `len` method."
msgstr ""
"[tarball]: http://static.rust-lang.org/dist/rust-0.7.tar.gz\n"
"[win-exe]: http://static.rust-lang.org/dist/rust-0.7-install.exe"

#. type: Plain text
#: src/doc/complement-cheatsheet.md:104
#, fuzzy
#| msgid ""
#| "[tarball]: http://static.rust-lang.org/dist/rust-0.7.tar.gz [win-exe]: "
#| "http://static.rust-lang.org/dist/rust-0.7-install.exe"
msgid ""
"Use the [`iter`](http://static.rust-lang.org/doc/master/std/vec/trait."
"ImmutableVector.html#tymethod.iter) method."
msgstr ""
"[tarball]: http://static.rust-lang.org/dist/rust-0.7.tar.gz\n"
"[win-exe]: http://static.rust-lang.org/dist/rust-0.7-install.exe"

#. type: Plain text
#: src/doc/complement-cheatsheet.md:113
#, fuzzy
#| msgid ""
#| "[tarball]: http://static.rust-lang.org/dist/rust-0.7.tar.gz [win-exe]: "
#| "http://static.rust-lang.org/dist/rust-0.7-install.exe"
msgid ""
"(See also [`mut_iter`](http://static.rust-lang.org/doc/master/std/vec/trait."
"MutableVector.html#tymethod.mut_iter) which yields `&mut int` and "
"[`move_iter`](http://static.rust-lang.org/doc/master/std/vec/trait."
"OwnedVector.html#tymethod.move_iter) which yields `int` while consuming the "
"`values` vector.)"
msgstr ""
"[tarball]: http://static.rust-lang.org/dist/rust-0.7.tar.gz\n"
"[win-exe]: http://static.rust-lang.org/dist/rust-0.7-install.exe"

#. type: Plain text
#: src/doc/complement-cheatsheet.md:115 src/doc/rust.md:3019
#, fuzzy
msgid "# Type system"
msgstr "## タプル"

#. type: Plain text
#: src/doc/complement-cheatsheet.md:122
#, fuzzy, no-wrap
#| msgid "~~~~ {.ignore} // main.rs extern crate world; fn main() { println(~\"hello \" + world::explore()); } ~~~~"
msgid ""
"~~~\n"
"struct Foo {\n"
"    myfunc: fn(int, uint) -> i32\n"
"}\n"
msgstr ""
"~~~~ {.ignore}\n"
"// main.rs\n"
"extern crate world;\n"
"fn main() { println(~\"hello \" + world::explore()); }\n"
"~~~~"

#. type: Plain text
#: src/doc/complement-cheatsheet.md:130
#, fuzzy, no-wrap
#| msgid "~~~~ fn line(a: int, b: int, x: int) -> int { a * x + b } fn oops(a: int, b: int, x: int) -> ()  { a * x + b; }"
msgid ""
"fn a(a: int, b: uint) -> i32 {\n"
"    (a as uint + b) as i32\n"
"}\n"
msgstr ""
"~~~~\n"
"fn line(a: int, b: int, x: int) -> int { a * x + b }\n"
"fn oops(a: int, b: int, x: int) -> ()  { a * x + b; }"

#. type: Plain text
#: src/doc/complement-cheatsheet.md:138
#, fuzzy, no-wrap
#| msgid "~~~~ {.ignore} # struct Point { x: f64, y: f64 } let mut mypoint = Point { x: 1.0, y: 1.0 }; let origin = Point { x: 0.0, y: 0.0 };"
msgid ""
"fn main() {\n"
"    let f = Foo { myfunc: a };\n"
"    let g = FooClosure { myfunc: |a, b|  { (a - b as int) as i32 } };\n"
"    println!(\"{}\", (f.myfunc)(1, 2));\n"
"    println!(\"{}\", (g.myfunc)(3, 4));\n"
"}\n"
"~~~\n"
msgstr ""
"~~~~ {.ignore}\n"
"# struct Point { x: f64, y: f64 }\n"
"let mut mypoint = Point { x: 1.0, y: 1.0 };\n"
"let origin = Point { x: 0.0, y: 0.0 };"

#. type: Plain text
#: src/doc/complement-cheatsheet.md:176
#, fuzzy
#| msgid "[The foreign function interface][ffi]"
msgid "# FFI (Foreign Function Interface)"
msgstr "[他言語間インターフェース (foreign function inferface)][ffi]"

#. type: Plain text
#: src/doc/complement-cheatsheet.md:178
#, fuzzy
#| msgid "# Control structures"
msgid "## C function signature conversions"
msgstr "# 制御構造"
