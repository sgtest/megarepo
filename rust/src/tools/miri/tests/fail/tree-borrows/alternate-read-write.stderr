error: Undefined Behavior: write access through <TAG> is forbidden
  --> $DIR/alternate-read-write.rs:LL:CC
   |
LL |     *y += 1; // Failure
   |     ^^^^^^^ write access through <TAG> is forbidden
   |
   = help: this indicates a potential bug in the program: it performed an invalid operation, but the Tree Borrows rules it violated are still experimental
   = help: the accessed tag <TAG> is a child of the conflicting tag <TAG>
   = help: the conflicting tag <TAG> has state Frozen which forbids child write accesses
help: the accessed tag <TAG> was created here
  --> $DIR/alternate-read-write.rs:LL:CC
   |
LL |     let y = unsafe { &mut *(x as *mut u8) };
   |                      ^^^^^^^^^^^^^^^^^^^^
help: the conflicting tag <TAG> was created here, in the initial state Reserved
  --> $DIR/alternate-read-write.rs:LL:CC
   |
LL |     let y = unsafe { &mut *(x as *mut u8) };
   |                      ^^^^^^^^^^^^^^^^^^^^
help: the conflicting tag <TAG> then transitioned from Reserved to Active due to a child write access at offsets [0x0..0x1]
  --> $DIR/alternate-read-write.rs:LL:CC
   |
LL |     *y += 1; // Success
   |     ^^^^^^^
   = help: this corresponds to an activation
help: the conflicting tag <TAG> then transitioned from Active to Frozen due to a foreign read access at offsets [0x0..0x1]
  --> $DIR/alternate-read-write.rs:LL:CC
   |
LL |     let _val = *x;
   |                ^^
   = help: this corresponds to a loss of write permissions
   = note: BACKTRACE (of the first span):
   = note: inside `main` at $DIR/alternate-read-write.rs:LL:CC

note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace

error: aborting due to previous error

