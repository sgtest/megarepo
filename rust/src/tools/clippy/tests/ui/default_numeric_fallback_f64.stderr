error: default numeric fallback might occur
  --> $DIR/default_numeric_fallback_f64.rs:18:17
   |
LL |         let x = 0.12;
   |                 ^^^^ help: consider adding suffix: `0.12_f64`
   |
   = note: `-D clippy::default-numeric-fallback` implied by `-D warnings`

error: default numeric fallback might occur
  --> $DIR/default_numeric_fallback_f64.rs:19:18
   |
LL |         let x = [1., 2., 3.];
   |                  ^^ help: consider adding suffix: `1.0_f64`

error: default numeric fallback might occur
  --> $DIR/default_numeric_fallback_f64.rs:19:22
   |
LL |         let x = [1., 2., 3.];
   |                      ^^ help: consider adding suffix: `2.0_f64`

error: default numeric fallback might occur
  --> $DIR/default_numeric_fallback_f64.rs:19:26
   |
LL |         let x = [1., 2., 3.];
   |                          ^^ help: consider adding suffix: `3.0_f64`

error: default numeric fallback might occur
  --> $DIR/default_numeric_fallback_f64.rs:20:28
   |
LL |         let x = if true { (1., 2.) } else { (3., 4.) };
   |                            ^^ help: consider adding suffix: `1.0_f64`

error: default numeric fallback might occur
  --> $DIR/default_numeric_fallback_f64.rs:20:32
   |
LL |         let x = if true { (1., 2.) } else { (3., 4.) };
   |                                ^^ help: consider adding suffix: `2.0_f64`

error: default numeric fallback might occur
  --> $DIR/default_numeric_fallback_f64.rs:20:46
   |
LL |         let x = if true { (1., 2.) } else { (3., 4.) };
   |                                              ^^ help: consider adding suffix: `3.0_f64`

error: default numeric fallback might occur
  --> $DIR/default_numeric_fallback_f64.rs:20:50
   |
LL |         let x = if true { (1., 2.) } else { (3., 4.) };
   |                                                  ^^ help: consider adding suffix: `4.0_f64`

error: default numeric fallback might occur
  --> $DIR/default_numeric_fallback_f64.rs:21:23
   |
LL |         let x = match 1. {
   |                       ^^ help: consider adding suffix: `1.0_f64`

error: default numeric fallback might occur
  --> $DIR/default_numeric_fallback_f64.rs:22:18
   |
LL |             _ => 1.,
   |                  ^^ help: consider adding suffix: `1.0_f64`

error: default numeric fallback might occur
  --> $DIR/default_numeric_fallback_f64.rs:40:21
   |
LL |             let y = 1.;
   |                     ^^ help: consider adding suffix: `1.0_f64`

error: default numeric fallback might occur
  --> $DIR/default_numeric_fallback_f64.rs:48:21
   |
LL |             let y = 1.;
   |                     ^^ help: consider adding suffix: `1.0_f64`

error: default numeric fallback might occur
  --> $DIR/default_numeric_fallback_f64.rs:54:21
   |
LL |             let y = 1.;
   |                     ^^ help: consider adding suffix: `1.0_f64`

error: default numeric fallback might occur
  --> $DIR/default_numeric_fallback_f64.rs:66:9
   |
LL |         1.
   |         ^^ help: consider adding suffix: `1.0_f64`

error: default numeric fallback might occur
  --> $DIR/default_numeric_fallback_f64.rs:72:27
   |
LL |         let f = || -> _ { 1. };
   |                           ^^ help: consider adding suffix: `1.0_f64`

error: default numeric fallback might occur
  --> $DIR/default_numeric_fallback_f64.rs:76:29
   |
LL |         let f = || -> f64 { 1. };
   |                             ^^ help: consider adding suffix: `1.0_f64`

error: default numeric fallback might occur
  --> $DIR/default_numeric_fallback_f64.rs:90:21
   |
LL |         generic_arg(1.);
   |                     ^^ help: consider adding suffix: `1.0_f64`

error: default numeric fallback might occur
  --> $DIR/default_numeric_fallback_f64.rs:93:32
   |
LL |         let x: _ = generic_arg(1.);
   |                                ^^ help: consider adding suffix: `1.0_f64`

error: default numeric fallback might occur
  --> $DIR/default_numeric_fallback_f64.rs:111:28
   |
LL |         GenericStruct { x: 1. };
   |                            ^^ help: consider adding suffix: `1.0_f64`

error: default numeric fallback might occur
  --> $DIR/default_numeric_fallback_f64.rs:114:36
   |
LL |         let _ = GenericStruct { x: 1. };
   |                                    ^^ help: consider adding suffix: `1.0_f64`

error: default numeric fallback might occur
  --> $DIR/default_numeric_fallback_f64.rs:132:24
   |
LL |         GenericEnum::X(1.);
   |                        ^^ help: consider adding suffix: `1.0_f64`

error: default numeric fallback might occur
  --> $DIR/default_numeric_fallback_f64.rs:152:23
   |
LL |         s.generic_arg(1.);
   |                       ^^ help: consider adding suffix: `1.0_f64`

error: default numeric fallback might occur
  --> $DIR/default_numeric_fallback_f64.rs:159:21
   |
LL |             let x = 22.;
   |                     ^^^ help: consider adding suffix: `22.0_f64`
...
LL |         internal_macro!();
   |         ------------------ in this macro invocation
   |
   = note: this error originates in the macro `internal_macro` (in Nightly builds, run with -Z macro-backtrace for more info)

error: aborting due to 23 previous errors

