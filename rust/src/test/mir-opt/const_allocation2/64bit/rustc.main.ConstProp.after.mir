// MIR for `main` after ConstProp

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at $DIR/const_allocation2.rs:4:11: 4:11
    let _1: &[(std::option::Option<i32>, &[&u8])]; // in scope 0 at $DIR/const_allocation2.rs:5:5: 5:8
    let mut _2: &&[(std::option::Option<i32>, &[&u8])]; // in scope 0 at $DIR/const_allocation2.rs:5:5: 5:8

    bb0: {
        StorageLive(_1);                 // bb0[0]: scope 0 at $DIR/const_allocation2.rs:5:5: 5:8
        StorageLive(_2);                 // bb0[1]: scope 0 at $DIR/const_allocation2.rs:5:5: 5:8
        _2 = const {alloc0+0x0: &&[(std::option::Option<i32>, &[&u8])]}; // bb0[2]: scope 0 at $DIR/const_allocation2.rs:5:5: 5:8
                                         // ty::Const
                                         // + ty: &&[(std::option::Option<i32>, &[&u8])]
                                         // + val: Value(Scalar(alloc0+0x0))
                                         // mir::Constant
                                         // + span: $DIR/const_allocation2.rs:5:5: 5:8
                                         // + literal: Const { ty: &&[(std::option::Option<i32>, &[&u8])], val: Value(Scalar(alloc0+0x0)) }
        _1 = (*_2);                      // bb0[3]: scope 0 at $DIR/const_allocation2.rs:5:5: 5:8
        StorageDead(_2);                 // bb0[4]: scope 0 at $DIR/const_allocation2.rs:5:8: 5:9
        StorageDead(_1);                 // bb0[5]: scope 0 at $DIR/const_allocation2.rs:5:8: 5:9
        _0 = const ();                   // bb0[6]: scope 0 at $DIR/const_allocation2.rs:4:11: 6:2
                                         // ty::Const
                                         // + ty: ()
                                         // + val: Value(Scalar(<ZST>))
                                         // mir::Constant
                                         // + span: $DIR/const_allocation2.rs:4:11: 6:2
                                         // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }
        return;                          // bb0[7]: scope 0 at $DIR/const_allocation2.rs:6:2: 6:2
    }
}

alloc0 (static: FOO, size: 16, align: 8) {
    ╾──────alloc21+0──────╼ 03 00 00 00 00 00 00 00 │ ╾──────╼........
}

alloc21 (size: 72, align: 8) {
    0x00 │ 00 00 00 00 __ __ __ __ ╾──────alloc4+0───────╼ │ ....░░░░╾──────╼
    0x10 │ 00 00 00 00 00 00 00 00 00 00 00 00 __ __ __ __ │ ............░░░░
    0x20 │ ╾──────alloc9+0───────╼ 02 00 00 00 00 00 00 00 │ ╾──────╼........
    0x30 │ 01 00 00 00 2a 00 00 00 ╾──────alloc19+0──────╼ │ ....*...╾──────╼
    0x40 │ 03 00 00 00 00 00 00 00                         │ ........
}

alloc4 (size: 0, align: 8) {}

alloc9 (size: 16, align: 8) {
    ╾──────alloc7+0───────╼ ╾──────alloc8+0───────╼ │ ╾──────╼╾──────╼
}

alloc7 (size: 1, align: 1) {
    05                                              │ .
}

alloc8 (size: 1, align: 1) {
    06                                              │ .
}

alloc19 (size: 24, align: 8) {
    0x00 │ ╾──────alloc15+3──────╼ ╾──────alloc16+0──────╼ │ ╾──────╼╾──────╼
    0x10 │ ╾──────alloc18+2──────╼                         │ ╾──────╼
}

alloc15 (size: 4, align: 1) {
    2a 45 15 6f                                     │ *E.o
}

alloc16 (size: 1, align: 1) {
    2a                                              │ *
}

alloc18 (size: 4, align: 1) {
    2a 45 15 6f                                     │ *E.o
}
