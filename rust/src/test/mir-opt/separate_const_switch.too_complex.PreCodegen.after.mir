// MIR for `too_complex` after PreCodegen

fn too_complex(_1: Result<i32, usize>) -> Option<i32> {
    debug x => _1;                       // in scope 0 at $DIR/separate_const_switch.rs:+0:16: +0:17
    let mut _0: std::option::Option<i32>; // return place in scope 0 at $DIR/separate_const_switch.rs:+0:42: +0:53
    let mut _2: std::ops::ControlFlow<usize, i32>; // in scope 0 at $DIR/separate_const_switch.rs:+5:11: +10:6
    let mut _3: isize;                   // in scope 0 at $DIR/separate_const_switch.rs:+7:13: +7:18
    let _4: i32;                         // in scope 0 at $DIR/separate_const_switch.rs:+7:16: +7:17
    let mut _5: i32;                     // in scope 0 at $DIR/separate_const_switch.rs:+7:44: +7:45
    let _6: usize;                       // in scope 0 at $DIR/separate_const_switch.rs:+8:17: +8:18
    let _7: i32;                         // in scope 0 at $DIR/separate_const_switch.rs:+11:31: +11:32
    let mut _8: i32;                     // in scope 0 at $DIR/separate_const_switch.rs:+11:42: +11:43
    let _9: usize;                       // in scope 0 at $DIR/separate_const_switch.rs:+12:28: +12:29
    scope 1 {
        debug v => _4;                   // in scope 1 at $DIR/separate_const_switch.rs:+7:16: +7:17
    }
    scope 2 {
        debug r => _6;                   // in scope 2 at $DIR/separate_const_switch.rs:+8:17: +8:18
    }
    scope 3 {
        debug v => _7;                   // in scope 3 at $DIR/separate_const_switch.rs:+11:31: +11:32
    }
    scope 4 {
        debug r => _9;                   // in scope 4 at $DIR/separate_const_switch.rs:+12:28: +12:29
    }

    bb0: {
        StorageLive(_2);                 // scope 0 at $DIR/separate_const_switch.rs:+5:11: +10:6
        _3 = discriminant(_1);           // scope 0 at $DIR/separate_const_switch.rs:+6:15: +6:16
        switchInt(move _3) -> [0_isize: bb2, otherwise: bb1]; // scope 0 at $DIR/separate_const_switch.rs:+6:9: +6:16
    }

    bb1: {
        StorageLive(_6);                 // scope 0 at $DIR/separate_const_switch.rs:+8:17: +8:18
        StorageDead(_6);                 // scope 0 at $DIR/separate_const_switch.rs:+8:43: +8:44
        StorageLive(_9);                 // scope 0 at $DIR/separate_const_switch.rs:+12:28: +12:29
        Deinit(_0);                      // scope 4 at $DIR/separate_const_switch.rs:+12:34: +12:38
        discriminant(_0) = 0;            // scope 4 at $DIR/separate_const_switch.rs:+12:34: +12:38
        StorageDead(_9);                 // scope 0 at $DIR/separate_const_switch.rs:+12:37: +12:38
        goto -> bb3;                     // scope 0 at $DIR/separate_const_switch.rs:+12:37: +12:38
    }

    bb2: {
        StorageLive(_4);                 // scope 0 at $DIR/separate_const_switch.rs:+7:16: +7:17
        _4 = ((_1 as Ok).0: i32);        // scope 0 at $DIR/separate_const_switch.rs:+7:16: +7:17
        StorageLive(_5);                 // scope 1 at $DIR/separate_const_switch.rs:+7:44: +7:45
        _5 = _4;                         // scope 1 at $DIR/separate_const_switch.rs:+7:44: +7:45
        Deinit(_2);                      // scope 1 at $DIR/separate_const_switch.rs:+7:22: +7:46
        ((_2 as Continue).0: i32) = move _5; // scope 1 at $DIR/separate_const_switch.rs:+7:22: +7:46
        discriminant(_2) = 0;            // scope 1 at $DIR/separate_const_switch.rs:+7:22: +7:46
        StorageDead(_5);                 // scope 1 at $DIR/separate_const_switch.rs:+7:45: +7:46
        StorageDead(_4);                 // scope 0 at $DIR/separate_const_switch.rs:+7:45: +7:46
        StorageLive(_7);                 // scope 0 at $DIR/separate_const_switch.rs:+11:31: +11:32
        _7 = ((_2 as Continue).0: i32);  // scope 0 at $DIR/separate_const_switch.rs:+11:31: +11:32
        StorageLive(_8);                 // scope 3 at $DIR/separate_const_switch.rs:+11:42: +11:43
        _8 = _7;                         // scope 3 at $DIR/separate_const_switch.rs:+11:42: +11:43
        Deinit(_0);                      // scope 3 at $DIR/separate_const_switch.rs:+11:37: +11:44
        ((_0 as Some).0: i32) = move _8; // scope 3 at $DIR/separate_const_switch.rs:+11:37: +11:44
        discriminant(_0) = 1;            // scope 3 at $DIR/separate_const_switch.rs:+11:37: +11:44
        StorageDead(_8);                 // scope 3 at $DIR/separate_const_switch.rs:+11:43: +11:44
        StorageDead(_7);                 // scope 0 at $DIR/separate_const_switch.rs:+11:43: +11:44
        goto -> bb3;                     // scope 0 at $DIR/separate_const_switch.rs:+11:43: +11:44
    }

    bb3: {
        StorageDead(_2);                 // scope 0 at $DIR/separate_const_switch.rs:+14:1: +14:2
        return;                          // scope 0 at $DIR/separate_const_switch.rs:+14:2: +14:2
    }
}
