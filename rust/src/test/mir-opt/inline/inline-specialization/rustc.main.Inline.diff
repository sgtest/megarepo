- // MIR for `main` before Inline
+ // MIR for `main` after Inline
  
  fn main() -> () {
      let mut _0: ();                      // return place in scope 0 at $DIR/inline-specialization.rs:4:11: 4:11
      let _1: u32;                         // in scope 0 at $DIR/inline-specialization.rs:5:9: 5:10
      scope 1 {
          debug x => _1;                   // in scope 1 at $DIR/inline-specialization.rs:5:9: 5:10
      }
+     scope 2 {
+     }
  
      bb0: {
          StorageLive(_1);                 // scope 0 at $DIR/inline-specialization.rs:5:9: 5:10
-         _1 = const <std::vec::Vec<()> as Foo>::bar() -> bb1; // scope 0 at $DIR/inline-specialization.rs:5:13: 5:38
+         _1 = const 123u32;               // scope 2 at $DIR/inline-specialization.rs:14:31: 14:34
                                           // ty::Const
-                                          // + ty: fn() -> u32 {<std::vec::Vec<()> as Foo>::bar}
-                                          // + val: Value(Scalar(<ZST>))
+                                          // + ty: u32
+                                          // + val: Value(Scalar(0x0000007b))
                                           // mir::Constant
-                                          // + span: $DIR/inline-specialization.rs:5:13: 5:36
-                                          // + literal: Const { ty: fn() -> u32 {<std::vec::Vec<()> as Foo>::bar}, val: Value(Scalar(<ZST>)) }
-     }
- 
-     bb1: {
+                                          // + span: $DIR/inline-specialization.rs:14:31: 14:34
+                                          // + literal: Const { ty: u32, val: Value(Scalar(0x0000007b)) }
          _0 = const ();                   // scope 0 at $DIR/inline-specialization.rs:4:11: 6:2
                                           // ty::Const
                                           // + ty: ()
                                           // + val: Value(Scalar(<ZST>))
                                           // mir::Constant
                                           // + span: $DIR/inline-specialization.rs:4:11: 6:2
                                           // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }
          StorageDead(_1);                 // scope 0 at $DIR/inline-specialization.rs:6:1: 6:2
          return;                          // scope 0 at $DIR/inline-specialization.rs:6:2: 6:2
      }
  }
  
