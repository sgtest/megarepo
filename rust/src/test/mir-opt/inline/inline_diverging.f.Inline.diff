- // MIR for `f` before Inline
+ // MIR for `f` after Inline
  
  fn f() -> () {
      let mut _0: ();                      // return place in scope 0 at $DIR/inline-diverging.rs:7:12: 7:12
      let mut _1: !;                       // in scope 0 at $DIR/inline-diverging.rs:7:12: 9:2
      let _2: !;                           // in scope 0 at $DIR/inline-diverging.rs:8:5: 8:12
+     scope 1 (inlined sleep) {            // at $DIR/inline-diverging.rs:8:5: 8:12
+     }
  
      bb0: {
          StorageLive(_2);                 // scope 0 at $DIR/inline-diverging.rs:8:5: 8:12
-         _2 = sleep();                    // scope 0 at $DIR/inline-diverging.rs:8:5: 8:12
-                                          // mir::Constant
-                                          // + span: $DIR/inline-diverging.rs:8:5: 8:10
-                                          // + literal: Const { ty: fn() -> ! {sleep}, val: Value(Scalar(<ZST>)) }
+         goto -> bb1;                     // scope 0 at $DIR/inline-diverging.rs:8:5: 8:12
+     }
+ 
+     bb1: {
+         goto -> bb1;                     // scope 1 at $DIR/inline-diverging.rs:39:5: 39:12
+     }
+ 
+     bb2 (cleanup): {
+         resume;                          // scope 0 at $DIR/inline-diverging.rs:7:1: 9:2
      }
  }
  
