// MIR for `boo` 0 mir_map

fn boo(_1: Boo) -> usize {
    debug boo => _1;                     // in scope 0 at $DIR/enum_cast.rs:+0:8: +0:11
    let mut _0: usize;                   // return place in scope 0 at $DIR/enum_cast.rs:+0:21: +0:26
    let mut _2: u8;                      // in scope 0 at $DIR/enum_cast.rs:+1:5: +1:8

    bb0: {
        _2 = discriminant(_1);           // scope 0 at $DIR/enum_cast.rs:+1:5: +1:17
        _0 = move _2 as usize (Misc);    // scope 0 at $DIR/enum_cast.rs:+1:5: +1:17
        return;                          // scope 0 at $DIR/enum_cast.rs:+2:2: +2:2
    }
}
