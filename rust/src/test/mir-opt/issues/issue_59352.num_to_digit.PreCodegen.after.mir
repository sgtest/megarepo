// MIR for `num_to_digit` after PreCodegen

fn num_to_digit(_1: char) -> u32 {
    debug num => _1;                     // in scope 0 at $DIR/issue-59352.rs:12:21: 12:24
    let mut _0: u32;                     // return place in scope 0 at $DIR/issue-59352.rs:12:35: 12:38
    let mut _2: std::option::Option<u32>; // in scope 0 at $DIR/issue-59352.rs:14:26: 14:41
    let mut _3: char;                    // in scope 0 at $DIR/issue-59352.rs:14:26: 14:29
    let mut _4: u32;                     // in scope 0 at $DIR/issue-59352.rs:14:8: 14:23
    let mut _9: isize;                   // in scope 0 at $DIR/issue-59352.rs:14:8: 14:23
    scope 1 (inlined char::methods::<impl char>::is_digit) { // at $DIR/issue-59352.rs:14:8: 14:23
        debug self => _7;                // in scope 1 at $DIR/issue-59352.rs:14:8: 14:23
        debug radix => _4;               // in scope 1 at $DIR/issue-59352.rs:14:8: 14:23
        let mut _5: &std::option::Option<u32>; // in scope 1 at $DIR/issue-59352.rs:14:8: 14:23
        let _6: std::option::Option<u32>; // in scope 1 at $DIR/issue-59352.rs:14:8: 14:23
        let mut _7: char;                // in scope 1 at $DIR/issue-59352.rs:14:8: 14:23
        scope 2 (inlined Option::<u32>::is_some) { // at $DIR/issue-59352.rs:14:8: 14:23
            debug self => _5;            // in scope 2 at $DIR/issue-59352.rs:14:8: 14:23
        }
    }
    scope 3 (inlined #[track_caller] Option::<u32>::unwrap) { // at $DIR/issue-59352.rs:14:26: 14:50
        debug self => _2;                // in scope 3 at $DIR/issue-59352.rs:14:26: 14:50
        let mut _8: isize;               // in scope 3 at $DIR/issue-59352.rs:14:26: 14:50
        scope 4 {
            debug val => _0;             // in scope 4 at $DIR/issue-59352.rs:14:26: 14:50
        }
    }

    bb0: {
        _7 = _1;                         // scope 0 at $DIR/issue-59352.rs:14:8: 14:11
        StorageLive(_4);                 // scope 0 at $DIR/issue-59352.rs:14:8: 14:23
        _4 = const 8_u32;                // scope 0 at $DIR/issue-59352.rs:14:8: 14:23
        StorageLive(_5);                 // scope 1 at $DIR/issue-59352.rs:14:8: 14:23
        StorageLive(_6);                 // scope 1 at $DIR/issue-59352.rs:14:8: 14:23
        _6 = char::methods::<impl char>::to_digit(move _7, const 8_u32) -> bb5; // scope 1 at $DIR/issue-59352.rs:14:8: 14:23
                                         // mir::Constant
                                         // + span: $DIR/issue-59352.rs:14:8: 14:23
                                         // + literal: Const { ty: fn(char, u32) -> std::option::Option<u32> {std::char::methods::<impl char>::to_digit}, val: Value(Scalar(<ZST>)) }
    }

    bb1: {
        StorageLive(_2);                 // scope 0 at $DIR/issue-59352.rs:14:26: 14:41
        StorageLive(_3);                 // scope 0 at $DIR/issue-59352.rs:14:26: 14:29
        _3 = _1;                         // scope 0 at $DIR/issue-59352.rs:14:26: 14:29
        _2 = char::methods::<impl char>::to_digit(move _3, const 8_u32) -> bb3; // scope 0 at $DIR/issue-59352.rs:14:26: 14:41
                                         // mir::Constant
                                         // + span: $DIR/issue-59352.rs:14:30: 14:38
                                         // + literal: Const { ty: fn(char, u32) -> std::option::Option<u32> {std::char::methods::<impl char>::to_digit}, val: Value(Scalar(<ZST>)) }
    }

    bb2: {
        _0 = const 0_u32;                // scope 0 at $DIR/issue-59352.rs:14:60: 14:61
        goto -> bb4;                     // scope 0 at $DIR/issue-59352.rs:14:5: 14:63
    }

    bb3: {
        StorageDead(_3);                 // scope 0 at $DIR/issue-59352.rs:14:40: 14:41
        StorageLive(_8);                 // scope 0 at $DIR/issue-59352.rs:14:26: 14:50
        _8 = discriminant(_2);           // scope 3 at $DIR/issue-59352.rs:14:26: 14:50
        switchInt(move _8) -> [0_isize: bb6, 1_isize: bb8, otherwise: bb7]; // scope 3 at $DIR/issue-59352.rs:14:26: 14:50
    }

    bb4: {
        return;                          // scope 0 at $DIR/issue-59352.rs:15:2: 15:2
    }

    bb5: {
        _5 = &_6;                        // scope 1 at $DIR/issue-59352.rs:14:8: 14:23
        _9 = discriminant((*_5));        // scope 2 at $DIR/issue-59352.rs:14:8: 14:23
        StorageDead(_5);                 // scope 1 at $DIR/issue-59352.rs:14:8: 14:23
        StorageDead(_6);                 // scope 1 at $DIR/issue-59352.rs:14:8: 14:23
        StorageDead(_4);                 // scope 0 at $DIR/issue-59352.rs:14:8: 14:23
        switchInt(move _9) -> [1_isize: bb1, otherwise: bb2]; // scope 0 at $DIR/issue-59352.rs:14:5: 14:63
    }

    bb6: {
        core::panicking::panic(const "called `Option::unwrap()` on a `None` value"); // scope 3 at $DIR/issue-59352.rs:14:26: 14:50
                                         // mir::Constant
                                         // + span: $DIR/issue-59352.rs:14:26: 14:50
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(Scalar(<ZST>)) }
                                         // ty::Const
                                         // + ty: &str
                                         // + val: Value(Slice { data: Allocation { bytes: [99, 97, 108, 108, 101, 100, 32, 96, 79, 112, 116, 105, 111, 110, 58, 58, 117, 110, 119, 114, 97, 112, 40, 41, 96, 32, 111, 110, 32, 97, 32, 96, 78, 111, 110, 101, 96, 32, 118, 97, 108, 117, 101], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [8796093022207], len: Size { raw: 43 } }, size: Size { raw: 43 }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 43 })
                                         // mir::Constant
                                         // + span: $DIR/issue-59352.rs:14:26: 14:50
                                         // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [99, 97, 108, 108, 101, 100, 32, 96, 79, 112, 116, 105, 111, 110, 58, 58, 117, 110, 119, 114, 97, 112, 40, 41, 96, 32, 111, 110, 32, 97, 32, 96, 78, 111, 110, 101, 96, 32, 118, 97, 108, 117, 101], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [8796093022207], len: Size { raw: 43 } }, size: Size { raw: 43 }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 43 }) }
    }

    bb7: {
        unreachable;                     // scope 3 at $DIR/issue-59352.rs:14:26: 14:50
    }

    bb8: {
        _0 = move ((_2 as Some).0: u32); // scope 3 at $DIR/issue-59352.rs:14:26: 14:50
        StorageDead(_8);                 // scope 0 at $DIR/issue-59352.rs:14:26: 14:50
        StorageDead(_2);                 // scope 0 at $DIR/issue-59352.rs:14:49: 14:50
        goto -> bb4;                     // scope 0 at $DIR/issue-59352.rs:14:5: 14:63
    }
}
