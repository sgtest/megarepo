// MIR for `try_identity` after SimplifyLocals

fn try_identity(_1: Result<u32, i32>) -> Result<u32, i32> {
    debug x => _1;                       // in scope 0 at $DIR/simplify_try.rs:20:17: 20:18
    let mut _0: std::result::Result<u32, i32>; // return place in scope 0 at $DIR/simplify_try.rs:20:41: 20:57
    scope 1 {
        debug y => ((_0 as Ok).0: u32);  // in scope 1 at $DIR/simplify_try.rs:21:9: 21:10
    }
    scope 2 {
        debug e => ((_0 as Err).0: i32); // in scope 2 at $DIR/simplify_try.rs:22:13: 22:14
        scope 5 (inlined <i32 as From<i32>>::from) { // at $DIR/simplify_try.rs:22:37: 22:50
            debug t => ((_0 as Err).0: i32); // in scope 5 at $DIR/simplify_try.rs:22:37: 22:50
        }
        scope 6 (inlined from_error::<u32, i32>) { // at $DIR/simplify_try.rs:22:26: 22:51
            debug e => ((_0 as Err).0: i32); // in scope 6 at $DIR/simplify_try.rs:22:26: 22:51
        }
    }
    scope 3 {
        debug v => ((_0 as Ok).0: u32);  // in scope 3 at $DIR/simplify_try.rs:23:12: 23:13
    }
    scope 4 (inlined into_result::<u32, i32>) { // at $DIR/simplify_try.rs:21:19: 21:33
        debug r => _0;                   // in scope 4 at $DIR/simplify_try.rs:21:19: 21:33
    }

    bb0: {
        _0 = _1;                         // scope 0 at $DIR/simplify_try.rs:21:31: 21:32
        return;                          // scope 0 at $DIR/simplify_try.rs:26:2: 26:2
    }
}
