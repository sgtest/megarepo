- // MIR for `main` before ConstProp
+ // MIR for `main` after ConstProp
  
  fn main() -> () {
      let mut _0: ();                      // return place in scope 0 at $DIR/invalid_constant.rs:13:11: 13:11
      let _1: main::InvalidChar;           // in scope 0 at $DIR/invalid_constant.rs:19:9: 19:22
      let mut _3: main::InvalidTag;        // in scope 0 at $DIR/invalid_constant.rs:26:25: 26:46
      let mut _5: main::NoVariants;        // in scope 0 at $DIR/invalid_constant.rs:33:35: 33:56
      scope 1 {
          debug _invalid_char => _1;       // in scope 1 at $DIR/invalid_constant.rs:19:9: 19:22
          let _2: [main::InvalidTag; 1];   // in scope 1 at $DIR/invalid_constant.rs:26:9: 26:21
          scope 2 {
              debug _invalid_tag => _2;    // in scope 2 at $DIR/invalid_constant.rs:26:9: 26:21
              let _4: [main::NoVariants; 1]; // in scope 2 at $DIR/invalid_constant.rs:33:9: 33:31
              scope 3 {
                  debug _enum_without_variants => _4; // in scope 3 at $DIR/invalid_constant.rs:33:9: 33:31
              }
          }
      }
  
      bb0: {
          StorageLive(_1);                 // scope 0 at $DIR/invalid_constant.rs:19:9: 19:22
-         _1 = const { InvalidChar { int: 0x110001 } }; // scope 0 at $DIR/invalid_constant.rs:19:25: 19:64
+         _1 = const InvalidChar { int: 1114113_u32, chr: {transmute(0x00110001): char} }; // scope 0 at $DIR/invalid_constant.rs:19:25: 19:64
                                           // ty::Const
                                           // + ty: main::InvalidChar
-                                          // + val: Unevaluated(main::{constant#0}, [main::InvalidChar], None)
+                                          // + val: Value(Scalar(0x00110001))
                                           // mir::Constant
                                           // + span: $DIR/invalid_constant.rs:19:25: 19:64
-                                          // + literal: Const { ty: main::InvalidChar, val: Unevaluated(Unevaluated { def: WithOptConstParam { did: DefId(0:7 ~ invalid_constant[726d]::main::{constant#0}), const_param_did: None }, substs: [main::InvalidChar], promoted: None }) }
+                                          // + literal: Const { ty: main::InvalidChar, val: Value(Scalar(0x00110001)) }
          StorageLive(_2);                 // scope 1 at $DIR/invalid_constant.rs:26:9: 26:21
          StorageLive(_3);                 // scope 1 at $DIR/invalid_constant.rs:26:25: 26:46
          (_3.0: u32) = const 4_u32;       // scope 1 at $DIR/invalid_constant.rs:26:25: 26:46
-         _2 = [move _3];                  // scope 1 at $DIR/invalid_constant.rs:26:24: 26:47
+         _2 = [const InvalidTag { int: 4_u32, e: Scalar(0x00000004): E }]; // scope 1 at $DIR/invalid_constant.rs:26:24: 26:47
+                                          // ty::Const
+                                          // + ty: main::InvalidTag
+                                          // + val: Value(Scalar(0x00000004))
+                                          // mir::Constant
+                                          // + span: $DIR/invalid_constant.rs:26:24: 26:47
+                                          // + literal: Const { ty: main::InvalidTag, val: Value(Scalar(0x00000004)) }
          StorageDead(_3);                 // scope 1 at $DIR/invalid_constant.rs:26:46: 26:47
          StorageLive(_4);                 // scope 2 at $DIR/invalid_constant.rs:33:9: 33:31
          StorageLive(_5);                 // scope 2 at $DIR/invalid_constant.rs:33:35: 33:56
          (_5.0: u32) = const 0_u32;       // scope 2 at $DIR/invalid_constant.rs:33:35: 33:56
-         _4 = [move _5];                  // scope 2 at $DIR/invalid_constant.rs:33:34: 33:57
+         _4 = [const NoVariants { int: 0_u32, empty: Scalar(<ZST>): Empty }]; // scope 2 at $DIR/invalid_constant.rs:33:34: 33:57
+                                          // ty::Const
+                                          // + ty: main::NoVariants
+                                          // + val: Value(Scalar(0x00000000))
+                                          // mir::Constant
+                                          // + span: $DIR/invalid_constant.rs:33:34: 33:57
+                                          // + literal: Const { ty: main::NoVariants, val: Value(Scalar(0x00000000)) }
          StorageDead(_5);                 // scope 2 at $DIR/invalid_constant.rs:33:56: 33:57
          nop;                             // scope 0 at $DIR/invalid_constant.rs:13:11: 34:2
          StorageDead(_4);                 // scope 2 at $DIR/invalid_constant.rs:34:1: 34:2
          StorageDead(_2);                 // scope 1 at $DIR/invalid_constant.rs:34:1: 34:2
          StorageDead(_1);                 // scope 0 at $DIR/invalid_constant.rs:34:1: 34:2
          return;                          // scope 0 at $DIR/invalid_constant.rs:34:2: 34:2
      }
  }
  
