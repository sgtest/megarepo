- // MIR for `main` before ConstProp
+ // MIR for `main` after ConstProp
  
  fn main() -> () {
      let mut _0: ();                      // return place in scope 0 at $DIR/issue-67019.rs:10:11: 10:11
      let _1: ();                          // in scope 0 at $DIR/issue-67019.rs:11:5: 11:20
      let mut _2: ((u8, u8),);             // in scope 0 at $DIR/issue-67019.rs:11:10: 11:19
      let mut _3: (u8, u8);                // in scope 0 at $DIR/issue-67019.rs:11:11: 11:17
  
      bb0: {
          StorageLive(_1);                 // scope 0 at $DIR/issue-67019.rs:11:5: 11:20
          StorageLive(_2);                 // scope 0 at $DIR/issue-67019.rs:11:10: 11:19
          StorageLive(_3);                 // scope 0 at $DIR/issue-67019.rs:11:11: 11:17
          _3 = (const 1u8, const 2u8);     // scope 0 at $DIR/issue-67019.rs:11:11: 11:17
                                           // ty::Const
                                           // + ty: u8
                                           // + val: Value(Scalar(0x01))
                                           // mir::Constant
-                                          // + span: $DIR/issue-67019.rs:11:12: 11:13
+                                          // + span: $DIR/issue-67019.rs:11:11: 11:17
                                           // + literal: Const { ty: u8, val: Value(Scalar(0x01)) }
                                           // ty::Const
                                           // + ty: u8
                                           // + val: Value(Scalar(0x02))
                                           // mir::Constant
-                                          // + span: $DIR/issue-67019.rs:11:15: 11:16
+                                          // + span: $DIR/issue-67019.rs:11:11: 11:17
                                           // + literal: Const { ty: u8, val: Value(Scalar(0x02)) }
          _2 = (move _3,);                 // scope 0 at $DIR/issue-67019.rs:11:10: 11:19
          StorageDead(_3);                 // scope 0 at $DIR/issue-67019.rs:11:18: 11:19
          _1 = const test(move _2) -> bb1; // scope 0 at $DIR/issue-67019.rs:11:5: 11:20
                                           // ty::Const
                                           // + ty: fn(((u8, u8),)) {test}
                                           // + val: Value(Scalar(<ZST>))
                                           // mir::Constant
                                           // + span: $DIR/issue-67019.rs:11:5: 11:9
                                           // + literal: Const { ty: fn(((u8, u8),)) {test}, val: Value(Scalar(<ZST>)) }
      }
  
      bb1: {
          StorageDead(_2);                 // scope 0 at $DIR/issue-67019.rs:11:19: 11:20
          StorageDead(_1);                 // scope 0 at $DIR/issue-67019.rs:11:20: 11:21
          _0 = const ();                   // scope 0 at $DIR/issue-67019.rs:10:11: 12:2
                                           // ty::Const
                                           // + ty: ()
                                           // + val: Value(Scalar(<ZST>))
                                           // mir::Constant
                                           // + span: $DIR/issue-67019.rs:10:11: 12:2
                                           // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }
          return;                          // scope 0 at $DIR/issue-67019.rs:12:2: 12:2
      }
  }
  
