- // MIR for `main` before ConstProp
+ // MIR for `main` after ConstProp
  
  fn main() -> () {
      let mut _0: ();                      // return place in scope 0 at $DIR/optimizes_into_variable.rs:11:11: 11:11
      let _1: i32;                         // in scope 0 at $DIR/optimizes_into_variable.rs:12:9: 12:10
      let mut _2: (i32, bool);             // in scope 0 at $DIR/optimizes_into_variable.rs:12:13: 12:18
      let mut _4: [i32; 6];                // in scope 0 at $DIR/optimizes_into_variable.rs:13:13: 13:31
      let _5: usize;                       // in scope 0 at $DIR/optimizes_into_variable.rs:13:32: 13:33
      let mut _6: usize;                   // in scope 0 at $DIR/optimizes_into_variable.rs:13:13: 13:34
      let mut _7: bool;                    // in scope 0 at $DIR/optimizes_into_variable.rs:13:13: 13:34
      let mut _9: Point;                   // in scope 0 at $DIR/optimizes_into_variable.rs:14:13: 14:36
      scope 1 {
          debug x => _1;                   // in scope 1 at $DIR/optimizes_into_variable.rs:12:9: 12:10
          let _3: i32;                     // in scope 1 at $DIR/optimizes_into_variable.rs:13:9: 13:10
          scope 2 {
              debug y => _3;               // in scope 2 at $DIR/optimizes_into_variable.rs:13:9: 13:10
              let _8: u32;                 // in scope 2 at $DIR/optimizes_into_variable.rs:14:9: 14:10
              scope 3 {
                  debug z => _8;           // in scope 3 at $DIR/optimizes_into_variable.rs:14:9: 14:10
              }
          }
      }
  
      bb0: {
          StorageLive(_1);                 // scope 0 at $DIR/optimizes_into_variable.rs:12:9: 12:10
-         _2 = CheckedAdd(const 2i32, const 2i32); // scope 0 at $DIR/optimizes_into_variable.rs:12:13: 12:18
+         _2 = (const 4i32, const false);  // scope 0 at $DIR/optimizes_into_variable.rs:12:13: 12:18
                                           // ty::Const
                                           // + ty: i32
-                                          // + val: Value(Scalar(0x00000002))
+                                          // + val: Value(Scalar(0x00000004))
                                           // mir::Constant
-                                          // + span: $DIR/optimizes_into_variable.rs:12:13: 12:14
-                                          // + literal: Const { ty: i32, val: Value(Scalar(0x00000002)) }
+                                          // + span: $DIR/optimizes_into_variable.rs:12:13: 12:18
+                                          // + literal: Const { ty: i32, val: Value(Scalar(0x00000004)) }
                                           // ty::Const
-                                          // + ty: i32
-                                          // + val: Value(Scalar(0x00000002))
+                                          // + ty: bool
+                                          // + val: Value(Scalar(0x00))
                                           // mir::Constant
-                                          // + span: $DIR/optimizes_into_variable.rs:12:17: 12:18
-                                          // + literal: Const { ty: i32, val: Value(Scalar(0x00000002)) }
-         assert(!move (_2.1: bool), "attempt to add with overflow") -> bb1; // scope 0 at $DIR/optimizes_into_variable.rs:12:13: 12:18
+                                          // + span: $DIR/optimizes_into_variable.rs:12:13: 12:18
+                                          // + literal: Const { ty: bool, val: Value(Scalar(0x00)) }
+         assert(!const false, "attempt to add with overflow") -> bb1; // scope 0 at $DIR/optimizes_into_variable.rs:12:13: 12:18
+                                          // ty::Const
+                                          // + ty: bool
+                                          // + val: Value(Scalar(0x00))
+                                          // mir::Constant
+                                          // + span: $DIR/optimizes_into_variable.rs:12:13: 12:18
+                                          // + literal: Const { ty: bool, val: Value(Scalar(0x00)) }
      }
  
      bb1: {
-         _1 = move (_2.0: i32);           // scope 0 at $DIR/optimizes_into_variable.rs:12:13: 12:18
+         _1 = const 4i32;                 // scope 0 at $DIR/optimizes_into_variable.rs:12:13: 12:18
+                                          // ty::Const
+                                          // + ty: i32
+                                          // + val: Value(Scalar(0x00000004))
+                                          // mir::Constant
+                                          // + span: $DIR/optimizes_into_variable.rs:12:13: 12:18
+                                          // + literal: Const { ty: i32, val: Value(Scalar(0x00000004)) }
          StorageLive(_3);                 // scope 1 at $DIR/optimizes_into_variable.rs:13:9: 13:10
          StorageLive(_4);                 // scope 1 at $DIR/optimizes_into_variable.rs:13:13: 13:31
          _4 = [const 0i32, const 1i32, const 2i32, const 3i32, const 4i32, const 5i32]; // scope 1 at $DIR/optimizes_into_variable.rs:13:13: 13:31
                                           // ty::Const
                                           // + ty: i32
                                           // + val: Value(Scalar(0x00000000))
                                           // mir::Constant
                                           // + span: $DIR/optimizes_into_variable.rs:13:14: 13:15
                                           // + literal: Const { ty: i32, val: Value(Scalar(0x00000000)) }
                                           // ty::Const
                                           // + ty: i32
                                           // + val: Value(Scalar(0x00000001))
                                           // mir::Constant
                                           // + span: $DIR/optimizes_into_variable.rs:13:17: 13:18
                                           // + literal: Const { ty: i32, val: Value(Scalar(0x00000001)) }
                                           // ty::Const
                                           // + ty: i32
                                           // + val: Value(Scalar(0x00000002))
                                           // mir::Constant
                                           // + span: $DIR/optimizes_into_variable.rs:13:20: 13:21
                                           // + literal: Const { ty: i32, val: Value(Scalar(0x00000002)) }
                                           // ty::Const
                                           // + ty: i32
                                           // + val: Value(Scalar(0x00000003))
                                           // mir::Constant
                                           // + span: $DIR/optimizes_into_variable.rs:13:23: 13:24
                                           // + literal: Const { ty: i32, val: Value(Scalar(0x00000003)) }
                                           // ty::Const
                                           // + ty: i32
                                           // + val: Value(Scalar(0x00000004))
                                           // mir::Constant
                                           // + span: $DIR/optimizes_into_variable.rs:13:26: 13:27
                                           // + literal: Const { ty: i32, val: Value(Scalar(0x00000004)) }
                                           // ty::Const
                                           // + ty: i32
                                           // + val: Value(Scalar(0x00000005))
                                           // mir::Constant
                                           // + span: $DIR/optimizes_into_variable.rs:13:29: 13:30
                                           // + literal: Const { ty: i32, val: Value(Scalar(0x00000005)) }
          StorageLive(_5);                 // scope 1 at $DIR/optimizes_into_variable.rs:13:32: 13:33
          _5 = const 3usize;               // scope 1 at $DIR/optimizes_into_variable.rs:13:32: 13:33
                                           // ty::Const
                                           // + ty: usize
                                           // + val: Value(Scalar(0x00000003))
                                           // mir::Constant
                                           // + span: $DIR/optimizes_into_variable.rs:13:32: 13:33
                                           // + literal: Const { ty: usize, val: Value(Scalar(0x00000003)) }
          _6 = const 6usize;               // scope 1 at $DIR/optimizes_into_variable.rs:13:13: 13:34
                                           // ty::Const
                                           // + ty: usize
                                           // + val: Value(Scalar(0x00000006))
                                           // mir::Constant
                                           // + span: $DIR/optimizes_into_variable.rs:13:13: 13:34
                                           // + literal: Const { ty: usize, val: Value(Scalar(0x00000006)) }
-         _7 = Lt(_5, _6);                 // scope 1 at $DIR/optimizes_into_variable.rs:13:13: 13:34
-         assert(move _7, "index out of bounds: the len is {} but the index is {}", move _6, _5) -> bb2; // scope 1 at $DIR/optimizes_into_variable.rs:13:13: 13:34
+         _7 = const true;                 // scope 1 at $DIR/optimizes_into_variable.rs:13:13: 13:34
+                                          // ty::Const
+                                          // + ty: bool
+                                          // + val: Value(Scalar(0x01))
+                                          // mir::Constant
+                                          // + span: $DIR/optimizes_into_variable.rs:13:13: 13:34
+                                          // + literal: Const { ty: bool, val: Value(Scalar(0x01)) }
+         assert(const true, "index out of bounds: the len is {} but the index is {}", move _6, _5) -> bb2; // scope 1 at $DIR/optimizes_into_variable.rs:13:13: 13:34
+                                          // ty::Const
+                                          // + ty: bool
+                                          // + val: Value(Scalar(0x01))
+                                          // mir::Constant
+                                          // + span: $DIR/optimizes_into_variable.rs:13:13: 13:34
+                                          // + literal: Const { ty: bool, val: Value(Scalar(0x01)) }
      }
  
      bb2: {
-         _3 = _4[_5];                     // scope 1 at $DIR/optimizes_into_variable.rs:13:13: 13:34
+         _3 = const 3i32;                 // scope 1 at $DIR/optimizes_into_variable.rs:13:13: 13:34
+                                          // ty::Const
+                                          // + ty: i32
+                                          // + val: Value(Scalar(0x00000003))
+                                          // mir::Constant
+                                          // + span: $DIR/optimizes_into_variable.rs:13:13: 13:34
+                                          // + literal: Const { ty: i32, val: Value(Scalar(0x00000003)) }
          StorageDead(_5);                 // scope 1 at $DIR/optimizes_into_variable.rs:13:34: 13:35
          StorageDead(_4);                 // scope 1 at $DIR/optimizes_into_variable.rs:13:34: 13:35
          StorageLive(_8);                 // scope 2 at $DIR/optimizes_into_variable.rs:14:9: 14:10
          StorageLive(_9);                 // scope 2 at $DIR/optimizes_into_variable.rs:14:13: 14:36
          _9 = Point { x: const 12u32, y: const 42u32 }; // scope 2 at $DIR/optimizes_into_variable.rs:14:13: 14:36
                                           // ty::Const
                                           // + ty: u32
                                           // + val: Value(Scalar(0x0000000c))
                                           // mir::Constant
                                           // + span: $DIR/optimizes_into_variable.rs:14:25: 14:27
                                           // + literal: Const { ty: u32, val: Value(Scalar(0x0000000c)) }
                                           // ty::Const
                                           // + ty: u32
                                           // + val: Value(Scalar(0x0000002a))
                                           // mir::Constant
                                           // + span: $DIR/optimizes_into_variable.rs:14:32: 14:34
                                           // + literal: Const { ty: u32, val: Value(Scalar(0x0000002a)) }
-         _8 = (_9.1: u32);                // scope 2 at $DIR/optimizes_into_variable.rs:14:13: 14:38
+         _8 = const 42u32;                // scope 2 at $DIR/optimizes_into_variable.rs:14:13: 14:38
+                                          // ty::Const
+                                          // + ty: u32
+                                          // + val: Value(Scalar(0x0000002a))
+                                          // mir::Constant
+                                          // + span: $DIR/optimizes_into_variable.rs:14:13: 14:38
+                                          // + literal: Const { ty: u32, val: Value(Scalar(0x0000002a)) }
          StorageDead(_9);                 // scope 2 at $DIR/optimizes_into_variable.rs:14:38: 14:39
          _0 = const ();                   // scope 0 at $DIR/optimizes_into_variable.rs:11:11: 15:2
                                           // ty::Const
                                           // + ty: ()
                                           // + val: Value(Scalar(<ZST>))
                                           // mir::Constant
                                           // + span: $DIR/optimizes_into_variable.rs:11:11: 15:2
                                           // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }
          StorageDead(_8);                 // scope 2 at $DIR/optimizes_into_variable.rs:15:1: 15:2
          StorageDead(_3);                 // scope 1 at $DIR/optimizes_into_variable.rs:15:1: 15:2
          StorageDead(_1);                 // scope 0 at $DIR/optimizes_into_variable.rs:15:1: 15:2
          return;                          // scope 0 at $DIR/optimizes_into_variable.rs:15:2: 15:2
      }
  }
  
