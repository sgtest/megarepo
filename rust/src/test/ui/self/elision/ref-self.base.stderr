error[E0623]: lifetime mismatch
  --> $DIR/ref-self.rs:25:9
   |
LL |     fn ref_self(&self, f: &u32) -> &u32 {
   |                           ----     ----
   |                           |
   |                           this parameter and the return type are declared with different lifetimes...
LL |         f
   |         ^ ...but data from `f` is returned here
   |
   = note: each elided lifetime in input position becomes a distinct lifetime
help: consider introducing a named lifetime parameter and update trait if needed
   |
LL |     fn ref_self<'a>(&'a self, f: &'a u32) -> &u32 {
   |                ++++  ++           ++

error[E0623]: lifetime mismatch
  --> $DIR/ref-self.rs:33:9
   |
LL |     fn ref_Self(self: &Self, f: &u32) -> &u32 {
   |                                 ----     ----
   |                                 |
   |                                 this parameter and the return type are declared with different lifetimes...
LL |         f
   |         ^ ...but data from `f` is returned here
   |
   = note: each elided lifetime in input position becomes a distinct lifetime
help: consider introducing a named lifetime parameter and update trait if needed
   |
LL |     fn ref_Self<'a>(self: &'a Self, f: &'a u32) -> &u32 {
   |                ++++        ++           ++

error[E0623]: lifetime mismatch
  --> $DIR/ref-self.rs:39:9
   |
LL |     fn box_ref_Self(self: Box<&Self>, f: &u32) -> &u32 {
   |                                          ----     ----
   |                                          |
   |                                          this parameter and the return type are declared with different lifetimes...
LL |         f
   |         ^ ...but data from `f` is returned here
   |
   = note: each elided lifetime in input position becomes a distinct lifetime
help: consider introducing a named lifetime parameter and update trait if needed
   |
LL |     fn box_ref_Self<'a>(self: Box<&'a Self>, f: &'a u32) -> &u32 {
   |                    ++++            ++            ++

error[E0623]: lifetime mismatch
  --> $DIR/ref-self.rs:45:9
   |
LL |     fn pin_ref_Self(self: Pin<&Self>, f: &u32) -> &u32 {
   |                                          ----     ----
   |                                          |
   |                                          this parameter and the return type are declared with different lifetimes...
LL |         f
   |         ^ ...but data from `f` is returned here
   |
   = note: each elided lifetime in input position becomes a distinct lifetime
help: consider introducing a named lifetime parameter and update trait if needed
   |
LL |     fn pin_ref_Self<'a>(self: Pin<&'a Self>, f: &'a u32) -> &u32 {
   |                    ++++            ++            ++

error[E0623]: lifetime mismatch
  --> $DIR/ref-self.rs:51:9
   |
LL |     fn box_box_ref_Self(self: Box<Box<&Self>>, f: &u32) -> &u32 {
   |                                                   ----     ----
   |                                                   |
   |                                                   this parameter and the return type are declared with different lifetimes...
LL |         f
   |         ^ ...but data from `f` is returned here
   |
   = note: each elided lifetime in input position becomes a distinct lifetime
help: consider introducing a named lifetime parameter and update trait if needed
   |
LL |     fn box_box_ref_Self<'a>(self: Box<Box<&'a Self>>, f: &'a u32) -> &u32 {
   |                        ++++                ++             ++

error[E0623]: lifetime mismatch
  --> $DIR/ref-self.rs:57:9
   |
LL |     fn box_pin_ref_Self(self: Box<Pin<&Self>>, f: &u32) -> &u32 {
   |                                                   ----     ----
   |                                                   |
   |                                                   this parameter and the return type are declared with different lifetimes...
LL |         f
   |         ^ ...but data from `f` is returned here
   |
   = note: each elided lifetime in input position becomes a distinct lifetime
help: consider introducing a named lifetime parameter and update trait if needed
   |
LL |     fn box_pin_ref_Self<'a>(self: Box<Pin<&'a Self>>, f: &'a u32) -> &u32 {
   |                        ++++                ++             ++

error[E0623]: lifetime mismatch
  --> $DIR/ref-self.rs:63:9
   |
LL |     fn wrap_ref_Self_Self(self: Wrap<&Self, Self>, f: &u8) -> &u8 {
   |                                                       ---     ---
   |                                                       |
   |                                                       this parameter and the return type are declared with different lifetimes...
LL |         f
   |         ^ ...but data from `f` is returned here
   |
   = note: each elided lifetime in input position becomes a distinct lifetime
help: consider introducing a named lifetime parameter and update trait if needed
   |
LL |     fn wrap_ref_Self_Self<'a>(self: Wrap<&'a Self, Self>, f: &'a u8) -> &u8 {
   |                          ++++             ++                  ++

error: aborting due to 7 previous errors

For more information about this error, try `rustc --explain E0623`.
