error[E0658]: dereferencing raw pointers in constant functions is unstable (see issue #51911)
  --> $DIR/min_const_fn_unsafe_feature_gate.rs:46:51
   |
LL | const unsafe fn foo30_3(x: *mut usize) -> usize { *x }
   |                                                   ^^
   |
   = help: add #![feature(const_raw_ptr_deref)] to the crate attributes to enable

error[E0658]: dereferencing raw pointers in constant functions is unstable (see issue #51911)
  --> $DIR/min_const_fn_unsafe_feature_gate.rs:49:60
   |
LL | const unsafe fn foo30_4(x: *mut usize) -> &'static usize { &*x }
   |                                                            ^^^
   |
   = help: add #![feature(const_raw_ptr_deref)] to the crate attributes to enable

error[E0658]: dereferencing raw pointers in constant functions is unstable (see issue #51911)
  --> $DIR/min_const_fn_unsafe_feature_gate.rs:52:62
   |
LL | const fn foo30_5(x: *mut usize) -> &'static usize { unsafe { &*x } } //~ is unsafe
   |                                                              ^^^
   |
   = help: add #![feature(const_raw_ptr_deref)] to the crate attributes to enable

error[E0658]: unions in const fn are unstable (see issue #51909)
  --> $DIR/min_const_fn_unsafe_feature_gate.rs:59:5
   |
LL |     Foo { x: () }.y
   |     ^^^^^^^^^^^^^^^
   |
   = help: add #![feature(const_fn_union)] to the crate attributes to enable

error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block
  --> $DIR/min_const_fn_unsafe_feature_gate.rs:52:62
   |
LL | const fn foo30_5(x: *mut usize) -> &'static usize { unsafe { &*x } } //~ is unsafe
   |                                                              ^^^ dereference of raw pointer
   |
   = note: raw pointers may be NULL, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior

error: aborting due to 5 previous errors

Some errors occurred: E0133, E0658.
For more information about an error, try `rustc --explain E0133`.
