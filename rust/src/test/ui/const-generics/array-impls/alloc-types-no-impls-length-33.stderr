error[E0277]: arrays only have std trait implementations for lengths 0..=32
  --> $DIR/alloc-types-no-impls-length-33.rs:6:29
   |
LL |     let v: Vec<_> = [0; 33].into();
   |                             ^^^^ the trait `std::array::LengthAtMost32` is not implemented for `[{integer}; 33]`
   |
   = note: required because of the requirements on the impl of `std::convert::From<[{integer}; 33]>` for `std::vec::Vec<{integer}>`
   = note: required because of the requirements on the impl of `std::convert::Into<std::vec::Vec<{integer}>>` for `[{integer}; 33]`

error[E0277]: the trait bound `std::boxed::Box<[i32; 33]>: std::convert::From<std::boxed::Box<[i32]>>` is not satisfied
  --> $DIR/alloc-types-no-impls-length-33.rs:12:23
   |
LL |     let boxed_array = <Box<[i32; 33]>>::try_from(boxed_slice);
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::convert::From<std::boxed::Box<[i32]>>` is not implemented for `std::boxed::Box<[i32; 33]>`
   |
   = help: the following implementations were found:
             <std::boxed::Box<(dyn std::error::Error + 'a)> as std::convert::From<E>>
             <std::boxed::Box<(dyn std::error::Error + 'static)> as std::convert::From<&str>>
             <std::boxed::Box<(dyn std::error::Error + 'static)> as std::convert::From<std::borrow::Cow<'a, str>>>
             <std::boxed::Box<(dyn std::error::Error + 'static)> as std::convert::From<std::string::String>>
           and 16 others
   = note: required because of the requirements on the impl of `std::convert::Into<std::boxed::Box<[i32; 33]>>` for `std::boxed::Box<[i32]>`
   = note: required because of the requirements on the impl of `std::convert::TryFrom<std::boxed::Box<[i32]>>` for `std::boxed::Box<[i32; 33]>`

error[E0277]: the trait bound `std::boxed::Box<[i32; 33]>: std::convert::TryFrom<std::boxed::Box<[i32]>>` is not satisfied
  --> $DIR/alloc-types-no-impls-length-33.rs:12:23
   |
LL |     let boxed_array = <Box<[i32; 33]>>::try_from(boxed_slice);
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::convert::TryFrom<std::boxed::Box<[i32]>>` is not implemented for `std::boxed::Box<[i32; 33]>`
   |
   = help: the following implementations were found:
             <std::boxed::Box<[T; _]> as std::convert::TryFrom<std::boxed::Box<[T]>>>

error[E0277]: the trait bound `std::rc::Rc<[i32; 33]>: std::convert::From<std::rc::Rc<[i32]>>` is not satisfied
  --> $DIR/alloc-types-no-impls-length-33.rs:19:23
   |
LL |     let boxed_array = <Rc<[i32; 33]>>::try_from(boxed_slice);
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::convert::From<std::rc::Rc<[i32]>>` is not implemented for `std::rc::Rc<[i32; 33]>`
   |
   = help: the following implementations were found:
             <std::rc::Rc<T> as std::convert::From<T>>
             <std::rc::Rc<T> as std::convert::From<std::boxed::Box<T>>>
             <std::rc::Rc<[T]> as std::convert::From<&[T]>>
             <std::rc::Rc<[T]> as std::convert::From<std::vec::Vec<T>>>
           and 8 others
   = note: required because of the requirements on the impl of `std::convert::Into<std::rc::Rc<[i32; 33]>>` for `std::rc::Rc<[i32]>`
   = note: required because of the requirements on the impl of `std::convert::TryFrom<std::rc::Rc<[i32]>>` for `std::rc::Rc<[i32; 33]>`

error[E0277]: the trait bound `std::rc::Rc<[i32; 33]>: std::convert::TryFrom<std::rc::Rc<[i32]>>` is not satisfied
  --> $DIR/alloc-types-no-impls-length-33.rs:19:23
   |
LL |     let boxed_array = <Rc<[i32; 33]>>::try_from(boxed_slice);
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::convert::TryFrom<std::rc::Rc<[i32]>>` is not implemented for `std::rc::Rc<[i32; 33]>`
   |
   = help: the following implementations were found:
             <std::rc::Rc<[T; _]> as std::convert::TryFrom<std::rc::Rc<[T]>>>

error[E0277]: the trait bound `std::sync::Arc<[i32; 33]>: std::convert::From<std::sync::Arc<[i32]>>` is not satisfied
  --> $DIR/alloc-types-no-impls-length-33.rs:26:23
   |
LL |     let boxed_array = <Arc<[i32; 33]>>::try_from(boxed_slice);
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::convert::From<std::sync::Arc<[i32]>>` is not implemented for `std::sync::Arc<[i32; 33]>`
   |
   = help: the following implementations were found:
             <std::sync::Arc<T> as std::convert::From<T>>
             <std::sync::Arc<T> as std::convert::From<std::boxed::Box<T>>>
             <std::sync::Arc<[T]> as std::convert::From<&[T]>>
             <std::sync::Arc<[T]> as std::convert::From<std::vec::Vec<T>>>
           and 8 others
   = note: required because of the requirements on the impl of `std::convert::Into<std::sync::Arc<[i32; 33]>>` for `std::sync::Arc<[i32]>`
   = note: required because of the requirements on the impl of `std::convert::TryFrom<std::sync::Arc<[i32]>>` for `std::sync::Arc<[i32; 33]>`

error[E0277]: the trait bound `std::sync::Arc<[i32; 33]>: std::convert::TryFrom<std::sync::Arc<[i32]>>` is not satisfied
  --> $DIR/alloc-types-no-impls-length-33.rs:26:23
   |
LL |     let boxed_array = <Arc<[i32; 33]>>::try_from(boxed_slice);
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::convert::TryFrom<std::sync::Arc<[i32]>>` is not implemented for `std::sync::Arc<[i32; 33]>`
   |
   = help: the following implementations were found:
             <std::sync::Arc<[T; _]> as std::convert::TryFrom<std::sync::Arc<[T]>>>

error: aborting due to 7 previous errors

For more information about this error, try `rustc --explain E0277`.
