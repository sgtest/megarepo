error: no rules expected the token `let`
  --> $DIR/feature-gate.rs:101:15
   |
LL |     macro_rules! use_expr {
   |     --------------------- when calling this macro
...
LL |     use_expr!(let 0 = 1);
   |               ^^^ no rules expected this token in macro call

error[E0658]: `let` expressions in this position are experimental
  --> $DIR/feature-gate.rs:14:9
   |
LL |     if (let 0 = 1) {}
   |         ^^^^^^^^^
   |
   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information
   = help: add `#![feature(let_chains)]` to the crate attributes to enable
   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`

error[E0658]: `let` expressions in this position are experimental
  --> $DIR/feature-gate.rs:17:11
   |
LL |     if (((let 0 = 1))) {}
   |           ^^^^^^^^^
   |
   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information
   = help: add `#![feature(let_chains)]` to the crate attributes to enable
   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`

error[E0658]: `let` expressions in this position are experimental
  --> $DIR/feature-gate.rs:20:16
   |
LL |     if true && let 0 = 1 {}
   |                ^^^^^^^^^
   |
   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information
   = help: add `#![feature(let_chains)]` to the crate attributes to enable
   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`

error[E0658]: `let` expressions in this position are experimental
  --> $DIR/feature-gate.rs:23:8
   |
LL |     if let 0 = 1 && true {}
   |        ^^^^^^^^^
   |
   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information
   = help: add `#![feature(let_chains)]` to the crate attributes to enable
   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`

error[E0658]: `let` expressions in this position are experimental
  --> $DIR/feature-gate.rs:26:9
   |
LL |     if (let 0 = 1) && true {}
   |         ^^^^^^^^^
   |
   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information
   = help: add `#![feature(let_chains)]` to the crate attributes to enable
   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`

error[E0658]: `let` expressions in this position are experimental
  --> $DIR/feature-gate.rs:29:17
   |
LL |     if true && (let 0 = 1) {}
   |                 ^^^^^^^^^
   |
   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information
   = help: add `#![feature(let_chains)]` to the crate attributes to enable
   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`

error[E0658]: `let` expressions in this position are experimental
  --> $DIR/feature-gate.rs:32:9
   |
LL |     if (let 0 = 1) && (let 0 = 1) {}
   |         ^^^^^^^^^
   |
   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information
   = help: add `#![feature(let_chains)]` to the crate attributes to enable
   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`

error[E0658]: `let` expressions in this position are experimental
  --> $DIR/feature-gate.rs:32:24
   |
LL |     if (let 0 = 1) && (let 0 = 1) {}
   |                        ^^^^^^^^^
   |
   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information
   = help: add `#![feature(let_chains)]` to the crate attributes to enable
   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`

error[E0658]: `let` expressions in this position are experimental
  --> $DIR/feature-gate.rs:36:8
   |
LL |     if let 0 = 1 && let 1 = 2 && (let 2 = 3 && let 3 = 4 && let 4 = 5) {}
   |        ^^^^^^^^^
   |
   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information
   = help: add `#![feature(let_chains)]` to the crate attributes to enable
   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`

error[E0658]: `let` expressions in this position are experimental
  --> $DIR/feature-gate.rs:36:21
   |
LL |     if let 0 = 1 && let 1 = 2 && (let 2 = 3 && let 3 = 4 && let 4 = 5) {}
   |                     ^^^^^^^^^
   |
   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information
   = help: add `#![feature(let_chains)]` to the crate attributes to enable
   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`

error[E0658]: `let` expressions in this position are experimental
  --> $DIR/feature-gate.rs:36:35
   |
LL |     if let 0 = 1 && let 1 = 2 && (let 2 = 3 && let 3 = 4 && let 4 = 5) {}
   |                                   ^^^^^^^^^
   |
   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information
   = help: add `#![feature(let_chains)]` to the crate attributes to enable
   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`

error[E0658]: `let` expressions in this position are experimental
  --> $DIR/feature-gate.rs:36:48
   |
LL |     if let 0 = 1 && let 1 = 2 && (let 2 = 3 && let 3 = 4 && let 4 = 5) {}
   |                                                ^^^^^^^^^
   |
   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information
   = help: add `#![feature(let_chains)]` to the crate attributes to enable
   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`

error[E0658]: `let` expressions in this position are experimental
  --> $DIR/feature-gate.rs:36:61
   |
LL |     if let 0 = 1 && let 1 = 2 && (let 2 = 3 && let 3 = 4 && let 4 = 5) {}
   |                                                             ^^^^^^^^^
   |
   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information
   = help: add `#![feature(let_chains)]` to the crate attributes to enable
   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`

error[E0658]: `let` expressions in this position are experimental
  --> $DIR/feature-gate.rs:43:8
   |
LL |     if let Range { start: _, end: _ } = (true..true) && false {}
   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information
   = help: add `#![feature(let_chains)]` to the crate attributes to enable
   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`

error[E0658]: `let` expressions in this position are experimental
  --> $DIR/feature-gate.rs:50:12
   |
LL |     while (let 0 = 1) {}
   |            ^^^^^^^^^
   |
   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information
   = help: add `#![feature(let_chains)]` to the crate attributes to enable
   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`

error[E0658]: `let` expressions in this position are experimental
  --> $DIR/feature-gate.rs:53:14
   |
LL |     while (((let 0 = 1))) {}
   |              ^^^^^^^^^
   |
   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information
   = help: add `#![feature(let_chains)]` to the crate attributes to enable
   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`

error[E0658]: `let` expressions in this position are experimental
  --> $DIR/feature-gate.rs:56:19
   |
LL |     while true && let 0 = 1 {}
   |                   ^^^^^^^^^
   |
   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information
   = help: add `#![feature(let_chains)]` to the crate attributes to enable
   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`

error[E0658]: `let` expressions in this position are experimental
  --> $DIR/feature-gate.rs:59:11
   |
LL |     while let 0 = 1 && true {}
   |           ^^^^^^^^^
   |
   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information
   = help: add `#![feature(let_chains)]` to the crate attributes to enable
   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`

error[E0658]: `let` expressions in this position are experimental
  --> $DIR/feature-gate.rs:62:12
   |
LL |     while (let 0 = 1) && true {}
   |            ^^^^^^^^^
   |
   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information
   = help: add `#![feature(let_chains)]` to the crate attributes to enable
   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`

error[E0658]: `let` expressions in this position are experimental
  --> $DIR/feature-gate.rs:65:20
   |
LL |     while true && (let 0 = 1) {}
   |                    ^^^^^^^^^
   |
   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information
   = help: add `#![feature(let_chains)]` to the crate attributes to enable
   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`

error[E0658]: `let` expressions in this position are experimental
  --> $DIR/feature-gate.rs:68:12
   |
LL |     while (let 0 = 1) && (let 0 = 1) {}
   |            ^^^^^^^^^
   |
   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information
   = help: add `#![feature(let_chains)]` to the crate attributes to enable
   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`

error[E0658]: `let` expressions in this position are experimental
  --> $DIR/feature-gate.rs:68:27
   |
LL |     while (let 0 = 1) && (let 0 = 1) {}
   |                           ^^^^^^^^^
   |
   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information
   = help: add `#![feature(let_chains)]` to the crate attributes to enable
   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`

error[E0658]: `let` expressions in this position are experimental
  --> $DIR/feature-gate.rs:72:11
   |
LL |     while let 0 = 1 && let 1 = 2 && (let 2 = 3 && let 3 = 4 && let 4 = 5) {}
   |           ^^^^^^^^^
   |
   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information
   = help: add `#![feature(let_chains)]` to the crate attributes to enable
   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`

error[E0658]: `let` expressions in this position are experimental
  --> $DIR/feature-gate.rs:72:24
   |
LL |     while let 0 = 1 && let 1 = 2 && (let 2 = 3 && let 3 = 4 && let 4 = 5) {}
   |                        ^^^^^^^^^
   |
   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information
   = help: add `#![feature(let_chains)]` to the crate attributes to enable
   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`

error[E0658]: `let` expressions in this position are experimental
  --> $DIR/feature-gate.rs:72:38
   |
LL |     while let 0 = 1 && let 1 = 2 && (let 2 = 3 && let 3 = 4 && let 4 = 5) {}
   |                                      ^^^^^^^^^
   |
   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information
   = help: add `#![feature(let_chains)]` to the crate attributes to enable
   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`

error[E0658]: `let` expressions in this position are experimental
  --> $DIR/feature-gate.rs:72:51
   |
LL |     while let 0 = 1 && let 1 = 2 && (let 2 = 3 && let 3 = 4 && let 4 = 5) {}
   |                                                   ^^^^^^^^^
   |
   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information
   = help: add `#![feature(let_chains)]` to the crate attributes to enable
   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`

error[E0658]: `let` expressions in this position are experimental
  --> $DIR/feature-gate.rs:72:64
   |
LL |     while let 0 = 1 && let 1 = 2 && (let 2 = 3 && let 3 = 4 && let 4 = 5) {}
   |                                                                ^^^^^^^^^
   |
   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information
   = help: add `#![feature(let_chains)]` to the crate attributes to enable
   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`

error[E0658]: `let` expressions in this position are experimental
  --> $DIR/feature-gate.rs:79:11
   |
LL |     while let Range { start: _, end: _ } = (true..true) && false {}
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information
   = help: add `#![feature(let_chains)]` to the crate attributes to enable
   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`

error[E0658]: `let` expressions in this position are experimental
  --> $DIR/feature-gate.rs:99:20
   |
LL |     #[cfg(FALSE)] (let 0 = 1);
   |                    ^^^^^^^^^
   |
   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information
   = help: add `#![feature(let_chains)]` to the crate attributes to enable
   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`

error[E0658]: `let` expressions in this position are experimental
  --> $DIR/feature-gate.rs:86:17
   |
LL |     noop_expr!((let 0 = 1));
   |                 ^^^^^^^^^
   |
   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information
   = help: add `#![feature(let_chains)]` to the crate attributes to enable
   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`

error[E0658]: `let` expressions in this position are experimental
  --> $DIR/feature-gate.rs:95:16
   |
LL |     use_expr!((let 0 = 1 && 0 == 0));
   |                ^^^^^^^^^
   |
   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information
   = help: add `#![feature(let_chains)]` to the crate attributes to enable
   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`

error[E0658]: `let` expressions in this position are experimental
  --> $DIR/feature-gate.rs:97:16
   |
LL |     use_expr!((let 0 = 1));
   |                ^^^^^^^^^
   |
   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information
   = help: add `#![feature(let_chains)]` to the crate attributes to enable
   = help: you can write `matches!(<expr>, <pattern>)` instead of `let <pattern> = <expr>`

error: aborting due to 33 previous errors

For more information about this error, try `rustc --explain E0658`.
