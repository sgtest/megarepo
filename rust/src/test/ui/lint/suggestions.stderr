warning: unnecessary parentheses around assigned value
  --> $DIR/suggestions.rs:36:21
   |
36 |         let mut a = (1); // should suggest no `mut`, no parens
   |                     ^^^ help: remove these parentheses
   |
note: lint level defined here
  --> $DIR/suggestions.rs:11:21
   |
11 | #![warn(unused_mut, unused_parens)] // UI tests pass `-A unused`—see Issue #43896
   |                     ^^^^^^^^^^^^^

warning: use of deprecated attribute `no_debug`: the `#[no_debug]` attribute was an experimental feature that has been deprecated due to lack of demand. See https://github.com/rust-lang/rust/issues/29721
  --> $DIR/suggestions.rs:31:1
   |
31 | #[no_debug] // should suggest removal of deprecated attribute
   | ^^^^^^^^^^^ help: remove this attribute
   |
   = note: #[warn(deprecated)] on by default

warning: variable does not need to be mutable
  --> $DIR/suggestions.rs:36:13
   |
36 |         let mut a = (1); // should suggest no `mut`, no parens
   |             ---^^
   |             |
   |             help: remove this `mut`
   |
note: lint level defined here
  --> $DIR/suggestions.rs:11:9
   |
11 | #![warn(unused_mut, unused_parens)] // UI tests pass `-A unused`—see Issue #43896
   |         ^^^^^^^^^^

warning: static is marked #[no_mangle], but not exported
  --> $DIR/suggestions.rs:14:14
   |
14 | #[no_mangle] static SHENZHOU: usize = 1; // should suggest `pub`
   |              -^^^^^^^^^^^^^^^^^^^^^^^^^^
   |              |
   |              help: try making it public: `pub `
   |
   = note: #[warn(private_no_mangle_statics)] on by default

error: const items should never be #[no_mangle]
  --> $DIR/suggestions.rs:16:14
   |
16 | #[no_mangle] const DISCOVERY: usize = 1; // should suggest `pub static` rather than `const`
   |              -----^^^^^^^^^^^^^^^^^^^^^^
   |              |
   |              help: try a static value: `pub static`
   |
   = note: #[deny(no_mangle_const_items)] on by default

warning: functions generic over types must be mangled
  --> $DIR/suggestions.rs:20:1
   |
19 | #[no_mangle] // should suggest removal (generics can't be no-mangle)
   | ------------ help: remove this attribute
20 | pub fn defiant<T>(_t: T) {}
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: #[warn(no_mangle_generic_items)] on by default

warning: function is marked #[no_mangle], but not exported
  --> $DIR/suggestions.rs:24:1
   |
24 | fn rio_grande() {} // should suggest `pub`
   | -^^^^^^^^^^^^^^^^^
   | |
   | help: try making it public: `pub `
   |
   = note: #[warn(private_no_mangle_fns)] on by default

warning: denote infinite loops with `loop { ... }`
  --> $DIR/suggestions.rs:34:5
   |
34 |       while true { // should suggest `loop`
   |       ^---------
   |       |
   |  _____help: use `loop`
   | |
35 | |     //~^ WARN denote infinite loops
36 | |         let mut a = (1); // should suggest no `mut`, no parens
37 | |         //~^ WARN does not need to be mutable
...  |
44 | |         println!("{}", a);
45 | |     }
   | |_____^
   |
   = note: #[warn(while_true)] on by default

warning: the `warp_factor:` in this pattern is redundant
  --> $DIR/suggestions.rs:41:23
   |
41 |             Equinox { warp_factor: warp_factor } => {} // should suggest shorthand
   |                       ------------^^^^^^^^^^^^
   |                       |
   |                       help: remove this
   |
   = note: #[warn(non_shorthand_field_patterns)] on by default

error: aborting due to previous error

