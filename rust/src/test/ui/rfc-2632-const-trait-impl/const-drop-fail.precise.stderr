error[E0277]: can't drop `NonTrivialDrop` in const contexts
  --> $DIR/const-drop-fail.rs:43:5
   |
LL |         const _: () = check($exp);
   |                       ----- required by a bound introduced by this call
...
LL |     NonTrivialDrop,
   |     ^^^^^^^^^^^^^^ the trait `~const Destruct` is not implemented for `NonTrivialDrop`
   |
   = note: the trait bound `NonTrivialDrop: ~const Destruct` is not satisfied
note: required by a bound in `check`
  --> $DIR/const-drop-fail.rs:34:19
   |
LL | const fn check<T: ~const Destruct>(_: T) {}
   |                   ^^^^^^^^^^^^^^^ required by this bound in `check`
help: consider borrowing here
   |
LL |     &NonTrivialDrop,
   |     +
LL |     &mut NonTrivialDrop,
   |     ++++

error[E0277]: can't drop `NonTrivialDrop` in const contexts
  --> $DIR/const-drop-fail.rs:45:5
   |
LL |         const _: () = check($exp);
   |                       ----- required by a bound introduced by this call
...
LL |     ConstImplWithDropGlue(NonTrivialDrop),
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ within `ConstImplWithDropGlue`, the trait `~const Destruct` is not implemented for `NonTrivialDrop`
   |
note: the trait `Destruct` is implemented for `NonTrivialDrop`, but that implementation is not `const`
  --> $DIR/const-drop-fail.rs:45:5
   |
LL |     ConstImplWithDropGlue(NonTrivialDrop),
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: required because it appears within the type `ConstImplWithDropGlue`
  --> $DIR/const-drop-fail.rs:16:8
   |
LL | struct ConstImplWithDropGlue(NonTrivialDrop);
   |        ^^^^^^^^^^^^^^^^^^^^^
note: required by a bound in `check`
  --> $DIR/const-drop-fail.rs:34:19
   |
LL | const fn check<T: ~const Destruct>(_: T) {}
   |                   ^^^^^^^^^^^^^^^ required by this bound in `check`

error[E0277]: the trait bound `ConstDropImplWithBounds<NonTrivialDrop>: ~const Destruct` is not satisfied
  --> $DIR/const-drop-fail.rs:47:5
   |
LL |         const _: () = check($exp);
   |                       ----- required by a bound introduced by this call
...
LL |     ConstDropImplWithBounds::<NonTrivialDrop>(PhantomData),
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `~const Destruct` is not implemented for `ConstDropImplWithBounds<NonTrivialDrop>`
   |
note: required for `ConstDropImplWithBounds<NonTrivialDrop>` to implement `~const Destruct`
  --> $DIR/const-drop-fail.rs:28:25
   |
LL | impl<T: ~const A> const Drop for ConstDropImplWithBounds<T> {
   |                         ^^^^     ^^^^^^^^^^^^^^^^^^^^^^^^^^
   = note: 1 redundant requirement hidden
   = note: required for `ConstDropImplWithBounds<NonTrivialDrop>` to implement `~const Destruct`
note: required by a bound in `check`
  --> $DIR/const-drop-fail.rs:34:19
   |
LL | const fn check<T: ~const Destruct>(_: T) {}
   |                   ^^^^^^^^^^^^^^^ required by this bound in `check`
help: consider borrowing here
   |
LL |     &ConstDropImplWithBounds::<NonTrivialDrop>(PhantomData),
   |     +
LL |     &mut ConstDropImplWithBounds::<NonTrivialDrop>(PhantomData),
   |     ++++

error: aborting due to 3 previous errors

For more information about this error, try `rustc --explain E0277`.
