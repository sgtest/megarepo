error[E0277]: `should_reject_repr_rust::unit::repr_rust` cannot be safely transmuted into `()` in the defining scope of `assert::Context`.
  --> $DIR/should_require_well_defined_layout.rs:21:52
   |
LL |         assert::is_maybe_transmutable::<repr_rust, ()>();
   |                                                    ^^ `should_reject_repr_rust::unit::repr_rust` cannot be safely transmuted into `()` in the defining scope of `assert::Context`.
   |
   = help: the trait `BikeshedIntrinsicFrom<should_reject_repr_rust::unit::repr_rust, assert::Context, true, true, true, true>` is not implemented for `()`
note: required by a bound in `is_maybe_transmutable`
  --> $DIR/should_require_well_defined_layout.rs:13:14
   |
LL |     pub fn is_maybe_transmutable<Src, Dst>()
   |            --------------------- required by a bound in this
LL |     where
LL |         Dst: BikeshedIntrinsicFrom<Src, Context, true, true, true, true>
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_maybe_transmutable`

error[E0277]: `u128` cannot be safely transmuted into `should_reject_repr_rust::unit::repr_rust` in the defining scope of `assert::Context`.
  --> $DIR/should_require_well_defined_layout.rs:22:47
   |
LL |         assert::is_maybe_transmutable::<u128, repr_rust>();
   |                                               ^^^^^^^^^ `u128` cannot be safely transmuted into `should_reject_repr_rust::unit::repr_rust` in the defining scope of `assert::Context`.
   |
   = help: the trait `BikeshedIntrinsicFrom<u128, assert::Context, true, true, true, true>` is not implemented for `should_reject_repr_rust::unit::repr_rust`
note: required by a bound in `is_maybe_transmutable`
  --> $DIR/should_require_well_defined_layout.rs:13:14
   |
LL |     pub fn is_maybe_transmutable<Src, Dst>()
   |            --------------------- required by a bound in this
LL |     where
LL |         Dst: BikeshedIntrinsicFrom<Src, Context, true, true, true, true>
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_maybe_transmutable`

error[E0277]: `should_reject_repr_rust::tuple::repr_rust` cannot be safely transmuted into `()` in the defining scope of `assert::Context`.
  --> $DIR/should_require_well_defined_layout.rs:27:52
   |
LL |         assert::is_maybe_transmutable::<repr_rust, ()>();
   |                                                    ^^ `should_reject_repr_rust::tuple::repr_rust` cannot be safely transmuted into `()` in the defining scope of `assert::Context`.
   |
   = help: the trait `BikeshedIntrinsicFrom<should_reject_repr_rust::tuple::repr_rust, assert::Context, true, true, true, true>` is not implemented for `()`
note: required by a bound in `is_maybe_transmutable`
  --> $DIR/should_require_well_defined_layout.rs:13:14
   |
LL |     pub fn is_maybe_transmutable<Src, Dst>()
   |            --------------------- required by a bound in this
LL |     where
LL |         Dst: BikeshedIntrinsicFrom<Src, Context, true, true, true, true>
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_maybe_transmutable`

error[E0277]: `u128` cannot be safely transmuted into `should_reject_repr_rust::tuple::repr_rust` in the defining scope of `assert::Context`.
  --> $DIR/should_require_well_defined_layout.rs:28:47
   |
LL |         assert::is_maybe_transmutable::<u128, repr_rust>();
   |                                               ^^^^^^^^^ `u128` cannot be safely transmuted into `should_reject_repr_rust::tuple::repr_rust` in the defining scope of `assert::Context`.
   |
   = help: the trait `BikeshedIntrinsicFrom<u128, assert::Context, true, true, true, true>` is not implemented for `should_reject_repr_rust::tuple::repr_rust`
note: required by a bound in `is_maybe_transmutable`
  --> $DIR/should_require_well_defined_layout.rs:13:14
   |
LL |     pub fn is_maybe_transmutable<Src, Dst>()
   |            --------------------- required by a bound in this
LL |     where
LL |         Dst: BikeshedIntrinsicFrom<Src, Context, true, true, true, true>
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_maybe_transmutable`

error[E0277]: `should_reject_repr_rust::braces::repr_rust` cannot be safely transmuted into `()` in the defining scope of `assert::Context`.
  --> $DIR/should_require_well_defined_layout.rs:33:52
   |
LL |         assert::is_maybe_transmutable::<repr_rust, ()>();
   |                                                    ^^ `should_reject_repr_rust::braces::repr_rust` cannot be safely transmuted into `()` in the defining scope of `assert::Context`.
   |
   = help: the trait `BikeshedIntrinsicFrom<should_reject_repr_rust::braces::repr_rust, assert::Context, true, true, true, true>` is not implemented for `()`
note: required by a bound in `is_maybe_transmutable`
  --> $DIR/should_require_well_defined_layout.rs:13:14
   |
LL |     pub fn is_maybe_transmutable<Src, Dst>()
   |            --------------------- required by a bound in this
LL |     where
LL |         Dst: BikeshedIntrinsicFrom<Src, Context, true, true, true, true>
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_maybe_transmutable`

error[E0277]: `u128` cannot be safely transmuted into `should_reject_repr_rust::braces::repr_rust` in the defining scope of `assert::Context`.
  --> $DIR/should_require_well_defined_layout.rs:34:47
   |
LL |         assert::is_maybe_transmutable::<u128, repr_rust>();
   |                                               ^^^^^^^^^ `u128` cannot be safely transmuted into `should_reject_repr_rust::braces::repr_rust` in the defining scope of `assert::Context`.
   |
   = help: the trait `BikeshedIntrinsicFrom<u128, assert::Context, true, true, true, true>` is not implemented for `should_reject_repr_rust::braces::repr_rust`
note: required by a bound in `is_maybe_transmutable`
  --> $DIR/should_require_well_defined_layout.rs:13:14
   |
LL |     pub fn is_maybe_transmutable<Src, Dst>()
   |            --------------------- required by a bound in this
LL |     where
LL |         Dst: BikeshedIntrinsicFrom<Src, Context, true, true, true, true>
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_maybe_transmutable`

error[E0277]: `aligned::repr_rust` cannot be safely transmuted into `()` in the defining scope of `assert::Context`.
  --> $DIR/should_require_well_defined_layout.rs:39:52
   |
LL |         assert::is_maybe_transmutable::<repr_rust, ()>();
   |                                                    ^^ `aligned::repr_rust` cannot be safely transmuted into `()` in the defining scope of `assert::Context`.
   |
   = help: the trait `BikeshedIntrinsicFrom<aligned::repr_rust, assert::Context, true, true, true, true>` is not implemented for `()`
note: required by a bound in `is_maybe_transmutable`
  --> $DIR/should_require_well_defined_layout.rs:13:14
   |
LL |     pub fn is_maybe_transmutable<Src, Dst>()
   |            --------------------- required by a bound in this
LL |     where
LL |         Dst: BikeshedIntrinsicFrom<Src, Context, true, true, true, true>
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_maybe_transmutable`

error[E0277]: `u128` cannot be safely transmuted into `aligned::repr_rust` in the defining scope of `assert::Context`.
  --> $DIR/should_require_well_defined_layout.rs:40:47
   |
LL |         assert::is_maybe_transmutable::<u128, repr_rust>();
   |                                               ^^^^^^^^^ `u128` cannot be safely transmuted into `aligned::repr_rust` in the defining scope of `assert::Context`.
   |
   = help: the trait `BikeshedIntrinsicFrom<u128, assert::Context, true, true, true, true>` is not implemented for `aligned::repr_rust`
note: required by a bound in `is_maybe_transmutable`
  --> $DIR/should_require_well_defined_layout.rs:13:14
   |
LL |     pub fn is_maybe_transmutable<Src, Dst>()
   |            --------------------- required by a bound in this
LL |     where
LL |         Dst: BikeshedIntrinsicFrom<Src, Context, true, true, true, true>
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_maybe_transmutable`

error[E0277]: `packed::repr_rust` cannot be safely transmuted into `()` in the defining scope of `assert::Context`.
  --> $DIR/should_require_well_defined_layout.rs:45:52
   |
LL |         assert::is_maybe_transmutable::<repr_rust, ()>();
   |                                                    ^^ `packed::repr_rust` cannot be safely transmuted into `()` in the defining scope of `assert::Context`.
   |
   = help: the trait `BikeshedIntrinsicFrom<packed::repr_rust, assert::Context, true, true, true, true>` is not implemented for `()`
note: required by a bound in `is_maybe_transmutable`
  --> $DIR/should_require_well_defined_layout.rs:13:14
   |
LL |     pub fn is_maybe_transmutable<Src, Dst>()
   |            --------------------- required by a bound in this
LL |     where
LL |         Dst: BikeshedIntrinsicFrom<Src, Context, true, true, true, true>
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_maybe_transmutable`

error[E0277]: `u128` cannot be safely transmuted into `packed::repr_rust` in the defining scope of `assert::Context`.
  --> $DIR/should_require_well_defined_layout.rs:46:47
   |
LL |         assert::is_maybe_transmutable::<u128, repr_rust>();
   |                                               ^^^^^^^^^ `u128` cannot be safely transmuted into `packed::repr_rust` in the defining scope of `assert::Context`.
   |
   = help: the trait `BikeshedIntrinsicFrom<u128, assert::Context, true, true, true, true>` is not implemented for `packed::repr_rust`
note: required by a bound in `is_maybe_transmutable`
  --> $DIR/should_require_well_defined_layout.rs:13:14
   |
LL |     pub fn is_maybe_transmutable<Src, Dst>()
   |            --------------------- required by a bound in this
LL |     where
LL |         Dst: BikeshedIntrinsicFrom<Src, Context, true, true, true, true>
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_maybe_transmutable`

error[E0277]: `nested::repr_c` cannot be safely transmuted into `()` in the defining scope of `assert::Context`.
  --> $DIR/should_require_well_defined_layout.rs:52:49
   |
LL |         assert::is_maybe_transmutable::<repr_c, ()>();
   |                                                 ^^ `nested::repr_c` cannot be safely transmuted into `()` in the defining scope of `assert::Context`.
   |
   = help: the trait `BikeshedIntrinsicFrom<nested::repr_c, assert::Context, true, true, true, true>` is not implemented for `()`
note: required by a bound in `is_maybe_transmutable`
  --> $DIR/should_require_well_defined_layout.rs:13:14
   |
LL |     pub fn is_maybe_transmutable<Src, Dst>()
   |            --------------------- required by a bound in this
LL |     where
LL |         Dst: BikeshedIntrinsicFrom<Src, Context, true, true, true, true>
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_maybe_transmutable`

error[E0277]: `u128` cannot be safely transmuted into `nested::repr_c` in the defining scope of `assert::Context`.
  --> $DIR/should_require_well_defined_layout.rs:53:47
   |
LL |         assert::is_maybe_transmutable::<u128, repr_c>();
   |                                               ^^^^^^ `u128` cannot be safely transmuted into `nested::repr_c` in the defining scope of `assert::Context`.
   |
   = help: the trait `BikeshedIntrinsicFrom<u128, assert::Context, true, true, true, true>` is not implemented for `nested::repr_c`
note: required by a bound in `is_maybe_transmutable`
  --> $DIR/should_require_well_defined_layout.rs:13:14
   |
LL |     pub fn is_maybe_transmutable<Src, Dst>()
   |            --------------------- required by a bound in this
LL |     where
LL |         Dst: BikeshedIntrinsicFrom<Src, Context, true, true, true, true>
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_maybe_transmutable`

error: aborting due to 12 previous errors

For more information about this error, try `rustc --explain E0277`.
