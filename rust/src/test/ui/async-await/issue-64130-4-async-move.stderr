error: future cannot be sent between threads safely
  --> $DIR/issue-64130-4-async-move.rs:15:17
   |
LL | pub fn foo() -> impl Future + Send {
   |                 ^^^^^^^^^^^^^^^^^^ future returned by `foo` is not `Send`
   |
   = help: the trait `std::marker::Sync` is not implemented for `(dyn std::any::Any + std::marker::Send + 'static)`
note: future is not `Send` as this value is used across an await
  --> $DIR/issue-64130-4-async-move.rs:21:26
   |
LL |         match client.status() {
   |               ------ has type `&Client`
LL |             200 => {
LL |                 let _x = get().await;
   |                          ^^^^^^^^^^^ await occurs here, with `client` maybe used later
...
LL |     }
   |     - `client` is later dropped here
   = note: the return type of a function must have a statically known size

error: aborting due to previous error

