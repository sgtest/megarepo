error[E0659]: `exported` is ambiguous (glob import vs macro-expanded name in the same module during import/macro resolution)
  --> $DIR/local-modularized-tricky-fail-1.rs:38:1
   |
LL | exported!(); //~ ERROR `exported` is ambiguous
   | ^^^^^^^^ ambiguous name
   |
note: `exported` could refer to the macro defined here
  --> $DIR/local-modularized-tricky-fail-1.rs:15:5
   |
LL | /     macro_rules! exported {
LL | |         () => ()
LL | |     }
   | |_____^
...
LL |       define_exported!();
   |       ------------------- in this macro invocation
note: `exported` could also refer to the macro imported here
  --> $DIR/local-modularized-tricky-fail-1.rs:32:5
   |
LL | use inner1::*;
   |     ^^^^^^^^^
   = help: consider adding an explicit import of `exported` to disambiguate

error[E0659]: `include` is ambiguous (macro-expanded name vs less macro-expanded name from outer scope during import/macro resolution)
  --> $DIR/local-modularized-tricky-fail-1.rs:56:1
   |
LL | include!(); //~ ERROR `include` is ambiguous
   | ^^^^^^^ ambiguous name
   |
   = note: `include` could refer to a built-in macro
note: `include` could also refer to the macro defined here
  --> $DIR/local-modularized-tricky-fail-1.rs:27:5
   |
LL | /     macro_rules! include {
LL | |         () => ()
LL | |     }
   | |_____^
...
LL |       define_include!();
   |       ------------------ in this macro invocation
   = help: use `self::include` to refer to this macro unambiguously

error[E0659]: `panic` is ambiguous (macro-expanded name vs less macro-expanded name from outer scope during import/macro resolution)
  --> $DIR/local-modularized-tricky-fail-1.rs:45:5
   |
LL |     panic!(); //~ ERROR `panic` is ambiguous
   |     ^^^^^ ambiguous name
   |
   = note: `panic` could refer to a macro from prelude
note: `panic` could also refer to the macro defined here
  --> $DIR/local-modularized-tricky-fail-1.rs:21:5
   |
LL | /     macro_rules! panic {
LL | |         () => ()
LL | |     }
   | |_____^
...
LL |       define_panic!();
   |       ---------------- in this macro invocation
   = help: use `self::panic` to refer to this macro unambiguously

error[E0659]: `panic` is ambiguous (macro-expanded name vs less macro-expanded name from outer scope during import/macro resolution)
  --> <::std::macros::panic macros>:1:13
   |
LL | (  ) => ( { panic ! ( "explicit panic" ) } ) ; ( $ msg : expr ) => (
   |             ^^^^^ ambiguous name
   |
   = note: `panic` could refer to a macro from prelude
note: `panic` could also refer to the macro defined here
  --> $DIR/local-modularized-tricky-fail-1.rs:21:5
   |
LL | /     macro_rules! panic {
LL | |         () => ()
LL | |     }
   | |_____^
...
LL |       define_panic!();
   |       ---------------- in this macro invocation
   = help: use `self::panic` to refer to this macro unambiguously

error: aborting due to 4 previous errors

For more information about this error, try `rustc --explain E0659`.
