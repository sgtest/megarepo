warning: the feature `generic_associated_types` is incomplete and may not be safe to use and/or cause compiler crashes
  --> $DIR/gat-in-trait-path.rs:1:12
   |
LL | #![feature(generic_associated_types)]
   |            ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(incomplete_features)]` on by default
   = note: see issue #44265 <https://github.com/rust-lang/rust/issues/44265> for more information

error[E0038]: the trait `Foo` cannot be made into an object
  --> $DIR/gat-in-trait-path.rs:22:13
   |
LL | fn f(_arg : Box<dyn for<'a> Foo<A<'a> = &'a ()>>) {}
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `Foo` cannot be made into an object
   |
   = help: consider moving `A` to another trait
note: for a trait to be "object safe" it needs to allow building a vtable to allow the call to be resolvable dynamically; for more information visit <https://doc.rust-lang.org/reference/items/traits.html#object-safety>
  --> $DIR/gat-in-trait-path.rs:6:10
   |
LL | trait Foo {
   |       --- this trait cannot be made into an object...
LL |     type A<'a> where Self: 'a;
   |          ^ ...because it contains the generic associated type `A`

error: aborting due to previous error; 1 warning emitted

For more information about this error, try `rustc --explain E0038`.
