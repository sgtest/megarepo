error[E0713]: borrow may still be in use when destructor runs
  --> $DIR/enum-drop-access.rs:15:31
   |
LL |         DropOption::Some(&mut ref mut r) => { //~ ERROR
   |                               ^^^^^^^^^
...
LL | }
   | - here, drop of `opt` needs exclusive access to `*opt.0`, because the type `DropOption<&mut i32>` implements the `Drop` trait
   |
note: borrowed value must be valid for the anonymous lifetime #1 defined on the function body at 13:1...
  --> $DIR/enum-drop-access.rs:13:1
   |
LL | / fn drop_enum(opt: DropOption<&mut i32>) -> Option<&mut i32> {
LL | |     match opt {
LL | |         DropOption::Some(&mut ref mut r) => { //~ ERROR
LL | |             Some(r)
...  |
LL | |     }
LL | | }
   | |_^

error[E0713]: borrow may still be in use when destructor runs
  --> $DIR/enum-drop-access.rs:24:36
   |
LL |         Some(DropOption::Some(&mut ref mut r)) => { //~ ERROR
   |                                    ^^^^^^^^^
...
LL | }
   | - here, drop of `opt` needs exclusive access to `*opt.0.0`, because the type `DropOption<&mut i32>` implements the `Drop` trait
   |
note: borrowed value must be valid for the anonymous lifetime #1 defined on the function body at 22:1...
  --> $DIR/enum-drop-access.rs:22:1
   |
LL | / fn optional_drop_enum(opt: Option<DropOption<&mut i32>>) -> Option<&mut i32> {
LL | |     match opt {
LL | |         Some(DropOption::Some(&mut ref mut r)) => { //~ ERROR
LL | |             Some(r)
...  |
LL | |     }
LL | | }
   | |_^

error: aborting due to 2 previous errors

For more information about this error, try `rustc --explain E0713`.
