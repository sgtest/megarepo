warning: not reporting region error due to -Znll
  --> $DIR/propagate-fail-to-approximate-longer-no-bounds.rs:47:9
   |
47 |         demand_y(x, y, x.get())
   |         ^^^^^^^^^^^^^^^^^^^^^^^

error: free region `ReFree(DefId(0/1:18 ~ propagate_fail_to_approximate_longer_no_bounds[317d]::supply[0]::{{closure}}[0]), BrAnon(4))` does not outlive free region `ReFree(DefId(0/1:18 ~ propagate_fail_to_approximate_longer_no_bounds[317d]::supply[0]::{{closure}}[0]), BrAnon(2))`
  --> $DIR/propagate-fail-to-approximate-longer-no-bounds.rs:47:18
   |
47 |         demand_y(x, y, x.get())
   |                  ^

note: No external requirements
  --> $DIR/propagate-fail-to-approximate-longer-no-bounds.rs:45:47
   |
45 |       establish_relationships(&cell_a, &cell_b, |_outlives, x, y| {
   |  _______________________________________________^
46 | |         // Only works if 'x: 'y:
47 | |         demand_y(x, y, x.get())
48 | |         //~^ WARN not reporting region error due to -Znll
49 | |         //~| ERROR does not outlive free region
50 | |     });
   | |_____^
   |
   = note: defining type: DefId(0/1:18 ~ propagate_fail_to_approximate_longer_no_bounds[317d]::supply[0]::{{closure}}[0]) with closure substs [
               i16,
               for<'r, 's, 't0, 't1, 't2> extern "rust-call" fn((&ReLateBound(DebruijnIndex { depth: 1 }, BrNamed(crate0:DefIndex(0:0), 'r)) std::cell::Cell<&ReLateBound(DebruijnIndex { depth: 1 }, BrNamed(crate0:DefIndex(0:0), 's)) &'_#1r u32>, &ReLateBound(DebruijnIndex { depth: 1 }, BrNamed(crate0:DefIndex(0:0), 't0)) std::cell::Cell<&ReLateBound(DebruijnIndex { depth: 1 }, BrNamed(crate0:DefIndex(0:0), 't1)) u32>, &ReLateBound(DebruijnIndex { depth: 1 }, BrNamed(crate0:DefIndex(0:0), 't2)) std::cell::Cell<&ReLateBound(DebruijnIndex { depth: 1 }, BrNamed(crate0:DefIndex(0:0), 's)) u32>))
           ]

note: No external requirements
  --> $DIR/propagate-fail-to-approximate-longer-no-bounds.rs:44:1
   |
44 | / fn supply<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {
45 | |     establish_relationships(&cell_a, &cell_b, |_outlives, x, y| {
46 | |         // Only works if 'x: 'y:
47 | |         demand_y(x, y, x.get())
...  |
50 | |     });
51 | | }
   | |_^
   |
   = note: defining type: DefId(0/0:6 ~ propagate_fail_to_approximate_longer_no_bounds[317d]::supply[0]) with substs []

error: aborting due to previous error

