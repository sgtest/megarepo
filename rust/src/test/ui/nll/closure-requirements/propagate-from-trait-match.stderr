warning: not reporting region error due to -Znll
  --> $DIR/propagate-from-trait-match.rs:55:9
   |
55 |         require(value);
   |         ^^^^^^^

note: External requirements
  --> $DIR/propagate-from-trait-match.rs:42:36
   |
42 |       establish_relationships(value, |value| {
   |  ____________________________________^
43 | |         //~^ ERROR the parameter type `T` may not live long enough
44 | |
45 | |         // This function call requires that
...  |
56 | |         //~^ WARNING not reporting region error due to -Znll
57 | |     });
   | |_____^
   |
   = note: defining type: DefId(0/1:16 ~ propagate_from_trait_match[317d]::supply[0]::{{closure}}[0]) with closure substs [
               '_#1r,
               T,
               i32,
               extern "rust-call" fn((T,))
           ]
   = note: number of external vids: 2
   = note: where T: '_#1r

error[E0309]: the parameter type `T` may not live long enough
  --> $DIR/propagate-from-trait-match.rs:42:36
   |
42 |       establish_relationships(value, |value| {
   |  ____________________________________^
43 | |         //~^ ERROR the parameter type `T` may not live long enough
44 | |
45 | |         // This function call requires that
...  |
56 | |         //~^ WARNING not reporting region error due to -Znll
57 | |     });
   | |_____^
   |
   = help: consider adding an explicit lifetime bound `T: ReEarlyBound(0, 'a)`...

note: No external requirements
  --> $DIR/propagate-from-trait-match.rs:38:1
   |
38 | / fn supply<'a, T>(value: T)
39 | | where
40 | |     T: Trait<'a>,
41 | | {
...  |
57 | |     });
58 | | }
   | |_^
   |
   = note: defining type: DefId(0/0:6 ~ propagate_from_trait_match[317d]::supply[0]) with substs [
               '_#1r,
               T
           ]

error: aborting due to previous error

If you want more information on this error, try using "rustc --explain E0309"
