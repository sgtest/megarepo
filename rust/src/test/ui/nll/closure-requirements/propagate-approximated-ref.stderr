warning: not reporting region error due to -Znll
  --> $DIR/propagate-approximated-ref.rs:61:9
   |
61 |         demand_y(x, y, x.get())
   |         ^^^^^^^^^^^^^^^^^^^^^^^

note: External requirements
  --> $DIR/propagate-approximated-ref.rs:59:47
   |
59 |       establish_relationships(&cell_a, &cell_b, |_outlives1, _outlives2, x, y| {
   |  _______________________________________________^
60 | |         // Only works if 'x: 'y:
61 | |         demand_y(x, y, x.get())
62 | |     });
   | |_____^
   |
   = note: defining type: DefId(0/1:18 ~ propagate_approximated_ref[317d]::supply[0]::{{closure}}[0]) with closure substs [
               i16,
               for<'r, 's, 't0, 't1, 't2, 't3> extern "rust-call" fn((&ReLateBound(DebruijnIndex { depth: 1 }, BrNamed(crate0:DefIndex(0:0), 'r)) std::cell::Cell<&'_#1r &ReLateBound(DebruijnIndex { depth: 1 }, BrNamed(crate0:DefIndex(0:0), 's)) u32>, &ReLateBound(DebruijnIndex { depth: 1 }, BrNamed(crate0:DefIndex(0:0), 't0)) std::cell::Cell<&ReLateBound(DebruijnIndex { depth: 1 }, BrNamed(crate0:DefIndex(0:0), 't1)) &'_#2r u32>, &ReLateBound(DebruijnIndex { depth: 1 }, BrNamed(crate0:DefIndex(0:0), 't2)) std::cell::Cell<&ReLateBound(DebruijnIndex { depth: 1 }, BrNamed(crate0:DefIndex(0:0), 's)) u32>, &ReLateBound(DebruijnIndex { depth: 1 }, BrNamed(crate0:DefIndex(0:0), 't3)) std::cell::Cell<&ReLateBound(DebruijnIndex { depth: 1 }, BrNamed(crate0:DefIndex(0:0), 't1)) u32>))
           ]
   = note: number of external vids: 3
   = note: where '_#1r: '_#2r

note: No external requirements
  --> $DIR/propagate-approximated-ref.rs:58:1
   |
58 | / fn supply<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {
59 | |     establish_relationships(&cell_a, &cell_b, |_outlives1, _outlives2, x, y| {
60 | |         // Only works if 'x: 'y:
61 | |         demand_y(x, y, x.get())
62 | |     });
63 | | }
   | |_^
   |
   = note: defining type: DefId(0/0:6 ~ propagate_approximated_ref[317d]::supply[0]) with substs []

