error[E0495]: cannot infer an appropriate lifetime for lifetime parameter `'a` due to conflicting requirements
  --> $DIR/type-alias-free-regions.rs:21:9
   |
LL |         C { f: b }
   |         ^
   |
note: first, the lifetime cannot outlive the anonymous lifetime defined here...
  --> $DIR/type-alias-free-regions.rs:20:24
   |
LL |     fn from_box(b: Box<B>) -> Self {
   |                        ^
note: ...so that the expression is assignable
  --> $DIR/type-alias-free-regions.rs:21:16
   |
LL |         C { f: b }
   |                ^
   = note: expected `Box<Box<&isize>>`
              found `Box<Box<&isize>>`
note: but, the lifetime must be valid for the lifetime `'a` as defined here...
  --> $DIR/type-alias-free-regions.rs:19:6
   |
LL | impl<'a> FromBox<'a> for C<'a> {
   |      ^^
note: ...so that the types are compatible
  --> $DIR/type-alias-free-regions.rs:21:9
   |
LL |         C { f: b }
   |         ^^^^^^^^^^
   = note: expected `C<'a>`
              found `C<'_>`

error[E0495]: cannot infer an appropriate lifetime due to conflicting requirements
  --> $DIR/type-alias-free-regions.rs:31:16
   |
LL |         C { f: Box::new(b.0) }
   |                ^^^^^^^^^^^^^
   |
note: first, the lifetime cannot outlive the anonymous lifetime defined here...
  --> $DIR/type-alias-free-regions.rs:30:23
   |
LL |     fn from_tuple(b: (B,)) -> Self {
   |                       ^
note: ...so that the expression is assignable
  --> $DIR/type-alias-free-regions.rs:31:25
   |
LL |         C { f: Box::new(b.0) }
   |                         ^^^
   = note: expected `Box<&isize>`
              found `Box<&isize>`
note: but, the lifetime must be valid for the lifetime `'a` as defined here...
  --> $DIR/type-alias-free-regions.rs:29:6
   |
LL | impl<'a> FromTuple<'a> for C<'a> {
   |      ^^
note: ...so that the types are compatible
  --> $DIR/type-alias-free-regions.rs:31:9
   |
LL |         C { f: Box::new(b.0) }
   |         ^^^^^^^^^^^^^^^^^^^^^^
   = note: expected `C<'a>`
              found `C<'_>`

error: aborting due to 2 previous errors

For more information about this error, try `rustc --explain E0495`.
