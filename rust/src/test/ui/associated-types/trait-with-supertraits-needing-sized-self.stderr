error[E0277]: the size for values of type `Self` cannot be known at compilation time
  --> $DIR/trait-with-supertraits-needing-sized-self.rs:3:22
   |
LL | trait ArithmeticOps: Add<Output=Self> + Sub<Output=Self> + Mul<Output=Self> + Div<Output=Self> {}
   |                      ^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
   | 
  ::: $SRC_DIR/libcore/ops/arith.rs:LL:COL
   |
LL | pub trait Add<Rhs = Self> {
   |               --- required by this bound in `std::ops::Add`
   |
   = help: the trait `std::marker::Sized` is not implemented for `Self`
   = note: to learn more, visit <https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait>
help: consider further restricting `Self`
   |
LL | trait ArithmeticOps: Add<Output=Self> + Sub<Output=Self> + Mul<Output=Self> + Div<Output=Self> + std::marker::Sized {}
   |                                                                                                ^^^^^^^^^^^^^^^^^^^^

error: aborting due to previous error

For more information about this error, try `rustc --explain E0277`.
