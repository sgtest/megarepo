error: unused variable: `a`
  --> $DIR/naked-functions-unused.rs:13:37
   |
LL |     pub extern "sysv64" fn function(a: usize, b: usize) -> usize {
   |                                     ^ help: if this is intentional, prefix it with an underscore: `_a`
   |
note: the lint level is defined here
  --> $DIR/naked-functions-unused.rs:2:9
   |
LL | #![deny(unused)]
   |         ^^^^^^
   = note: `#[deny(unused_variables)]` implied by `#[deny(unused)]`

error: unused variable: `b`
  --> $DIR/naked-functions-unused.rs:13:47
   |
LL |     pub extern "sysv64" fn function(a: usize, b: usize) -> usize {
   |                                               ^ help: if this is intentional, prefix it with an underscore: `_b`

error: unused variable: `a`
  --> $DIR/naked-functions-unused.rs:22:43
   |
LL |         pub extern "sysv64" fn associated(a: usize, b: usize) -> usize {
   |                                           ^ help: if this is intentional, prefix it with an underscore: `_a`

error: unused variable: `b`
  --> $DIR/naked-functions-unused.rs:22:53
   |
LL |         pub extern "sysv64" fn associated(a: usize, b: usize) -> usize {
   |                                                     ^ help: if this is intentional, prefix it with an underscore: `_b`

error: unused variable: `a`
  --> $DIR/naked-functions-unused.rs:28:46
   |
LL |         pub extern "sysv64" fn method(&self, a: usize, b: usize) -> usize {
   |                                              ^ help: if this is intentional, prefix it with an underscore: `_a`

error: unused variable: `b`
  --> $DIR/naked-functions-unused.rs:28:56
   |
LL |         pub extern "sysv64" fn method(&self, a: usize, b: usize) -> usize {
   |                                                        ^ help: if this is intentional, prefix it with an underscore: `_b`

error: unused variable: `a`
  --> $DIR/naked-functions-unused.rs:36:45
   |
LL |         extern "sysv64" fn trait_associated(a: usize, b: usize) -> usize {
   |                                             ^ help: if this is intentional, prefix it with an underscore: `_a`

error: unused variable: `b`
  --> $DIR/naked-functions-unused.rs:36:55
   |
LL |         extern "sysv64" fn trait_associated(a: usize, b: usize) -> usize {
   |                                                       ^ help: if this is intentional, prefix it with an underscore: `_b`

error: unused variable: `a`
  --> $DIR/naked-functions-unused.rs:42:48
   |
LL |         extern "sysv64" fn trait_method(&self, a: usize, b: usize) -> usize {
   |                                                ^ help: if this is intentional, prefix it with an underscore: `_a`

error: unused variable: `b`
  --> $DIR/naked-functions-unused.rs:42:58
   |
LL |         extern "sysv64" fn trait_method(&self, a: usize, b: usize) -> usize {
   |                                                          ^ help: if this is intentional, prefix it with an underscore: `_b`

error: aborting due to 10 previous errors

