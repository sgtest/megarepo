// Copyright 2018 The Rust Project Developers. See the COPYRIGHT
// file at the top-level directory of this distribution and at
// http://rust-lang.org/COPYRIGHT.
//
// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or
// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license
// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your
// option. This file may not be copied, modified, or distributed
// except according to those terms.

// Modules generated by transparent proc macros still acts as barriers for names (issue #50504).

// aux-build:generate-mod.rs

extern crate generate_mod;

struct FromOutside;

generate_mod::check!(); //~ ERROR cannot find type `FromOutside` in this scope
                        //~| ERROR cannot find type `Outer` in this scope

#[generate_mod::check_attr] //~ ERROR cannot find type `FromOutside` in this scope
                            //~| ERROR cannot find type `OuterAttr` in this scope
struct S;

#[derive(generate_mod::CheckDerive)] //~ WARN cannot find type `FromOutside` in this scope
                                     //~| WARN cannot find type `OuterDerive` in this scope
                                     //~| WARN this was previously accepted
                                     //~| WARN this was previously accepted
struct Z;

fn inner_block() {
    #[derive(generate_mod::CheckDerive)] //~ WARN cannot find type `FromOutside` in this scope
                                        //~| WARN cannot find type `OuterDerive` in this scope
                                        //~| WARN this was previously accepted
                                        //~| WARN this was previously accepted
    struct InnerZ;
}

#[derive(generate_mod::CheckDeriveLint)] // OK, lint is suppressed
struct W;

fn main() {}
