error: the meaning of the `pat` fragment specifier is changing in Rust 2021, which may affect this macro
  --> $DIR/macro-or-patterns-back-compat.rs:10:21
   |
LL | macro_rules! foo { ($x:pat | $y:pat) => {} }
   |                     ^^^^^^ help: use pat_param to preserve semantics: `$x:pat_param`
   |
note: the lint level is defined here
  --> $DIR/macro-or-patterns-back-compat.rs:4:9
   |
LL | #![deny(or_patterns_back_compat)]
   |         ^^^^^^^^^^^^^^^^^^^^^^^
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2021 edition!
   = note: for more information, see issue #84869 <https://github.com/rust-lang/rust/issues/84869>

error: the meaning of the `pat` fragment specifier is changing in Rust 2021, which may affect this macro
  --> $DIR/macro-or-patterns-back-compat.rs:13:23
   |
LL | macro_rules! bar { ($($x:pat)+ | $($y:pat)+) => {} }
   |                       ^^^^^^ help: use pat_param to preserve semantics: `$x:pat_param`
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2021 edition!
   = note: for more information, see issue #84869 <https://github.com/rust-lang/rust/issues/84869>

error: the meaning of the `pat` fragment specifier is changing in Rust 2021, which may affect this macro
  --> $DIR/macro-or-patterns-back-compat.rs:19:21
   |
LL | macro_rules! ogg { ($x:pat | $y:pat_param) => {} }
   |                     ^^^^^^ help: use pat_param to preserve semantics: `$x:pat_param`
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2021 edition!
   = note: for more information, see issue #84869 <https://github.com/rust-lang/rust/issues/84869>

error: the meaning of the `pat` fragment specifier is changing in Rust 2021, which may affect this macro
  --> $DIR/macro-or-patterns-back-compat.rs:23:26
   |
LL |     ( $expr:expr , $( $( $pat:pat )|+ => $expr_arm:expr ),+ ) => {
   |                          ^^^^^^^^ help: use pat_param to preserve semantics: `$pat:pat_param`
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2021 edition!
   = note: for more information, see issue #84869 <https://github.com/rust-lang/rust/issues/84869>

error: aborting due to 4 previous errors

