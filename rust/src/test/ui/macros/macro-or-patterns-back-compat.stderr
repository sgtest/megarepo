error: the meaning of the `pat` fragment specifier is changing in Rust 2021, which may affect this macro
  --> $DIR/macro-or-patterns-back-compat.rs:5:21
   |
LL | macro_rules! foo { ($x:pat | $y:pat) => {} }
   |                     ^^^^^^ help: use pat_param to preserve semantics: `$x:pat_param`
   |
note: the lint level is defined here
  --> $DIR/macro-or-patterns-back-compat.rs:3:9
   |
LL | #![deny(or_patterns_back_compat)]
   |         ^^^^^^^^^^^^^^^^^^^^^^^

error: the meaning of the `pat` fragment specifier is changing in Rust 2021, which may affect this macro
  --> $DIR/macro-or-patterns-back-compat.rs:6:23
   |
LL | macro_rules! bar { ($($x:pat)+ | $($y:pat)+) => {} }
   |                       ^^^^^^ help: use pat_param to preserve semantics: `$x:pat_param`

error: the meaning of the `pat` fragment specifier is changing in Rust 2021, which may affect this macro
  --> $DIR/macro-or-patterns-back-compat.rs:9:21
   |
LL | macro_rules! ogg { ($x:pat | $y:pat_param) => {} }
   |                     ^^^^^^ help: use pat_param to preserve semantics: `$x:pat_param`

error: the meaning of the `pat` fragment specifier is changing in Rust 2021, which may affect this macro
  --> $DIR/macro-or-patterns-back-compat.rs:11:26
   |
LL |     ( $expr:expr , $( $( $pat:pat )|+ => $expr_arm:expr ),+ ) => {
   |                          ^^^^^^^^ help: use pat_param to preserve semantics: `$pat:pat_param`

error: aborting due to 4 previous errors

