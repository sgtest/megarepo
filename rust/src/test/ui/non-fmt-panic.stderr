warning: panic message contains a brace
  --> $DIR/non-fmt-panic.rs:13:29
   |
LL |     panic!("here's a brace: {");
   |                             ^
   |
   = note: `#[warn(non_fmt_panics)]` on by default
   = note: this message is not used as a format string, but will be in Rust 2021
help: add a "{}" format string to use the message literally
   |
LL |     panic!("{}", "here's a brace: {");
   |            +++++

warning: panic message contains a brace
  --> $DIR/non-fmt-panic.rs:14:31
   |
LL |     std::panic!("another one: }");
   |                               ^
   |
   = note: this message is not used as a format string, but will be in Rust 2021
help: add a "{}" format string to use the message literally
   |
LL |     std::panic!("{}", "another one: }");
   |                 +++++

warning: panic message contains an unused formatting placeholder
  --> $DIR/non-fmt-panic.rs:15:25
   |
LL |     core::panic!("Hello {}");
   |                         ^^
   |
   = note: this message is not used as a format string when given without arguments, but will be in Rust 2021
help: add the missing argument
   |
LL |     core::panic!("Hello {}", ...);
   |                            +++++
help: or add a "{}" format string to use the message literally
   |
LL |     core::panic!("{}", "Hello {}");
   |                  +++++

warning: panic message contains unused formatting placeholders
  --> $DIR/non-fmt-panic.rs:16:21
   |
LL |     assert!(false, "{:03x} {test} bla");
   |                     ^^^^^^ ^^^^^^
   |
   = note: this message is not used as a format string when given without arguments, but will be in Rust 2021
help: add the missing arguments
   |
LL |     assert!(false, "{:03x} {test} bla", ...);
   |                                       +++++
help: or add a "{}" format string to use the message literally
   |
LL |     assert!(false, "{}", "{:03x} {test} bla");
   |                    +++++

warning: panic message is not a string literal
  --> $DIR/non-fmt-panic.rs:18:20
   |
LL |     assert!(false, S);
   |                    ^
   |
   = note: this usage of assert!() is deprecated; it will be a hard error in Rust 2021
   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>
help: add a "{}" format string to Display the message
   |
LL |     assert!(false, "{}", S);
   |                    +++++

warning: panic message is not a string literal
  --> $DIR/non-fmt-panic.rs:20:20
   |
LL |     assert!(false, 123);
   |                    ^^^
   |
   = note: this usage of assert!() is deprecated; it will be a hard error in Rust 2021
   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>
help: add a "{}" format string to Display the message
   |
LL |     assert!(false, "{}", 123);
   |                    +++++

warning: panic message is not a string literal
  --> $DIR/non-fmt-panic.rs:22:20
   |
LL |     assert!(false, Some(123));
   |                    ^^^^^^^^^
   |
   = note: this usage of assert!() is deprecated; it will be a hard error in Rust 2021
   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>
help: add a "{:?}" format string to use the Debug implementation of `Option<i32>`
   |
LL |     assert!(false, "{:?}", Some(123));
   |                    +++++++

warning: panic message contains braces
  --> $DIR/non-fmt-panic.rs:24:27
   |
LL |     debug_assert!(false, "{{}} bla");
   |                           ^^^^
   |
   = note: this message is not used as a format string, but will be in Rust 2021
help: add a "{}" format string to use the message literally
   |
LL |     debug_assert!(false, "{}", "{{}} bla");
   |                          +++++

warning: panic message is not a string literal
  --> $DIR/non-fmt-panic.rs:25:12
   |
LL |     panic!(C);
   |            ^
   |
   = note: this usage of panic!() is deprecated; it will be a hard error in Rust 2021
   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>
help: add a "{}" format string to Display the message
   |
LL |     panic!("{}", C);
   |            +++++

warning: panic message is not a string literal
  --> $DIR/non-fmt-panic.rs:26:12
   |
LL |     panic!(S);
   |            ^
   |
   = note: this usage of panic!() is deprecated; it will be a hard error in Rust 2021
   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>
help: add a "{}" format string to Display the message
   |
LL |     panic!("{}", S);
   |            +++++

warning: panic message is not a string literal
  --> $DIR/non-fmt-panic.rs:27:17
   |
LL |     std::panic!(123);
   |                 ^^^
   |
   = note: this usage of std::panic!() is deprecated; it will be a hard error in Rust 2021
   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>
help: add a "{}" format string to Display the message
   |
LL |     std::panic!("{}", 123);
   |                 +++++
help: or use std::panic::panic_any instead
   |
LL |     std::panic::panic_any(123);
   |     ~~~~~~~~~~~~~~~~~~~~~

warning: panic message is not a string literal
  --> $DIR/non-fmt-panic.rs:28:18
   |
LL |     core::panic!(&*"abc");
   |                  ^^^^^^^
   |
   = note: this usage of core::panic!() is deprecated; it will be a hard error in Rust 2021
   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>
help: add a "{}" format string to Display the message
   |
LL |     core::panic!("{}", &*"abc");
   |                  +++++

warning: panic message is not a string literal
  --> $DIR/non-fmt-panic.rs:29:12
   |
LL |     panic!(Some(123));
   |            ^^^^^^^^^
   |
   = note: this usage of panic!() is deprecated; it will be a hard error in Rust 2021
   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>
help: add a "{:?}" format string to use the Debug implementation of `Option<i32>`
   |
LL |     panic!("{:?}", Some(123));
   |            +++++++
help: or use std::panic::panic_any instead
   |
LL |     std::panic::panic_any(Some(123));
   |     ~~~~~~~~~~~~~~~~~~~~~

warning: panic message contains an unused formatting placeholder
  --> $DIR/non-fmt-panic.rs:30:12
   |
LL |     panic!(concat!("{", "}"));
   |            ^^^^^^^^^^^^^^^^^
   |
   = note: this message is not used as a format string when given without arguments, but will be in Rust 2021
help: add the missing argument
   |
LL |     panic!(concat!("{", "}"), ...);
   |                             +++++
help: or add a "{}" format string to use the message literally
   |
LL |     panic!("{}", concat!("{", "}"));
   |            +++++

warning: panic message contains braces
  --> $DIR/non-fmt-panic.rs:31:5
   |
LL |     panic!(concat!("{", "{"));
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this message is not used as a format string, but will be in Rust 2021
help: add a "{}" format string to use the message literally
   |
LL |     panic!("{}", concat!("{", "{"));
   |            +++++

warning: panic message contains an unused formatting placeholder
  --> $DIR/non-fmt-panic.rs:33:37
   |
LL |     fancy_panic::fancy_panic!("test {} 123");
   |                                     ^^
   |
   = note: this message is not used as a format string when given without arguments, but will be in Rust 2021

warning: panic message is not a string literal
  --> $DIR/non-fmt-panic.rs:43:12
   |
LL |     panic!(a!());
   |            ^^^^
   |
   = note: this usage of panic!() is deprecated; it will be a hard error in Rust 2021
   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>
help: add a "{}" format string to Display the message
   |
LL |     panic!("{}", a!());
   |            +++++
help: or use std::panic::panic_any instead
   |
LL |     std::panic::panic_any(a!());
   |     ~~~~~~~~~~~~~~~~~~~~~

warning: panic message is not a string literal
  --> $DIR/non-fmt-panic.rs:45:12
   |
LL |     panic!(format!("{}", 1));
   |            ^^^^^^^^^^^^^^^^
   |
   = note: this usage of panic!() is deprecated; it will be a hard error in Rust 2021
   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>
   = note: the panic!() macro supports formatting, so there's no need for the format!() macro here
help: remove the `format!(..)` macro call
   |
LL -     panic!(format!("{}", 1));
LL +     panic!("{}", 1);
   | 

warning: panic message is not a string literal
  --> $DIR/non-fmt-panic.rs:46:20
   |
LL |     assert!(false, format!("{}", 1));
   |                    ^^^^^^^^^^^^^^^^
   |
   = note: this usage of assert!() is deprecated; it will be a hard error in Rust 2021
   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>
   = note: the assert!() macro supports formatting, so there's no need for the format!() macro here
help: remove the `format!(..)` macro call
   |
LL -     assert!(false, format!("{}", 1));
LL +     assert!(false, "{}", 1);
   | 

warning: panic message is not a string literal
  --> $DIR/non-fmt-panic.rs:47:26
   |
LL |     debug_assert!(false, format!("{}", 1));
   |                          ^^^^^^^^^^^^^^^^
   |
   = note: this usage of debug_assert!() is deprecated; it will be a hard error in Rust 2021
   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>
   = note: the debug_assert!() macro supports formatting, so there's no need for the format!() macro here
help: remove the `format!(..)` macro call
   |
LL -     debug_assert!(false, format!("{}", 1));
LL +     debug_assert!(false, "{}", 1);
   | 

warning: panic message is not a string literal
  --> $DIR/non-fmt-panic.rs:49:12
   |
LL |     panic![123];
   |            ^^^
   |
   = note: this usage of panic!() is deprecated; it will be a hard error in Rust 2021
   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>
help: add a "{}" format string to Display the message
   |
LL |     panic!["{}", 123];
   |            +++++
help: or use std::panic::panic_any instead
   |
LL |     std::panic::panic_any(123);
   |     ~~~~~~~~~~~~~~~~~~~~~~   ~

warning: panic message is not a string literal
  --> $DIR/non-fmt-panic.rs:50:12
   |
LL |     panic!{123};
   |            ^^^
   |
   = note: this usage of panic!() is deprecated; it will be a hard error in Rust 2021
   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>
help: add a "{}" format string to Display the message
   |
LL |     panic!{"{}", 123};
   |            +++++
help: or use std::panic::panic_any instead
   |
LL |     std::panic::panic_any(123);
   |     ~~~~~~~~~~~~~~~~~~~~~~   ~

warning: panic message is not a string literal
  --> $DIR/non-fmt-panic.rs:67:12
   |
LL |     panic!(v);
   |     ------ ^
   |     |
   |     help: use std::panic::panic_any instead: `std::panic::panic_any`
   |
   = note: this usage of panic!() is deprecated; it will be a hard error in Rust 2021
   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>

warning: panic message is not a string literal
  --> $DIR/non-fmt-panic.rs:68:20
   |
LL |     assert!(false, v);
   |                    ^
   |
   = note: this usage of assert!() is deprecated; it will be a hard error in Rust 2021
   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>

warning: panic message is not a string literal
  --> $DIR/non-fmt-panic.rs:72:12
   |
LL |     panic!(v);
   |            ^
   |
   = note: this usage of panic!() is deprecated; it will be a hard error in Rust 2021
   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>
help: add a "{:?}" format string to use the Debug implementation of `T`
   |
LL |     panic!("{:?}", v);
   |            +++++++
help: or use std::panic::panic_any instead
   |
LL |     std::panic::panic_any(v);
   |     ~~~~~~~~~~~~~~~~~~~~~

warning: panic message is not a string literal
  --> $DIR/non-fmt-panic.rs:73:20
   |
LL |     assert!(false, v);
   |                    ^
   |
   = note: this usage of assert!() is deprecated; it will be a hard error in Rust 2021
   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>
help: add a "{:?}" format string to use the Debug implementation of `T`
   |
LL |     assert!(false, "{:?}", v);
   |                    +++++++

warning: panic message is not a string literal
  --> $DIR/non-fmt-panic.rs:77:12
   |
LL |     panic!(v);
   |            ^
   |
   = note: this usage of panic!() is deprecated; it will be a hard error in Rust 2021
   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>
help: add a "{}" format string to Display the message
   |
LL |     panic!("{}", v);
   |            +++++
help: or use std::panic::panic_any instead
   |
LL |     std::panic::panic_any(v);
   |     ~~~~~~~~~~~~~~~~~~~~~

warning: panic message is not a string literal
  --> $DIR/non-fmt-panic.rs:78:20
   |
LL |     assert!(false, v);
   |                    ^
   |
   = note: this usage of assert!() is deprecated; it will be a hard error in Rust 2021
   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>
help: add a "{}" format string to Display the message
   |
LL |     assert!(false, "{}", v);
   |                    +++++

warning: panic message is not a string literal
  --> $DIR/non-fmt-panic.rs:82:12
   |
LL |     panic!(v);
   |            ^
   |
   = note: this usage of panic!() is deprecated; it will be a hard error in Rust 2021
   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>
help: add a "{}" format string to Display the message
   |
LL |     panic!("{}", v);
   |            +++++
help: or use std::panic::panic_any instead
   |
LL |     std::panic::panic_any(v);
   |     ~~~~~~~~~~~~~~~~~~~~~

warning: panic message is not a string literal
  --> $DIR/non-fmt-panic.rs:83:20
   |
LL |     assert!(false, v);
   |                    ^
   |
   = note: this usage of assert!() is deprecated; it will be a hard error in Rust 2021
   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>
help: add a "{}" format string to Display the message
   |
LL |     assert!(false, "{}", v);
   |                    +++++

warning: 30 warnings emitted

