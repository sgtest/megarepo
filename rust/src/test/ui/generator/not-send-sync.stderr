error[E0277]: `std::cell::Cell<i32>` cannot be shared between threads safely
  --> $DIR/not-send-sync.rs:16:5
   |
LL |     fn assert_send<T: Send>(_: T) {}
   |                       ---- required by this bound in `main::assert_send`
...
LL |     assert_send(|| {
   |     ^^^^^^^^^^^ `std::cell::Cell<i32>` cannot be shared between threads safely
   |
   = help: the trait `std::marker::Sync` is not implemented for `std::cell::Cell<i32>`
   = note: required because of the requirements on the impl of `std::marker::Send` for `&std::cell::Cell<i32>`
   = note: required because it appears within the type `[generator@$DIR/not-send-sync.rs:16:17: 20:6 a:&std::cell::Cell<i32> _]`

error: generator cannot be shared between threads safely
  --> $DIR/not-send-sync.rs:9:5
   |
LL |     fn assert_sync<T: Sync>(_: T) {}
   |                       ---- required by this bound in `main::assert_sync`
...
LL |     assert_sync(|| {
   |     ^^^^^^^^^^^ generator is not `Sync`
   |
   = help: within `[generator@$DIR/not-send-sync.rs:9:17: 13:6 {std::cell::Cell<i32>, ()}]`, the trait `std::marker::Sync` is not implemented for `std::cell::Cell<i32>`
note: generator is not `Sync` as this value is used across a yield
  --> $DIR/not-send-sync.rs:12:9
   |
LL |         let a = Cell::new(2);
   |             - has type `std::cell::Cell<i32>` which is not `Sync`
LL |         yield;
   |         ^^^^^ yield occurs here, with `a` maybe used later
LL |     });
   |     - `a` is later dropped here

error: aborting due to 2 previous errors

For more information about this error, try `rustc --explain E0277`.
