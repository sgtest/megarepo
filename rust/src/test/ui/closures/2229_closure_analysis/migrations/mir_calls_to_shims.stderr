error: `UnwindSafe`, `RefUnwindSafe` trait implementation will change in Rust 2021
  --> $DIR/mir_calls_to_shims.rs:15:38
   |
LL |       let result = panic::catch_unwind(move || {
   |  ______________________________________^
LL | |
LL | |
LL | |         f.0()
LL | |     });
   | |_____^
   |
note: the lint level is defined here
  --> $DIR/mir_calls_to_shims.rs:3:9
   |
LL | #![deny(disjoint_capture_migration)]
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^
   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/disjoint-capture-in-closures.html>
help: add a dummy let to cause `f` to be fully captured
   |
LL |     let result = panic::catch_unwind(move || { let _ = &f; 
LL |
LL |
LL |         f.0()
LL |     });
   |

error: aborting due to previous error

