error: changes to closure capture in Rust 2021 will affect drop order
  --> $DIR/precise.rs:20:13
   |
LL |     let c = || {
   |             ^^
...
LL |         let _t = t.0;
   |                  --- in Rust 2018, closure captures all of `t`, but in Rust 2021, it only captures `t.0`
...
LL | }
   | - in Rust 2018, `t` would be dropped here, but in Rust 2021, only `t.0` would be dropped here alongside the closure
   |
note: the lint level is defined here
  --> $DIR/precise.rs:3:9
   |
LL | #![deny(rust_2021_incompatible_closure_captures)]
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/disjoint-capture-in-closures.html>
help: add a dummy let to cause `t` to be fully captured
   |
LL |     let c = || { let _ = &t; 
LL |
LL |
LL |
LL |         let _t = t.0;
LL |
 ...

error: changes to closure capture in Rust 2021 will affect drop order
  --> $DIR/precise.rs:45:13
   |
LL |     let c = || {
   |             ^^
...
LL |         let _x = u.0.0;
   |                  ----- in Rust 2018, closure captures all of `u`, but in Rust 2021, it only captures `u.0.0`
LL |
LL |         let _x = u.0.1;
   |                  ----- in Rust 2018, closure captures all of `u`, but in Rust 2021, it only captures `u.0.1`
LL |
LL |         let _x = u.1.0;
   |                  ----- in Rust 2018, closure captures all of `u`, but in Rust 2021, it only captures `u.1.0`
...
LL | }
   | -
   | |
   | in Rust 2018, `u` would be dropped here, but in Rust 2021, only `u.0.0` would be dropped here alongside the closure
   | in Rust 2018, `u` would be dropped here, but in Rust 2021, only `u.0.1` would be dropped here alongside the closure
   | in Rust 2018, `u` would be dropped here, but in Rust 2021, only `u.1.0` would be dropped here alongside the closure
   |
   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/disjoint-capture-in-closures.html>
help: add a dummy let to cause `u` to be fully captured
   |
LL |     let c = || { let _ = &u; 
LL |
LL |
LL |
LL |         let _x = u.0.0;
LL |
 ...

error: aborting due to 2 previous errors

