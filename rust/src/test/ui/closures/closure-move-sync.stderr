error[E0277]: `std::sync::mpsc::Receiver<()>` cannot be shared between threads safely
  --> $DIR/closure-move-sync.rs:6:13
   |
LL |     let t = thread::spawn(|| {
   |             ^^^^^^^^^^^^^ `std::sync::mpsc::Receiver<()>` cannot be shared between threads safely
   |
   = help: the trait `Sync` is not implemented for `std::sync::mpsc::Receiver<()>`
   = note: required because of the requirements on the impl of `Send` for `&std::sync::mpsc::Receiver<()>`
   = note: required because it appears within the type `[closure@$DIR/closure-move-sync.rs:6:27: 9:6]`
note: required by a bound in `spawn`
  --> $SRC_DIR/std/src/thread/mod.rs:LL:COL
   |
LL |     F: Send + 'static,
   |        ^^^^ required by this bound in `spawn`

error[E0277]: `Sender<()>` cannot be shared between threads safely
  --> $DIR/closure-move-sync.rs:18:5
   |
LL |     thread::spawn(|| tx.send(()).unwrap());
   |     ^^^^^^^^^^^^^ `Sender<()>` cannot be shared between threads safely
   |
   = help: the trait `Sync` is not implemented for `Sender<()>`
   = note: required because of the requirements on the impl of `Send` for `&Sender<()>`
   = note: required because it appears within the type `[closure@$DIR/closure-move-sync.rs:18:19: 18:42]`
note: required by a bound in `spawn`
  --> $SRC_DIR/std/src/thread/mod.rs:LL:COL
   |
LL |     F: Send + 'static,
   |        ^^^^ required by this bound in `spawn`

error: aborting due to 2 previous errors

For more information about this error, try `rustc --explain E0277`.
