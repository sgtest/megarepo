/*!

The Rust standard library.

The Rust standand library provides a number of useful features that are
not required in or otherwise suitable for the core library.

*/

#[link(name = "std",
       vers = "0.4",
       uuid = "122bed0b-c19b-4b82-b0b7-7ae8aead7297",
       url = "https://github.com/mozilla/rust/tree/master/src/libstd")];

#[comment = "The Rust standard library"];
#[license = "MIT"];
#[crate_type = "lib"];

#[no_core];

#[legacy_exports];

#[allow(vecs_implicitly_copyable)];
#[deny(non_camel_case_types)];
#[forbid(deprecated_pattern)];

extern mod core(vers = "0.4");
use core::*;

export net, net_tcp, net_ip, net_url;
export uv, uv_ll, uv_iotask, uv_global_loop;
export c_vec, timer;
export sync, arc, comm;
export bitv, deque, fun_treemap, list, map;
export smallintmap, sort, treemap;
export rope, arena, par;
export ebml, ebml2;
export dbg, getopts, json, rand, sha1, term, time;
export prettyprint, prettyprint2;
export test, tempfile, serialization, serialization2;
export cmp;
export base64;
export cell;

// General io and system-services modules

#[legacy_exports]
mod net;
#[legacy_exports]
mod net_ip;
#[legacy_exports]
mod net_tcp;
#[legacy_exports]
mod net_url;

// libuv modules
mod uv;
mod uv_ll;
mod uv_iotask;
mod uv_global_loop;


// Utility modules

mod c_vec;
mod timer;
mod cell;

// Concurrency

mod sync;
mod arc;
mod comm;

// Collections

mod bitv;
mod deque;
mod fun_treemap;
mod list;
mod map;
mod rope;
mod smallintmap;
mod sort;
mod treemap;

// And ... other stuff

mod ebml;
mod ebml2;
mod dbg;
mod getopts;
mod json;
mod sha1;
mod md4;
mod tempfile;
mod term;
mod time;
mod prettyprint;
mod prettyprint2;
mod arena;
mod par;
mod cmp;
mod base64;

#[cfg(unicode)]
mod unicode;


// Compiler support modules

mod test;
#[legacy_exports]
mod serialization;
mod serialization2;

// Local Variables:
// mode: rust;
// fill-column: 78;
// indent-tabs-mode: nil
// c-basic-offset: 4
// buffer-file-coding-system: utf-8-unix
// End:
