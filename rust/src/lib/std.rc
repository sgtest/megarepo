meta (name = "std",
      desc = "Rust standard library",
      uuid = "122bed0b-c19b-4b82-b0b7-7ae8aead7297",
      url = "http://rust-lang.org/src/std",
      ver = "0.0.1");

// Built-in types support modules.

mod Int;
mod UInt;
mod U8;
mod Vec;
mod Str;

// General IO and system-services modules.

mod IO;
mod Sys;
mod Task;

// Utility modules.

mod Option;
mod Util;

// Authorize various rule-bendings.

auth IO = unsafe;
auth FS = unsafe;
auth OS_FS = unsafe;
auth Run = unsafe;
auth Str = unsafe;
auth Vec = unsafe;
auth Task = unsafe;

auth Dbg = unsafe;

auth UInt.next_power_of_two = unsafe;
auth Map.mk_hashmap = unsafe;
auth Rand.mk_rng = unsafe;

// Target-OS module.

// TODO: Have each OS module re-export everything from GenericOS.
mod GenericOS;

alt (target_os) {
    case ("win32") {
        mod OS = "win32_OS.rs";
        mod OS_FS = "win32_FS.rs";
    } case ("macos") {
        mod OS = "macos_OS.rs";
        mod OS_FS = "posix_FS.rs";
    } else {
        mod OS = "linux_OS.rs";
        mod OS_FS = "posix_FS.rs";
    }
}

mod Run = "Run_Program.rs";
mod FS;

// FIXME: parametric
mod Map;
mod Deque;
mod List;
mod Rand;
mod Dbg;
mod BitV;
mod Sort;
mod SHA1;
mod EBML;
mod UFind;
mod ExtFmt;
mod Box;
mod GetOpts;
mod Term;
mod Time;

// Local Variables:
// mode: rust;
// fill-column: 78;
// indent-tabs-mode: nil
// c-basic-offset: 4
// buffer-file-coding-system: utf-8-unix
// compile-command: "make -k -C .. 2>&1 | sed -e 's/\\/x\\//x:\\//g'";
// End:
