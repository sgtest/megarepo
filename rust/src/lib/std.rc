
#[link(name = "std",
       vers = "0.1",
       uuid = "122bed0b-c19b-4b82-b0b7-7ae8aead7297",
       url = "http://rust-lang.org/src/std")];

#[comment = "Rust standard library"];
#[license = "BSD"];

// Built-in types support modules.

mod int;
mod uint;
mod u8;
mod u64;
mod vec;
mod ivec;
mod str;

// General io and system-services modules.

mod io;
mod ioivec;
mod sys;
mod task;

// Utility modules.

mod either;
mod option;
mod util;

// Authorize various rule-bendings.

auth io = unsafe;
auth fs = unsafe;
auth os_fs = unsafe;
auth run = unsafe;
auth str = unsafe;
auth vec = unsafe;
auth task = unsafe;

auth dbg = unsafe;

auth uint::next_power_of_two = unsafe;
auth map::mk_hashmap = unsafe;
auth rand::mk_rng = unsafe;

// Target-os module.

// TODO: Have each os module re-export everything from genericos.
mod generic_os;

#[cfg(target_os = "win32")]
mod os = "win32_os.rs";
#[cfg(target_os = "win32")]
mod os_fs = "win32_fs.rs";

#[cfg(target_os = "macos")]
mod os = "macos_os.rs";
#[cfg(target_os = "macos")]
mod os_fs = "posix_fs.rs";

#[cfg(target_os = "linux")]
mod os = "linux_os.rs";
#[cfg(target_os = "linux")]
mod os_fs = "posix_fs.rs";

mod run = "run_program.rs";
mod fs;

// FIXME: parametric
mod map;
mod deque;
mod list;
mod rand;
mod dbg;
mod bitv;
mod sort;
mod sha1;
mod ebml;
mod ufind;
mod ufindivec;
mod extfmt;
mod box;
mod getopts;
mod term;
mod time;
mod smallintmap;
mod ptr;
mod test;
mod unsafe;

// Local Variables:
// mode: rust;
// fill-column: 78;
// indent-tabs-mode: nil
// c-basic-offset: 4
// buffer-file-coding-system: utf-8-unix
// compile-command: "make -k -C .. 2>&1 | sed -e 's/\\/x\\//x:\\//g'";
// End:
