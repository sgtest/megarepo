// -*- rust -*-

#[link(name = "rustc",
       vers = "0.2",
       uuid = "0ce89b41-2f92-459e-bbc1-8f5fe32f16cf",
       url = "https://github.com/mozilla/rust/tree/master/src/rustc")];

#[comment = "The Rust compiler"];
#[license = "MIT"];
#[crate_type = "lib"];

#[no_core];

use core(vers = "0.2");
use std(vers = "0.2");
use rustsyntax(vers = "0.2");

import core::*;

mod middle {
    mod trans {
        mod common;
        mod type_of;
        mod build;
        mod base;
        mod alt;
        mod uniq;
        mod closure;
        mod tvec;
        mod impl;
        mod native;
        mod shape;
        mod debuginfo;
        mod type_use;
        mod reachable;
    }
    mod ty;
    mod infer;
    mod ast_map;
    mod resolve;
    mod typeck;
    mod check_loop;
    mod check_alt;
    mod check_const;
    mod lint;
    mod mutbl;
    mod borrowck;
    mod alias;
    mod last_use;
    mod block_use;
    mod kind;
    mod freevars;
    mod capture;
    mod pat_util;
    mod region;
    mod regionck;
    mod const_eval;

    mod tstate {
        mod ck;
        mod annotate;
        #[path = "auxiliary.rs"]
        mod aux;
        mod bitvectors;
        mod collect_locals;
        mod pre_post_conditions;
        mod states;
        mod ann;
        mod tritv;
    }
}

mod syntax;

mod front {
    mod config;
    mod test;
    mod core_inject;
}

mod back {
    mod link;
    mod abi;
    mod upcall;
    mod x86;
    mod x86_64;
    mod rpath;
    mod target_strs;
}

mod metadata {
    export encoder;
    export creader;
    export cstore;
    export csearch;

    mod common;
    mod tyencode;
    mod tydecode;
    mod astencode;
    mod encoder;
    mod decoder;
    mod creader;
    mod cstore;
    mod csearch;
}

mod driver {
    mod driver;
    mod session;
}

mod util {
    mod common;
    mod ppaux;
    mod filesearch;
}

mod lib {
    mod llvm;
}

// Local Variables:
// fill-column: 78;
// indent-tabs-mode: nil
// c-basic-offset: 4
// buffer-file-coding-system: utf-8-unix
// End:
