#[link(name = "syntax",
       vers = "0.2",
       uuid = "9311401b-d6ea-4cd9-a1d9-61f89499c645")];



#[crate_type = "lib"];

#[no_core];

#[warn(no_vecs_not_implicitly_copyable)];

use core(vers = "0.2");
use std(vers = "0.2");

import core::*;

mod attr;
mod diagnostic;
mod codemap;
mod ast;
mod ast_util;
mod ast_map;
mod visit;
mod fold;
mod util {
    mod interner;
}

mod parse {
    export parser;
    export lexer;
    export token;
    export comments;
    export prec;
    export classify;
    export attr;

    mod eval;
    mod lexer;
    mod parser;
    mod token;
    mod comments;
    mod attr;

    #[doc = "Common routines shared by parser mods"]
    mod common;

    #[doc = "Functions dealing with operator precedence"]
    mod prec;

    #[doc = "Routines the parser uses to classify AST nodes"]
    mod classify;
}

mod print {
    mod pp;
    mod pprust;
}

mod ext {
    mod base;
    mod expand;
    mod qquote;
    mod build;

    mod fmt;
    mod env;
    mod simplext;
    mod concat_idents;
    mod ident_to_str;
    mod log_syntax;
    mod auto_serialize;
    mod source_util;
}
