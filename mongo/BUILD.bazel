load("@npm//:defs.bzl", "npm_link_all_packages")
load("//bazel/config:mongo_config_header.bzl", "mongo_config_header")

package(default_visibility = ["//visibility:public"])

exports_files([
    "pyproject.toml",
    "poetry.lock",
])

npm_link_all_packages(name = "node_modules")

alias(
    name = "format",
    actual = "//bazel/format",
)

alias(
    name = "codeowners",
    actual = "//buildscripts:codeowners",
)

# This rule makes it possible to set the clang-tidy configuration setting:
genrule(
    name = "clang_tidy_config",
    srcs = [
        ".clang-tidy.in",
    ],
    outs = [".clang-tidy"],

    # Note: we use sed to substitute the known good value `build/compiledb/mongo`; testing
    # has confirmed that this is the correct value.
    cmd = """
    cp $(location .clang-tidy.in) $@ && \
    sed -i 's|@MONGO_BUILD_DIR@|$(RULEDIR)/src/mongo|g' $@
    """,
    visibility = ["//visibility:public"],
)

mongo_config_header(
    name = "mongo_config_header",
    extra_definitions = {} | select({
        "//bazel/config:use_wiredtiger_enabled": {
            "MONGO_CONFIG_WIREDTIGER_ENABLED": "1",
        },
        "//conditions:default": {},
    }) | select({
        "//bazel/config:build_grpc_enabled": {
            "MONGO_CONFIG_GRPC": "1",
        },
        "//conditions:default": {},
    }) | select({
        "//bazel/config:tcmalloc_google_enabled": {
            "MONGO_CONFIG_TCMALLOC_GOOGLE": "1",
        },
        "//bazel/config:tcmalloc_gperf_enabled": {
            "MONGO_CONFIG_TCMALLOC_GPERF": "1",
        },
        "//conditions:default": {},
    }) | select({
        "//bazel/config:libunwind_enabled": {
            "MONGO_CONFIG_USE_LIBUNWIND": "1",
        },
        "//conditions:default": {},
    }) | select({
        "//bazel/config:opt_any": {
            "MONGO_CONFIG_OPTIMIZED_BUILD": "1",
        },
        "//conditions:default": {},
    }) | select({
        "//bazel/config:dbg_enabled": {
            "MONGO_CONFIG_DEBUG_BUILD": "1",
        },
        "//conditions:default": {},
    }) | select({
        "//bazel/config:streams_release_build_required_setting": {
            "MONGO_CONFIG_STREAMS": "1",
        },
        "//conditions:default": {},
    }) | select({
        "//bazel/config:use_diagnostic_latches_enabled": {
            "MONGO_CONFIG_USE_RAW_LATCHES": "1",
        },
        "//conditions:default": {},
    }) | select({
        "//bazel/config:posix": {
            "MONGO_CONFIG_HAVE_HEADER_UNISTD_H": "1",
        },
        "//conditions:default": {},
    }),
    output = "mongo/config.h",
    template = "//src/mongo:config.h.in",
)
