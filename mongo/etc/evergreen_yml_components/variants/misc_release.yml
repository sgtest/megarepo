# All remaining release variants not included in other files.

buildvariants:
- name: rhel70
  display_name: RHEL 7.0
  cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
  run_on:
  - rhel70-small
  expansions:
    push_path: linux
    push_bucket: downloads.mongodb.org
    push_name: linux
    push_arch: x86_64-rhel70
    compile_flags: >-
      --ssl MONGO_DISTMOD=rhel70
      -j$(grep -c ^processor /proc/cpuinfo)
      --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars
      --use-diagnostic-latches=off
    test_flags: --excludeWithAnyTags=requires_external_data_source,requires_latch_analyzer
    multiversion_platform: rhel70
    multiversion_edition: targeted
    has_packages: true
    packager_script: packager.py
    packager_arch: x86_64
    packager_distro: rhel70
    repo_edition: org
    scons_cache_scope: shared
    large_distro_name: rhel70
    compile_variant: rhel70
  tasks:
  - name: compile_test_and_package_serial_no_unittests_TG
    distros:
    - rhel70
  - name: aggregation !.feature_flag_guarded
  - name: .auth !.audit !.multiversion
  - name: sharding_auth_gen
  - name: causally_consistent_jscore_txns_passthrough
  - name: .misc_js
  - name: .concurrency .common
    distros:
    - rhel70
  - name: concurrency_replication_causal_consistency_gen
  - name: disk_wiredtiger
  - name: .jscore .common
  - name: .jstestfuzz .common
  - name: multiversion_gen
  - name: replica_sets_gen
  - name: .replica_sets .common
  - name: .sharding .txns
  - name: .sharding .common !.csrs !.encrypt
  - name: sharding_max_mirroring_opportunistic_secondary_targeting_gen
  - name: .ssl
  - name: .stitch
  - name: test_packages
    distros:
    - ubuntu2004-package
  - name: selinux_rhel7_org
  - name: .publish
  - name: generate_buildid_to_debug_symbols_mapping

  # This variant compiles on RHEL 7.0 and runs tests on RHEL 7.6
- name: rhel76_compile_rhel70
  display_name: RHEL 7.0/7.6 Cross-ABI
  cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
  run_on:
  - rhel76-test
  expansions:
    test_flags: --excludeWithAnyTags=requires_latch_analyzer
    compile_flags: >-
      --ssl MONGO_DISTMOD=rhel70
      -j$(grep -c ^processor /proc/cpuinfo)
      --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars
      --use-diagnostic-latches=off
    compile_variant: rhel76_compile_rhel70
  tasks:
  - name: compile_and_archive_dist_test_TG
    distros:
    - rhel70
  - name: .ssl
  - name: jsCore
  - name: external_auth
  - name: generate_buildid_to_debug_symbols_mapping

- name: ubi8
  display_name: "UBI 8"
  cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
  run_on:
  - ubi8
  expansions:
    resmoke_jobs_factor: 1
    disable_shared_scons_cache: true
    compile_flags: >-
      MONGO_DISTMOD=rhel80
      --opt=on
      -j$(grep -c ^processor /proc/cpuinfo)
      --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars
      --use-diagnostic-latches=off
    tooltags: ""
    build_mongoreplay: true
    test_flags: >-
      --excludeWithAnyTags=requires_os_access,requires_latch_analyzer
    compile_variant: ubi8
  tasks:
  - name: compile_and_archive_dist_test_TG
    distros:
    - rhel80-large
  - name: jsCore
  - name: sharding_gen
  - name: replica_sets_gen
  - name: generate_buildid_to_debug_symbols_mapping
    distros:
    - rhel80-large

- name: rhel80
  display_name: RHEL 8.0
  cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
  run_on:
  - rhel80-build
  expansions:
    push_path: linux
    push_bucket: downloads.mongodb.org
    push_name: linux
    push_arch: x86_64-rhel80
    compile_flags: >-
      --ssl MONGO_DISTMOD=rhel80
      -j$(grep -c ^processor /proc/cpuinfo)
      --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars
      --use-diagnostic-latches=off
    test_flags: --excludeWithAnyTags=requires_external_data_source,requires_latch_analyzer
    multiversion_platform: rhel80
    multiversion_edition: targeted
    has_packages: true
    packager_script: packager.py
    packager_arch: x86_64
    packager_distro: rhel80
    repo_edition: org
    scons_cache_scope: shared
    large_distro_name: rhel80-build
    compile_variant: rhel80
  tasks:
  - name: compile_test_and_package_serial_no_unittests_TG
    distros:
    - rhel80-build
  - name: aggregation !.feature_flag_guarded
  - name: .auth !.audit !.multiversion
  - name: sharding_auth_gen
  - name: causally_consistent_jscore_txns_passthrough
  - name: .misc_js
  - name: .concurrency .common
    distros:
    - rhel80-build
  - name: concurrency_replication_causal_consistency_gen
  - name: disk_wiredtiger
  - name: .jscore .common
  - name: .jstestfuzz .common
  - name: multiversion_gen
  - name: replica_sets_gen
  - name: .replica_sets .common
  - name: .sharding .txns
  - name: .sharding .common !.csrs !.encrypt
  - name: sharding_max_mirroring_opportunistic_secondary_targeting_gen
  - name: .ssl
  - name: .stitch
  - name: test_packages
    distros:
    - ubuntu2004-package
  - name: selinux_rhel8_org
  - name: .publish
  - name: generate_buildid_to_debug_symbols_mapping

- name: enterprise-rhel-80-64-bit
  display_name: "Enterprise RHEL 8.0"
  cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
  modules:
  - enterprise
  run_on:
  - rhel80-small
  expansions: &enterprise-rhel-80-64-bit-expansions
    additional_package_targets: >-
      archive-mongocryptd
      archive-mongocryptd-debug
    push_path: linux
    push_bucket: downloads.10gen.com
    push_name: linux
    push_arch: x86_64-enterprise-rhel80
    compile_flags: >-
      --ssl MONGO_DISTMOD=rhel80
      -j$(grep -c ^processor /proc/cpuinfo)
      --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars
      --use-diagnostic-latches=off
    test_flags: --excludeWithAnyTags=requires_external_data_source,requires_latch_analyzer
    crypt_task_compile_flags: >-
      SHLINKFLAGS_EXTRA="-Wl,-Bsymbolic -Wl,--no-gnu-unique"
      CFLAGS="-fno-gnu-unique"
    multiversion_platform: rhel80
    multiversion_edition: enterprise
    has_packages: true
    packager_script: packager_enterprise.py
    packager_arch: x86_64
    packager_distro: rhel80
    repo_edition: enterprise
    scons_cache_scope: shared
    jstestfuzz_num_generated_files: 40
    jstestfuzz_concurrent_num_files: 10
    target_resmoke_time: 10
    max_sub_suites: 3
    large_distro_name: rhel80-medium
    compile_variant: enterprise-rhel-80-64-bit
  tasks:
  - name: compile_test_and_package_serial_no_unittests_TG
    distros:
    - rhel80-large
  - name: compile_integration_and_test_parallel_stream_TG
    distros:
    - rhel80-large
  - name: .aggfuzzer !.feature_flag_guarded
  - name: .aggregation !.feature_flag_guarded
  - name: audit
  - name: .auth
  - name: unittest_shell_hang_analyzer_gen
  - name: .causally_consistent !.sharding
  - name: .change_streams
  - name: .change_stream_fuzzer
  - name: .misc_js
  - name: .concurrency !.large !.ubsan !.no_txns
  - name: .concurrency .large !.ubsan !.no_txns
    distros:
    - rhel80-medium
  - name: disk_wiredtiger
  - name: .encrypt
  - name: idl_tests
  - name: initial_sync_fuzzer_gen
  - name: .jscore .common
  - name: jsCore_min_batch_repeat_queries_ese_gsm
  - name: jsCore_txns_large_txns_format
  - name: json_schema
  - name: .jstestfuzz !.flow_control  # Flow control jstestfuzz take longer.
  - name: libunwind_tests
  - name: .multi_shard
  - name: multi_stmt_txn_jscore_passthrough_with_migration_gen
  - name: multiversion_gen
  - name: .query_fuzzer !.feature_flag_guarded
  - name: .random_multiversion_ds
  - name: .read_write_concern .large
    distros:
    - rhel80-medium
  - name: .read_write_concern !.large
  - name: .replica_sets !.encrypt !.auth
    distros:
    - rhel80-medium
  - name: replica_sets_api_version_jscore_passthrough_gen
  - name: replica_sets_reconfig_jscore_passthrough_gen
  - name: replica_sets_reconfig_jscore_stepdown_passthrough_gen
    distros:
    - rhel80-medium
  - name: replica_sets_reconfig_kill_primary_jscore_passthrough_gen
    distros:
    - rhel80-medium
  - name: change_streams_pre_images_replica_sets_stepdown_primary_jscore_passthrough_gen
    distros:
    - rhel80-medium
  - name: change_streams_pre_images_replica_sets_kill_secondary_jscore_passthrough_gen
    distros:
    - rhel80-medium
  - name: change_streams_change_collection_replica_sets_stepdown_primary_jscore_passthrough_gen
    distros:
    - rhel80-medium
  - name: change_streams_change_collection_replica_sets_kill_secondary_jscore_passthrough_gen
    distros:
    - rhel80-medium
  - name: .resharding_fuzzer
  - name: retryable_writes_jscore_passthrough_gen
  - name: retryable_writes_jscore_stepdown_passthrough_gen
    distros:
    - rhel80-medium
  - name: .read_only
  - name: .rollbackfuzzer
  - name: sasl
  - name: search
  - name: search_auth
  - name: search_pinned_connections_auth
  - name: search_ssl
  - name: session_jscore_passthrough
  - name: .sharding .jscore !.wo_snapshot !.multi_stmt
  - name: sharding_api_version_jscore_passthrough_gen
  - name: .sharding .txns
  - name: .sharding .common
  - name: .stitch
  - name: .crypt
    distros:
    - rhel80-large
  - name: .publish_crypt
  - name: .updatefuzzer
  - name: secondary_reads_passthrough_gen
  - name: server_discovery_and_monitoring_json_test_TG
    distros:
    - rhel80-large
  - name: server_selection_json_test_TG
    distros:
    - rhel80-large
  - name: test_packages
    distros:
    - ubuntu2004-package
  - name: vector_search
  - name: vector_search_auth
  - name: vector_search_ssl
  - name: selinux_rhel8_enterprise
  - name: .publish
  - name: generate_buildid_to_debug_symbols_mapping

- name: rhel-82-arm64
  display_name: RHEL 8.2 arm64
  cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
  run_on:
  - rhel82-arm64-small
  expansions:
    push_path: linux
    push_bucket: downloads.mongodb.org
    push_name: linux
    push_arch: aarch64-rhel82
    compile_flags: >-
      --ssl MONGO_DISTMOD=rhel82
      -j$(grep -c ^processor /proc/cpuinfo)
      --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars
      --use-diagnostic-latches=off
    test_flags: --excludeWithAnyTags=requires_external_data_source,requires_increased_memlock_limits,requires_latch_analyzer
    has_packages: true
    packager_script: packager.py
    packager_arch: aarch64
    packager_distro: rhel82
    repo_edition: org
    scons_cache_scope: shared
    large_distro_name: rhel82-arm64-large
    compile_variant: rhel-82-arm64
  tasks:
  - name: compile_test_and_package_serial_no_unittests_TG
    distros:
    - rhel82-arm64-large
  - name: aggregation !.feature_flag_guarded
  - name: .auth !.audit !.multiversion
  - name: sharding_auth_gen
  - name: causally_consistent_jscore_txns_passthrough
  - name: .misc_js
  - name: .concurrency .common
    distros:
    - rhel82-arm64-large
  - name: concurrency_replication_causal_consistency_gen
  - name: disk_wiredtiger
  - name: .jscore .common
  - name: .jstestfuzz .common
  - name: replica_sets_gen
  - name: .replica_sets .common
  - name: .sharding .txns
  - name: .sharding .common !.csrs !.multiversion !.encrypt
  - name: sharding_max_mirroring_opportunistic_secondary_targeting_gen
  - name: .ssl
  - name: .stitch
  - name: test_packages
    distros:
    - ubuntu1804-arm64-build
  - name: .publish
  - name: generate_buildid_to_debug_symbols_mapping

- name: enterprise-rhel-82-arm64
  display_name: "Enterprise RHEL 8.2 arm64"
  cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
  modules:
  - enterprise
  run_on:
  - rhel82-arm64-small
  expansions:
    additional_package_targets: >-
      archive-mongocryptd
      archive-mongocryptd-debug
    push_path: linux
    push_bucket: downloads.10gen.com
    push_name: linux
    push_arch: aarch64-enterprise-rhel82
    compile_flags: >-
      --ssl MONGO_DISTMOD=rhel82
      -j$(grep -c ^processor /proc/cpuinfo)
      --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars
      --use-diagnostic-latches=off
    test_flags: --excludeWithAnyTags=requires_external_data_source,requires_latch_analyzer
    crypt_task_compile_flags: >-
      SHLINKFLAGS_EXTRA="-Wl,-Bsymbolic
      -Wl,--no-gnu-unique"
      CCFLAGS="-fno-gnu-unique"
    has_packages: true
    packager_script: packager_enterprise.py
    packager_arch: aarch64
    packager_distro: rhel82
    repo_edition: enterprise
    scons_cache_scope: shared
    compile_variant: enterprise-rhel-82-arm64
  tasks:
  - name: compile_test_and_package_serial_no_unittests_TG
    distros:
    - rhel82-arm64-large
  - name: .aggfuzzer !.multiversion !.feature_flag_guarded
  - name: audit
  - name: auth_audit_gen
  - name: auth_gen
  - name: causally_consistent_jscore_txns_passthrough
  - name: .encrypt !.sharding !.replica_sets !.aggregation !.jscore
  - name: external_auth
  - name: external_auth_aws
  - name: .jscore .common !.decimal !.sharding !.feature_flag_guarded
  - name: jsCore_txns_large_txns_format
  - name: .jstestfuzz .common
  - name: replica_sets_auth_gen
  - name: replica_sets_jscore_passthrough_gen
  - name: .replica_sets .multi_oplog
  - name: sasl
  - name: search
  - name: search_auth
  - name: search_pinned_connections_auth
  - name: search_ssl
  - name: sharding_auth_audit_gen
  - name: .stitch
  - name: .crypt
    distros:
    - rhel82-arm64-large
  - name: .publish_crypt
  - name: test_packages
    distros:
    - ubuntu1804-arm64-build
  - name: vector_search
  - name: vector_search_auth
  - name: vector_search_ssl
  - name: .publish
  - name: generate_buildid_to_debug_symbols_mapping

- name: rhel90
  display_name: RHEL 9.0
  cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
  run_on:
  - rhel90-build
  expansions:
    push_path: linux
    push_bucket: downloads.mongodb.org
    push_name: linux
    push_arch: x86_64-rhel90
    compile_flags: --ssl MONGO_DISTMOD=rhel90 -j$(grep -c ^processor /proc/cpuinfo) --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars --use-diagnostic-latches=off
    test_flags: --excludeWithAnyTags=requires_external_data_source,requires_latch_analyzer
    multiversion_platform: rhel90
    multiversion_edition: targeted
    has_packages: true
    packager_script: packager.py
    packager_arch: x86_64
    packager_distro: rhel90
    repo_edition: org
    scons_cache_scope: shared
    large_distro_name: rhel90-build
    compile_variant: rhel90
  tasks:
  - name: compile_test_and_package_serial_no_unittests_TG
    distros:
    - rhel90-build
  - name: aggregation !.feature_flag_guarded
  - name: .auth !.audit !.multiversion
  - name: sharding_auth_gen
  - name: causally_consistent_jscore_txns_passthrough
  - name: .misc_js
  - name: .concurrency .common
    distros:
    - rhel90-build
  - name: concurrency_replication_causal_consistency_gen
  - name: disk_wiredtiger
  - name: .jscore .common
  - name: .jstestfuzz .common !.multiversion
  - name: replica_sets_gen
  - name: .replica_sets .common
  - name: .sharding .txns
  - name: .sharding .common !.csrs !.multiversion !.encrypt
  - name: sharding_max_mirroring_opportunistic_secondary_targeting_gen
  - name: .ssl
  - name: .stitch
  - name: test_packages
    distros:
    - ubuntu2204-large
  - name: selinux_rhel9_org
  - name: .publish
  - name: generate_buildid_to_debug_symbols_mapping

- name: enterprise-rhel-90-64-bit
  display_name: "Enterprise RHEL 9.0"
  cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
  modules:
  - enterprise
  run_on:
  - rhel90-small
  expansions: &enterprise-rhel-90-64-bit-expansions
    additional_package_targets: archive-mongocryptd archive-mongocryptd-debug
    push_path: linux
    push_bucket: downloads.10gen.com
    push_name: linux
    push_arch: x86_64-enterprise-rhel90
    compile_flags: --ssl MONGO_DISTMOD=rhel90 -j$(grep -c ^processor /proc/cpuinfo) --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars --use-diagnostic-latches=off
    test_flags: --excludeWithAnyTags=requires_external_data_source,requires_latch_analyzer
    crypt_task_compile_flags: SHLINKFLAGS_EXTRA="-Wl,-Bsymbolic -Wl,--no-gnu-unique" CCFLAGS="-fno-gnu-unique"
    multiversion_platform: rhel90
    multiversion_edition: enterprise
    has_packages: true
    packager_script: packager_enterprise.py
    packager_arch: x86_64
    packager_distro: rhel90
    repo_edition: enterprise
    scons_cache_scope: shared
    compile_variant: enterprise-rhel-90-64-bit
  tasks:
  - name: compile_test_and_package_serial_no_unittests_TG
    distros:
    - rhel90-large
  - name: compile_build_tools_next_TG
    distros:
    - rhel90-large
  - name: .aggfuzzer !.feature_flag_guarded !.multiversion
  - name: audit
  - name: auth_audit_gen
  - name: auth_gen
  - name: causally_consistent_jscore_txns_passthrough
  - name: .config_fuzzer !.large
  - name: .config_fuzzer .large
    distros:
    - rhel90-large
  - name: .encrypt !.sharding !.replica_sets !.aggregation !.jscore
  - name: external_auth
  - name: external_auth_aws
  - name: .jscore .common !.decimal !.sharding
  - name: jsCore_txns_large_txns_format
  - name: .jstestfuzz .common
  - name: libunwind_tests
  - name: .ocsp
  - name: replica_sets_auth_gen
  - name: replica_sets_jscore_passthrough_gen
  - name: .replica_sets .multi_oplog
  - name: sasl
  - name: search
  - name: search_auth
  - name: search_pinned_connections_auth
  - name: search_ssl
  - name: sharding_auth_audit_gen
  - name: .stitch
  - name: .crypt
  - name: .publish_crypt
  - name: unittest_shell_hang_analyzer_gen
  - name: test_packages
    distros:
    - ubuntu2204-large
  - name: vector_search
  - name: vector_search_auth
  - name: vector_search_ssl
  - name: selinux_rhel9_enterprise
  - name: .publish
  - name: generate_buildid_to_debug_symbols_mapping


- name: rhel90-arm64
  display_name: RHEL 9.0 arm64
  cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
  run_on:
  - rhel90-arm64-small
  expansions:
    push_path: linux
    push_bucket: downloads.mongodb.org
    push_name: linux
    push_arch: aarch64-rhel90
    compile_flags: >-
      --ssl MONGO_DISTMOD=rhel90
      -j$(grep -c ^processor /proc/cpuinfo)
      --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars
      --use-diagnostic-latches=off
    test_flags: --excludeWithAnyTags=requires_external_data_source,requires_latch_analyzer
    has_packages: true
    packager_script: packager.py
    packager_arch: aarch64
    packager_distro: rhel90
    repo_edition: org
    scons_cache_scope: shared
    large_distro_name: rhel90-arm64-large
    compile_variant: rhel90-arm64
  tasks:
  - name: compile_test_and_package_serial_no_unittests_TG
    distros:
    - rhel90-arm64-large
  - name: aggregation
  - name: .auth !.audit !.multiversion
  - name: sharding_auth_gen
  - name: causally_consistent_jscore_txns_passthrough
  - name: .misc_js
  - name: .concurrency .common
    distros:
    - rhel90-arm64-large
  - name: concurrency_replication_causal_consistency_gen
  - name: disk_wiredtiger
  - name: .jscore .common
  - name: .jstestfuzz .common
  - name: replica_sets_gen
  - name: .replica_sets .common
  - name: .sharding .txns
  - name: .sharding .common !.csrs !.multiversion !.encrypt
  - name: sharding_max_mirroring_opportunistic_secondary_targeting_gen
  - name: .ssl
  - name: .stitch
  - name: test_packages
    distros:
    - ubuntu2204-arm64-small
  - name: .publish
  - name: generate_buildid_to_debug_symbols_mapping

- name: enterprise-rhel-90-arm64
  display_name: "Enterprise RHEL 9.0 arm64"
  cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
  modules:
  - enterprise
  run_on:
  - rhel90-arm64-small
  expansions:
    additional_package_targets: >-
      archive-mongocryptd
      archive-mongocryptd-debug
    push_path: linux
    push_bucket: downloads.10gen.com
    push_name: linux
    push_arch: aarch64-enterprise-rhel90
    compile_flags: >-
      --ssl MONGO_DISTMOD=rhel90
      -j$(grep -c ^processor /proc/cpuinfo)
      --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars
      --use-diagnostic-latches=off
    test_flags: --excludeWithAnyTags=requires_external_data_source,requires_latch_analyzer
    crypt_task_compile_flags: >-
      SHLINKFLAGS_EXTRA="-Wl,-Bsymbolic
      -Wl,--no-gnu-unique"
      CCFLAGS="-fno-gnu-unique"
    has_packages: true
    packager_script: packager_enterprise.py
    packager_arch: aarch64
    packager_distro: rhel90
    repo_edition: enterprise
    scons_cache_scope: shared
    large_distro_name: rhel90-arm64-large
    compile_variant: enterprise-rhel-90-arm64
  tasks:
  - name: compile_test_and_package_serial_no_unittests_TG
    distros:
    - rhel90-arm64-large
  - name: .aggfuzzer !.feature_flag_guarded !.multiversion
  - name: audit
  - name: auth_audit_gen
  - name: auth_gen
  - name: causally_consistent_jscore_txns_passthrough
  - name: .encrypt !.sharding !.replica_sets !.aggregation !.jscore
  - name: external_auth
  - name: external_auth_aws
  - name: .jscore .common !.decimal !.sharding
  - name: jsCore_txns_large_txns_format
  - name: .jstestfuzz .common
  - name: replica_sets_auth_gen
  - name: replica_sets_jscore_passthrough_gen
  - name: .replica_sets .multi_oplog
  - name: sasl
  - name: search
  - name: search_auth
  - name: search_pinned_connections_auth
  - name: search_ssl
  - name: sharding_auth_audit_gen
  - name: sharding_auth_gen
  - name: .stitch
  - name: .crypt
    distros:
    - rhel90-arm64-large
  - name: .publish_crypt
  - name: test_packages
    distros:
    - ubuntu2204-arm64-small
  - name: vector_search
  - name: vector_search_auth
  - name: vector_search_ssl
  - name: .publish
  - name: generate_buildid_to_debug_symbols_mapping

- name: ubuntu2204
  display_name: Ubuntu 22.04
  cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
  run_on:
  - ubuntu2204-small
  expansions:
    push_path: linux
    push_bucket: downloads.mongodb.org
    push_name: linux
    push_arch: x86_64-ubuntu2204
    compile_flags: >-
      --ssl
      MONGO_DISTMOD=ubuntu2204
      -j$(grep -c ^processor /proc/cpuinfo)
      --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars
      --use-diagnostic-latches=off
    test_flags: --excludeWithAnyTags=requires_external_data_source,requires_increased_memlock_limits,requires_latch_analyzer
    multiversion_platform: ubuntu2204
    multiversion_edition: targeted
    has_packages: true
    packager_script: packager.py
    packager_arch: x86_64
    packager_distro: ubuntu2204
    repo_edition: org
    scons_cache_scope: shared
    large_distro_name: ubuntu2204-large
    compile_variant: ubuntu2204
  tasks:
  - name: compile_test_and_package_serial_no_unittests_TG
    distros:
    - ubuntu2204-large
  - name: .aggfuzzer .common !.multiversion !.feature_flag_guarded
  - name: aggregation !.feature_flag_guarded
  - name: .auth !.audit !.multiversion
  - name: sharding_auth_gen
  - name: .misc_js
  - name: .concurrency .common
  - name: concurrency_replication_causal_consistency_gen
  - name: disk_wiredtiger
  - name: .jscore .common
  - name: .jstestfuzz .common
  - name: libunwind_tests
  # - name: multiversion_gen
  - name: replica_sets_gen
  - name: replica_sets_jscore_passthrough_gen
  - name: .sharding .txns
  - name: sharding_gen
  - name: sharding_jscore_passthrough_gen
  - name: .ssl
  - name: .stitch
  - name: test_packages
    distros:
    - ubuntu2204-large
  - name: .publish
  - name: generate_buildid_to_debug_symbols_mapping

- name: ubuntu2004
  display_name: Ubuntu 20.04
  cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
  run_on:
  - ubuntu2004-small
  expansions:
    push_path: linux
    push_bucket: downloads.mongodb.org
    push_name: linux
    push_arch: x86_64-ubuntu2004
    compile_flags: >-
      --ssl
      MONGO_DISTMOD=ubuntu2004
      -j$(grep -c ^processor /proc/cpuinfo)
      --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars
      --use-diagnostic-latches=off
    test_flags: --excludeWithAnyTags=requires_external_data_source,requires_latch_analyzer
    multiversion_platform: ubuntu2004
    multiversion_edition: targeted
    has_packages: true
    packager_script: packager.py
    packager_arch: x86_64
    packager_distro: ubuntu2004
    repo_edition: org
    scons_cache_scope: shared
    large_distro_name: ubuntu2004-large
    compile_variant: ubuntu2004
  tasks:
  - name: compile_test_and_package_serial_no_unittests_TG
    distros:
    - ubuntu2004-large
  - name: .aggfuzzer .common !.multiversion !.feature_flag_guarded
  - name: aggregation !.feature_flag_guarded
  - name: .auth !.audit !.multiversion
  - name: sharding_auth_gen
  - name: .misc_js
  - name: .concurrency .common
  - name: concurrency_replication_causal_consistency_gen
  - name: disk_wiredtiger
  - name: .jscore .common
  - name: .jstestfuzz .common
  - name: libunwind_tests
  # - name: multiversion_gen
  - name: replica_sets_gen
  - name: replica_sets_jscore_passthrough_gen
  - name: .sharding .txns
  - name: sharding_gen
  - name: sharding_jscore_passthrough_gen
  - name: .ssl
  - name: .stitch
  - name: test_packages
    distros:
    - ubuntu2004-package
  - name: .publish
  - name: generate_buildid_to_debug_symbols_mapping

- name: enterprise-ubuntu2004-64
  display_name: Enterprise Ubuntu 20.04
  cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
  modules:
  - enterprise
  run_on:
  - ubuntu2004-small
  stepback: false
  expansions:
    additional_package_targets: >-
      archive-mongocryptd
      archive-mongocryptd-debug
    push_path: linux
    push_bucket: downloads.10gen.com
    push_name: linux
    push_arch: x86_64-enterprise-ubuntu2004
    compile_flags: >-
      --ssl MONGO_DISTMOD=ubuntu2004
      -j$(grep -c ^processor /proc/cpuinfo)
      --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars
      --use-diagnostic-latches=off
    test_flags: --excludeWithAnyTags=requires_external_data_source,requires_latch_analyzer
    crypt_task_compile_flags: >-
      SHLINKFLAGS_EXTRA="-Wl,-Bsymbolic -Wl,--no-gnu-unique"
      CCFLAGS="-fno-gnu-unique"
    multiversion_platform: ubuntu2004
    multiversion_edition: enterprise
    has_packages: true
    packager_script: packager_enterprise.py
    packager_arch: x86_64
    packager_distro: ubuntu2004
    repo_edition: enterprise
    scons_cache_scope: shared
    large_distro_name: ubuntu2004-large
    # TODO SERVER-64479 remove external_auth_jobs_max once resolved
    external_auth_jobs_max: 1
    compile_variant: enterprise-ubuntu2004-64
  tasks:
  - name: compile_test_and_package_serial_no_unittests_TG
    distros:
    - ubuntu2004-large
  - name: .crypt
  - name: .publish_crypt
  - name: .aggfuzzer .common !.multiversion !.feature_flag_guarded
  - name: audit
  - name: causally_consistent_jscore_txns_passthrough
  - name: .encrypt !.aggregation !.replica_sets !.sharding !.jscore
  - name: external_auth
  - name: external_auth_aws
  - name: external_auth_oidc_azure
  - name: .jscore .common !.decimal !.sharding !.feature_flag_guarded
  - name: jsCore_auth
  - name: .jstestfuzz .common
  - name: libunwind_tests
  - name: .ocsp
  - name: replica_sets_auth_gen
  - name: replica_sets_jscore_passthrough_gen
  - name: sasl
  - name: sharding_auth_audit_gen
  - name: test_packages
    distros:
    - ubuntu2004-package
  - name: .publish
  - name: generate_buildid_to_debug_symbols_mapping

- name: enterprise-ubuntu2204-64
  display_name: Enterprise Ubuntu 22.04
  cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
  modules:
  - enterprise
  run_on:
  - ubuntu2204-small
  stepback: false
  expansions:
    additional_package_targets: >-
      archive-mongocryptd
      archive-mongocryptd-debug
    push_path: linux
    push_bucket: downloads.10gen.com
    push_name: linux
    push_arch: x86_64-enterprise-ubuntu2204
    compile_flags: >-
      --ssl
      MONGO_DISTMOD=ubuntu2204
      -j$(grep -c ^processor /proc/cpuinfo)
      --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars
      --use-diagnostic-latches=off
    test_flags: --excludeWithAnyTags=requires_external_data_source,requires_latch_analyzer
    crypt_task_compile_flags: >-
      SHLINKFLAGS_EXTRA="-Wl,-Bsymbolic -Wl,--no-gnu-unique"
      CCFLAGS="-fno-gnu-unique"
    multiversion_platform: ubuntu2204
    multiversion_edition: enterprise
    has_packages: true
    packager_script: packager_enterprise.py
    packager_arch: x86_64
    packager_distro: ubuntu2204
    repo_edition: enterprise
    scons_cache_scope: shared
    large_distro_name: ubuntu2204-large
    # TODO SERVER-64479 remove external_auth_jobs_max once resolved
    external_auth_jobs_max: 1
    compile_variant: enterprise-ubuntu2204-64
  tasks:
  - name: compile_test_and_package_serial_no_unittests_TG
    distros:
    - ubuntu2204-large
  - name: .crypt
  - name: .publish_crypt
  - name: .aggfuzzer .common !.multiversion !.feature_flag_guarded
  - name: audit
  - name: causally_consistent_jscore_txns_passthrough
  - name: .encrypt !.aggregation !.replica_sets !.sharding !.jscore
  - name: external_auth
  - name: external_auth_aws
  - name: .jscore .common !.decimal !.sharding !.feature_flag_guarded
  - name: jsCore_auth
  - name: .jstestfuzz .common
  - name: libunwind_tests
  - name: .ocsp
  - name: replica_sets_auth_gen
  - name: replica_sets_jscore_passthrough_gen
  - name: sasl
  - name: sharding_auth_audit_gen
  - name: test_packages
    distros:
    - ubuntu2204-large
  - name: test_packages_release
    distros:
    - ubuntu2204-large
  - name: .publish
  - name: generate_buildid_to_debug_symbols_mapping

- name: enterprise-ubuntu2004-arm64
  display_name: Enterprise Ubuntu 20.04 arm64
  cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
  modules:
  - enterprise
  run_on:
  - ubuntu2004-arm64
  expansions:
    additional_package_targets: >-
      archive-mongocryptd
      archive-mongocryptd-debug
    push_path: linux
    push_bucket: downloads.10gen.com
    push_name: linux
    push_arch: aarch64-enterprise-ubuntu2004
    compile_flags: >-
      --ssl MONGO_DISTMOD=ubuntu2004
      -j$(grep -c ^processor /proc/cpuinfo)
      --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars
      --use-diagnostic-latches=off
    test_flags: --excludeWithAnyTags=requires_external_data_source,requires_latch_analyzer
    crypt_task_compile_flags: >-
      SHLINKFLAGS_EXTRA="-Wl,-Bsymbolic -Wl,--no-gnu-unique"
      CCFLAGS="-fno-gnu-unique"
    resmoke_jobs_max: 4 # Avoid starting too many mongod's on ARM test servers
    has_packages: true
    packager_script: packager_enterprise.py
    packager_arch: arm64
    packager_distro: ubuntu2004
    repo_edition: enterprise
    multiversion_platform: ubuntu2004
    multiversion_architecture: aarch64
    multiversion_edition: enterprise
    scons_cache_scope: shared
    compile_variant: enterprise-ubuntu2004-arm64
    large_distro_name: ubuntu2004-arm64-large
  tasks:
  - name: compile_test_and_package_serial_no_unittests_TG
    distros:
    - ubuntu2004-arm64-large
  - name: aggregation !.feature_flag_guarded
  - name: aggregation_wildcard_fuzzer_gen
  - name: .auth !.audit !.multiversion !.jscore
  - name: sharding_auth_gen
  - name: causally_consistent_jscore_txns_passthrough
  - name: .misc_js
  - name: .concurrency .common
  - name: concurrency_replication_causal_consistency_gen
  - name: fle
  - name: .jscore .common !.auth !.feature_flag_guarded
  - name: .jstestfuzz .common
  - name: replica_sets_gen
  - name: .replica_sets .common
  - name: .sharding .txns
  - name: sharding_gen
  - name: sharding_jscore_passthrough_gen
  - name: .ssl
  - name: .stitch
  - name: .crypt
  - name: .publish_crypt
  - name: test_packages
    distros:
    - ubuntu1804-arm64-build
  - name: .publish
  - name: generate_buildid_to_debug_symbols_mapping

- name: ubuntu2004-arm64
  display_name: Ubuntu 20.04 arm64
  cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
  run_on:
  - ubuntu2004-arm64-small
  expansions:
    push_path: linux
    push_bucket: downloads.mongodb.org
    push_name: linux
    push_arch: aarch64-ubuntu2004
    compile_flags: >-
      --ssl
      MONGO_DISTMOD=ubuntu2004
      -j$(grep -c ^processor /proc/cpuinfo)
      --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars
      --use-diagnostic-latches=off
    test_flags: --excludeWithAnyTags=requires_external_data_source,requires_latch_analyzer
    resmoke_jobs_max: 8 # Avoid starting too many mongod's on ARM test servers
    has_packages: true
    packager_script: packager.py
    packager_arch: arm64
    packager_distro: ubuntu2004
    repo_edition: org
    multiversion_platform: ubuntu2004
    multiversion_architecture: aarch64
    multiversion_edition: targeted
    scons_cache_scope: shared
    compile_variant: ubuntu2004-arm64
    large_distro_name: ubuntu2004-arm64-large
  tasks:
  - name: compile_test_and_package_serial_no_unittests_TG
    distros:
    - ubuntu2004-arm64-large
  - name: jsCore
  - name: replica_sets_jscore_passthrough_gen
  - name: test_packages
    distros:
    - ubuntu1804-arm64-build
  - name: .publish
  - name: generate_buildid_to_debug_symbols_mapping


- name: enterprise-ubuntu2204-arm64
  display_name: Enterprise Ubuntu 22.04 arm64
  cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
  modules:
  - enterprise
  run_on:
  - ubuntu2204-arm64-small
  expansions:
    additional_package_targets: archive-mongocryptd archive-mongocryptd-debug
    push_path: linux
    push_bucket: downloads.10gen.com
    push_name: linux
    push_arch: aarch64-enterprise-ubuntu2204
    compile_flags: --ssl MONGO_DISTMOD=ubuntu2204 -j$(grep -c ^processor /proc/cpuinfo) --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars --use-diagnostic-latches=off
    test_flags: --excludeWithAnyTags=requires_external_data_source,requires_latch_analyzer
    crypt_task_compile_flags: SHLINKFLAGS_EXTRA="-Wl,-Bsymbolic -Wl,--no-gnu-unique" CCFLAGS="-fno-gnu-unique"
    resmoke_jobs_max: 4 # Avoid starting too many mongod's on ARM test servers
    has_packages: true
    packager_script: packager_enterprise.py
    packager_arch: arm64
    packager_distro: ubuntu2204
    repo_edition: enterprise
    multiversion_platform: ubuntu2204
    multiversion_architecture: aarch64
    multiversion_edition: enterprise
    scons_cache_scope: shared
    compile_variant: enterprise-ubuntu2204-arm64
    large_distro_name: ubuntu2204-arm64-large
  tasks:
  - name: compile_test_and_package_serial_no_unittests_TG
    distros:
    - ubuntu2204-arm64-large
  - name: aggregation !.feature_flag_guarded
  - name: aggregation_wildcard_fuzzer_gen
  - name: .auth !.audit !.multiversion !.jscore
  - name: sharding_auth_gen
  - name: causally_consistent_jscore_txns_passthrough
  - name: .misc_js
  - name: .concurrency .common
  - name: concurrency_replication_causal_consistency_gen
  - name: fle
  - name: .jscore .common !.auth !.feature_flag_guarded
  - name: .jstestfuzz .common
  - name: replica_sets_gen
  - name: .replica_sets .common
  - name: .sharding .txns
  - name: sharding_gen
  - name: sharding_jscore_passthrough_gen
  - name: .ssl
  - name: .stitch
  - name: .crypt
  - name: .publish_crypt
  - name: test_packages
    distros:
    - ubuntu2204-arm64-large
  - name: test_packages_release
    distros:
    - ubuntu2204-arm64-large
  - name: .publish
  - name: generate_buildid_to_debug_symbols_mapping

- name: ubuntu2204-arm64
  display_name: Ubuntu 22.04 arm64
  cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
  run_on:
  - ubuntu2204-arm64-small
  expansions:
    push_path: linux
    push_bucket: downloads.mongodb.org
    push_name: linux
    push_arch: aarch64-ubuntu2204
    compile_flags: --ssl MONGO_DISTMOD=ubuntu2204 -j$(grep -c ^processor /proc/cpuinfo) --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars --use-diagnostic-latches=off
    test_flags: --excludeWithAnyTags=requires_external_data_source,requires_latch_analyzer
    resmoke_jobs_max: 8 # Avoid starting too many mongod's on ARM test servers
    has_packages: true
    packager_script: packager.py
    packager_arch: arm64
    packager_distro: ubuntu2204
    repo_edition: org
    multiversion_platform: ubuntu2204
    multiversion_architecture: aarch64
    multiversion_edition: targeted
    scons_cache_scope: shared
    compile_variant: ubuntu2204-arm64
    large_distro_name: ubuntu2204-arm64-large
  tasks:
  - name: compile_test_and_package_serial_no_unittests_TG
    distros:
    - ubuntu2204-arm64-large
  - name: jsCore
  - name: replica_sets_jscore_passthrough_gen
  - name: test_packages
    distros:
    - ubuntu2204-arm64-large
  - name: .publish
  - name: generate_buildid_to_debug_symbols_mapping

- name: windows
  display_name: Windows
  cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
  run_on:
  - windows-vsCurrent-small
  expansions:
    additional_package_targets: msi
    exe: ".exe"
    push_path: windows
    push_bucket: downloads.mongodb.org
    push_name: windows
    push_arch: x86_64
    multiversion_platform: windows
    multiversion_edition: base
    content_type: application/zip
    compile_flags: >-
      --ssl
      MONGO_DISTMOD=windows
      -j$(bc <<< "$(grep -c '^processor' /proc/cpuinfo) / 1.5")
      --win-version-min=win10
      --use-diagnostic-latches=off
    num_scons_link_jobs_available: 0.25
    python: '/cygdrive/c/python/python39/python.exe'
    ext: zip
    scons_cache_scope: shared
    large_distro_name: windows-vsCurrent-large
    test_flags: &windows_common_test_excludes --excludeWithAnyTags=incompatible_with_windows_tls,requires_external_data_source,requires_latch_analyzer
    compile_variant: windows
  tasks:
  - name: compile_test_and_package_serial_no_unittests_TG
    distros:
    - windows-vsCurrent-large
  - name: .aggfuzzer !.feature_flag_guarded
  - name: .aggregation !.auth !.encrypt !.unwind !.feature_flag_guarded
  - name: auth_gen
  - name: causally_consistent_jscore_txns_passthrough
  - name: .misc_js
    # Some concurrency workloads require a lot of memory, so we use machines
    # with more RAM for these suites.
  - name: .concurrency !.ubsan !.no_txns !.kill_terminate !.common
    distros:
    - windows-vsCurrent-large
  - name: .concurrency .common
  - name: disk_wiredtiger
  - name: .jscore .common !.auth !.feature_flag_guarded
  - name: json_schema
  - name: .jstestfuzz !.initsync !.flow_control !.stepdowns
  - name: multiversion_gen
  - name: multiversion_auth_gen
  - name: .query_fuzzer !.feature_flag_guarded
  - name: .read_write_concern
  - name: replica_sets_gen
  - name: replica_sets_jscore_passthrough_gen
  - name: .sharding .jscore !.wo_snapshot !.multi_stmt
  - name: .sharding .txns
  - name: .sharding .common !.csrs !.encrypt
  - name: sharding_max_mirroring_opportunistic_secondary_targeting_gen
  - name: .ssl
  - name: .stitch
  - name: .updatefuzzer
  - name: push

- name: enterprise-windows
  display_name: "Enterprise Windows"
  cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
  modules:
  - enterprise
  run_on:
  - windows-vsCurrent-small
  expansions:
    exe: ".exe"
    additional_package_targets: >-
      archive-mongocryptd
      archive-mongocryptd-debug
      msi
    content_type: application/zip
    compile_flags: >-
      --ssl
      MONGO_DISTMOD=windows
      CPPPATH="c:/sasl/include"
      LIBPATH="c:/sasl/lib"
      -j$(bc <<< "$(grep -c '^processor' /proc/cpuinfo) / 1.5")
      --win-version-min=win10
      --use-diagnostic-latches=off
    num_scons_link_jobs_available: 0.25
    python: '/cygdrive/c/python/python39/python.exe'
    ext: zip
    scons_cache_scope: shared
    multiversion_platform: windows
    multiversion_edition: enterprise
    jstestfuzz_num_generated_files: 35
    target_resmoke_time: 20
    max_sub_suites: 3
    large_distro_name: windows-vsCurrent-large
    push_path: windows
    push_bucket: downloads.10gen.com
    push_name: windows
    push_arch: x86_64-enterprise
    test_flags: *windows_common_test_excludes
    exec_timeout_secs: 14400 # 3 hour timeout
    compile_variant: enterprise-windows
  tasks:
  - name: compile_test_and_package_serial_TG
    distros:
    - windows-vsCurrent-large
  - name: .aggfuzzer !.feature_flag_guarded
  - name: .aggregation !.auth !.encrypt !.unwind !.feature_flag_guarded
  - name: auth_gen
  - name: causally_consistent_jscore_txns_passthrough
  - name: .misc_js
    # Some concurrency workloads require a lot of memory, so we use machines
    # with more RAM for these suites.
  - name: .concurrency !.ubsan !.no_txns !.kill_terminate !.common
    distros:
    - windows-vsCurrent-large
  - name: .concurrency .common
  - name: .crypt
    distros:
    - windows-vsCurrent-large
  - name: .publish_crypt
  - name: disk_wiredtiger
  - name: .jscore .common !.auth !.feature_flag_guarded
  - name: json_schema
  - name: .jstestfuzz !.initsync !.flow_control !.stepdowns
  - name: multiversion_gen
  - name: multiversion_auth_gen
  - name: .query_fuzzer !.feature_flag_guarded
  - name: .read_write_concern
  - name: replica_sets_gen
  - name: replica_sets_jscore_passthrough_gen
  - name: .sharding .jscore !.wo_snapshot !.multi_stmt
  - name: .sharding .txns
  - name: .sharding .common !.csrs !.gcm
  - name: .ssl
  - name: .stitch
  - name: .updatefuzzer
  - name: push

  ###########################################
  #           macOS buildvariants           #
  ###########################################
- name: macos
  display_name: macOS
  cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
  run_on:
  - macos-1100
  expansions:
    test_flags: --excludeWithAnyTags=incompatible_with_macos,requires_external_data_source,requires_latch_analyzer
    push_path: osx
    push_bucket: downloads.mongodb.org
    push_name: macos
    push_arch: x86_64
    compile_env: DEVELOPER_DIR=/Applications/Xcode13.app
    compile_flags: >-
      --ssl
      -j$(sysctl -n hw.logicalcpu)
      --libc++
      --variables-files=etc/scons/xcode_macosx.vars
      --use-diagnostic-latches=off
    resmoke_jobs_max: 6
    compile_variant: macos
  tasks:
  - name: compile_test_and_package_serial_TG
  - name: compile_build_tools_next_TG
  - name: .aggregation !.auth !.encrypt !.unwind !.feature_flag_guarded
  - name: auth_gen
  - name: .causally_consistent !.sharding
  - name: .change_streams
  - name: .misc_js
  - name: .concurrency !.ubsan !.no_txns !.kill_terminate !.cursor_sweeps
  - name: disk_wiredtiger
  - name: initial_sync_fuzzer_gen
  - name: .jscore .common !.auth !.feature_flag_guarded
  - name: jsCore_txns_large_txns_format
  - name: .jstestfuzz .causal
  - name: .jstestfuzz .interrupt
  - name: .jstestfuzz .common
  - name: .jstestfuzz .session
  - name: .query_fuzzer !.feature_flag_guarded
  - name: .read_write_concern !.linearize
  - name: replica_sets_gen
  - name: replica_sets_kill_secondaries_jscore_passthrough
  - name: replica_sets_max_mirroring_large_txns_format_gen
  - name: .replica_sets .common !.auth
  - name: retryable_writes_jscore_passthrough_gen
  - name: .rollbackfuzzer
  - name: session_jscore_passthrough
  - name: .sharding .jscore !.wo_snapshot !.multi_stmt
  - name: .sharding .txns
  - name: .ssl
  - name: .stitch
  - name: push

- name: macos-arm64
  display_name: macOS arm64
  cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
  run_on:
  - macos-1100-arm64
  expansions:
    test_flags: --excludeWithAnyTags=incompatible_with_macos,requires_external_data_source,requires_latch_analyzer
    push_path: osx
    push_bucket: downloads.mongodb.org
    push_name: macos
    push_arch: arm64
    compile_env: DEVELOPER_DIR=/Applications/Xcode13.app
    compile_flags: >-
      --ssl
      -j$(sysctl -n hw.logicalcpu)
      --libc++
      --variables-files=etc/scons/xcode_macosx_arm.vars
      --use-diagnostic-latches=off
    resmoke_jobs_max: 6
    compile_variant: macos-arm64
  tasks:
  - name: compile_test_and_package_serial_TG
  - name: compile_build_tools_next_TG
  - name: .aggregation !.auth !.encrypt !.unwind !.feature_flag_guarded
  - name: auth_gen
  - name: .causally_consistent !.sharding
  - name: .change_streams
  - name: .misc_js
  - name: .concurrency !.ubsan !.no_txns !.kill_terminate !.cursor_sweeps
  - name: disk_wiredtiger
  - name: initial_sync_fuzzer_gen
  - name: .jscore .common !.auth !.feature_flag_guarded
  - name: jsCore_txns_large_txns_format
  - name: .jstestfuzz .causal
  - name: .jstestfuzz .interrupt
  - name: .jstestfuzz .common
  - name: .jstestfuzz .session
  - name: .query_fuzzer !.feature_flag_guarded
  - name: .read_write_concern !.linearize
  - name: replica_sets_gen
  - name: replica_sets_kill_secondaries_jscore_passthrough
  - name: replica_sets_max_mirroring_large_txns_format_gen
  - name: .replica_sets .common !.auth
  - name: retryable_writes_jscore_passthrough_gen
  - name: .rollbackfuzzer
  - name: session_jscore_passthrough
  - name: .sharding .jscore !.wo_snapshot !.multi_stmt
  - name: .sharding .txns
  - name: .ssl
  - name: .stitch
  - name: push

- name: enterprise-macos
  display_name: Enterprise macOS
  cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
  modules:
  - enterprise
  run_on:
  - macos-1100
  expansions:
    test_flags: --excludeWithAnyTags=incompatible_with_macos,requires_gcm,requires_external_data_source,requires_latch_analyzer
    additional_package_targets: >-
      archive-mongocryptd
      archive-mongocryptd-debug
    push_path: osx
    push_bucket: downloads.10gen.com
    push_name: macos
    push_arch: x86_64-enterprise
    compile_env: DEVELOPER_DIR=/Applications/Xcode13.app
    compile_flags: >-
      --ssl
      -j$(sysctl -n hw.logicalcpu)
      --libc++
      --variables-files=etc/scons/xcode_macosx.vars
      --use-diagnostic-latches=off
    resmoke_jobs_max: 6
    compile_variant: enterprise-macos
  tasks:
  - name: compile_test_and_package_serial_TG
  - name: compile_build_tools_next_TG
  - name: audit
  - name: auth_audit_gen
  - name: causally_consistent_jscore_txns_passthrough
  - name: .encrypt !.replica_sets !.sharding !.aggregation !.jscore
  - name: .jscore .common !.decimal !.sharding !.feature_flag_guarded
  - name: .jstestfuzz .common
  - name: replica_sets_auth_gen
  - name: replica_sets_jscore_passthrough_gen
  - name: sasl
  - name: push
  - name: .crypt
  - name: .publish_crypt

- name: enterprise-macos-arm64
  display_name: Enterprise macOS arm64
  cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
  modules:
  - enterprise
  run_on:
  - macos-1100-arm64
  expansions:
    test_flags: --excludeWithAnyTags=incompatible_with_macos,requires_gcm,requires_external_data_source,requires_latch_analyzer
    additional_package_targets: >-
      archive-mongocryptd
      archive-mongocryptd-debug
    push_path: osx
    push_bucket: downloads.10gen.com
    push_name: macos
    push_arch: arm64-enterprise
    compile_env: DEVELOPER_DIR=/Applications/Xcode13.app
    compile_flags: >-
      --ssl
      -j$(sysctl -n hw.logicalcpu)
      --libc++
      --variables-files=etc/scons/xcode_macosx_arm.vars
      --use-diagnostic-latches=off
    resmoke_jobs_max: 6
    compile_variant: enterprise-macos-arm64
  tasks:
  - name: compile_test_and_package_serial_TG
  - name: compile_build_tools_next_TG
  - name: audit
  - name: auth_audit_gen
  - name: causally_consistent_jscore_txns_passthrough
  - name: .encrypt !.replica_sets !.sharding !.aggregation !.jscore
  - name: .jscore .common !.decimal !.sharding !.feature_flag_guarded
  - name: .jstestfuzz .common
  - name: replica_sets_auth_gen
  - name: replica_sets_jscore_passthrough_gen
  - name: sasl
  - name: push
  - name: .crypt
  - name: .publish_crypt

- name: enterprise-rhel-82-arm64-grpc
  display_name: "Enterprise RHEL 8.2 arm64 GRPC"
  cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
  modules:
  - enterprise
  run_on:
  - rhel82-arm64-large
  stepback: false
  expansions:
    test_flags: --excludeWithAnyTags=requires_latch_analyzer
    compile_flags: >-
      --ssl
      --dbg=on
      MONGO_DISTMOD=rhel80
      -j$(grep -c ^processor /proc/cpuinfo)
      --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars
      --use-diagnostic-latches=off
      --link-model=dynamic
      ENABLE_GRPC_BUILD=1
    compile_variant: enterprise-rhel-82-arm64-grpc
    scons_cache_scope: shared
  tasks:
    - name: compile_test_parallel_unittest_stream_TG
    - name: compile_test_parallel_core_stream_TG
    - name: compile_test_parallel_dbtest_stream_TG

- name: &security-daily-cron security-daily-cron
  modules:
  - enterprise
  display_name: "~ Security Daily Cron"
  cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
  run_on:
  - rhel80-small
  stepback: false
  tasks:
  - name: blackduck_scanner
