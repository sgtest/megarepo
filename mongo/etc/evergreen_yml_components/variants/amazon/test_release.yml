# Amazon build variants for testing release environments
#
# After the branching variants in this file
# should continue to run on a new rapid release (v7.1, v7.2 etc.)
# and LTS release (v7.0, v6.0 etc.) branch projects

buildvariants:
  - name: amazon2
    display_name: "Amazon Linux 2"
    cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
    run_on:
    - amazon2-latest-small
    expansions:
      test_flags: >-
        --excludeWithAnyTags=SERVER-34286,incompatible_with_amazon_linux,requires_external_data_source,requires_latch_analyzer
        --enableEnterpriseTests=off
      push_path: linux
      push_bucket: downloads.mongodb.org
      push_name: linux
      push_arch: x86_64-amazon2
      compile_flags: >-
        --ssl
        MONGO_DISTMOD=amazon2
        -j$(grep -c ^processor /proc/cpuinfo)
        --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars
        --use-diagnostic-latches=off
        --modules=
      multiversion_platform: amazon2
      multiversion_edition: targeted
      has_packages: true
      packager_script: packager.py
      packager_arch: x86_64
      packager_distro: amazon2
      repo_edition: org
      scons_cache_scope: shared
      large_distro_name: amazon2-latest-large
      compile_variant: amazon2
    tasks:
    - name: compile_test_and_package_serial_no_unittests_TG
      distros:
      - amazon2-latest-large
    - name: test_packages
      distros:
      - ubuntu2204-large
    - name: .development_critical !.incompatible_community
    - name: .release_critical !.incompatible_community

  - name: enterprise-amazon2
    display_name: "Enterprise Amazon Linux 2"
    cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
    run_on:
    - amazon2-latest-small
    expansions:
      additional_package_targets: >-
        archive-mongocryptd
        archive-mongocryptd-debug
      test_flags: >-
        --excludeWithAnyTags=SERVER-34286,incompatible_with_amazon_linux,requires_external_data_source,requires_latch_analyzer,requires_ldap_pool
      push_path: linux
      push_bucket: downloads.10gen.com
      push_name: linux
      push_arch: x86_64-enterprise-amazon2
      compile_flags: >-
        --ssl
        MONGO_DISTMOD=amazon2
        -j$(grep -c ^processor /proc/cpuinfo)
        --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars
        --use-diagnostic-latches=off
      crypt_task_compile_flags: >-
        SHLINKFLAGS_EXTRA="-Wl,-Bsymbolic -Wl,--no-gnu-unique"
        CCFLAGS="-fno-gnu-unique"
      multiversion_platform: amazon2
      multiversion_edition: enterprise
      has_packages: true
      packager_script: packager_enterprise.py
      packager_arch: x86_64
      packager_distro: amazon2
      repo_edition: enterprise
      scons_cache_scope: shared
      compile_variant: enterprise-amazon2
      core_analyzer_distro_name: amazon2-latest-large
      large_distro_name: amazon2-latest-large
    tasks:
    - name: compile_test_and_package_serial_no_unittests_TG
      distros:
      - amazon2-latest-large
    - name: test_packages
      distros:
      - ubuntu2204-large
    - name: .development_critical
    - name: .release_critical

  - name: enterprise-amazon2-openssl111
    display_name: "Enterprise Amazon Linux 2 (openssl 1.1.1)"
    tags: []
    cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
    run_on:
      - amazon2-openssl111-latest-small
    expansions:
      additional_package_targets: >-
        archive-mongocryptd
        archive-mongocryptd-debug
      test_flags: >-
        --excludeWithAnyTags=SERVER-34286,incompatible_with_amazon_linux,requires_external_data_source,requires_latch_analyzer
      push_path: linux
      push_bucket: downloads.10gen.com
      push_name: linux
      push_arch: x86_64-enterprise-amazon2-openssl111
      compile_flags: >-
        --ssl
        MONGO_DISTMOD=amazon2
        -j$(grep -c ^processor /proc/cpuinfo)
        --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars
        --use-diagnostic-latches=off
      crypt_task_compile_flags: >-
        SHLINKFLAGS_EXTRA="-Wl,-Bsymbolic -Wl,--no-gnu-unique"
        CCFLAGS="-fno-gnu-unique"
      multiversion_platform: amazon2
      multiversion_edition: enterprise
      has_packages: true
      packager_script: packager_enterprise.py
      packager_arch: x86_64
      packager_distro: amazon2
      repo_edition: enterprise
      scons_cache_scope: shared
      # TODO SERVER-64479 remove external_auth_jobs_max once resolved
      external_auth_jobs_max: 1
      compile_variant: enterprise-amazon2-openssl111
      core_analyzer_distro_name: amazon2-openssl111-latest-large
    tasks:
      - name: compile_test_and_package_serial_no_unittests_TG
        distros:
          - amazon2-openssl111-latest-large
      - name: test_packages
        distros:
          - ubuntu2204-large
      - name: .development_critical !.requires_large_host
      - name: .development_critical .requires_large_host
        distros:
          - amazon2-openssl111-latest-large
      - name: .release_critical !.requires_large_host !publish_packages
      - name: .release_critical .requires_large_host !publish_packages
        distros:
          - amazon2-openssl111-latest-large

  - name: enterprise-amazon2-arm64-openssl111
    display_name: "Enterprise Amazon Linux 2 arm64 (openssl 1.1.1)"
    tags: []
    cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
    run_on:
      - amazon2-arm64-openssl111-latest-small
    expansions:
      additional_package_targets: >-
        archive-mongocryptd
        archive-mongocryptd-debug
      push_path: linux
      push_bucket: downloads.10gen.com
      push_name: linux
      push_arch: aarch64-enterprise-amazon2-openssl111
      compile_flags: >-
        --ssl
        MONGO_DISTMOD=amazon2
        -j$(grep -c ^processor /proc/cpuinfo)
        --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars
        --use-diagnostic-latches=off
      crypt_task_compile_flags: >-
        SHLINKFLAGS_EXTRA="-Wl,-Bsymbolic -Wl,--no-gnu-unique"
        CCFLAGS="-fno-gnu-unique"
      test_flags: --excludeWithAnyTags=incompatible_with_amazon_linux,requires_ldap_pool,requires_v4_0,requires_external_data_source,requires_latch_analyzer
      has_packages: true
      multiversion_platform: amazon2
      multiversion_edition: enterprise
      multiversion_architecture: aarch64
      packager_script: packager_enterprise.py
      packager_arch: aarch64
      packager_distro: amazon2
      repo_edition: enterprise
      scons_cache_scope: shared
      # TODO SERVER-64479 remove external_auth_jobs_max once resolved
      external_auth_jobs_max: 1
      compile_variant: enterprise-amazon2-arm64-openssl111
    tasks:
      - name: compile_test_and_package_serial_no_unittests_TG
        distros:
          - amazon2-arm64-openssl111-latest-large
      - name: compile_integration_and_test_parallel_stream_TG
        distros:
          - amazon2-arm64-openssl111-latest-large
      - name: test_packages
        distros:
          - ubuntu1804-arm64-build
      - name: .development_critical !.requires_large_host
      - name: .development_critical .requires_large_host
        distros:
          - amazon2-arm64-openssl111-latest-large
      - name: .release_critical !.requires_large_host !publish_packages
      - name: .release_critical .requires_large_host !publish_packages
        distros:
          - amazon2-arm64-openssl111-latest-large

  - name: amazon2023
    display_name: Amazon Linux 2023
    tags: ["bazel_check"]
    cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
    run_on:
      - amazon2023.0-small
    expansions:
      push_path: linux
      push_bucket: downloads.mongodb.org
      push_name: linux
      push_arch: x86_64-amazon2023
      compile_flags: >-
        --ssl
        MONGO_DISTMOD=amazon2023
        -j$(grep -c ^processor /proc/cpuinfo)
        --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars
        --modules=
      test_flags: >-
        --excludeWithAnyTags=incompatible_with_amazon_linux,requires_external_data_source,requires_latch_analyzer
        --enableEnterpriseTests=off
      has_packages: true
      packager_script: packager.py
      packager_arch: x86_64
      packager_distro: amazon2023
      repo_edition: org
      scons_cache_scope: shared
      large_distro_name: amazon2023.0-large
      compile_variant: amazon2023
    tasks:
      - name: compile_test_and_package_serial_no_unittests_TG
        distros:
          - amazon2023.0-large
      - name: test_packages
        distros:
          - ubuntu2204-large
      - name: .development_critical !.requires_large_host !.incompatible_community
      - name: .development_critical .requires_large_host !.incompatible_community
        distros:
          - amazon2023.0-large
      - name: .release_critical !.requires_large_host !.incompatible_community
      - name: .release_critical .requires_large_host !.incompatible_community
        distros:
          - amazon2023.0-large

  - name: enterprise-amazon2023
    display_name: "Enterprise Amazon Linux 2023"
    tags: []
    cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
    run_on:
      - amazon2023.0-small
    expansions:
      additional_package_targets: archive-mongocryptd archive-mongocryptd-debug
      push_path: linux
      push_bucket: downloads.10gen.com
      push_name: linux
      push_arch: x86_64-enterprise-amazon2023
      compile_flags: >-
        --ssl
        MONGO_DISTMOD=amazon2023
        -j$(grep -c ^processor /proc/cpuinfo)
        --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars
      crypt_task_compile_flags: SHLINKFLAGS_EXTRA="-Wl,-Bsymbolic -Wl,--no-gnu-unique" CCFLAGS="-fno-gnu-unique"
      test_flags: --excludeWithAnyTags=incompatible_with_amazon_linux,requires_ldap_pool,requires_v4_0,requires_external_data_source,requires_latch_analyzer
      has_packages: true
      multiversion_platform: amazon2023
      multiversion_edition: enterprise
      multiversion_architecture: x86_64
      packager_script: packager_enterprise.py
      packager_arch: x86_64
      packager_distro: amazon2023
      repo_edition: enterprise
      scons_cache_scope: shared
      # TODO SERVER-64479 remove external_auth_jobs_max once resolved
      external_auth_jobs_max: 1
      compile_variant: enterprise-amazon2023
    tasks:
      - name: compile_test_and_package_serial_no_unittests_TG
        distros:
          - amazon2023.0-large
      - name: test_packages
        distros:
          - ubuntu2204-large
      - name: .development_critical !.requires_large_host
      - name: .development_critical .requires_large_host
        distros:
          - amazon2023.0-large
      - name: .release_critical !.requires_large_host
      - name: .release_critical .requires_large_host
        distros:
          - amazon2023.0-large

  # TODO(SERVER-85904): Enable when Bazel supports --link-model=object.
  # This variant is a special variant to test Link Time Optimization (LTO).
  # - name: enterprise-amazon2023-lto
  #   display_name: "Enterprise Amazon Linux 2023 LTO"
  #   tags: []
  #   cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
  #   run_on:
  #     - amazon2023.0-small
  #   expansions:
  #     additional_package_targets: archive-mongocryptd archive-mongocryptd-debug
  #     compile_flags: >-
  #       --ssl
  #       MONGO_DISTMOD=amazon2023
  #       -j$(grep -c ^processor /proc/cpuinfo)
  #       --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars
  #       --lto
  #       --linker=gold
  #       --link-model=object
  #     crypt_task_compile_flags: SHLINKFLAGS_EXTRA="-Wl,-Bsymbolic -Wl,--no-gnu-unique" CCFLAGS="-fno-gnu-unique"
  #     test_flags: --excludeWithAnyTags=incompatible_with_amazon_linux,requires_ldap_pool,requires_v4_0,requires_external_data_source,requires_latch_analyzer
  #     has_packages: true
  #     packager_script: packager_enterprise.py
  #     packager_arch: x86_64
  #     packager_distro: amazon2023
  #     multiversion_platform: amazon2023
  #     multiversion_edition: enterprise
  #     multiversion_architecture: x86_64
  #     repo_edition: enterprise
  #     scons_cache_scope: shared
  #     # TODO SERVER-64479 remove external_auth_jobs_max once resolved
  #     external_auth_jobs_max: 1
  #     compile_variant: enterprise-amazon2023-lto
  #     large_distro_name: amazon2023.0-large
  #   tasks:
  #     - name: compile_test_and_package_serial_lto_no_unittests_TG
  #       distros:
  #         - amazon2023.0-large
  #     # TODO: SERVER-79886 Fix broken test_packages task
  #     # - name: test_packages
  #     #   distros:
  #     #   - amazon2023.0-large
  #     - name: .development_critical !.requires_large_host
  #     - name: .development_critical .requires_large_host
  #       distros:
  #         - amazon2023.0-large
  #     - name: .release_critical !.requires_large_host !publish_packages !push !crypt_push
  #     - name: .release_critical .requires_large_host !publish_packages !push !crypt_push
  #       distros:
  #         - amazon2023.0-large

  - name: amazon2023-arm64
    display_name: Amazon Linux 2023 arm64
    tags: ["bazel_check"]
    cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
    run_on:
      - amazon2023.0-arm64-small
    expansions:
      push_path: linux
      push_bucket: downloads.mongodb.org
      push_name: linux
      push_arch: aarch64-amazon2023
      compile_flags: >-
        --ssl
        MONGO_DISTMOD=amazon2023
        -j$(grep -c ^processor /proc/cpuinfo)
        --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars
        BAZEL_FLAGS="--subcommands --verbose_failures --sandbox_debug"
        --modules=
      test_flags: >-
        --excludeWithAnyTags=incompatible_with_amazon_linux,requires_external_data_source,requires_latch_analyzer
        --enableEnterpriseTests=off
      has_packages: true
      packager_script: packager.py
      packager_arch: aarch64
      packager_distro: amazon2023
      repo_edition: org
      scons_cache_scope: shared
      large_distro_name: amazon2023.0-arm64-large
      compile_variant: amazon2023-arm64
    tasks:
      - name: compile_test_and_package_serial_no_unittests_TG
        distros:
          - amazon2023.0-arm64-large
      - name: test_packages
        distros:
          - ubuntu2204-arm64-large
      - name: .development_critical !.requires_large_host !.incompatible_community
      - name: .development_critical .requires_large_host !.incompatible_community
        distros:
          - amazon2023.0-arm64-large
      - name: .release_critical !.requires_large_host !.incompatible_community
      - name: .release_critical .requires_large_host !.incompatible_community
        distros:
          - amazon2023.0-arm64-large

  - &enterprise-amazon2023-arm64-template
    name: enterprise-amazon2023-arm64
    display_name: "Enterprise Amazon Linux 2023 arm64"
    tags: []
    cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
    run_on:
      - amazon2023.0-arm64-small
    expansions:
      additional_package_targets: archive-mongocryptd archive-mongocryptd-debug
      push_path: linux
      push_bucket: downloads.10gen.com
      push_name: linux
      push_arch: aarch64-enterprise-amazon2023
      compile_flags: >-
        --ssl
        MONGO_DISTMOD=amazon2023
        -j$(grep -c ^processor /proc/cpuinfo)
        --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars
      crypt_task_compile_flags: SHLINKFLAGS_EXTRA="-Wl,-Bsymbolic -Wl,--no-gnu-unique" CCFLAGS="-fno-gnu-unique"
      test_flags: --excludeWithAnyTags=incompatible_with_amazon_linux,requires_ldap_pool,requires_v4_0,requires_external_data_source,requires_latch_analyzer
      has_packages: true
      multiversion_platform: amazon2023
      multiversion_edition: enterprise
      multiversion_architecture: aarch64
      packager_script: packager_enterprise.py
      packager_arch: aarch64
      packager_distro: amazon2023
      repo_edition: enterprise
      scons_cache_scope: shared
      # TODO SERVER-64479 remove external_auth_jobs_max once resolved
      external_auth_jobs_max: 1
      compile_variant: enterprise-amazon2023-arm64
    tasks:
      - name: compile_test_and_package_serial_no_unittests_TG
        distros:
          - amazon2023.0-arm64-large
      - name: test_packages
        distros:
          - ubuntu2204-arm64-large
      - name: .development_critical !.requires_large_host
      - name: .development_critical .requires_large_host
        distros:
          - amazon2023.0-arm64-large
      - name: .release_critical !.requires_large_host
      - name: .release_critical .requires_large_host
        distros:
          - amazon2023.0-arm64-large

  # TODO(SERVER-85904): Enable when Bazel supports --link-model=object.
  # This variant is a special variant to test Link Time Optimization (LTO).
  # - name: enterprise-amazon2023-arm64-lto
  #   display_name: "Enterprise Amazon Linux 2023 arm64 LTO"
  #   tags: []
  #   cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
  #   activate: false
  #   run_on:
  #     - amazon2023.0-arm64-small
  #   expansions:
  #     additional_package_targets: archive-mongocryptd archive-mongocryptd-debug
  #     compile_flags: >-
  #       --ssl
  #       MONGO_DISTMOD=amazon2023
  #       -j$(grep -c ^processor /proc/cpuinfo)
  #       --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars
  #       --lto
  #       --linker=gold
  #       --link-model=object
  #     crypt_task_compile_flags: SHLINKFLAGS_EXTRA="-Wl,-Bsymbolic -Wl,--no-gnu-unique" CCFLAGS="-fno-gnu-unique"
  #     test_flags: --excludeWithAnyTags=incompatible_with_amazon_linux,requires_ldap_pool,requires_v4_0,requires_external_data_source,requires_latch_analyzer
  #     has_packages: true
  #     multiversion_platform: amazon2023
  #     multiversion_edition: enterprise
  #     multiversion_architecture: aarch64
  #     packager_script: packager_enterprise.py
  #     packager_arch: aarch64
  #     packager_distro: amazon2023
  #     repo_edition: enterprise
  #     scons_cache_scope: shared
  #     # TODO SERVER-64479 remove external_auth_jobs_max once resolved
  #     external_auth_jobs_max: 1
  #     compile_variant: enterprise-amazon2023-arm64-lto
  #     large_distro_name: amazon2023.0-arm64-large
  #   tasks:
  #     - name: compile_test_and_package_serial_lto_no_unittests_TG
  #       distros:
  #         - amazon2023.0-arm64-large
  #     # TODO: SERVER-79886 Fix broken test_packages task
  #     # - name: test_packages
  #     #   distros:
  #     #   - ubuntu2204-arm64-large
  #     - name: .development_critical !.requires_large_host
  #     - name: .development_critical .requires_large_host
  #       distros:
  #         - amazon2023.0-arm64-large
  #     - name: .release_critical !.requires_large_host !publish_packages !push !crypt_push
  #     - name: .release_critical .requires_large_host !publish_packages !push !crypt_push
  #       distros:
  #         - amazon2023.0-arm64-large

  - name: enterprise-amazon2-streams
    display_name: "Amazon Linux 2 enterprise build with streams"
    tags: []
    cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
    run_on:
      - amazon2-latest-small
    expansions:
      test_flags: >-
        --excludeWithAnyTags=SERVER-34286,incompatible_with_amazon_linux,requires_external_data_source,requires_latch_analyzer,requires_ldap_pool
      push_path: linux
      push_bucket: downloads.10gen.com
      push_name: linux
      push_arch: x86_64-enterprise-amazon2-streams
      compile_flags: >-
        --ssl
        MONGO_DISTMOD=amazon2
        -j$(grep -c ^processor /proc/cpuinfo)
        --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars
        --streams-release-build
      multiversion_platform: amazon2
      multiversion_edition: enterprise-streams
      has_packages: true
      packager_script: packager_enterprise.py
      packager_arch: x86_64
      packager_distro: amazon2
      repo_edition: enterprise
      scons_cache_scope: shared
      # TODO SERVER-64479 remove external_auth_jobs_max once resolved
      external_auth_jobs_max: 1
      compile_variant: enterprise-amazon2-streams
      large_distro_name: amazon2-latest-large
    tasks:
      - name: compile_test_and_package_serial_no_unittests_TG
        distros:
          - amazon2-latest-large
      - name: .development_critical !.requires_large_host
      - name: .development_critical .requires_large_host
        distros:
          - amazon2-latest-large
      - name: .release_critical !.requires_large_host !crypt_push
      - name: .release_critical .requires_large_host !crypt_push
        distros:
          - amazon2-latest-large
      - name: streams
      - name: streams_kafka
      - name: streams_kafka_gwproxy

  - <<: *enterprise-amazon2023-arm64-template
    name: enterprise-amazon2023-arm64-fuzzers
    display_name: "Enterprise Amazon Linux 2023 arm64 Fuzzers"
    tags: []
    depends_on:
      - name: version_gen
        variant: generate-tasks-for-version
        # This is added because of EVG-18211.
        # Without this we are adding extra dependencies on evergreen and it is causing strain
        omit_generated_tasks: true
      - name: archive_dist_test_debug
        variant: enterprise-amazon2023-arm64
    tasks:
      - name: .aggfuzzer !.multiversion
      - name: .change_stream_fuzzer
      - name: .query_fuzzer
      - name: .updatefuzzer !.multiversion
