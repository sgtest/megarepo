# Windows build variants for building/compiling development environments

buildvariants:
- name: &windows-compile-required windows-compile-required
  display_name: "! Windows Compile"
  run_on:
  - windows-vsCurrent-xxlarge
  modules:
  - enterprise
  activate: true  # These compile variants run on every commit to reduce latency of the auto-reverter.
  expansions:
    exe: ".exe"
    ext: zip
    additional_package_targets: >-
      archive-mongocryptd
      archive-mongocryptd-debug
      msi
    content_type: application/zip
    compile_flags: >-
      --ssl
      MONGO_DISTMOD=windows
      CPPPATH="c:/sasl/include"
      LIBPATH="c:/sasl/lib"
      -j$(bc <<< "$(grep -c '^processor' /proc/cpuinfo) / 1.8")
      --win-version-min=win10
    num_scons_link_jobs_available: 0.2
    python: '/cygdrive/c/python/python39/python.exe'
    scons_cache_scope: shared
    compile_variant: *windows-compile-required
  tasks:
  - name: compile_ninja_quick_TG
  - name: compile_test_parallel_core_stream_TG
  - name: compile_test_parallel_unittest_stream_TG
  - name: compile_test_parallel_dbtest_stream_TG
  - name: compile_build_tools_next_TG
  - name: server_discovery_and_monitoring_json_test_TG
  - name: server_selection_json_test_TG
  - name: .crypt
  - name: generate_buildid_to_debug_symbols_mapping

# Note that this task is currently optional;
# This will eventually become suggested, then required.
- name: &windows-bazel-compile windows-bazel-compile
  display_name: "Windows Bazel Compile"
  cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
  run_on:
  - windows-vsCurrent-xlarge
  stepback: false
  expansions:
    exe: ".exe"
    ext: zip
    content_type: application/zip
    compile_flags: >-
      --ssl
      MONGO_DISTMOD=windows
      CPPPATH="c:/sasl/include"
      LIBPATH="c:/sasl/lib"
      -j$(bc <<< "$(grep -c '^processor' /proc/cpuinfo) / 1.8")
      --win-version-min=win10
    python: '/cygdrive/c/python/python39/python.exe'
    compile_variant: *windows-bazel-compile
  tasks:
    - name: compile_bazel_windows_TG

- name: &windows-dev-compile-suggested windows-dev-compile-suggested
  display_name: "* Windows Dev Compile"
  run_on:
  - windows-vsCurrent-xlarge
  modules:
  - enterprise
  expansions:
    exe: ".exe"
    ext: zip
    content_type: application/zip
    compile_flags: >-
      CPPPATH="c:/sasl/include"
      LIBPATH="c:/sasl/lib"
    num_scons_link_jobs_available: 0.2
    python: '/cygdrive/c/python/python39/python.exe'
    scons_cache_scope: shared
    compile_variant: *windows-dev-compile-suggested
  tasks:
    - name: scons_compile_smoke_test_TG
    - name: ninja_compile_smoke_test_TG

- name: &windows-dynamic-visibility-test windows-dynamic-visibility-test
  display_name: "~ Shared Library Windows (visibility test)"
  cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
  expansions:
    # --link-model=dynamic is set by visiblity_test's task_compile_flags
    # expansion
    compile_flags: >-
      CPPPATH="c:/sasl/include"
      LIBPATH="c:/sasl/lib"
      -j$(( $(grep -c ^processor /proc/cpuinfo) / 2 ))
      --win-version-min=win10
    python: '/cygdrive/c/python/python39/python.exe'
    ext: zip
    has_packages: false
    scons_cache_scope: shared
    scons_cache_mode: all
    num_scons_link_jobs_available: 0.99
    compile_variant: *windows-dynamic-visibility-test
  tasks:
  - name: visibility_test_TG
    distros:
    - windows-vsCurrent-large

### QO & QE Patch-Specific Build Variants ###
- name: &windows-compile-query-patch-only windows-compile-query-patch-only
  display_name: "~ Windows Compile Query Patch Only"
  cron: "0 4 * * 0" # From the ${project_weekly_cron} parameter # This is a patch-only variant but we run on mainline to pick up task history.
  run_on:
  - windows-vsCurrent-small
  modules:
  - enterprise
  expansions:
    additional_package_targets: >-
      archive-mongocryptd
      archive-mongocryptd-debug
      msi
    exe: ".exe"
    content_type: application/zip
    compile_flags: >-
      --ssl
      MONGO_DISTMOD=windows
      CPPPATH="c:/sasl/include"
      LIBPATH="c:/sasl/lib"
      -j$(( $(grep -c ^processor /proc/cpuinfo) / 2 ))
      --win-version-min=win10
    num_scons_link_jobs_available: 0.5
    python: '/cygdrive/c/python/python39/python.exe'
    ext: zip
    scons_cache_scope: shared
    multiversion_platform: windows
    multiversion_edition: enterprise
    jstestfuzz_num_generated_files: 35
    large_distro_name: windows-vsCurrent-large
    test_flags: --excludeWithAnyTags=incompatible_with_windows_tls
    external_auth_jobs_max: 1
    compile_variant: *windows-compile-query-patch-only
  tasks:
  - name: compile_dist_test_TG
    distros:
    - windows-vsCurrent-large
