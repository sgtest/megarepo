# RHEL build variants for testing development environments
# that should run only on master branch projects

variables:
# THIS HAS COPIES IN:
# - etc/evergreen_yml_components/variants/rhel/test_dev_master_branch_only.yml
# - etc/evergreen_yml_components/variants/rhel/test_dev.yml
# ANY MODIFICATIONS HERE SHOULD ALSO BE MADE IN THOSE FILES
- &linux-x86-dynamic-compile-params  # Essential set of compile parameters used for Linux dev variants.
  run_on:
  - rhel80-xlarge
  activate: true  # These compile variants run on every commit to reduce latency of the auto-reverter.
  modules:
    - enterprise
  stepback: false

# THIS HAS COPIES IN:
# - etc/evergreen_yml_components/variants/rhel/test_dev_master_branch_only.yml
# - etc/evergreen_yml_components/variants/rhel/test_dev.yml
# ANY MODIFICATIONS HERE SHOULD ALSO BE MADE IN THOSE FILES
- &linux-x86-dynamic-compile-expansions
  scons_cache_scope: shared
  scons_cache_mode: all
  has_packages: false
  compile_flags: >-
    --ssl
    MONGO_DISTMOD=rhel80
    -j$(grep -c ^processor /proc/cpuinfo)
    --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars
    --link-model=dynamic
    --use-diagnostic-latches=on

# THIS HAS COPIES IN
# - etc/evergreen_yml_components/variants/sanitizer/test_dev.yml
# - etc/evergreen_yml_components/variants/rhel/test_dev_master_branch_only.yml
# - etc/evergreen_yml_components/variants/wiredtiger/test_dev_master_branch_only.yml
# ANY MODIFICATIONS HERE SHOULD ALSO BE MADE IN THOSE FILES
- &generic_linux_compile_params  # Essential set of compile parameters used for Linux dev variants.
  run_on:
  - rhel80-xlarge
  activate: true  # These compile variants run on every commit to reduce latency of the auto-reverter.
  tasks:
  - name: compile_test_parallel_core_stream_TG
  - name: compile_test_parallel_unittest_stream_TG
  - name: compile_test_parallel_dbtest_stream_TG
  - name: generate_buildid_to_debug_symbols_mapping

# THIS HAS COPIES IN
# - etc/evergreen_yml_components/variants/sanitizer/test_dev.yml
# - etc/evergreen_yml_components/variants/rhel/test_dev_master_branch_only.yml
# - etc/evergreen_yml_components/variants/wiredtiger/test_dev_master_branch_only.yml
# ANY MODIFICATIONS HERE SHOULD ALSO BE MADE IN THOSE FILES
- &generic_linux_compile_expansions  # The most commonly used compile expansions.
  scons_cache_scope: shared
  scons_cache_mode: all
  has_packages: false

# THIS HAS COPIES IN:
# - etc/evergreen_yml_components/variants/rhel/test_dev_master_branch_only.yml
# - etc/evergreen_yml_components/variants/rhel/test_dev.yml
# - etc/evergreen_yml_components/variants/sanitizer/test_dev_master_branch_only.yml
# ANY MODIFICATIONS HERE SHOULD ALSO BE MADE IN THOSE FILES
- &linux_x86_dynamic_compile_variant_dependency
  depends_on:
  - name: archive_dist_test_debug
    variant: &linux_x86_dynamic_compile_variant_name linux-x86-dynamic-compile
  - name: version_gen
    variant: generate-tasks-for-version
    # This is added because of EVG-18211.
    # Without this we are adding extra dependencies on evergreen and it is causing strain
    omit_generated_tasks: true
  # - name: generate_buildid_to_debug_symbols_mapping
  #   variant: linux-x86-dynamic-compile

# THIS HAS COPIES IN:
# - etc/evergreen_yml_components/variants/rhel/test_dev_master_branch_only.yml
# - etc/evergreen_yml_components/variants/rhel/test_dev.yml
# - etc/evergreen_yml_components/variants/sanitizer/test_dev_master_branch_only.yml
# ANY MODIFICATIONS HERE SHOULD ALSO BE MADE IN THOSE FILES
- &linux_x86_generic_expansions
  multiversion_platform: rhel80
  multiversion_edition: enterprise
  repo_edition: enterprise
  large_distro_name: rhel80-medium
  core_analyzer_distro_name: rhel80-xlarge
  num_scons_link_jobs_available: 0.99
  compile_variant: *linux_x86_dynamic_compile_variant_name

# THIS HAS COPIES IN:
# - etc/evergreen_yml_components/variants/rhel/test_dev_master_branch_only.yml
# - etc/evergreen_yml_components/variants/rhel/test_dev.yml
# - etc/evergreen_yml_components/variants/sanitizer/test_dev_master_branch_only.yml
# ANY MODIFICATIONS HERE SHOULD ALSO BE MADE IN THOSE FILES
- &enterprise-rhel-80-64-bit-dynamic-expansions
  <<: *linux_x86_generic_expansions
  scons_cache_scope: shared
  scons_cache_mode: all
  has_packages: false
  jstestfuzz_num_generated_files: 40
  jstestfuzz_concurrent_num_files: 10
  target_resmoke_time: 10
  max_sub_suites: 5
  idle_timeout_factor: 1.5
  exec_timeout_factor: 1.5
  large_distro_name: rhel80-medium

- &enterprise-rhel-79-64-bit-template
  name: enterprise-rhel-79-64-bit
  display_name: "Enterprise RHEL 7.9"
  cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
  modules:
  - enterprise
  run_on:
  - rhel7.9-small
  expansions: &enterprise-rhel-79-64-bit-expansions-template
    additional_package_targets: >-
      archive-mongocryptd
      archive-mongocryptd-debug
    push_path: linux
    push_bucket: downloads.10gen.com
    push_name: linux
    push_arch: x86_64-enterprise-rhel79
    compile_flags: >-
      --ssl
      MONGO_DISTMOD=rhel79
      -j$(grep -c ^processor /proc/cpuinfo)
      --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars
      --use-diagnostic-latches=on
    crypt_task_compile_flags: >-
      SHLINKFLAGS_EXTRA="-Wl,-Bsymbolic -Wl,--no-gnu-unique"
      CCFLAGS="-fno-gnu-unique"
    multiversion_platform: rhel7.9-small
    multiversion_edition: enterprise
    has_packages: true
    packager_script: packager_enterprise.py
    packager_arch: x86_64
    packager_distro: rhel7.9-small
    repo_edition: enterprise
    scons_cache_scope: shared
  tasks:
  - name: compile_test_and_package_serial_no_unittests_TG
    distros:
    - rhel7.9-small
  - name: compile_build_tools_next_TG
    distros:
    - rhel7.9-small
  - name: .aggfuzzer !.feature_flag_guarded
  - name: audit
  - name: auth_audit_gen
  - name: auth_gen
  - name: causally_consistent_jscore_txns_passthrough
  - name: .config_fuzzer !.large
  - name: .encrypt !.sharding !.replica_sets !.aggregation !.jscore
  - name: external_auth
  - name: external_auth_aws
  - name: .jscore .common !.decimal !.sharding
  - name: jsCore_txns_large_txns_format
  - name: .jstestfuzz .common
  - name: libunwind_tests
  - name: .ocsp
  - name: replica_sets_auth_gen
  - name: replica_sets_jscore_passthrough_gen
  - name: .replica_sets .multi_oplog
  - name: sasl
  - name: search
  - name: search_auth
  - name: search_pinned_connections_auth
  - name: search_ssl
  - name: sharding_auth_audit_gen
  - name: .stitch
  - name: .crypt
  - name: unittest_shell_hang_analyzer_gen
  - name: test_packages
    distros:
    - ubuntu2004-package
  - name: .timeseries_crud
  - name: vector_search
  - name: vector_search_auth
  - name: vector_search_ssl
  - name: selinux_rhel7_enterprise
  - name: generate_buildid_to_debug_symbols_mapping


buildvariants:
- <<: *generic_linux_compile_params
  name: &linux-x86-dynamic-compile-future-tag-multiversion linux-x86-dynamic-compile-future-tag-multiversion
  display_name: "Linux x86 Shared Library Compile (future git tag multiversion)"
  modules:
  - enterprise
  expansions:
    <<: *linux-x86-dynamic-compile-expansions
    bv_future_git_tag: r100.0.0-9999
    compile_variant: *linux-x86-dynamic-compile-future-tag-multiversion
  tasks:
  - name: version_expansions_future_git_tag_multiversion_gen
  - name: compile_test_serial_future_git_tag_multiversion_TG

- <<: *linux-x86-dynamic-compile-params
  name: &linux-stitch-compile-suggested linux-stitch-compile-suggested
  display_name: "* Linux x86 Stitch Enterprise Compile"
  expansions:
    <<: *linux-x86-dynamic-compile-expansions
    compile_variant: *linux-stitch-compile-suggested
  tasks:
    - name: .stitch

- <<: *linux-x86-dynamic-compile-params
  name: &linux-crypt-compile linux-crypt-compile
  display_name: "* Linux x86 Crypt Enterprise Compile"
  expansions:
    <<: *linux-x86-dynamic-compile-expansions
    crypt_task_compile_flags: >-
      SHLINKFLAGS_EXTRA="-Wl,-Bsymbolic
      -Wl,--no-gnu-unique"
      CCFLAGS="-fno-gnu-unique"
    compile_variant: *linux-crypt-compile
  tasks:
    - name: .crypt
    - name: crypt_build_debug_and_test

- <<: *generic_linux_compile_params
  name: &linux-x86-dynamic-grpc-suggested linux-x86-dynamic-grpc-suggested
  display_name: "* Linux x86 Shared Library with GRPC"
  modules:
    - enterprise
  stepback: false
  expansions:
    <<: *generic_linux_compile_expansions
    compile_flags: >-
      --ssl
      MONGO_DISTMOD=rhel80
      -j$(grep -c ^processor /proc/cpuinfo)
      --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars
      --link-model=dynamic
      ENABLE_GRPC_BUILD=1
      --use-diagnostic-latches=on
    compile_variant: *linux-x86-dynamic-grpc-suggested
    clang_tidy_toolchain: v4
    large_distro_name: rhel80-xlarge
    test_flags: >-
      --additionalFeatureFlags "featureFlagGRPC"
      --excludeWithAnyTags=requires_external_data_source,requires_mongobridge,requires_auth,grpc_incompatible,creates_and_authenticates_user
      --tlsMode preferTLS
      --tlsCAFile jstests/libs/ca.pem
      --shellTls
      --shellTlsCertificateKeyFile jstests/libs/client.pem
      --mongosTlsCertificateKeyFile jstests/libs/server.pem
      --mongodTlsCertificateKeyFile jstests/libs/server.pem
      --shellGRPC
  tasks:
    - name: compile_ninja_quick_TG
    - name: compile_test_parallel_unittest_stream_TG
    - name: compile_test_parallel_core_stream_TG
    - name: compile_test_parallel_dbtest_stream_TG
    - name: generate_buildid_to_debug_symbols_mapping
    # sharding_uninitialized_fcv_jscore_passthrough_gen spawns too many connections
    # and processes to be used with TLS on a single host.
    - name: .jscore .common !sharding_uninitialized_fcv_jscore_passthrough_gen !.auth !.sharding !.txns
    - name: .lint
    - name: libdeps_graph_linting_TG
      distros:
      - rhel80-large
    - name: clang_tidy_TG
      distros:
      - rhel80-xxlarge

- &enterprise-rhel-80-64-bit-dynamic-all-feature-flags-template
  <<: *linux_x86_dynamic_compile_variant_dependency
  name: &enterprise-rhel-80-64-bit-dynamic-all-feature-flags enterprise-rhel-80-64-bit-dynamic-all-feature-flags
  display_name: "* Shared Library Enterprise RHEL 8.0 (all feature flags)"
  cron: "0 */4 * * *" # From the ${project_required_suggested_cron} parameter
  modules:
  - enterprise
  run_on:
  - rhel80-small
  stepback: false
  expansions: &enterprise-rhel-80-64-bit-dynamic-all-feature-flags-expansions
    <<: *enterprise-rhel-80-64-bit-dynamic-expansions
    # To force disable feature flags even on the all feature flags variant, please use this file:
    # buildscripts/resmokeconfig/fully_disabled_feature_flags.yml
    test_flags: >-
      --runAllFeatureFlagTests
    # Uncomment expansion and `burn_in_tasks_gen` task below and add resmoke task name to burn-in.
    # WARNING! Task splitting is not supported for burn-in tasks. Large unsplitted `_gen` tasks may
    # run too long and hit execution timeouts.
    # burn_in_task_name: jsCore
  depends_on:
  - name: archive_dist_test_debug
    variant: *linux_x86_dynamic_compile_variant_name
  - name: version_gen
    variant: generate-tasks-for-version
    # This is added because of EVG-18211.
    # Without this we are adding extra dependencies on evergreen and it is causing strain
    omit_generated_tasks: true
  tasks:
  - name: analyze_shard_key_jscore_passthrough_gen
  - name: query_golden_classic
  - name: lint_fuzzer_sanity_patch
  - name: test_api_version_compatibility
  # - name: burn_in_tasks_gen
  #   depends_on:
  #   - name: version_burn_in_gen
  #     variant: generate-tasks-for-version
  #     omit_generated_tasks: true
  #   - name: archive_dist_test_debug
  #     variant: *linux_x86_dynamic_compile_variant_name
  - name: check_feature_flag_tags
  - name: check_for_todos
  - name: .aggfuzzer !.cqf_only
  - name: .aggregation
  - name: aggregation_repeat_queries
  - name: audit
  - name: .auth
  - name: buildscripts_test
  - name: .bulk_write
  - name: resmoke_end2end_tests
  - name: unittest_shell_hang_analyzer_gen
  - name: .causally_consistent !.sharding
  - name: .change_streams
  - name: .change_stream_fuzzer
  # TODO SERVER-57866: Remove the explicit mentions of change stream multitenant suites.
  - name: change_streams_multitenant_passthrough
  - name: change_streams_multitenant_sharded_collections_passthrough
  - name: .misc_js
  - name: .clustered_collections
  - name: .concurrency !.large !.no_txns
  - name: .concurrency .large !.no_txns
    distros:
    - rhel80-medium
  - name: .config_fuzzer !.large
  - name: .config_fuzzer .large
    distros:
    - rhel80-medium
  - name: .config_fuzzer_stress
    distros:
    - rhel80-large
  - name: disk_wiredtiger
  - name: .encrypt
  - name: feature_flag_multiversion_gen
  - name: idl_tests
  - name: index_filters_to_query_settings
  - name: cursor_hints_to_query_settings
  - name: initial_sync_fuzzer_gen
  - name: fcv_upgrade_downgrade_replica_sets_jscore_passthrough_gen
  - name: fcv_upgrade_downgrade_sharding_jscore_passthrough_gen
  - name: fcv_upgrade_downgrade_sharded_collections_jscore_passthrough_gen
  - name: .jscore .common
  - name: jsCore_column_store_indexes
  - name: jsCore_min_batch_repeat_queries_ese_gsm
  - name: jsCore_txns_large_txns_format
  - name: jsCore_wildcard_indexes
  - name: json_schema
  - name: .jstestfuzz !.flow_control  # Flow control jstestfuzz take longer.
  - name: libunwind_tests
  - name: .multiversion_sanity_check
  - name: .multi_shard
  - name: multi_stmt_txn_jscore_passthrough_with_migration_gen
  - name: multiversion_gen
  - name: powercycle_smoke
  - name: .query_fuzzer !.cqf_only
  - name: .random_multiversion_ds
  - name: .read_write_concern .large
    distros:
    - rhel80-medium
  - name: .read_write_concern !.large
  - name: .replica_sets !.encrypt !.auth
    distros:
    - rhel80-medium
  - name: replica_sets_api_version_jscore_passthrough_gen
  - name: replica_sets_reconfig_jscore_passthrough_gen
  - name: replica_sets_reconfig_jscore_stepdown_passthrough_gen
    distros:
    - rhel80-medium
  - name: replica_sets_reconfig_kill_primary_jscore_passthrough_gen
    distros:
    - rhel80-medium
  - name: change_streams_pre_images_replica_sets_stepdown_primary_jscore_passthrough_gen
    distros:
    - rhel80-medium
  - name: change_streams_pre_images_replica_sets_kill_secondary_jscore_passthrough_gen
    distros:
    - rhel80-medium
  - name: change_streams_change_collection_replica_sets_stepdown_primary_jscore_passthrough_gen
    distros:
    - rhel80-medium
  - name: change_streams_change_collection_replica_sets_kill_secondary_jscore_passthrough_gen
    distros:
    - rhel80-medium
  - name: retryable_writes_jscore_passthrough_gen
  - name: retryable_writes_jscore_stepdown_passthrough_gen
    distros:
    - rhel80-medium
  - name: .read_only
  - name: .rollbackfuzzer
  - name: sasl
  - name: search
  - name: search_auth
  - name: search_pinned_connections_auth
  - name: search_ssl
  - name: session_jscore_passthrough
  - name: .sharding .jscore !.wo_snapshot !.multi_stmt
  - name: sharding_api_version_jscore_passthrough_gen
  - name: sharding_api_strict_passthrough_gen
  - name: .sharding .txns
  - name: .sharding .common
  - name: sharded_collections_single_writes_without_shard_key_jscore_passthrough_gen
  - name: sharded_multi_stmt_txn_jscore_passthrough
  - name: .serverless
  - name: sharding_max_mirroring_opportunistic_secondary_targeting_ese_gcm_gen
  - name: .unsplittable_collections
  - name: .updatefuzzer
  - name: secondary_reads_passthrough_gen
  - name: .shard_split
  - name: streams
  - name: streams_kafka
  - name: vector_search
  - name: vector_search_auth
  - name: vector_search_ssl
  - name: query_stats_aggregation_passthrough
  - name: query_stats_mongos_aggregation_passthrough
  - name: query_stats_mongos_passthrough
  - name: query_stats_passthrough

- name: &enterprise-rhel-80-64-bit-suggested enterprise-rhel-80-64-bit-suggested
  display_name: "* Enterprise RHEL 8.0"
  cron: "0 4 * * *" # From the ${project_nightly_cron} parameter
  modules:
  - enterprise
  run_on:
  - rhel80-build
  expansions:
    additional_package_targets: >-
      archive-mongocryptd
      archive-mongocryptd-debug
    compile_flags: >-
      --ssl
      MONGO_DISTMOD=rhel80
      -j$(grep -c ^processor /proc/cpuinfo)
      --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars
      --use-diagnostic-latches=on
    multiversion_platform: rhel80
    multiversion_edition: enterprise
    has_packages: true
    packager_script: packager_enterprise.py
    packager_arch: x86_64
    packager_distro: rhel80
    repo_edition: enterprise
    scons_cache_scope: shared
    large_distro_name: rhel80-large
    core_analyzer_distro_name: rhel80-xlarge
    compile_variant: *enterprise-rhel-80-64-bit-suggested
  tasks:
  - name: compile_test_and_package_serial_no_unittests_TG
    distros:
    - rhel80-xlarge
  - name: .aggfuzzer !.feature_flag_guarded
  - name: audit
  - name: auth_audit_gen
  - name: auth_gen
  - name: causally_consistent_jscore_txns_passthrough
  - name: .encrypt !.sharding !.replica_sets !.aggregation !.jscore
  - name: external_auth
  - name: external_auth_aws
  - name: external_auth_oidc
  - name: .jscore .common !.decimal !.sharding
  - name: jsCore_txns_large_txns_format
  - name: .jstestfuzz .common
  - name: libunwind_tests
  - name: replica_sets_auth_gen
  - name: replica_sets_jscore_passthrough_gen
  - name: timeseries_crud_jscore_passthrough_gen
  - name: .replica_sets .multi_oplog !.encrypt
  - name: replica_sets_max_mirroring_large_txns_format_gen
  - name: sasl
  - name: search
  - name: search_auth
  - name: search_pinned_connections_auth
  - name: search_ssl
  - name: sharding_auth_audit_gen
  - name: .stitch
  - name: test_packages
    distros:
    - ubuntu2004-package
  - name: vector_search
  - name: vector_search_auth
  - name: vector_search_ssl
  - name: selinux_rhel8_enterprise
  - name: generate_buildid_to_debug_symbols_mapping

- name: &enterprise-rhel-80-benchmarks enterprise-rhel-80-benchmarks
  display_name: "* Enterprise RHEL 8.0 (Benchmarks)"
  cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
  modules:
  - enterprise
  run_on:
  - rhel80-medium
  expansions:
    compile_flags: >-
      --ssl
      MONGO_DISTMOD=rhel80
      -j$(grep -c ^processor /proc/cpuinfo)
      --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars
      --use-diagnostic-latches=on
    scons_cache_scope: shared
    compile_variant: *enterprise-rhel-80-benchmarks
  tasks:
  - name: compile_upload_benchmarks_TG
  - name: .benchmarks

- <<: *linux_x86_dynamic_compile_variant_dependency
  name: &enterprise-rhel-80-64-bit-large-txns-format enterprise-rhel-80-64-bit-large-txns-format
  display_name: "Enterprise RHEL 8.0 (large transactions format)"
  cron: "0 4 * * 0" # From the ${project_weekly_cron} parameter
  modules:
  - enterprise
  run_on:
  - rhel80-small
  expansions:
    <<: *linux_x86_generic_expansions
    test_flags: >-
      --mongodSetParameters="{maxNumberOfTransactionOperationsInSingleOplogEntry: 2}"
      --excludeWithAnyTags=exclude_from_large_txns
  tasks:
  - name: auth_gen
  - name: auth_audit_gen
  - name: causally_consistent_jscore_txns_passthrough
  - name: change_streams
  - name: change_streams_whole_db_passthrough
  - name: change_streams_whole_cluster_passthrough
  - name: concurrency_replication_gen
  - name: concurrency_replication_multi_stmt_txn_gen
  - name: concurrency_sharded_replication_gen
  - name: concurrency_sharded_replication_with_balancer_gen
  - name: concurrency_sharded_clusterwide_ops_add_remove_shards_gen
  - name: concurrency_sharded_local_read_write_multi_stmt_txn_gen
  - name: concurrency_sharded_local_read_write_multi_stmt_txn_with_balancer_gen
  - name: concurrency_sharded_multi_stmt_txn_gen
  - name: concurrency_sharded_multi_stmt_txn_with_balancer_gen
  - name: concurrency_sharded_multi_stmt_txn_with_stepdowns_gen
  - name: concurrency_sharded_with_stepdowns_gen
  - name: concurrency_sharded_with_stepdowns_and_balancer_gen
  - name: concurrency_sharded_initial_sync_gen
  - name: initial_sync_fuzzer_gen
  - name: fcv_upgrade_downgrade_replica_sets_jscore_passthrough_gen
  - name: fcv_upgrade_downgrade_sharding_jscore_passthrough_gen
  - name: fcv_upgrade_downgrade_sharded_collections_jscore_passthrough_gen
  - name: jsCore
  - name: jsCore_txns
  - name: .multi_shard
  - name: multi_stmt_txn_jscore_passthrough_with_migration_gen
  - name: multiversion_auth_gen
  - name: multiversion_gen
  - name: noPassthrough_gen
  - name: .replica_sets !.multi_oplog !.large
  - name: .replica_sets !.multi_oplog .large
    distros:
    - rhel80-medium
  - name: .replica_sets .encrypt
  - name: .resharding_fuzzer
  - name: .rollbackfuzzer
  - name: .sharding .txns
  - name: sharding_gen
  - name: sharding_auth_audit_gen
  - name: sharding_max_mirroring_opportunistic_secondary_targeting_ese_gen
  - name: sharding_max_mirroring_opportunistic_secondary_targeting_ese_gcm_gen
  - name: sharding_csrs_continuous_config_stepdown_gen
  - name: sharded_multi_stmt_txn_jscore_passthrough
    distros:
    - rhel80-medium

# This build variant is used to run multiversion tests as part of burn_in_tags as these tests are
# currently only run on our daily builders.
- &linux-x86-multiversion-template
  <<: *linux_x86_dynamic_compile_variant_dependency
  name: &enterprise-rhel-80-64-bit-multiversion enterprise-rhel-80-64-bit-multiversion
  display_name: "Enterprise RHEL 8.0 (implicit multiversion)"
  cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
  modules:
  - enterprise
  run_on:
  - rhel80-small
  expansions: &linux-x86-multiversion-expansions-template
    <<: *linux_x86_generic_expansions
    resmoke_jobs_factor: 0.25
  tasks:
  - name: .multiversion_fuzzer
  - name: .multiversion_passthrough
  - name: .random_multiversion_ds

- <<: *linux-x86-multiversion-template
  name: &enterprise-rhel-80-64-bit-multiversion-all-feature-flags enterprise-rhel-80-64-bit-multiversion-all-feature-flags
  display_name: "Enterprise RHEL 8.0 (implicit multiversion & all feature flags)"
  expansions:
    <<: *linux-x86-multiversion-expansions-template
    # No feature flag tests since they aren't compatible with the older binaries.
    test_flags: >-
      --runNoFeatureFlagTests

# This variant exists becuase this is the only way to test future multiversion tags
# version_expansions_gen will pretend we are upgrading to "bv_future_git_tag"
# which is like simulating a branching task
- &enterprise-rhel-80-64-bit-future-git-tag-multiversion-template
  <<: *linux-x86-multiversion-template
  name: &enterprise-rhel-80-64-bit-future-git-tag-multiversion enterprise-rhel-80-64-bit-future-git-tag-multiversion
  display_name: "Enterprise RHEL 8.0 (future git tag multiversion)"
  expansions:
    <<: *linux_x86_generic_expansions
    scons_cache_scope: shared
    scons_cache_mode: all
    resmoke_jobs_factor: 0.5
    bv_future_git_tag: r100.0.0-9999
    compile_variant: linux-x86-dynamic-compile-future-tag-multiversion
    test_flags: >-
      --excludeWithAnyTags=future_git_tag_incompatible
  depends_on:
  - name: version_gen
    variant: generate-tasks-for-version
    # This is added because of EVG-18211.
    # Without this we are adding extra dependencies on evergreen and it is causing strain
    omit_generated_tasks: true
  - name: archive_dist_test_debug_future_git_tag_multiversion
    variant: linux-x86-dynamic-compile-future-tag-multiversion
  tasks:
  - name: .multiversion !.future_git_tag_incompatible
  - name: .multiversion_future_git_tag
  # This task does not work because it depends on archive_dist_test_debug
  # Because we override the task dependencies in the future git tag varients we can't have
  # multiple tasks in one varient depend on muliple different compile variant tasks
  # If we decide we need this task we can add it to its own variant that depends on archive_dist_test_debug
  # - name: generate_buildid_to_debug_symbols_mapping

- <<: *enterprise-rhel-79-64-bit-template
  name: &hot_backups-rhel-79-64-bit hot_backups-rhel-79-64-bit
  display_name: "hot_backups RHEL 7.9"
  cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
  run_on:
  - rhel7.9-small
  expansions:
    <<: *enterprise-rhel-79-64-bit-expansions-template
    additional_package_targets: ""
    compile_flags: >-
      --ssl
      MONGO_DISTMOD=rhel79
      -j$(grep -c ^processor /proc/cpuinfo)
      --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars
      --enterprise-features=hot_backups
      --link-model=dynamic
      --use-diagnostic-latches=on
    compile_variant: *hot_backups-rhel-79-64-bit
    has_packages: false
    scons_cache_mode: all
    scons_cache_scope: shared
    num_scons_link_jobs_available: 0.99
  tasks:
  - name: compile_test_parallel_core_stream_TG
  - name: compile_test_parallel_unittest_stream_TG
  - name: compile_test_parallel_dbtest_stream_TG
  - name: jsCore
  - name: noPassthroughHotBackups_gen
  - name: generate_buildid_to_debug_symbols_mapping

- name: &enterprise-rhel80-no-latch-64-bit enterprise-rhel80-no-latch-64-bit
  display_name: "~ Enterprise RHEL 8.0 (without Diagnostic Latches)"
  cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
  modules:
  - enterprise
  expansions:
    compile_flags: >-
      MONGO_DISTMOD=rhel80
      -j$(grep -c ^processor /proc/cpuinfo)
      --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars
      --link-model=dynamic
    scons_cache_mode: all
    scons_cache_scope: shared
    num_scons_link_jobs_available: 0.99
    compile_variant: *enterprise-rhel80-no-latch-64-bit
  tasks:
  - name: compile_test_parallel_core_stream_TG
    distros:
    - rhel80-build
  - name: compile_test_parallel_unittest_stream_TG
    distros:
    - rhel80-build
  - name: compile_test_parallel_dbtest_stream_TG
    distros:
    - rhel80-build
  - name: generate_buildid_to_debug_symbols_mapping
    distros:
    - rhel80-build

- name: &enterprise-rhel80-sdam-replica-set-monitor-64-bit enterprise-rhel80-sdam-replica-set-monitor-64-bit
  display_name: "~ Enterprise RHEL 8.0 (with SdamReplicaSetMonitor)"
  cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
  modules:
  - enterprise
  run_on:
  - rhel80-small
  expansions:
    <<: *linux_x86_generic_expansions
    compile_flags: >-
      MONGO_DISTMOD=rhel80
      -j$(grep -c ^processor /proc/cpuinfo)
      --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars
      --link-model=dynamic
      --use-diagnostic-latches=on
    test_flags: >-
      --mongosSetParameters="{replicaSetMonitorProtocol: sdam}"
      --mongodSetParameters="{replicaSetMonitorProtocol: sdam}"
      --excludeWithAnyTags=requires_streamable_rsm
    large_distro_name: rhel80-build
    compile_variant: *enterprise-rhel80-sdam-replica-set-monitor-64-bit
  tasks:
  - name: compile_test_parallel_core_stream_TG
    distros:
    - rhel80-build
  - name: compile_test_parallel_unittest_stream_TG
    distros:
    - rhel80-build
  - name: compile_test_parallel_dbtest_stream_TG
    distros:
    - rhel80-build
  - name: compile_integration_and_test_parallel_stream_TG
    distros:
    - rhel80-large
  - name: .aggregation !.no_async !.feature_flag_guarded
  - name: sharding_auth_gen
  - name: .sharding .causally_consistent !.wo_snapshot
  - name: .concurrency .common !.kill_terminate
  - name: .jscore .common
  - name: .sharding .jscore !.wo_snapshot !.multi_stmt
  - name: .sharding .common !.csrs !.encrypt
  - name: sharding_max_mirroring_opportunistic_secondary_targeting_gen
  - name: generate_buildid_to_debug_symbols_mapping

- name: &enterprise-rhel80-sharding-task-executor-pool-rsm-matchPrimary-64-bit enterprise-rhel80-sharding-task-executor-pool-rsm-matchPrimary-64-bit
  display_name: "~ Enterprise RHEL 8.0 (with {ShardingTaskExecutorPoolReplicaSetMatching: \"matchPrimaryNode\"})"
  cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
  modules:
  - enterprise
  run_on:
  - rhel80-small
  expansions:
    <<: *linux_x86_generic_expansions
    compile_flags: >-
      MONGO_DISTMOD=rhel80
      -j$(grep -c ^processor /proc/cpuinfo)
      --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars
      --link-model=dynamic
      --use-diagnostic-latches=on
    test_flags: >-
      --mongosSetParameters="ShardingTaskExecutorPoolReplicaSetMatching: \"matchPrimaryNode\""
      --excludeWithAnyTags=sets_replica_set_matching_strategy
    large_distro_name: rhel80-build
    compile_variant: *enterprise-rhel80-sharding-task-executor-pool-rsm-matchPrimary-64-bit
  tasks:
  - name: compile_test_parallel_core_stream_TG
    distros:
    - rhel80-build
  - name: compile_test_parallel_unittest_stream_TG
    distros:
    - rhel80-build
  - name: compile_test_parallel_dbtest_stream_TG
    distros:
    - rhel80-build
  - name: compile_integration_and_test_parallel_stream_TG
    distros:
    - rhel80-large
  - name: .aggregation !.no_async !.feature_flag_guarded
  - name: sharding_auth_gen
  - name: .sharding .causally_consistent !.wo_snapshot
  - name: .concurrency .common !.kill_terminate
  - name: .jscore .common
  - name: .sharding .jscore !.wo_snapshot !.multi_stmt
  - name: .sharding .common !.csrs !.encrypt
  - name: sharding_max_mirroring_opportunistic_secondary_targeting_gen
  - name: generate_buildid_to_debug_symbols_mapping

- name: &enterprise-rhel80-sharding-task-executor-pool-rsm-matchBusiest-64-bit enterprise-rhel80-sharding-task-executor-pool-rsm-matchBusiest-64-bit
  display_name: "~ Enterprise RHEL 8.0 (with {ShardingTaskExecutorPoolReplicaSetMatching: \"matchBusiestNode\"})"
  cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
  run_on:
  - rhel80-small
  modules:
  - enterprise
  expansions:
    <<: *linux_x86_generic_expansions
    scons_cache_scope: shared
    scons_cache_mode: all
    num_scons_link_jobs_available: 0.99
    compile_flags: >-
      MONGO_DISTMOD=rhel80
      -j$(grep -c ^processor /proc/cpuinfo)
      --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars
      --link-model=dynamic
      --use-diagnostic-latches=on
    multiversion_platform: rhel80
    multiversion_edition: enterprise
    test_flags: >-
      --mongosSetParameters="ShardingTaskExecutorPoolReplicaSetMatching: \"matchBusiestNode\""
      --excludeWithAnyTags=sets_replica_set_matching_strategy
    large_distro_name: rhel80-build
    compile_variant: *enterprise-rhel80-sharding-task-executor-pool-rsm-matchBusiest-64-bit
  tasks:
  - name: compile_test_parallel_core_stream_TG
    distros:
    - rhel80-build
  - name: compile_test_parallel_unittest_stream_TG
    distros:
    - rhel80-build
  - name: compile_test_parallel_dbtest_stream_TG
    distros:
    - rhel80-build
  - name: compile_integration_and_test_parallel_stream_TG
    distros:
    - rhel80-large
  - name: .aggregation !.no_async !.feature_flag_guarded
  - name: sharding_auth_gen
  - name: .sharding .causally_consistent !.wo_snapshot
  - name: .concurrency .common !.kill_terminate
  - name: .jscore .common
  - name: .sharding .jscore !.wo_snapshot !.multi_stmt
  - name: .sharding .common !.csrs !.encrypt
  - name: sharding_max_mirroring_opportunistic_secondary_targeting_gen
  - name: generate_buildid_to_debug_symbols_mapping

- name: &enterprise-rhel80-sharding-task-executor-pool-rsm-disabled-64-bit enterprise-rhel80-sharding-task-executor-pool-rsm-disabled-64-bit
  display_name: "~ Enterprise RHEL 8.0 (with {ShardingTaskExecutorPoolReplicaSetMatching: \"disabled\"})"
  cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
  run_on:
  - rhel80-small
  modules:
  - enterprise
  expansions:
    <<: *linux_x86_generic_expansions
    scons_cache_scope: shared
    scons_cache_mode: all
    num_scons_link_jobs_available: 0.99
    compile_flags: >-
      MONGO_DISTMOD=rhel80
      -j$(grep -c ^processor /proc/cpuinfo)
      --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars
      --link-model=dynamic
      --use-diagnostic-latches=on
    multiversion_platform: rhel80
    multiversion_edition: enterprise
    test_flags: >-
      --mongosSetParameters="ShardingTaskExecutorPoolReplicaSetMatching: \"disabled\""
      --excludeWithAnyTags=sets_replica_set_matching_strategy
    large_distro_name: rhel80-build
    compile_variant: *enterprise-rhel80-sharding-task-executor-pool-rsm-disabled-64-bit
  tasks:
  - name: compile_test_parallel_core_stream_TG
    distros:
    - rhel80-build
  - name: compile_test_parallel_unittest_stream_TG
    distros:
    - rhel80-build
  - name: compile_test_parallel_dbtest_stream_TG
    distros:
    - rhel80-build
  - name: compile_integration_and_test_parallel_stream_TG
    distros:
    - rhel80-large
  - name: .aggregation !.no_async !.feature_flag_guarded
  - name: sharding_auth_gen
  - name: .sharding .causally_consistent !.wo_snapshot
  - name: .concurrency .common !.kill_terminate
  - name: .jscore .common
  - name: .sharding .jscore !.wo_snapshot !.multi_stmt
  - name: .sharding .common !.csrs !.encrypt
  - name: sharding_max_mirroring_opportunistic_secondary_targeting_gen
  - name: generate_buildid_to_debug_symbols_mapping

- name: &enterprise-rhel80-join-ingress-sessions-on-shutdown enterprise-rhel80-join-ingress-sessions-on-shutdown
  display_name: "~ Enterprise RHEL 8.0 (with {joinIngressSessionsOnShutdown: \"true\"})"
  activate: false
  run_on:
    - rhel80-small
  modules:
  - enterprise
  expansions:
    <<: *linux_x86_generic_expansions
    scons_cache_scope: shared
    compile_flags: >-
      MONGO_DISTMOD=rhel80
      -j$(grep -c ^processor /proc/cpuinfo)
      --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars
      --link-model=dynamic
      --use-diagnostic-latches=on
    multiversion_platform: rhel80
    multiversion_edition: enterprise
    test_flags: >-
        --mongosSetParameters="joinIngressSessionsOnShutdown: \"true\""
        --mongodSetParameters="joinIngressSessionsOnShutdown: \"true\""
    large_distro_name: rhel80-build
    compile_variant: *enterprise-rhel80-join-ingress-sessions-on-shutdown
  tasks:
  - name: compile_test_serial_TG
    distros:
    - rhel80-build
  - name: compile_test_parallel_unittest_stream_TG
    distros:
    - rhel80-build
    patch_only: true
  - name: compile_integration_and_test_no_audit_parallel_stream_TG
    distros:
    - rhel80-large
    patch_only: true
  - name: .aggregation !.no_async !.feature_flag_guarded
    patch_only: true
  - name: sharding_auth_gen
    patch_only: true
  - name: .sharding .causally_consistent !.wo_snapshot
    patch_only: true
  - name: .concurrency .common !.kill_terminate
    patch_only: true
  - name: .jscore .common
    patch_only: true
  - name: .sharding .jscore !.wo_snapshot !.multi_stmt
    patch_only: true
  - name: .sharding .common !.csrs !.encrypt
    patch_only: true
  - name: sharding_max_mirroring_opportunistic_secondary_targeting_gen
    patch_only: true

# The CQF feature flag is currently part of the always-disabled feature flags list, so it is not
# enabled in all-feature-flags variants besides this one. This variant allows us to get some initial
# coverage for CQF without disrupting coverage for other feature flags (in particular, SBE). Once
# CQF is enabled by default, it will be tested in the release variants and all-feature-flags
# variants, and we will no longer need this dedicated variant to test it. At that point, we will
# replace this variant with a dedicated variant for SBE stage builders, similar in spirit to the
# Classic Engine variant above.
# TODO SERVER-71163: Replace this variant with a dedicated variant for stage builders once the CQF
# feature flag is not always-disabled.
- &enterprise-rhel-80-64-bit-dynamic-all-feature-flags-required-and-cqf-enabled-template
  <<: *enterprise-rhel-80-64-bit-dynamic-all-feature-flags-template
  name: enterprise-rhel-80-64-bit-dynamic-all-feature-flags-required-and-cqf-enabled
  display_name: "Shared Library Enterprise RHEL 8.0 Query (all feature flags and CQF enabled)"
  cron: "0 4 * * 0" # From the ${project_weekly_cron} parameter.
  expansions:
    <<: *enterprise-rhel-80-64-bit-dynamic-all-feature-flags-expansions
    test_flags: >-
      --runAllFeatureFlagTests
      --excludeWithAnyTags=cqf_incompatible
      --mongosSetParameters="{featureFlagCommonQueryFramework: true, internalQueryFrameworkControl: 'tryBonsai'}"
      --mongodSetParameters="{featureFlagCommonQueryFramework: true, internalQueryFrameworkControl: 'tryBonsai'}"
  tasks:
  - name: analyze_shard_key_jscore_passthrough_gen
  - name: .cqf
  - name: lint_fuzzer_sanity_patch
  - name: test_api_version_compatibility
  # - name: burn_in_tasks_gen
  #   depends_on:
  #   - name: version_burn_in_gen
  #     variant: generate-tasks-for-version
  #     omit_generated_tasks: true
  #   - name: archive_dist_test_debug
  #     variant: *linux_x86_dynamic_compile_variant_name
  - name: check_feature_flag_tags
  - name: check_for_todos
  - name: .aggregation
  - name: aggregation_repeat_queries
  - name: audit
  - name: .auth
  - name: buildscripts_test
  - name: .bulk_write
  - name: resmoke_end2end_tests
  - name: unittest_shell_hang_analyzer_gen
  - name: .causally_consistent !.sharding
  - name: .change_streams
  # TODO SERVER-57866: Remove the explicit mentions of change stream multitenant suites.
  - name: change_streams_multitenant_passthrough
  - name: change_streams_multitenant_sharded_collections_passthrough
  - name: .misc_js
  - name: .clustered_collections
  - name: .concurrency !.large !.no_txns
  - name: .concurrency .large !.no_txns
    distros:
    - rhel80-medium
  - name: .config_fuzzer !.large
  - name: .config_fuzzer .large
    distros:
    - rhel80-medium
  - name: .config_fuzzer_stress
    distros:
    - rhel80-large
  - name: disk_wiredtiger
  - name: .encrypt
  - name: feature_flag_multiversion_gen
  - name: idl_tests
  - name: initial_sync_fuzzer_gen
  - name: .jscore .common
  - name: jsCore_column_store_indexes
  - name: jsCore_min_batch_repeat_queries_ese_gsm
  - name: jsCore_txns_large_txns_format
  - name: jsCore_wildcard_indexes
  - name: json_schema
  - name: .jstestfuzz !.flow_control  # Flow control jstestfuzz take longer.
  - name: libunwind_tests
  - name: .multiversion_sanity_check
  - name: .multi_shard
  - name: multi_stmt_txn_jscore_passthrough_with_migration_gen
  - name: multiversion_gen
  - name: powercycle_smoke
  - name: .random_multiversion_ds
  - name: .read_write_concern .large
    distros:
    - rhel80-medium
  - name: .read_write_concern !.large
  - name: .replica_sets !.encrypt !.auth
    distros:
    - rhel80-medium
  - name: replica_sets_api_version_jscore_passthrough_gen
  - name: replica_sets_reconfig_jscore_passthrough_gen
  - name: replica_sets_reconfig_jscore_stepdown_passthrough_gen
    distros:
    - rhel80-medium
  - name: replica_sets_reconfig_kill_primary_jscore_passthrough_gen
    distros:
    - rhel80-medium
  - name: retryable_writes_jscore_passthrough_gen
  - name: retryable_writes_jscore_stepdown_passthrough_gen
    distros:
    - rhel80-medium
  - name: .read_only
  - name: .rollbackfuzzer
  - name: sasl
  - name: search
  - name: search_auth
  - name: search_pinned_connections_auth
  - name: search_ssl
  - name: session_jscore_passthrough
  - name: .sharding .jscore !.wo_snapshot !.multi_stmt
  - name: sharding_api_version_jscore_passthrough_gen
  - name: sharding_api_strict_passthrough_gen
  - name: .sharding .txns
  - name: .sharding .common
  - name: sharded_collections_single_writes_without_shard_key_jscore_passthrough_gen
  - name: sharded_multi_stmt_txn_jscore_passthrough
  - name: .serverless
  - name: sharding_max_mirroring_opportunistic_secondary_targeting_ese_gcm_gen
  - name: .unsplittable_collections
  - name: secondary_reads_passthrough_gen
  - name: .shard_split
  - name: streams
  - name: query_stats_aggregation_passthrough
  - name: query_stats_mongos_aggregation_passthrough
  - name: query_stats_mongos_passthrough
  - name: query_stats_passthrough

# TODO SERVER-71163: Replace this variant with a dedicated variant for stage builders once the CQF
# feature flag is not always-disabled.
- <<: *enterprise-rhel-80-64-bit-dynamic-all-feature-flags-required-and-cqf-enabled-template
  name: enterprise-rhel-80-64-bit-dynamic-all-feature-flags-and-cqf-enabled-fuzzers
  display_name: "*| Shared Library Enterprise RHEL 8.0 Query (all feature flags and CQF enabled) Fuzzers"
  tasks:
  - name: .aggfuzzer .cqf_only
  - name: .query_fuzzer .cqf_only

### QO & QE Patch-Specific Build Variants ###

- name: &enterprise-rhel-80-64-bit-dynamic-classic-engine-query-patch-only enterprise-rhel-80-64-bit-dynamic-classic-engine-query-patch-only
  display_name: "~ Shared Library Enterprise RHEL 8.0 Query Patch Only (Classic Engine)"
  cron: "0 4 * * 0" # From the ${project_weekly_cron} parameter # This is a patch-only variant but we run on mainline to pick up task history.
  modules:
  - enterprise
  run_on:
  - rhel80-small
  stepback: false
  expansions:
    <<: *enterprise-rhel-80-64-bit-dynamic-expansions
    jstestfuzz_num_generated_files: 20
    jstestfuzz_concurrent_num_files: 5
    target_resmoke_time: 30
    max_sub_suites: 3
    test_flags: >-
      --mongodSetParameters="{internalQueryFrameworkControl: forceClassicEngine}"
      --excludeWithAnyTags=resource_intensive,featureFlagSbeFull
  depends_on:
  - name: archive_dist_test_debug
    variant: *linux_x86_dynamic_compile_variant_name
  - name: version_gen
    variant: generate-tasks-for-version
    # This is added because of EVG-18211.
    # Without this we are adding extra dependencies on evergreen and it is causing strain
    omit_generated_tasks: true
  tasks:
  - name: .aggfuzzer !.sbe_only !.cqf_only
  - name: .aggregation !.sbe_only
  - name: .auth
  - name: .causally_consistent !.sharding
  - name: .change_stream_fuzzer
  - name: .change_streams
  - name: .concurrency !.large !.no_txns !.compute_mode
  - name: .concurrency .large !.no_txns !.compute_mode
    distros:
    - rhel80-medium
  - name: .encrypt
  - name: .jscore .common !jsCore !.sbe_only
  - name: .jstestfuzz !.flow_control
  - name: .misc_js
  - name: .multi_shard
  - name: .query_fuzzer !.cqf_only
  - name: query_golden_classic
  - name: .random_multiversion_ds
  - name: .read_only
  - name: .read_write_concern !.large
  - name: .read_write_concern .large
    distros:
    - rhel80-medium
  - name: .replica_sets !.encrypt !.auth
    distros:
    - rhel80-xlarge
  - name: .rollbackfuzzer
  - name: .sharding .common
  - name: .sharding .jscore !.wo_snapshot !.multi_stmt
  - name: .sharding .txns
  - name: .serverless
    distros:
    - rhel80-xlarge
  - name: .updatefuzzer
  - name: aggregation_repeat_queries
  - name: audit
  - name: burn_in_tests_gen
    depends_on:
    - name: version_burn_in_gen
      variant: generate-tasks-for-version
      omit_generated_tasks: true
    - name: archive_dist_test_debug
      variant: *linux_x86_dynamic_compile_variant_name
  - name: check_feature_flag_tags
  - name: check_for_todos
  - name: disk_wiredtiger
  - name: initial_sync_fuzzer_gen
  - name: fcv_upgrade_downgrade_replica_sets_jscore_passthrough_gen
  - name: fcv_upgrade_downgrade_sharding_jscore_passthrough_gen
  - name: fcv_upgrade_downgrade_sharded_collections_jscore_passthrough_gen
  - name: jsCore
    distros:
    - rhel80-xlarge
  - name: jsCore_min_batch_repeat_queries_ese_gsm
  - name: jsCore_txns_large_txns_format
  - name: json_schema
  - name: multi_stmt_txn_jscore_passthrough_with_migration_gen
  - name: multiversion_gen
  - name: .multiversion_sanity_check
  - name: replica_sets_api_version_jscore_passthrough_gen
  - name: replica_sets_reconfig_jscore_passthrough_gen
  - name: replica_sets_reconfig_jscore_stepdown_passthrough_gen
    distros:
    - rhel80-xlarge
  - name: replica_sets_reconfig_kill_primary_jscore_passthrough_gen
    distros:
    - rhel80-xlarge
  - name: change_streams_pre_images_replica_sets_stepdown_primary_jscore_passthrough_gen
    distros:
    - rhel80-xlarge
  - name: change_streams_pre_images_replica_sets_kill_secondary_jscore_passthrough_gen
    distros:
    - rhel80-xlarge
  - name: change_streams_change_collection_replica_sets_stepdown_primary_jscore_passthrough_gen
    distros:
    - rhel80-xlarge
  - name: change_streams_change_collection_replica_sets_kill_secondary_jscore_passthrough_gen
    distros:
    - rhel80-xlarge
  - name: retryable_writes_jscore_passthrough_gen
  - name: retryable_writes_jscore_stepdown_passthrough_gen
  - name: sasl
  - name: search
  - name: search_auth
  - name: search_pinned_connections_auth
  - name: search_ssl
  - name: secondary_reads_passthrough_gen
  - name: session_jscore_passthrough
  - name: sharding_api_version_jscore_passthrough_gen
  - name: test_api_version_compatibility
  - name: unittest_shell_hang_analyzer_gen
  - name: vector_search
  - name: vector_search_auth
  - name: vector_search_ssl

- &enterprise-rhel-80-64-bit-dynamic-classic-engine-all-feature-flags-required-query-patch-only-template
  <<: *enterprise-rhel-80-64-bit-dynamic-all-feature-flags-template
  name: enterprise-rhel-80-64-bit-dynamic-classic-engine-all-feature-flags-required-query-patch-only
  display_name: "~ Shared Library Enterprise RHEL 8.0 Query Patch Only (Classic Engine all feature flags)"
  cron: "0 4 * * 0" # From the ${project_weekly_cron} parameter # This is a patch-only variant but we run on mainline to pick up task history.
  expansions:
    <<: *enterprise-rhel-80-64-bit-dynamic-all-feature-flags-expansions
    jstestfuzz_num_generated_files: 20
    jstestfuzz_concurrent_num_files: 5
    target_resmoke_time: 30
    max_sub_suites: 3
    test_flags: >-
      --mongodSetParameters="{internalQueryFrameworkControl: forceClassicEngine}"
      --runAllFeatureFlagTests
      --excludeWithAnyTags=resource_intensive,featureFlagSbeFull
  tasks:
  - name: analyze_shard_key_jscore_passthrough_gen
  - name: query_golden_classic
  - name: lint_fuzzer_sanity_patch
  - name: test_api_version_compatibility
  - name: check_feature_flag_tags
  - name: check_for_todos
  - name: .aggregation !.sbe_only
  - name: aggregation_repeat_queries
  - name: audit
  - name: .auth
  - name: buildscripts_test
  - name: .bulk_write
  - name: resmoke_end2end_tests
  - name: unittest_shell_hang_analyzer_gen
  - name: .causally_consistent !.sharding
  - name: .change_streams
  # TODO SERVER-57866: Remove the explicit mentions of change stream multitenant suites.
  - name: change_streams_multitenant_passthrough
  - name: change_streams_multitenant_sharded_collections_passthrough
  - name: .misc_js
  - name: .clustered_collections
  - name: .concurrency !.large !.no_txns
  - name: .concurrency .large !.no_txns
    distros:
    - rhel80-medium
  - name: .config_fuzzer !.large
  - name: .config_fuzzer .large
    distros:
    - rhel80-medium
  - name: .config_fuzzer_stress
    distros:
    - rhel80-large
  - name: disk_wiredtiger
  - name: .encrypt
  - name: feature_flag_multiversion_gen
  - name: idl_tests
  - name: initial_sync_fuzzer_gen
  - name: fcv_upgrade_downgrade_replica_sets_jscore_passthrough_gen
  - name: fcv_upgrade_downgrade_sharding_jscore_passthrough_gen
  - name: fcv_upgrade_downgrade_sharded_collections_jscore_passthrough_gen
  - name: .jscore .common !.sbe_only
  - name: jsCore_min_batch_repeat_queries_ese_gsm
  - name: jsCore_txns_large_txns_format
  - name: jsCore_wildcard_indexes
  - name: json_schema
  - name: .jstestfuzz !.flow_control  # Flow control jstestfuzz take longer.
  - name: libunwind_tests
  - name: .multiversion_sanity_check
  - name: .multi_shard
  - name: multi_stmt_txn_jscore_passthrough_with_migration_gen
  - name: multiversion_gen
  - name: powercycle_smoke
  - name: .random_multiversion_ds
  - name: .read_write_concern .large
    distros:
    - rhel80-medium
  - name: .read_write_concern !.large
  - name: .replica_sets !.encrypt !.auth
    distros:
    - rhel80-medium
  - name: replica_sets_api_version_jscore_passthrough_gen
  - name: replica_sets_reconfig_jscore_passthrough_gen
  - name: replica_sets_reconfig_jscore_stepdown_passthrough_gen
    distros:
    - rhel80-medium
  - name: replica_sets_reconfig_kill_primary_jscore_passthrough_gen
    distros:
    - rhel80-medium
  - name: change_streams_pre_images_replica_sets_stepdown_primary_jscore_passthrough_gen
    distros:
    - rhel80-medium
  - name: change_streams_pre_images_replica_sets_kill_secondary_jscore_passthrough_gen
    distros:
    - rhel80-medium
  - name: retryable_writes_jscore_passthrough_gen
  - name: retryable_writes_jscore_stepdown_passthrough_gen
    distros:
    - rhel80-medium
  - name: .read_only
  - name: .rollbackfuzzer
  - name: sasl
  - name: search
  - name: search_auth
  - name: search_pinned_connections_auth
  - name: search_ssl
  - name: session_jscore_passthrough
  - name: .sharding .jscore !.wo_snapshot !.multi_stmt
  - name: sharding_api_version_jscore_passthrough_gen
  - name: sharding_api_strict_passthrough_gen
  - name: .sharding .txns
  - name: .sharding .common
  - name: sharded_collections_single_writes_without_shard_key_jscore_passthrough_gen
  - name: sharded_multi_stmt_txn_jscore_passthrough
  - name: .serverless
  - name: sharding_max_mirroring_opportunistic_secondary_targeting_ese_gcm_gen
  - name: secondary_reads_passthrough_gen
  - name: .shard_split
  - name: streams
  - name: streams_kafka
  - name: vector_search
  - name: vector_search_auth
  - name: vector_search_ssl
  - name: query_stats_aggregation_passthrough
  - name: query_stats_mongos_aggregation_passthrough
  - name: query_stats_mongos_passthrough
  - name: query_stats_passthrough

- <<: *enterprise-rhel-80-64-bit-dynamic-classic-engine-all-feature-flags-required-query-patch-only-template
  name: enterprise-rhel-80-64-bit-dynamic-classic-engine-all-feature-flags-fuzzers
  display_name: "*| Shared Library Enterprise RHEL 8.0 (Classic Engine all feature flags) Fuzzers"
  tasks:
  - name: .aggfuzzer !.cqf_only
  - name: .change_stream_fuzzer
  - name: .query_fuzzer !.cqf_only
  - name: .updatefuzzer

- <<: *enterprise-rhel-80-64-bit-dynamic-all-feature-flags-template
  name: &enterprise-rhel-80-64-bit-dynamic-all-feature-flags-required-query-patch-only enterprise-rhel-80-64-bit-dynamic-all-feature-flags-required-query-patch-only
  display_name: "~ Shared Library Enterprise RHEL 8.0 Query Patch Only (all feature flags)"
  cron: "0 4 * * 0" # From the ${project_weekly_cron} parameter # This is a patch-only variant but we run on mainline to pick up task history.
  expansions:
    <<: *enterprise-rhel-80-64-bit-dynamic-all-feature-flags-expansions
    jstestfuzz_num_generated_files: 20
    jstestfuzz_concurrent_num_files: 5
    target_resmoke_time: 30
    max_sub_suites: 3
    test_flags: >-
      --runAllFeatureFlagTests
      --excludeWithAnyTags=resource_intensive

### Security Patch-Specific Build Variants ###
- <<: *enterprise-rhel-80-64-bit-dynamic-all-feature-flags-template
  name: &enterprise-rhel-80-64-bit-dynamic-all-feature-flags-required-security-patch-only enterprise-rhel-80-64-bit-dynamic-all-feature-flags-required-security-patch-only
  display_name: "~ Shared Library Enterprise RHEL 8.0 Security Patch Only (all feature flags)"
  cron: "0 4 * * 0" # From the ${project_weekly_cron} parameter # This is a patch-only variant but we run on mainline to pick up task history.
  expansions:
    <<: *enterprise-rhel-80-64-bit-dynamic-all-feature-flags-expansions
    target_resmoke_time: 15
    max_sub_suites: 15
  tasks:
  - name: burn_in_tests_gen
    depends_on:
    - name: version_burn_in_gen
      variant: generate-tasks-for-version
      omit_generated_tasks: true
    - name: archive_dist_test_debug
      variant: *linux_x86_dynamic_compile_variant_name
  - name: .audit .patch_build
  - name: .encrypt .patch_build
  - name: .sasl .patch_build
  - name: external_auth
  - name: external_auth_aws
  - name: external_auth_oidc
  - name: lint_fuzzer_sanity_patch

- name: &tla-plus tla-plus
  display_name: "TLA+"
  run_on:
  - rhel80-build
  cron: "0 4 * * 0" # From the ${project_weekly_cron} parameter
  stepback: false
  expansions:
    timeout_secs: 345600 # 4 days
  tasks:
  - name: tla_plus
