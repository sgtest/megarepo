#######################################
#             Variable                #
#######################################
variables:
# Used when the tests it runs depend only on mongod, mongos, the jstestshell and the tools.
# THIS HAS COPIES IN
# - etc/evergreen_yml_components/definitions.yml
# - etc/evergreen_yml_components/tasks/components/change_streams/resmoke_tasks.yml
# ANY MODIFICATIONS HERE SHOULD ALSO BE MADE IN THOSE FILES
- &task_template
  name: template
  depends_on:
  - name: archive_dist_test_debug
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --help
      resmoke_jobs_max: 0  # No cap on number of jobs.

# THIS HAS COPIES IN
# - etc/evergreen_yml_components/definitions.yml
# - etc/evergreen_yml_components/tasks/components/change_streams/resmoke_tasks.yml
# ANY MODIFICATIONS HERE SHOULD ALSO BE MADE IN THOSE FILES
- &gen_task_template
  name: gen_task_template
  depends_on:
  - name: version_gen
    variant: generate-tasks-for-version
    # This is added because of EVG-18211.
    # Without this we are adding extra dependencies on evergreen and it is causing strain
    omit_generated_tasks: true
  - name: archive_dist_test_debug
  commands:
  - func: "generate resmoke tasks"
    vars:
      resmoke_args: --help

# THIS HAS COPIES IN
# - etc/evergreen_yml_components/definitions.yml
# - etc/evergreen_yml_components/tasks/components/change_streams/resmoke_tasks.yml
# ANY MODIFICATIONS HERE SHOULD ALSO BE MADE IN THOSE FILES
- &jstestfuzz_config_vars
  is_jstestfuzz: true
  num_files: 15
  num_tasks: 5  # Upperbound by `max_sub_suites` specified through the variant with each task still running `num_files` files.
  # It is error prone to require each fuzzer-related Evergreen task to need to override the
  # resmoke_args variable. However, the resmoke_args variable must be defined as a string in the
  # task generation configuration to satisfy mongodb/mongo-task-generator. We therefore specify an
  # empty string for the variable to reflect there are no additional arguments provided to resmoke
  # by default for the fuzzer-related tasks.
  resmoke_args: ""
  resmoke_jobs_max: 1
  should_shuffle: false
  continue_on_failure: false
  # Terminate the function when there has been no output to stdout for 30 minutes. E.g. when something is stuck in an infinite loop.
  # resmoke.py writes the test output to logkeeper and only writes to stdout when starting the next test.
  # resmoke.py not producing output on stdout means that the test is still running and presumably not going to finish.
  # Note that timeout_secs is different from exec_timeout_secs, which applies to a task and times out regardless of whether output has been written to stdout.
  timeout_secs: 1800

# Used for tests that invoke 'resmoke.py --suites=jstestfuzz*'.
# THIS HAS COPIES IN
# - etc/evergreen_yml_components/definitions.yml
# - etc/evergreen_yml_components/tasks/components/change_streams/resmoke_tasks.yml
# ANY MODIFICATIONS HERE SHOULD ALSO BE MADE IN THOSE FILES
- &jstestfuzz_template
  name: jstestfuzz_template
  exec_timeout_secs: 14400 # Time out the task if it runs for more than 4 hours.
  depends_on:
  - name: version_gen
    variant: generate-tasks-for-version
    # This is added because of EVG-18211.
    # Without this we are adding extra dependencies on evergreen and it is causing strain
    omit_generated_tasks: true
  - archive_dist_test_debug
  commands:
  - func: "generate resmoke tasks"


#######################################
#               Tasks                 #
#######################################
tasks:
- <<: *task_template
  name: change_streams
  tags: ["assigned_to_component_change_streams", "change_streams"]
  commands:
  - func: "do setup"
  - func: "run tests"

- <<: *gen_task_template
  name: change_streams_multiversion_gen
  tags: ["assigned_to_component_change_streams", "multiversion", "multiversion_passthrough"]
  commands:
  - func: "initialize multiversion tasks"
    vars:
      change_streams_last_continuous_new_new_old: last_continuous
      change_streams_last_continuous_new_old_new: last_continuous
      change_streams_last_continuous_old_new_new: last_continuous
      change_streams_last_lts_new_new_old: last_lts
      change_streams_last_lts_new_old_new: last_lts
      change_streams_last_lts_old_new_new: last_lts
  - func: "generate resmoke tasks"
    vars:
      suite: change_streams
      run_no_feature_flag_tests: "true"

- <<: *gen_task_template
  name: change_streams_downgrade_gen
  tags: ["assigned_to_component_change_streams", "multiversion_passthrough", "multiversion"]
  commands:
  - func: "initialize multiversion tasks"
    vars:
      change_streams_downgrade_last_continuous_new_old_old_new: last_continuous
      change_streams_downgrade_last_lts_new_old_old_new: last_lts
  - func: "generate resmoke tasks"
    vars:
      run_no_feature_flag_tests: "true"

- <<: *task_template
  name: change_streams_mongos_sessions_passthrough
  tags: ["assigned_to_component_change_streams", "change_streams"]
  depends_on:
  - name: change_streams
  commands:
  - func: "do setup"
  - func: "run tests"

- <<: *task_template
  name: change_streams_secondary_reads_sharded_collections
  tags: ["assigned_to_component_change_streams", "change_streams", "secondary_reads"]
  depends_on:
  - name: change_streams
  commands:
  - func: "do setup"
  - func: "run tests"

- <<: *gen_task_template
  name: change_streams_sharded_collections_multiversion_gen
  tags: ["assigned_to_component_change_streams", "multiversion_passthrough", "multiversion"]
  commands:
  - func: "initialize multiversion tasks"
    vars:
      change_streams_sharded_collections_passthrough_last_continuous_new_old_old_new: last_continuous
      change_streams_sharded_collections_passthrough_last_lts_new_old_old_new: last_lts
  - func: "generate resmoke tasks"
    vars:
      suite: change_streams_sharded_collections_passthrough
      run_no_feature_flag_tests: "true"

- <<: *task_template
  name: change_streams_whole_db_passthrough
  tags: ["assigned_to_component_change_streams", "change_streams"]
  depends_on:
  - name: change_streams
  commands:
  - func: "do setup"
  - func: "run tests"

- <<: *task_template
  name: change_streams_whole_db_secondary_reads_sharded_collections
  tags: ["assigned_to_component_change_streams", "change_streams", "secondary_reads"]
  depends_on:
  - name: change_streams_secondary_reads_sharded_collections
  commands:
  - func: "do setup"
  - func: "run tests"

- <<: *task_template
  name: change_streams_whole_cluster_passthrough
  tags: ["assigned_to_component_change_streams", "change_streams"]
  depends_on:
  - name: change_streams
  commands:
  - func: "do setup"
  - func: "run tests"

- <<: *task_template
  name: change_streams_whole_cluster_secondary_reads_sharded_collections
  tags: ["assigned_to_component_change_streams", "change_streams", "secondary_reads"]
  depends_on:
  - name: change_streams_secondary_reads_sharded_collections
  commands:
  - func: "do setup"
  - func: "run tests"

- <<: *task_template
  name: change_streams_multi_stmt_txn_passthrough
  tags: ["assigned_to_component_change_streams", "change_streams"]
  depends_on:
  - name: change_streams
  commands:
  - func: "do setup"
  - func: "run tests"

- <<: *task_template
  name: change_streams_multi_stmt_txn_mongos_passthrough
  tags: ["assigned_to_component_change_streams", "change_streams"]
  depends_on:
  - name: change_streams
  commands:
  - func: "do setup"
  - func: "run tests"

- <<: *task_template
  name: change_streams_multi_stmt_txn_sharded_collections_passthrough
  tags: ["assigned_to_component_change_streams", "change_streams"]
  depends_on:
  - name: change_streams
  commands:
  - func: "do setup"
  - func: "run tests"

- <<: *task_template
  name: change_streams_per_shard_cursor_passthrough
  tags: ["assigned_to_component_change_streams", "change_streams"]
  commands:
  - func: "do setup"
  - func: "run tests"

- <<: *task_template
  name: change_streams_multitenant_passthrough
  tags: ["assigned_to_component_change_streams"]  # TODO SERVER-57866: Add the "change_streams" tag here.
  commands:
  - func: "do setup"
  - func: "run tests"

- <<: *task_template
  name: change_streams_multitenant_sharded_collections_passthrough
  tags: ["assigned_to_component_change_streams"]  # TODO SERVER-57866: Add the "change_streams" tag here.
  commands:
  - func: "do setup"
  - func: "run tests"

- <<: *gen_task_template
  name: change_streams_pre_images_replica_sets_stepdown_primary_jscore_passthrough_gen
  tags: ["assigned_to_component_change_streams"]
  commands:
  - func: "generate resmoke tasks"

- <<: *gen_task_template
  name: change_streams_pre_images_replica_sets_kill_secondary_jscore_passthrough_gen
  tags: ["assigned_to_component_change_streams"]
  commands:
  - func: "generate resmoke tasks"

- <<: *gen_task_template
  name: change_streams_change_collection_replica_sets_stepdown_primary_jscore_passthrough_gen
  tags: ["assigned_to_component_change_streams"]
  commands:
  - func: "generate resmoke tasks"

- <<: *gen_task_template
  name: change_streams_change_collection_replica_sets_kill_secondary_jscore_passthrough_gen
  tags: ["assigned_to_component_change_streams"]
  commands:
  - func: "generate resmoke tasks"

## Standalone generational fuzzer for checking optimized and unoptimized change stream pipelines ##
- <<: *jstestfuzz_template
  name: change_stream_optimization_fuzzer_gen
  tags: ["assigned_to_component_change_streams", "change_stream_fuzzer", "require_npm", "random_name"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      <<: *jstestfuzz_config_vars
      num_files: 20
      num_tasks: 20
      jstestfuzz_vars: --diffTestingMode optimization
      npm_command: change-stream-fuzzer
      suite: generational_fuzzer
      resmoke_args: "--mongodSetParameters='{logComponentVerbosity: {command: 2}}'"
