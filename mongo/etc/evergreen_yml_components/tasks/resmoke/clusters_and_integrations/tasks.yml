# This file contains resmoke tasks that are owned by Clusters & Integrations Core Server Team division

################################################
#                   Variable                   #
################################################
variables:
# Used when the tests it runs depend only on mongod, mongos, the jstestshell and the tools.
# THIS HAS COPIES IN
# - etc/evergreen_yml_components/definitions.yml
# - etc/evergreen_yml_components/tasks/resmoke/clusters_and_integrations/tasks.yml
# - etc/evergreen_yml_components/tasks/resmoke/durable_transactions_and_availability/tasks.yml
# - etc/evergreen_yml_components/tasks/components/aggregation_framework/resmoke_tasks.yml
# - etc/evergreen_yml_components/tasks/components/change_streams/resmoke_tasks.yml
# - etc/evergreen_yml_components/tasks/components/querying/resmoke_tasks.yml
# ANY MODIFICATIONS HERE SHOULD ALSO BE MADE IN THOSE FILES
- &task_template
  name: template
  depends_on:
  - name: archive_dist_test_debug
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_args: --help
      resmoke_jobs_max: 0  # No cap on number of jobs.

# THIS HAS COPIES IN
# - etc/evergreen_yml_components/definitions.yml
# - etc/evergreen_yml_components/tasks/resmoke/clusters_and_integrations/tasks.yml
# - etc/evergreen_yml_components/tasks/resmoke/durable_transactions_and_availability/tasks.yml
# - etc/evergreen_yml_components/tasks/components/aggregation_framework/resmoke_tasks.yml
# - etc/evergreen_yml_components/tasks/components/change_streams/resmoke_tasks.yml
# - etc/evergreen_yml_components/tasks/components/querying/resmoke_tasks.yml
# ANY MODIFICATIONS HERE SHOULD ALSO BE MADE IN THOSE FILES
- &gen_task_template
  name: gen_task_template
  depends_on:
  - name: version_gen
    variant: generate-tasks-for-version
    # This is added because of EVG-18211.
    # Without this we are adding extra dependencies on evergreen and it is causing strain
    omit_generated_tasks: true
  - name: archive_dist_test_debug
  commands:
  - func: "generate resmoke tasks"
    vars:
      resmoke_args: --help

# THIS HAS COPIES IN
# - etc/evergreen_yml_components/definitions.yml
# - etc/evergreen_yml_components/tasks/resmoke/clusters_and_integrations/tasks.yml
# - etc/evergreen_yml_components/tasks/resmoke/durable_transactions_and_availability/tasks.yml
# ANY MODIFICATIONS HERE SHOULD ALSO BE MADE IN THOSE FILES
- &benchmark_template
  name: benchmark_template
  depends_on:
  - name: compile_upload_benchmarks
  commands:
  - func: "do benchmark setup"
  - func: "run tests"
    vars:
      resmoke_args: --help
      resmoke_jobs_max: 1
  - func: "send benchmark results"
#  - func: "analyze benchmark results"
    vars:
      suite: benchmark_suite

# THIS HAS COPIES IN
# - etc/evergreen_yml_components/definitions.yml
# - etc/evergreen_yml_components/tasks/resmoke/clusters_and_integrations/tasks.yml
# - etc/evergreen_yml_components/tasks/resmoke/durable_transactions_and_availability/tasks.yml
# - etc/evergreen_yml_components/tasks/components/aggregation_framework/resmoke_tasks.yml
# - etc/evergreen_yml_components/tasks/components/change_streams/resmoke_tasks.yml
# ANY MODIFICATIONS HERE SHOULD ALSO BE MADE IN THOSE FILES
- &jstestfuzz_config_vars
  is_jstestfuzz: true
  num_files: 15
  num_tasks: 5  # Upperbound by `max_sub_suites` specified through the variant with each task still running `num_files` files.
  # It is error prone to require each fuzzer-related Evergreen task to need to override the
  # resmoke_args variable. However, the resmoke_args variable must be defined as a string in the
  # task generation configuration to satisfy mongodb/mongo-task-generator. We therefore specify an
  # empty string for the variable to reflect there are no additional arguments provided to resmoke
  # by default for the fuzzer-related tasks.
  resmoke_args: ""
  resmoke_jobs_max: 1
  should_shuffle: false
  continue_on_failure: false
  # Terminate the function when there has been no output to stdout for 30 minutes. E.g. when something is stuck in an infinite loop.
  # resmoke.py writes the test output to logkeeper and only writes to stdout when starting the next test.
  # resmoke.py not producing output on stdout means that the test is still running and presumably not going to finish.
  # Note that timeout_secs is different from exec_timeout_secs, which applies to a task and times out regardless of whether output has been written to stdout.
  timeout_secs: 1800

# Used for tests that invoke 'resmoke.py --suites=jstestfuzz*'.
# THIS HAS COPIES IN
# - etc/evergreen_yml_components/definitions.yml
# - etc/evergreen_yml_components/tasks/resmoke/clusters_and_integrations/tasks.yml
# - etc/evergreen_yml_components/tasks/resmoke/durable_transactions_and_availability/tasks.yml
# - etc/evergreen_yml_components/tasks/components/aggregation_framework/resmoke_tasks.yml
# - etc/evergreen_yml_components/tasks/components/change_streams/resmoke_tasks.yml
# ANY MODIFICATIONS HERE SHOULD ALSO BE MADE IN THOSE FILES
- &jstestfuzz_template
  name: jstestfuzz_template
  exec_timeout_secs: 14400 # Time out the task if it runs for more than 4 hours.
  depends_on:
  - name: version_gen
    variant: generate-tasks-for-version
    # This is added because of EVG-18211.
    # Without this we are adding extra dependencies on evergreen and it is causing strain
    omit_generated_tasks: true
  - archive_dist_test_debug
  commands:
  - func: "generate resmoke tasks"

# THIS HAS COPIES IN
# - etc/evergreen_yml_components/definitions.yml
# - etc/evergreen_yml_components/tasks/resmoke/clusters_and_integrations/tasks.yml
# ANY MODIFICATIONS HERE SHOULD ALSO BE MADE IN THOSE FILES
- &compile_task_group_template
  name: compile_task_group_template
  max_hosts: 1
  tasks: []
  setup_task:
  - func: "f_expansions_write"
  - func: "apply compile expansions"
  - func: "set task expansion macros"
  - func: "f_expansions_write"
  teardown_task:
  - func: "f_expansions_write"
  - func: "attach scons logs"
  - func: "attach report"
  - func: "attach artifacts"
  - func: "attach local resmoke invocation"
  - func: "attach multiversion download links"
  - func: "kill processes"
  - func: "save mongo coredumps"
  - func: "generate hang analyzer tasks"
  - func: "save failed unittests"
  - func: "save UndoDB recordings"
  - func: "save unstripped dbtest"
  - func: "save hang analyzer debugger files"
  - func: "save disk statistics"
  - func: "save system resource information"
  - func: "save libfuzzertest corpora"
  - func: "remove files"
    vars:
      files: >-
        src/resmoke_error_code
        src/build/scons/config.log
        src/*.gcda.gcov
        src/gcov-intermediate-files.tgz
        src/*.core src/*.mdmp src/*.core.gz src/*.mdmp.gz
        mongo-coredumps.json
        src/dist-unittests/bin/*
        src/dist-unittests/lib/*
        mongo-unittests.tgz
        src/debugger*.*
        src/mongo-hanganalyzer.tgz
        diskstats.tgz
        system-resource-info.tgz
        ${report_file|src/report.json}
        ${archive_file|src/archive.json}
  setup_group_can_fail_task: true
  setup_group:
  - command: manifest.load
  - func: "git get project and add git tag"
  - func: "set task expansion macros"
  - func: "f_expansions_write"
  - func: "kill processes"
  - func: "cleanup environment"
  # The python virtual environment is installed in ${workdir}, which is created in
  # "set up venv".
  - func: "set up venv"
  - func: "upload pip requirements"
  - func: "f_expansions_write"
  - func: "configure evergreen api credentials"
  - func: "get buildnumber"
  - func: "f_expansions_write"
  - func: "set up credentials"
  - func: "use WiredTiger develop" # noop if ${use_wt_develop} is not "true"
  - func: "set up win mount script"
  - func: "generate compile expansions"
  - func: "f_expansions_write"
  teardown_group:
  - func: "f_expansions_write"
  - func: "umount shared scons directory"
  - func: "cleanup environment"
  timeout:
  - func: "f_expansions_write"
  - func: "run hang analyzer"
  - func: "wait for resmoke to shutdown"


################################################
#                    Tasks                     #
################################################
tasks:

################################################
#          Service Architecture tasks          #
################################################

- <<: *gen_task_template
  name: causally_consistent_hedged_reads_jscore_passthrough_gen
  tags: ["assigned_to_jira_team_server_servicearch", "causally_consistent", "sharding", "jscore"]
  commands:
  - func: "generate resmoke tasks"

- <<: *gen_task_template
  name: concurrency_multitenancy_replication_with_atlas_proxy_gen
  tags: ["assigned_to_jira_team_server_servicearch", "serverless"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      use_large_distro: "true"
      resmoke_jobs_max: 1
      resmoke_args: --numClientsPerFixture=2 --useTenantClient

- <<: *gen_task_template
  name: concurrency_multitenancy_with_atlas_proxy_jscore_passthrough_gen
  tags: ["assigned_to_jira_team_server_servicearch", "serverless"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      use_large_distro: "true"
      suite: multitenancy_with_atlas_proxy_jscore_passthrough
      resmoke_args: "--numClientsPerFixture=2 --useTenantClient --excludeWithAnyTags=multi_clients_incompatible"

- <<: *gen_task_template
  name: embedded_router_jscore_passthrough_gen
  tags: ["assigned_to_jira_team_server_servicearch"]
  commands:
  - func: "generate resmoke tasks"

- <<: *gen_task_template
  name: embedded_router_jscore_passthrough_with_config_shard_gen
  tags: ["assigned_to_jira_team_server_servicearch"]
  commands:
  - func: "generate resmoke tasks"

- <<: *task_template
  name: failpoints
  tags: ["assigned_to_jira_team_server_servicearch", "misc_js"]
  commands:
  - func: "do setup"
  - func: "run tests"

- <<: *task_template
  name: failpoints_auth
  tags: ["assigned_to_jira_team_server_servicearch", "auth"]
  commands:
  - func: "do setup"
  - func: "run tests"

- <<: *task_template
  name: integration_tests_replset
  tags: ["assigned_to_jira_team_server_servicearch", "integration"]
  depends_on:
  - name: compile_integration_test
  commands:
  - func: "do integration_tests setup"
  - func: "run tests"
    vars:
      install_dir: build/install/bin

- <<: *task_template
  name: integration_tests_replset_ssl_auth
  tags: ["assigned_to_jira_team_server_servicearch", "integration"]
  depends_on:
  - name: compile_integration_test
  commands:
  - func: "do integration_tests setup"
  - func: "run tests"
    vars:
      install_dir: build/install/bin

- <<: *task_template
  name: integration_tests_sharded
  tags: ["assigned_to_jira_team_server_servicearch", "integration", "sharded"]
  depends_on:
  - name: compile_integration_test
  commands:
  - func: "do integration_tests setup"
  - func: "run tests"
    vars:
      install_dir: build/install/bin

- <<: *task_template
  name: integration_tests_standalone
  tags: ["assigned_to_jira_team_server_servicearch", "integration", "standalone"]
  depends_on:
  - name: compile_integration_test
  commands:
  - func: "do integration_tests setup"
  - func: "run tests"
    vars:
      install_dir: build/install/bin

- <<: *task_template
  name: integration_tests_standalone_audit
  tags: ["assigned_to_jira_team_server_servicearch", "integration", "audit"]
  depends_on:
  - name: compile_integration_test
  commands:
  - func: "do integration_tests setup"
  - func: "run tests"
    vars:
      install_dir: build/install/bin

- <<: *task_template
  name: libunwind_tests
  tags: ["assigned_to_jira_team_server_servicearch"]
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      suite: libunwind

- <<: *gen_task_template
  name: multitenancy_shard_merge_jscore_passthrough_gen
  tags: ["assigned_to_jira_team_server_servicearch", "serverless"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      use_large_distro: "true"

- <<: *gen_task_template
  name: multitenancy_shard_merge_multi_stmt_txn_jscore_passthrough_gen
  tags: ["assigned_to_jira_team_server_servicearch", "serverless"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      use_large_distro: "true"

- <<: *gen_task_template
  name: multitenancy_with_atlas_proxy_jscore_passthrough_gen
  tags: ["assigned_to_jira_team_server_servicearch", "serverless"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      use_large_distro: "true"

- <<: *gen_task_template
  name: multitenancy_with_mongoq_jscore_passthrough_gen
  tags: ["assigned_to_jira_team_server_servicearch", "serverless"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      use_large_distro: "true"

- <<: *gen_task_template
  name: multitenancy_with_mongoq_unsigned_token_jscore_passthrough_gen
  tags: ["assigned_to_jira_team_server_servicearch", "serverless"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      use_large_distro: "true"

- <<: *task_template
  name: search_pinned_connections_auth
  tags: ["assigned_to_jira_team_server_servicearch"]
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_jobs_max: 1

- name: server_discovery_and_monitoring_json_test
  tags: ["assigned_to_jira_team_server_servicearch"]
  depends_on:
  - name: version_expansions_gen
    variant: generate-tasks-for-version
  commands:
  - func: "scons compile"
    vars:
      targets: install-sdam-json-test
      compiling_for_test: true
      install_dir: build/install/bin
  - func: "run tests"
    vars:
      suite: sdam_json_test

- name: server_selection_json_test
  tags: ["assigned_to_jira_team_server_servicearch"]
  depends_on:
  - name: version_expansions_gen
    variant: generate-tasks-for-version
  commands:
  - func: "scons compile"
    vars:
      targets: install-server-selection-json-test
      compiling_for_test: true
      install_dir: build/install/bin
  - func: "run tests"

- <<: *task_template
  name: serverless
  tags: ["assigned_to_jira_team_server_servicearch", "serverless"]
  commands:
  - func: "do setup"
  - func: "run tests"

- <<: *task_template
  name: serverless_MTM
  tags: ["assigned_to_jira_team_server_servicearch", "serverless"]
  commands:
  - func: "do setup"
  - func: "run tests"

- <<: *task_template
  name: session_jscore_passthrough
  tags: ["assigned_to_jira_team_server_servicearch"]
  commands:
  - func: "do setup"
  - func: "run tests"

- <<: *gen_task_template
  name: shard_merge_causally_consistent_jscore_passthrough_gen
  tags: ["assigned_to_jira_team_server_servicearch", "serverless"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      use_large_distro: "true"

- <<: *gen_task_template
  name: shard_merge_jscore_passthrough_gen
  tags: ["assigned_to_jira_team_server_servicearch", "serverless"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      use_large_distro: "true"

- <<: *gen_task_template
  name: shard_merge_multi_stmt_txn_jscore_passthrough_gen
  tags: ["assigned_to_jira_team_server_servicearch", "serverless", "txn"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      use_large_distro: "true"

- <<: *gen_task_template
  name: shard_split_causally_consistent_jscore_passthrough_gen
  tags: ["assigned_to_jira_team_server_servicearch", "shard_split"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      use_large_distro: "true"

- <<: *gen_task_template
  name: shard_split_jscore_passthrough_gen
  tags: ["assigned_to_jira_team_server_servicearch", "shard_split"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      use_large_distro: "true"

- <<: *gen_task_template
  name: shard_split_kill_primary_jscore_passthrough_gen
  tags: ["assigned_to_jira_team_server_servicearch", "shard_split"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      use_large_distro: "true"
      fallback_num_sub_suites: 10

- <<: *gen_task_template
  name: shard_split_multi_stmt_txn_jscore_passthrough_gen
  tags: ["assigned_to_jira_team_server_servicearch", "shard_split"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      use_large_distro: "true"

- <<: *gen_task_template
  name: shard_split_stepdown_jscore_passthrough_gen
  tags: ["assigned_to_jira_team_server_servicearch", "shard_split"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      use_large_distro: "true"

- <<: *gen_task_template
  name: shard_split_terminate_primary_jscore_passthrough_gen
  tags: ["assigned_to_jira_team_server_servicearch", "shard_split"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      use_large_distro: "true"
      fallback_num_sub_suites: 10

- <<: *gen_task_template
  name: tenant_migration_causally_consistent_jscore_passthrough_gen
  tags: ["assigned_to_jira_team_server_servicearch", "serverless"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      use_large_distro: "true"

- <<: *gen_task_template
  name: tenant_migration_jscore_passthrough_gen
  tags: ["assigned_to_jira_team_server_servicearch", "serverless"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      use_large_distro: "true"

- <<: *gen_task_template
  name: tenant_migration_kill_primary_jscore_passthrough_gen
  tags: ["assigned_to_jira_team_server_servicearch", "serverless"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      use_large_distro: "true"
      fallback_num_sub_suites: 10

- <<: *gen_task_template
  name: tenant_migration_multi_stmt_txn_jscore_passthrough_gen
  tags: ["assigned_to_jira_team_server_servicearch", "serverless", "txn"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      use_large_distro: "true"

- <<: *gen_task_template
  name: tenant_migration_stepdown_jscore_passthrough_gen
  tags: ["assigned_to_jira_team_server_servicearch", "serverless"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      use_large_distro: "true"

- <<: *gen_task_template
  name: tenant_migration_terminate_primary_jscore_passthrough_gen
  tags: ["assigned_to_jira_team_server_servicearch", "serverless"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      use_large_distro: "true"
      fallback_num_sub_suites: 10

- <<: *gen_task_template
  name: talk_directly_to_shardsvrs_jscore_passthrough_gen
  tags: ["assigned_to_jira_team_server_servicearch", "serverless"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      use_large_distro: "true"

- <<: *gen_task_template
  name: talk_directly_to_shardsvrs_kill_primary_jscore_passthrough_gen
  tags: ["assigned_to_jira_team_server_servicearch", "serverless"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      use_large_distro: "true"

# This is a separate task because it is only supported on Ubuntu 16.04+ which are not inmemory builders
- <<: *task_template
  name: watchdog_inmemory
  tags: ["assigned_to_jira_team_server_servicearch", "watchdog"]
  commands:
  - func: "do setup"
  - func: "do watchdog setup"
  - func: "run tests"
    vars:
      suite: watchdog
      resmoke_args: --storageEngine=inMemory
      resmoke_jobs_max: 1

- <<: *task_template
  name: watchdog_wiredtiger
  tags: ["assigned_to_jira_team_server_servicearch", "watchdog"]
  commands:
  - func: "do setup"
  - func: "do watchdog setup"
  - func: "run tests"
    vars:
      suite: watchdog
      resmoke_jobs_max: 1

################################################
#            Server Security tasks             #
################################################

- <<: *task_template
  name: aggregation_ese
  tags: ["assigned_to_jira_team_server_security", "aggregation", "encrypt"]
  depends_on:
  - name: aggregation
  commands:
  - func: "do setup"
  - func: "run tests"

- <<: *task_template
  name: aggregation_ese_gcm
  tags: ["assigned_to_jira_team_server_security", "aggregation", "encrypt", "gcm"]
  depends_on:
  - name: aggregation
  commands:
  - func: "do setup"
  - func: "run tests"

- <<: *task_template
  name: audit
  tags: ["assigned_to_jira_team_server_security", "audit", "patch_build"]
  commands:
  - func: "do setup"
  - func: "run tests"

- <<: *gen_task_template
  name: auth_audit_gen
  tags: ["assigned_to_jira_team_server_security", "auth", "audit", "patch_build"]
  commands:
  - func: "generate resmoke tasks"

- <<: *gen_task_template
  name: auth_gen
  tags: ["assigned_to_jira_team_server_security", "auth"]
  commands:
  - func: "generate resmoke tasks"

- <<: *task_template
  name: client_encrypt
  tags: ["assigned_to_jira_team_server_security", "ssl", "encrypt", "patch_build"]
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_jobs_max: 1

- <<: *task_template
  name: ese
  tags: ["assigned_to_jira_team_server_security", "encrypt", "patch_build"]
  commands:
  - func: "do setup"
  - func: "run tests"

- <<: *task_template
  name: external_auth
  tags: ["assigned_to_jira_team_server_security"]
  commands:
  - func: "f_expansions_write"
  - func: "do setup"
  - func: "f_expansions_write"
  - func: "run tests"
    vars:
      resmoke_jobs_max: ${external_auth_jobs_max|4}
      resmoke_args: --excludeWithAnyTags=requires_domain_controller

- <<: *task_template
  name: external_auth_aws
  tags: ["assigned_to_jira_team_server_security"]
  commands:
  - func: "f_expansions_write"
  - func: "do setup"
  - func: "f_expansions_write"
  - command: subprocess.exec
    params:
      binary: bash
      silent: true
      args:
      - "src/evergreen/external_auth_aws_setup.sh"
  - func: "run tests"

- <<: *task_template
  name: external_auth_oidc
  tags: ["assigned_to_jira_team_server_security"]
  commands:
  - func: "f_expansions_write"
  - func: "do setup"
  - func: "f_expansions_write"
  - command: subprocess.exec
    params:
      binary: bash
      args:
      - "src/evergreen/external_auth_oidc_setup.sh"
  - func: "run tests"
    vars:
      resmoke_jobs_max: ${external_auth_oidc_jobs_max|1}

- <<: *task_template
  name: external_auth_oidc_azure
  tags: ["assigned_to_jira_team_server_security"]
  commands:
  - func: "f_expansions_write"
  - func: "do setup"
  - func: "f_expansions_write"
  - command: subprocess.exec
    params:
      binary: bash
      args:
      - "src/evergreen/external_auth_azure_setup.sh"
  - func: "run tests"
  - command: subprocess.exec
    params:
      binary: bash
      args:
      - "src/evergreen/external_auth_azure_teardown.sh"

- <<: *task_template
  name: external_auth_windows
  tags: ["assigned_to_jira_team_server_security"]
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      suite: external_auth
      resmoke_args: --includeWithAnyTags=requires_domain_controller

## fetch_and_run_libfuzzertests - get input corpora from s3 and run libfuzzertests ##
- name: fetch_and_run_libfuzzertests
  tags: ["assigned_to_jira_team_server_security"]
  commands:
  - func: "fetch corpus"
  - func: "run tests"
    vars:
      suite: libfuzzer

- <<: *task_template
  name: fle
  tags: ["assigned_to_jira_team_server_security", "encrypt", "patch_build"]
  commands:
    - func: "do setup"
    - func: "run tests"
      vars:
        resmoke_jobs_max: 1

- <<: *task_template
  name: fle2
  tags: ["assigned_to_jira_team_server_security", "encrypt", "patch_build"]
  commands:
    - func: "do setup"
    - func: "run tests"

- <<: *task_template
  name: fle2_high_cardinality
  tags: ["assigned_to_jira_team_server_security", "encrypt"]
  commands:
    - func: "do setup"
    - func: "run tests"

- <<: *task_template
  name: fle2_query_analysis
  tags: ["assigned_to_jira_team_server_security", "encrypt", "patch_build"]
  commands:
    - func: "do setup"
    - func: "run tests"

- <<: *task_template
  name: fle2_sharding
  tags: ["assigned_to_jira_team_server_security", "encrypt", "patch_build"]
  commands:
    - func: "do setup"
    - func: "run tests"

- <<: *task_template
  name: fle2_sharding_high_cardinality
  tags: ["assigned_to_jira_team_server_security", "encrypt"]
  commands:
    - func: "do setup"
    - func: "run tests"

- <<: *task_template
  name: jsCore_auth
  tags: ["assigned_to_jira_team_server_security", "jscore", "auth", "common"]
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      suite: core_auth

- <<: *task_template
  name: jsCore_ese
  tags: ["assigned_to_jira_team_server_security", "jscore", "encrypt"]
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      suite: core_ese

- <<: *task_template
  name: jsCore_min_batch_repeat_queries_ese_gsm
  tags: ["assigned_to_jira_team_server_security", "jscore", "encrypt", "gcm"]
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      suite: core_min_batch_repeat_queries_ese_gsm

- <<: *gen_task_template
  name: multiversion_auth_future_git_tag_gen
  tags: ["assigned_to_jira_team_server_security", "auth", "multiversion", "no_multiversion_generate_tasks", "multiversion_future_git_tag"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      suite: multiversion_auth_future_git_tag

- <<: *gen_task_template
  name: multiversion_auth_gen
  tags: ["assigned_to_jira_team_server_security", "auth", "multiversion", "no_multiversion_generate_tasks", "future_git_tag_incompatible"]
  commands:
  - func: "generate resmoke tasks"

- <<: *task_template
  name: ocsp
  tags: ["assigned_to_jira_team_server_security", "ssl", "encrypt", "ocsp", "patch_build", "no_debug_mode"]
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      resmoke_jobs_max: 1

- <<: *gen_task_template
  name: replica_sets_max_mirroring_large_txns_format_ese_gcm_gen
  tags: ["assigned_to_jira_team_server_security", "replica_sets", "encrypt", "san", "gcm", "no_debug_mode", "multi_oplog"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      use_large_distro: "true"

- <<: *gen_task_template
  name: replica_sets_max_mirroring_large_txns_format_ese_gen
  tags: ["assigned_to_jira_team_server_security", "replica_sets", "encrypt", "san", "no_debug_mode", "multi_oplog"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      use_large_distro: "true"

- <<: *task_template
  name: sasl
  tags: ["assigned_to_jira_team_server_security", "sasl", "patch_build"]
  commands:
  - func: "do setup"
  - func: "run tests"

- <<: *gen_task_template
  name: sharding_auth_audit_gen
  tags: ["assigned_to_jira_team_server_security", "sharding", "auth", "audit", "non_live_record", "no_debug_mode"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      use_large_distro: "true"

- <<: *gen_task_template
  name: sharding_auth_gen
  tags: ["assigned_to_jira_team_server_security"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      use_large_distro: "true"

- <<: *gen_task_template
  name: sharding_max_mirroring_opportunistic_secondary_targeting_ese_gcm_gen
  tags: ["assigned_to_jira_team_server_security", "sharding", "common", "encrypt", "gcm", "no_debug_mode"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      use_large_distro: "true"

- <<: *gen_task_template
  name: sharding_max_mirroring_opportunistic_secondary_targeting_ese_gen
  tags: ["assigned_to_jira_team_server_security", "sharding", "common", "encrypt", "no_debug_mode"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      use_large_distro: "true"

- <<: *gen_task_template
  name: sslSpecial_gen
  tags: ["assigned_to_jira_team_server_security", "encrypt", "ssl", "patch_build"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      suite: ssl_special

- <<: *gen_task_template
  name: ssl_gen
  tags: ["assigned_to_jira_team_server_security", "encrypt", "ssl", "patch_build"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      resmoke_args: "--mongodSetParameters='{logComponentVerbosity: {network: 2, replication: {heartbeats: 2}}}'"

- <<: *gen_task_template
  name: ssl_linear_gen
  tags: ["assigned_to_jira_team_server_security", "encrypt", "ssl", "patch_build"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      suite: ssl_linear
      resmoke_jobs_max: 1

- <<: *gen_task_template
  name: ssl_x509_gen
  tags: ["assigned_to_jira_team_server_security", "encrypt", "ssl", "patch_build"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      suite: ssl_x509

################################################
#          Cluster Scalability tasks           #
################################################

- <<: *gen_task_template
  name: analyze_shard_key_jscore_passthrough_gen
  tags: ["assigned_to_jira_team_server_cluster_scalability", "sharding"]
  commands:
  - func: "generate resmoke tasks"

- <<: *benchmark_template
  name: benchmarks_sharding
  tags: ["assigned_to_jira_team_server_cluster_scalability", "benchmarks"]
  commands:
  - func: "do benchmark setup"
  - func: "run tests"
    vars:
      suite: benchmarks_sharding
      resmoke_jobs_max: 1
  - func: "send benchmark results"
#  - func: "analyze benchmark results"

- <<: *jstestfuzz_template
  name: move_collection_fuzzer_gen
  tags: ["assigned_to_jira_team_server_cluster_scalability", "require_npm", "random_name", "feature_flag_guarded"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      <<: *jstestfuzz_config_vars
      num_files: 10
      num_tasks: 5
      npm_command: resharding-fuzzer
      jstestfuzz_vars: --opType moveCollection --electionMech stepup --electionRole donor --electionRole recipient --useEsModules
      suite: resharding_fuzzer

- <<: *gen_task_template
  name: multi_shard_local_read_write_multi_stmt_txn_jscore_passthrough_gen
  tags: ["assigned_to_jira_team_server_cluster_scalability", "multi_shard", "common"]
  commands:
  - func: "generate resmoke tasks"

- <<: *gen_task_template
  name: multi_shard_multi_stmt_txn_jscore_passthrough_gen
  tags: ["assigned_to_jira_team_server_cluster_scalability", "multi_shard", "multi_stmt", "common"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      use_large_distro: "true"
      resmoke_jobs_max: 0  # No cap on number of jobs.

- <<: *gen_task_template
  name: multi_shard_multi_stmt_txn_kill_primary_jscore_passthrough_gen
  tags: ["assigned_to_jira_team_server_cluster_scalability", "multi_shard"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      use_large_distro: "true"

- <<: *gen_task_template
  name: multi_shard_multi_stmt_txn_stepdown_primary_jscore_passthrough_gen
  tags: ["assigned_to_jira_team_server_cluster_scalability", "multi_shard", "no_debug_mode"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      use_large_distro: "true"

- <<: *gen_task_template
  name: multi_stmt_txn_jscore_passthrough_with_migration_gen
  tags: ["assigned_to_jira_team_server_cluster_scalability", "multi_stmt"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      use_large_distro: "true"

- <<: *gen_task_template
  name: retryable_writes_downgrade_gen
  tags: ["assigned_to_jira_team_server_cluster_scalability", "multiversion_passthrough", "multiversion"]
  commands:
  - func: "initialize multiversion tasks"
    vars:
      retryable_writes_downgrade_last_lts: last_lts
      retryable_writes_downgrade_last_continuous: last_continuous
  - func: "generate resmoke tasks"
    vars:
      run_no_feature_flag_tests: "true"

- <<: *gen_task_template
  name: retryable_writes_jscore_passthrough_gen
  tags: ["assigned_to_jira_team_server_cluster_scalability", "retry"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      use_large_distro: "true"

- <<: *gen_task_template
  name: retryable_writes_jscore_stepdown_passthrough_gen
  tags: ["assigned_to_jira_team_server_cluster_scalability", "retry"]
  commands:
  - func: "generate resmoke tasks"

## resharding generational fuzzer ##
- <<: *jstestfuzz_template
  name: resharding_fuzzer_idempotency_gen
  tags: ["assigned_to_jira_team_server_cluster_scalability", "resharding_fuzzer", "require_npm", "random_name"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      <<: *jstestfuzz_config_vars
      num_files: 10
      num_tasks: 5
      npm_command: resharding-fuzzer
      jstestfuzz_vars: --numDonors 3 --numRecipients 3 --inPlace no --useEsModules
      suite: resharding_fuzzer_idempotency

- <<: *jstestfuzz_template
  name: resharding_fuzzer_inplace_gen
  tags: ["assigned_to_jira_team_server_cluster_scalability", "resharding_fuzzer", "require_npm", "random_name"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      <<: *jstestfuzz_config_vars
      num_files: 10
      num_tasks: 5
      npm_command: resharding-fuzzer
      jstestfuzz_vars: --numDonors 2 --numRecipients 2 --inPlace yes --useEsModules
      suite: resharding_fuzzer

- <<: *jstestfuzz_template
  name: resharding_fuzzer_merge_gen
  tags: ["assigned_to_jira_team_server_cluster_scalability", "resharding_fuzzer", "require_npm", "random_name"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      <<: *jstestfuzz_config_vars
      num_files: 10
      num_tasks: 5
      npm_command: resharding-fuzzer
      jstestfuzz_vars: --numDonors 2 --numRecipients 1 --inPlace no --useEsModules
      suite: resharding_fuzzer

- <<: *jstestfuzz_template
  name: resharding_fuzzer_shuffle_gen
  tags: ["assigned_to_jira_team_server_cluster_scalability", "resharding_fuzzer", "require_npm", "random_name"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      <<: *jstestfuzz_config_vars
      num_files: 10
      num_tasks: 5
      npm_command: resharding-fuzzer
      jstestfuzz_vars: --numDonors 3 --numRecipients 3 --inPlace no --useEsModules
      suite: resharding_fuzzer

- <<: *jstestfuzz_template
  name: resharding_fuzzer_split_gen
  tags: ["assigned_to_jira_team_server_cluster_scalability", "resharding_fuzzer", "require_npm", "random_name"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      <<: *jstestfuzz_config_vars
      num_files: 10
      num_tasks: 5
      npm_command: resharding-fuzzer
      jstestfuzz_vars: --numDonors 1 --numRecipients 2 --inPlace no --useEsModules
      suite: resharding_fuzzer

- <<: *jstestfuzz_template
  name: resharding_fuzzer_stepup_gen
  tags: ["assigned_to_jira_team_server_cluster_scalability", "resharding_fuzzer", "require_npm", "random_name"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      <<: *jstestfuzz_config_vars
      num_files: 10
      num_tasks: 5
      npm_command: resharding-fuzzer
      jstestfuzz_vars: >-
        --numDonors 3 --numRecipients 3 --inPlace yes
        --electionMech stepup --electionRole donor --electionRole recipient
        --useEsModules
      suite: resharding_fuzzer

- <<: *task_template
  name: sharded_collections_causally_consistent_jscore_txns_passthrough
  tags: ["assigned_to_jira_team_server_cluster_scalability", "sharding", "jscore", "causally_consistent", "txns"]
  commands:
  - func: "do setup"
  - func: "run tests"

- <<: *gen_task_template
  name: sharded_collections_jscore_multiversion_gen
  tags: ["assigned_to_jira_team_server_cluster_scalability", "multiversion_passthrough", "multiversion"]
  commands:
  - func: "initialize multiversion tasks"
    vars:
      sharded_collections_jscore_passthrough_last_continuous_new_old_old_new: last_continuous
      sharded_collections_jscore_passthrough_last_lts_new_old_old_new: last_lts
  - func: "generate resmoke tasks"
    vars:
      suite: sharded_collections_jscore_passthrough
      run_no_feature_flag_tests: "true"

- <<: *gen_task_template
  name: sharded_collections_jscore_passthrough_gen
  tags: ["assigned_to_jira_team_server_cluster_scalability", "sharding", "jscore"]
  commands:
  - func: "generate resmoke tasks"

- <<: *gen_task_template
  name: sharded_collections_jscore_passthrough_with_auto_bootstrap_gen
  tags: ["assigned_to_jira_team_server_cluster_scalability", "sharding", "jscore"]
  commands:
  - func: "generate resmoke tasks"

- <<: *gen_task_template
  name: sharded_collections_single_writes_without_shard_key_jscore_passthrough_gen
  tags: ["assigned_to_jira_team_server_cluster_scalability", "sharding"]
  commands:
  - func: "generate resmoke tasks"

- <<: *task_template
  name: sharded_jscore_txns
  tags: ["assigned_to_jira_team_server_cluster_scalability", "sharding", "jscore", "txns"]
  commands:
  - func: "do setup"
  - func: "run tests"

- <<: *task_template
  name: sharded_jscore_txns_sharded_collections
  tags: ["assigned_to_jira_team_server_cluster_scalability", "sharding", "jscore", "txns"]
  commands:
  - func: "do setup"
  - func: "run tests"

- <<: *task_template
  name: sharded_jscore_txns_without_snapshot
  tags: ["assigned_to_jira_team_server_cluster_scalability", "sharding", "wo_snapshot", "jscore"]
  commands:
  - func: "do setup"
  - func: "run tests"
    vars:
      suite: sharded_jscore_txns
      resmoke_args: --excludeWithAnyTags=uses_snapshot_read_concern

- <<: *task_template
  name: sharded_multi_stmt_txn_jscore_passthrough
  tags: ["assigned_to_jira_team_server_cluster_scalability", "sharding", "jscore", "multi_stmt"]
  commands:
  - func: "do setup"
  - func: "run tests"

- <<: *gen_task_template
  name: sharded_retryable_writes_downgrade_gen
  tags: ["assigned_to_jira_team_server_cluster_scalability", "multiversion_passthrough", "multiversion"]
  commands:
  - func: "initialize multiversion tasks"
    vars:
      sharded_retryable_writes_downgrade_last_continuous_new_old_old_new: last_continuous
      sharded_retryable_writes_downgrade_last_lts_new_old_old_new: last_lts
  - func: "generate resmoke tasks"
    vars:
      run_no_feature_flag_tests: "true"

- <<: *gen_task_template
  name: sharding_auto_bootstrap_gen
  tags: ["assigned_to_jira_team_server_cluster_scalability", "sharding", "common"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      use_large_distro: "true"

- <<: *gen_task_template
  name: sharding_csrs_continuous_config_stepdown_gen
  tags: ["assigned_to_jira_team_server_cluster_scalability", "sharding", "common", "csrs", "non_live_record"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      use_large_distro: "true"

- <<: *gen_task_template
  name: sharding_gen
  tags: ["assigned_to_jira_team_server_cluster_scalability", "sharding", "common"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      use_large_distro: "true"

- <<: *gen_task_template
  name: sharding_hello_failures_gen
  tags: ["assigned_to_jira_team_server_cluster_scalability", "concurrency", "large", "sharded", "no_debug_mode"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      use_large_distro: "true"
      resmoke_jobs_max: 1

- <<: *gen_task_template
  name: sharding_jscore_multiversion_gen
  tags: ["assigned_to_jira_team_server_cluster_scalability", "multiversion_passthrough", "multiversion"]
  commands:
  - func: "initialize multiversion tasks"
    vars:
      sharding_jscore_passthrough_last_lts_new_old_old_new: last_lts
      sharding_jscore_passthrough_last_continuous_new_old_old_new: last_continuous
  - func: "generate resmoke tasks"
    vars:
      suite: sharding_jscore_passthrough
      run_no_feature_flag_tests: "true"

- <<: *gen_task_template
  name: sharding_jscore_passthrough_gen
  tags: ["assigned_to_jira_team_server_cluster_scalability", "sharding", "jscore", "common"]
  commands:
  - func: "generate resmoke tasks"

- <<: *gen_task_template
  name: sharding_jscore_passthrough_with_auto_bootstrap_gen
  tags: ["assigned_to_jira_team_server_cluster_scalability", "sharding", "jscore", "common"]
  commands:
  - func: "generate resmoke tasks"

# This is a subset of sharding_max_mirroring_opportunistic_secondary_targeting_ese_gen and
# sharding_max_mirroring_opportunistic_secondary_targeting_ese_gcm_gen and should not be ran
# in the same varient as them
- <<: *gen_task_template
  name: sharding_max_mirroring_opportunistic_secondary_targeting_gen
  tags: ["assigned_to_jira_team_server_cluster_scalability"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      use_large_distro: "true"

- <<: *gen_task_template
  name: sharding_mongos_and_mixed_shards_gen
  tags: ["assigned_to_jira_team_server_cluster_scalability", "sharding", "common", "multiversion"]
  commands:
  - func: "initialize multiversion tasks"
    vars:
      sharding_last_lts_mongos_and_mixed_shards: last_lts
  - func: "generate resmoke tasks"
    vars:
      use_large_distro: "true"
      run_no_feature_flag_tests: "true"

- <<: *gen_task_template
  name: sharding_multiversion_gen
  tags: ["assigned_to_jira_team_server_cluster_scalability", "random_multiversion_ds", "multiversion"]
  commands:
  - func: "initialize multiversion tasks"
    vars:
      sharding_last_continuous: last_continuous
      sharding_last_lts: last_lts
  - func: "generate resmoke tasks"
    vars:
      use_large_distro: "true"
      suite: sharding
      run_no_feature_flag_tests: "true"

- <<: *jstestfuzz_template
  name: unshard_collection_fuzzer_gen
  tags: ["assigned_to_jira_team_server_cluster_scalability", "require_npm", "random_name", "feature_flag_guarded"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      <<: *jstestfuzz_config_vars
      num_files: 10
      num_tasks: 5
      npm_command: resharding-fuzzer
      jstestfuzz_vars: --opType unshardCollection --inPlace yes --numDonors 3 --electionMech stepup --electionRole donor --electionRole recipient --useEsModules
      suite: resharding_fuzzer

################################################
#           Catalog & Routing tasks            #
################################################

- <<: *gen_task_template
  name: causally_consistent_jscore_passthrough_auth_gen
  tags: ["assigned_to_jira_team_server_catalog_and_routing", "causally_consistent"]
  commands:
  - func: "generate resmoke tasks"

- <<: *gen_task_template
  name: causally_consistent_jscore_passthrough_gen
  tags: ["assigned_to_jira_team_server_catalog_and_routing", "causally_consistent"]
  commands:
  - func: "generate resmoke tasks"

- <<: *gen_task_template
  name: concurrency_sharded_causal_consistency_and_balancer_gen
  tags: ["assigned_to_jira_team_server_catalog_and_routing", "concurrency", "large", "non_live_record", "sharded", "no_debug_mode"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      use_large_distro: "true"
      resmoke_jobs_max: 1

- <<: *gen_task_template
  name: concurrency_sharded_causal_consistency_gen
  tags: ["assigned_to_jira_team_server_catalog_and_routing", "concurrency", "non_live_record", "sharded", "no_debug_mode"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      use_large_distro: "true"
      resmoke_jobs_max: 1

- <<: *gen_task_template
  name: concurrency_sharded_clusterwide_ops_add_remove_shards_gen
  tags: ["assigned_to_jira_team_server_catalog_and_routing", "concurrency", "common", "read_concern_maj", "large", "sharded", "no_debug_mode"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      use_large_distro: "true"
      resmoke_jobs_max: 1

- <<: *gen_task_template
  name: concurrency_sharded_multi_stmt_txn_gen
  tags: ["assigned_to_jira_team_server_catalog_and_routing", "concurrency", "large", "sharded", "no_debug_mode"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      use_large_distro: "true"
      resmoke_jobs_max: 1

- <<: *gen_task_template
  name: concurrency_sharded_multi_stmt_txn_with_balancer_gen
  tags: ["assigned_to_jira_team_server_catalog_and_routing", "concurrency", "large", "sharded", "no_debug_mode"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      use_large_distro: "true"
      resmoke_jobs_max: 1

- <<: *gen_task_template
  name: concurrency_sharded_multi_stmt_txn_with_stepdowns_gen
  tags: ["assigned_to_jira_team_server_catalog_and_routing", "concurrency", "stepdowns", "large", "sharded", "no_debug_mode"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      use_large_distro: "true"
      resmoke_jobs_max: 1

- <<: *gen_task_template
  name: concurrency_sharded_with_auto_bootstrap_gen
  tags: ["assigned_to_jira_team_server_catalog_and_routing", "concurrency", "common", "read_concern_maj", "large", "sharded", "no_debug_mode"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      use_large_distro: "true"
      resmoke_jobs_max: 1

- <<: *gen_task_template
  name: concurrency_sharded_with_balancer_and_auto_bootstrap_gen
  tags: ["assigned_to_jira_team_server_catalog_and_routing", "concurrency", "common", "read_concern_maj", "large", "sharded", "no_debug_mode"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      use_large_distro: "true"
      resmoke_jobs_max: 1

- <<: *gen_task_template
  name: concurrency_sharded_with_stepdowns_and_balancer_gen
  tags: ["assigned_to_jira_team_server_catalog_and_routing", "concurrency", "stepdowns", "large", "sharded", "no_debug_mode"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      use_large_distro: "true"
      resmoke_jobs_max: 1

- <<: *gen_task_template
  name: concurrency_sharded_with_stepdowns_gen
  tags: ["assigned_to_jira_team_server_catalog_and_routing", "concurrency", "stepdowns", "large", "sharded", "no_debug_mode"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      use_large_distro: "true"
      resmoke_jobs_max: 1

- <<: *task_template
  name: cwrwc_passthrough
  tags: ["assigned_to_jira_team_server_catalog_and_routing", "read_write_concern", "large", "write"]
  commands:
  - func: "do setup"
  - func: "run tests"

- <<: *gen_task_template
  name: cwrwc_rc_majority_passthrough_gen
  tags: ["assigned_to_jira_team_server_catalog_and_routing", "read_write_concern"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      use_large_distro: "true"

- <<: *gen_task_template
  name: cwrwc_wc_majority_passthrough_gen
  tags: ["assigned_to_jira_team_server_catalog_and_routing", "read_write_concern", "write"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      use_large_distro: "true"

- <<: *gen_task_template
  name: fcv_upgrade_downgrade_replica_sets_jscore_passthrough_gen
  tags: ["assigned_to_jira_team_server_catalog_and_routing", "jscore"]
  commands:
  - func: "generate resmoke tasks"

- <<: *gen_task_template
  name: fcv_upgrade_downgrade_sharded_collections_jscore_passthrough_gen
  tags: ["assigned_to_jira_team_server_catalog_and_routing", "sharding"]
  commands:
  - func: "generate resmoke tasks"

- <<: *gen_task_template
  name: fcv_upgrade_downgrade_sharding_jscore_passthrough_gen
  tags: ["assigned_to_jira_team_server_catalog_and_routing", "sharding"]
  commands:
  - func: "generate resmoke tasks"

## jstestfuzz concurrent sharded cluster causal consistency ##
- <<: *jstestfuzz_template
  name: jstestfuzz_concurrent_sharded_causal_consistency_gen
  tags: ["assigned_to_jira_team_server_catalog_and_routing", "jstestfuzz", "causal", "require_npm", "random_name"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      <<: *jstestfuzz_config_vars
      num_files: ${jstestfuzz_concurrent_num_files|10}
      num_tasks: 5
      jstestfuzz_vars: --jsTestsDir ../jstests
      suite: jstestfuzz_sharded_causal_consistency
      resmoke_args: --numClientsPerFixture=10

## jstestfuzz concurrent sharded cluster continuous stepdown with flow control engaged ##
- <<: *jstestfuzz_template
  name: jstestfuzz_concurrent_sharded_continuous_stepdown_flow_control_gen
  tags: ["assigned_to_jira_team_server_catalog_and_routing", "jstestfuzz", "flow_control", "stepdowns", "require_npm", "random_name"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      <<: *jstestfuzz_config_vars
      num_files: 2
      num_tasks: 1
      jstestfuzz_vars: --jsTestsDir ../jstests
      suite: jstestfuzz_sharded_continuous_stepdown
      resmoke_args: >-
        --flowControlTicketOverride=30
        --numClientsPerFixture=10

## jstestfuzz concurrent sharded cluster continuous stepdown ##
- <<: *jstestfuzz_template
  name: jstestfuzz_concurrent_sharded_continuous_stepdown_gen
  tags: ["assigned_to_jira_team_server_catalog_and_routing", "jstestfuzz", "stepdowns", "require_npm", "random_name"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      <<: *jstestfuzz_config_vars
      num_files: ${jstestfuzz_concurrent_num_files|10}
      num_tasks: 2
      jstestfuzz_vars: --jsTestsDir ../jstests
      suite: jstestfuzz_sharded_continuous_stepdown
      resmoke_args: --numClientsPerFixture=10

## jstestfuzz concurrent sharded cluster ##
- <<: *jstestfuzz_template
  name: jstestfuzz_concurrent_sharded_gen
  tags: ["assigned_to_jira_team_server_catalog_and_routing", "jstestfuzz", "common", "sharding", "require_npm", "random_name"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      <<: *jstestfuzz_config_vars
      num_files: ${jstestfuzz_concurrent_num_files|10}
      num_tasks: 5
      jstestfuzz_vars: --jsTestsDir ../jstests
      suite: jstestfuzz_sharded
      resmoke_args: --numClientsPerFixture=10

## jstestfuzz concurrent sharded cluster with logical session ##
- <<: *jstestfuzz_template
  name: jstestfuzz_concurrent_sharded_session_gen
  tags: ["assigned_to_jira_team_server_catalog_and_routing", "jstestfuzz", "session", "require_npm", "random_name"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      <<: *jstestfuzz_config_vars
      num_files: ${jstestfuzz_concurrent_num_files|10}
      num_tasks: 5
      jstestfuzz_vars: --jsTestsDir ../jstests
      suite: jstestfuzz_sharded_session
      resmoke_args: --numClientsPerFixture=10

## jstestfuzz sharded cluster causal consistency ##
- <<: *jstestfuzz_template
  name: jstestfuzz_sharded_causal_consistency_gen
  tags: ["assigned_to_jira_team_server_catalog_and_routing", "jstestfuzz", "causal", "require_npm", "random_name"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      <<: *jstestfuzz_config_vars
      jstestfuzz_vars: --jsTestsDir ../jstests
      suite: jstestfuzz_sharded_causal_consistency
      resmoke_args: "--mongodSetParameters='{logComponentVerbosity: {command: 2}}'"

## jstestfuzz sharded cluster continuous stepdown with flow control engaged ##
- <<: *jstestfuzz_template
  name: jstestfuzz_sharded_continuous_stepdown_flow_control_gen
  tags: ["assigned_to_jira_team_server_catalog_and_routing", "jstestfuzz", "flow_control", "stepdowns", "require_npm", "random_name"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      <<: *jstestfuzz_config_vars
      num_files: 2
      num_tasks: 1
      jstestfuzz_vars: --jsTestsDir ../jstests
      suite: jstestfuzz_sharded_continuous_stepdown
      resmoke_args: >-
        --flowControlTicketOverride=3
        --mongodSetParameters="{logComponentVerbosity: {command: 2}}"

## jstestfuzz sharded cluster continuous stepdown ##
- <<: *jstestfuzz_template
  name: jstestfuzz_sharded_continuous_stepdown_gen
  tags: ["assigned_to_jira_team_server_catalog_and_routing", "jstestfuzz", "stepdowns", "require_npm", "random_name"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      <<: *jstestfuzz_config_vars
      num_files: 5
      num_tasks: 5
      jstestfuzz_vars: --jsTestsDir ../jstests
      suite: jstestfuzz_sharded_continuous_stepdown
      resmoke_args: "--mongodSetParameters='{logComponentVerbosity: {command: 2}}'"

## jstestfuzz sharded cluster ##
- <<: *jstestfuzz_template
  name: jstestfuzz_sharded_gen
  tags: ["assigned_to_jira_team_server_catalog_and_routing", "jstestfuzz", "common", "sharding", "require_npm", "random_name"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      <<: *jstestfuzz_config_vars
      jstestfuzz_vars: --jsTestsDir ../jstests
      suite: jstestfuzz_sharded
      resmoke_args: "--mongodSetParameters='{logComponentVerbosity: {command: 2}}'"

## jstestfuzz sharded multiversion cluster ##
- <<: *jstestfuzz_template
  name: jstestfuzz_sharded_multiversion_gen
  tags: ["assigned_to_jira_team_server_catalog_and_routing", "multiversion_fuzzer", "require_npm", "random_name", "multiversion"]
  commands:
  - func: "initialize multiversion tasks"
    vars:
      jstestfuzz_sharded_last_continuous_new_old_old_new: last_continuous
      jstestfuzz_sharded_last_lts_new_old_old_new: last_lts
  - func: "generate resmoke tasks"
    vars:
      <<: *jstestfuzz_config_vars
      jstestfuzz_vars: --jsTestsDir ../jstests
      resmoke_args: "--mongodSetParameters='{logComponentVerbosity: {command: 2}}'"
      suite: jstestfuzz_sharded
      npm_command: jstestfuzz
      run_no_feature_flag_tests: "true"

## jstestfuzz sharded cluster with logical session ##
- <<: *jstestfuzz_template
  name: jstestfuzz_sharded_session_gen
  tags: ["assigned_to_jira_team_server_catalog_and_routing", "jstestfuzz", "session", "require_npm", "random_name"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      <<: *jstestfuzz_config_vars
      jstestfuzz_vars: --jsTestsDir ../jstests
      suite: jstestfuzz_sharded_session
      resmoke_args: "--mongodSetParameters='{logComponentVerbosity: {command: 2}}'"

- <<: *gen_task_template
  name: sharded_causally_consistent_jscore_passthrough_gen
  tags: ["assigned_to_jira_team_server_catalog_and_routing", "causally_consistent"]
  commands:
  - func: "generate resmoke tasks"

- <<: *gen_task_template
  name: sharded_causally_consistent_jscore_txns_passthrough_gen
  tags: ["assigned_to_jira_team_server_catalog_and_routing", "sharding", "jscore", "causally_consistent", "txns"]
  commands:
  - func: "generate resmoke tasks"

- <<: *gen_task_template
  name: sharded_causally_consistent_jscore_txns_passthrough_without_snapshot_gen
  tags: ["assigned_to_jira_team_server_catalog_and_routing", "sharding", "wo_snapshot", "causally_consistent", "jscore"]
  commands:
  - func: "generate resmoke tasks"
    vars:
      suite: sharded_causally_consistent_jscore_txns_passthrough
      resmoke_args: --excludeWithAnyTags=uses_snapshot_read_concern

- <<: *gen_task_template
  name: unsplittable_collections_created_on_any_shard_jscore_passthrough_gen
  # TODO SERVER-83445 Enable on non-all-feature-flag variants.
  tags: ["assigned_to_jira_team_server_catalog_and_routing", "unsplittable_collections"]
  commands:
  - func: "generate resmoke tasks"


################################################
#                 Task Groups                  #
################################################
task_groups:
- <<: *compile_task_group_template
  name: compile_archive_and_run_libfuzzertests_TG
  tasks:
  - compile_and_archive_libfuzzertests
  - fetch_and_run_libfuzzertests

- <<: *compile_task_group_template
  name: compile_integration_and_test_no_audit_parallel_stream_TG
  tasks:
  - compile_integration_test
  - integration_tests_standalone
  - integration_tests_replset
  - integration_tests_replset_ssl_auth
  - integration_tests_sharded

- <<: *compile_task_group_template
  name: compile_integration_and_test_parallel_stream_TG
  tasks:
  - compile_integration_test
  - integration_tests_standalone
  - integration_tests_standalone_audit
  - integration_tests_replset
  - integration_tests_replset_ssl_auth
  - integration_tests_sharded

# SERVER-76006
# This is a compile stream meant for non-cached and/or underpowered systems.
# It joins most of the compile tasks together under a single host spread out
# across different tasks.
- <<: *compile_task_group_template
  name: small_compile_test_and_package_serial_no_unittests_TG
  tasks:
  - compile_dist_test_half
  - compile_dist_test
  - archive_dist_test
  - archive_dist_test_debug
  - compile_integration_test
  - integration_tests_standalone
  - integration_tests_standalone_audit
  - integration_tests_replset
  - integration_tests_replset_ssl_auth
  - integration_tests_sharded
  - compile_dbtest
  - run_dbtest
  - archive_dbtest
  - compile_all_but_not_unittests
  - package

- <<: *compile_task_group_template
  name: server_discovery_and_monitoring_json_test_TG
  tasks:
  - server_discovery_and_monitoring_json_test

- <<: *compile_task_group_template
  name: server_selection_json_test_TG
  tasks:
  - server_selection_json_test
