####################################################
#                  YAML Conventions                 #
#####################################################
# Please see our conventions document at
# https://wiki.corp.mongodb.com/pages/viewpage.action?pageId=133273894
# for help navigating this document, or for help with our lint rules.


#####################################################
#               A note on expansions                #
#####################################################

# Expansions usually appear in the form ${key|default}
# If 'key' is found in the executor's map of currently known
# expansions, the corresponding value is used. If the key can
# not be found, the default is used.
#
# Arbitrary expansions can be specified in the YAML configuration
# files in the following places:
# - The 'expansions' field for buildvariants (branch file)
# - The 'expansions' field for distros (distros file)
#
# A number of 'built-in' expansions are also available for use; these include:
# - environment variables available on the host machine
# - 'workdir' (references the executor's work directory).
# - 'task_id' (references the task id of the task the executor is working on).
# - 'build_variant' (references the executing task's buildvariant).
# - 'config_root' (references the root directory for the executor's configuration artifacts).


#####################################################
#          Setup environment in a new task          #
#####################################################

# There are several ways to setup the environment in your task.
#
# 1. If your task depends on 'archive_dist_test'/'archive_dist_test_debug' task you can call the function "do setup"
# - func: "do setup"
# Or alternatively call the functions in the sequence below, if you don't need everything else from "do setup"
# - func: "fetch artifacts" (includes python, shell scripts, jstests etc. from the mongo and enterprise repos)
# - func: "f_expansions_write"
# - func: "kill processes"
# - func: "cleanup environment"
# - func: "set up venv"
#
# 2. If your task does not depend on 'archive_dist_test'/'archive_dist_test_debug' task use the following functions
# call sequence
# - command: manifest.load
# - func: "git get project" (clone the entire mongo and enterprise repos)
# - func: "f_expansions_write"
# - func: "kill processes"
# - func: "cleanup environment"
# - func: "set up venv"

include:
- filename: etc/evergreen_yml_components/configuration.yml
- filename: etc/evergreen_yml_components/definitions.yml
- filename: etc/evergreen_yml_components/variants/task_generation.yml
- filename: etc/evergreen_yml_components/variants/in_memory.yml
- filename: etc/evergreen_yml_components/variants/ninja.yml
- filename: etc/evergreen_yml_components/variants/sanitizer/build_dev.yml
- filename: etc/evergreen_yml_components/variants/sanitizer/test_dev.yml
- filename: etc/evergreen_yml_components/variants/sanitizer/test_dev_release.yml
- filename: etc/evergreen_yml_components/variants/amazon/build_dev.yml
- filename: etc/evergreen_yml_components/variants/amazon/test_dev.yml
- filename: etc/evergreen_yml_components/variants/macos/build_dev.yml
- filename: etc/evergreen_yml_components/variants/macos/test_dev.yml
- filename: etc/evergreen_yml_components/variants/rhel/build_dev.yml
- filename: etc/evergreen_yml_components/variants/rhel/test_dev.yml
- filename: etc/evergreen_yml_components/variants/config_shard.yml
- filename: etc/evergreen_yml_components/variants/ubuntu/build_dev.yml
- filename: etc/evergreen_yml_components/variants/ubuntu/test_dev.yml
- filename: etc/evergreen_yml_components/variants/windows/build_dev.yml
- filename: etc/evergreen_yml_components/variants/windows/test_dev.yml
- filename: etc/evergreen_yml_components/variants/wiredtiger/build_dev.yml
- filename: etc/evergreen_yml_components/variants/wiredtiger/test_dev.yml


variables:

# Common compile variant dependency specifications.
# THIS HAS COPIES IN:
# - etc/evergreen.yml
# - etc/evergreen_yml_components/variants/rhel/test_dev.yml
# - etc/evergreen_yml_components/variants/config_shard.yml
# - etc/evergreen_yml_components/variants/sanitizer/test_dev.yml
# - etc/evergreen_yml_components/variants/classic_engine.yml
# ANY MODIFICATIONS HERE SHOULD ALSO BE MADE IN THOSE FILES
- &linux_x86_dynamic_compile_variant_dependency
  depends_on:
  - name: archive_dist_test_debug
    variant: &linux_x86_dynamic_compile_variant_name linux-x86-dynamic-compile
  - name: version_gen
    variant: generate-tasks-for-version
    # This is added because of EVG-18211.
    # Without this we are adding extra dependencies on evergreen and it is causing strain
    omit_generated_tasks: true
  - name: generate_buildid_to_debug_symbols_mapping
    variant: linux-x86-dynamic-compile

# THIS HAS COPIES IN:
# - etc/evergreen.yml
# - etc/evergreen_yml_components/variants/amazon/test_dev.yml
# ANY MODIFICATIONS HERE SHOULD ALSO BE MADE IN THOSE FILES
- &amazon_linux2_arm64_dynamic_compile_variant_dependency
  depends_on:
  - name: archive_dist_test_debug
    variant: &amazon_linux2_arm64_dynamic_compile_variant_name amazon-linux2-arm64-dynamic-compile
  - name: version_gen
    variant: generate-tasks-for-version
    # This is added because of EVG-18211.
    # Without this we are adding extra dependencies on evergreen and it is causing strain
    omit_generated_tasks: true
  - name: generate_buildid_to_debug_symbols_mapping
    variant: amazon-linux2-arm64-dynamic-compile

# THIS HAS COPIES IN:
# - etc/evergreen.yml
# - etc/evergreen_yml_components/variants/rhel/test_dev.yml
# - etc/evergreen_yml_components/variants/config_shard.yml
# - etc/evergreen_yml_components/variants/sanitizer/test_dev.yml
# - etc/evergreen_yml_components/variants/classic_engine.yml
# ANY MODIFICATIONS HERE SHOULD ALSO BE MADE IN THOSE FILES
- &linux_x86_generic_expansions
  multiversion_platform: rhel80
  multiversion_edition: enterprise
  repo_edition: enterprise
  large_distro_name: rhel80-medium
  core_analyzer_distro_name: rhel80-large
  num_scons_link_jobs_available: 0.99
  compile_variant: *linux_x86_dynamic_compile_variant_name

# THIS HAS COPIES IN:
# - etc/evergreen.yml
# - etc/evergreen_yml_components/variants/rhel/test_dev.yml
# - etc/evergreen_yml_components/variants/config_shard.yml
# - etc/evergreen_yml_components/variants/sanitizer/test_dev.yml
# - etc/evergreen_yml_components/variants/classic_engine.yml
# ANY MODIFICATIONS HERE SHOULD ALSO BE MADE IN THOSE FILES
- &enterprise-rhel-80-64-bit-dynamic-expansions
  <<: *linux_x86_generic_expansions
  scons_cache_scope: shared
  scons_cache_mode: all
  has_packages: false
  jstestfuzz_num_generated_files: 40
  jstestfuzz_concurrent_num_files: 10
  target_resmoke_time: 10
  max_sub_suites: 5
  idle_timeout_factor: 1.5
  exec_timeout_factor: 1.5
  large_distro_name: rhel80-medium

# THIS HAS COPIES IN:
# - etc/evergreen.yml
# - etc/evergreen_yml_components/variants/perf.yml
# - etc/evergreen_yml_components/variants/amazon/test_dev.yml
# ANY MODIFICATIONS HERE SHOULD ALSO BE MADE IN THOSE FILES
- &linux_arm64_generic_expansions
  multiversion_platform: amazon2
  multiversion_edition: enterprise
  multiversion_architecture: aarch64
  packager_arch: aarch64
  packager_distro: amazon2
  repo_edition: enterprise
  large_distro_name: amazon2-arm64-large
  num_scons_link_jobs_available: 0.99
  compile_variant: *amazon_linux2_arm64_dynamic_compile_variant_name

# If you add anything to san_options, make sure the appropriate changes are
# also made to SConstruct.
# THIS HAS COPIES IN:
# - etc/evergreen.yml
# - etc/evergreen_yml_components/variants/sanitizer/build_dev.yml
# - etc/evergreen_yml_components/variants/sanitizer/test_dev.yml
# - etc/evergreen_yml_components/variants/sanitizer/test_dev_release.yml
# - etc/evergreen_yml_components/variants/classic_engine.yml
# ANY MODIFICATIONS HERE SHOULD ALSO BE MADE IN THOSE FILES
- aubsan_options: &aubsan_options >-
    UBSAN_OPTIONS="print_stacktrace=1:external_symbolizer_path=/opt/mongodbtoolchain/v4/bin/llvm-symbolizer"
    LSAN_OPTIONS="suppressions=etc/lsan.suppressions:report_objects=1"
    ASAN_OPTIONS="detect_leaks=1:check_initialization_order=true:strict_init_order=true:abort_on_error=1:disable_coredump=0:handle_abort=1:strict_string_checks=true:detect_invalid_pointer_pairs=1:external_symbolizer_path=/opt/mongodbtoolchain/v4/bin/llvm-symbolizer"

# THIS HAS COPIES IN:
# - etc/evergreen.yml
# - etc/evergreen_yml_components/variants/sanitizer/test_dev.yml
# ANY MODIFICATIONS HERE SHOULD ALSO BE MADE IN THOSE FILES
- &linux_debug_aubsan_compile_variant_dependency
  depends_on:
  - name: archive_dist_test_debug
    variant: &linux_debug_aubsan_compile_variant_name linux-debug-aubsan-compile-required
  - name: version_gen
    variant: generate-tasks-for-version
    # This is added because of EVG-18211.
    # Without this we are adding extra dependencies on evergreen and it is causing strain
    omit_generated_tasks: true
  - name: generate_buildid_to_debug_symbols_mapping
    variant: linux-debug-aubsan-compile-required

# THIS HAS COPIES IN:
# - etc/evergreen.yml
# - etc/evergreen_yml_components/variants/sanitizer/test_dev.yml
# ANY MODIFICATIONS HERE SHOULD ALSO BE MADE IN THOSE FILES
- &aubsan-lite-required-expansions
  compile_variant: *linux_debug_aubsan_compile_variant_name
  lang_environment: LANG=C
  san_options: *aubsan_options
  resmoke_jobs_factor: 0.3  # Avoid starting too many mongod's under {A,UB}SAN build.
  hang_analyzer_dump_core: false
  max_sub_suites: 3
  num_scons_link_jobs_available: 0.99
  large_distro_name: rhel80-build
  multiversion_platform: rhel80
  multiversion_edition: enterprise
  gcov_tool: /opt/mongodbtoolchain/v4/bin/gcov


parameters:
- key: evergreen_config_file_path
  value: "etc/evergreen.yml"
  description: "path to this file"


#######################################
#            Buildvariants            #
#######################################
buildvariants:

# - <<: *amazon_linux2_arm64_compile_variant_dependency
#   name: perf-1-node-replSet.arm.aws.2023-09
#   display_name: PERF 1-Node ReplSet ARM AWS 2023-09
#   # Leave off for now
#   modules: &perf_modules
#     - enterprise
#     - dsi
#     - genny
#     - workloads
#     - linkbench
#     - linkbench2
#     - tsbs
#     - YCSB
#     - PrivateWorkloads
#     - flamegraph
#   expansions:
#     <<: *linux_arm64_generic_expansions
#     idle_timeout_factor: 1.5
#     exec_timeout_factor: 1.5
#     mongodb_setup_release: 2022-11
#     mongodb_setup: single-replica
#     infrastructure_provisioning_release: 2023-09
#     infrastructure_provisioning: single
#     workload_setup: 2022-11
#     platform: linux
#     project_dir: &perf_project_dir dsi
#     authentication: enabled
#     storageEngine: wiredTiger
#     compile_variant: *amazon_linux2_arm64_compile_variant_name
#   run_on:
#     - rhel70-small
#   tasks:
#   - name: industry_benchmarks
#   - name: ycsb_60GB
#   - name: ycsb_60GB.long
#   - name: crud_workloads_majority
#   - name: misc_workloads
#   - name: map_reduce_workloads
#   - name: smoke_test
#   - name: canaries_only
#   - name: non_sharded_workloads
#   # - name: bestbuy_agg
#   # - name: bestbuy_agg_merge_different_db
#   # - name: bestbuy_agg_merge_same_db
#   # - name: bestbuy_agg_merge_wordcount
#   # - name: bestbuy_query
#   - name: change_streams_latency
#   - name: change_streams_listen_throughput
#   - name: snapshot_reads
#   - name: linkbench
#   - name: linkbench2
#   - name: tsbs_load
#   # - name: tsbs_query
#   # - name: tsbs_query_finance
#   - name: tsbs_query_manual_bucketing
#   # - name: tsbs_query_fixed_bucketing
#   # - name: tsbs-query-genny
#   # - name: tsbs-query-optimizations
#   # - name: tpcc
#   # - name: tpcc_majority
#   # - name: tpch_1_normalized
#   # - name: tpch_1_denormalized
#   # - name: tpch_10_normalized
#   # - name: tpch_10_denormalized

# ###########################################
# #         Linux buildvariants             #
# ###########################################
# - <<: *amazon2_x86_compile_variant_dependency
#   name: perf-standalone-classic-query-engine.intel.aws.2023-09
#   display_name: PERF Standalone (Classic Query Engine) Intel AWS 2023-09
#   # cron: &cron_query_perf_schedule "0 0 * * 4"  # 00:00 on Thursday
#   activate: false
#   modules: *perf_modules
#   expansions:
#     <<: *amazon2_x86_expansions
#     idle_timeout_factor: 1.5
#     exec_timeout_factor: 1.5
#     mongodb_setup_release: 2022-11
#     mongodb_setup: standalone-classic-query-engine
#     infrastructure_provisioning_release: 2023-09
#     infrastructure_provisioning: single-intel
#     workload_setup: 2022-11
#     platform: linux
#     project_dir: *perf_project_dir
#     authentication: enabled
#     storageEngine: wiredTiger
#     compile_variant: *amazon2_x86_compile_variant_name
#   run_on:
#     - amazon2
#   tasks: &classic_engine_tasks
#     - name: schedule_patch_auto_tasks
#     - name: schedule_variant_auto_tasks
#     - name: industry_benchmarks
#     - name: ycsb_60GB
#     - name: ycsb_60GB.long
#     - name: crud_workloads_majority
#     # - name: bestbuy_agg
#     # - name: bestbuy_agg_merge_different_db
#     # - name: bestbuy_agg_merge_same_db
#     # - name: bestbuy_agg_merge_wordcount
#     # - name: bestbuy_query
#     # - name: cursor_manager
#     # - name: map_reduce_workloads
#     # - name: tpcc
#     # - name: tpcc_majority
#     # - name: tpch_1_normalized
#     # - name: tpch_1_denormalized
#     # - name: tpch_10_normalized
#     # - name: tpch_10_denormalized
#     - name: canaries_only

- name: &tla-plus tla-plus
  display_name: "TLA+"
  run_on:
  - rhel80-build
  cron: "0 4 * * 0" # From the ${project_weekly_cron} parameter
  stepback: false
  expansions:
    timeout_secs: 345600 # 4 days
  tasks:
  - name: tla_plus

- name: &stm-daily-cron stm-daily-cron
  modules:
  - enterprise
  display_name: "* STM Daily Cron"
  cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
  run_on:
  - rhel80-small
  expansions:
    multiversion_platform: rhel80
    multiversion_edition: enterprise
    compile_variant: *stm-daily-cron
  stepback: false
  tasks:
  - name: lint_fuzzer_sanity_all
  - name: powercycle_sentinel
  - name: powercycle_smoke_skip_compile_gen
  - name: monitor_mongo_fork_10gen
  - name: daily_task_scanner

- name: tooling-metrics-x86
  display_name: "* Tooling Metrics x86"
  cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
  run_on:
  - ubuntu2204-small
  stepback: false
  tasks:
  - name: tooling_metrics_test

- name: tooling-metrics-arm64
  display_name: "* Tooling Metrics ARM64"
  cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
  run_on:
  - ubuntu2204-arm64-small
  stepback: false
  tasks:
  - name: tooling_metrics_test

###########################################
#          Redhat buildvariants           #
###########################################

- name: run-all-affected-jstests
  display_name: "! Run All Affected JStests"
  patch_only: true
  run_on:
  - rhel80-medium
  expansions:
    large_distro_name: rhel80-large
    burn_in_tag_include_all_required_and_suggested: true
    burn_in_tag_exclude_build_variants: >-
      macos-debug-suggested
    burn_in_tag_include_build_variants: >-
      enterprise-rhel-80-64-bit-inmem
      enterprise-rhel-80-64-bit-multiversion
    burn_in_tag_compile_task_dependency: archive_dist_test_debug
    compile_variant: *amazon_linux2_arm64_dynamic_compile_variant_name
  depends_on:
  - name: archive_dist_test_debug
    variant: *amazon_linux2_arm64_dynamic_compile_variant_name
  - name: version_gen
    variant: generate-tasks-for-version
    # This is added because of EVG-18211.
    # Without this we are adding extra dependencies on evergreen and it is causing strain
    omit_generated_tasks: true
  - name: version_burn_in_gen
    variant: generate-tasks-for-version
    # This is added because of EVG-18211.
    # Without this we are adding extra dependencies on evergreen and it is causing strain
    omit_generated_tasks: true
  tasks:
  - name: burn_in_tags_gen

- &enterprise-rhel-80-64-bit-dynamic-classic-engine
  <<: *linux_x86_dynamic_compile_variant_dependency
  name: enterprise-rhel-80-64-bit-dynamic-classic-engine
  display_name: "Shared Library Enterprise RHEL 8.0 (Classic Engine)"
  cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
  modules:
  - enterprise
  run_on:
  - rhel80-small
  stepback: false
  expansions:
    <<: *enterprise-rhel-80-64-bit-dynamic-expansions
    jstestfuzz_num_generated_files: 40
    jstestfuzz_concurrent_num_files: 10
    target_resmoke_time: 10
    max_sub_suites: 5
    test_flags: >-
      --mongodSetParameters="{internalQueryFrameworkControl: forceClassicEngine}"
      --excludeWithAnyTags=requires_sbe
    large_distro_name: rhel80-medium
  depends_on:
  - name: archive_dist_test_debug
    variant: *linux_x86_dynamic_compile_variant_name
  - name: version_gen
    variant: generate-tasks-for-version
    # This is added because of EVG-18211.
    # Without this we are adding extra dependencies on evergreen and it is causing strain
    omit_generated_tasks: true
  tasks:
  - name: .aggfuzzer !.sbe_only !.cqf_only
  - name: .aggregation !.sbe_only
  - name: .auth
  - name: .causally_consistent !.sharding
  - name: .change_stream_fuzzer
  - name: .change_streams
  - name: .concurrency !.large !.ubsan !.no_txns !.compute_mode
  - name: .concurrency .large !.ubsan !.no_txns !.compute_mode
    distros:
    - rhel80-medium
  - name: .encrypt
  - name: .jscore .common !jsCore !.sbe_only
  - name: .jstestfuzz !.flow_control
  - name: .misc_js
  - name: .multi_shard
  - name: .query_fuzzer !.cqf_only
  - name: query_golden_classic
  - name: .random_multiversion_ds
  - name: .read_only
  - name: .read_write_concern !.large
  - name: .read_write_concern .large
    distros:
    - rhel80-medium
  - name: .replica_sets !.encrypt !.auth
    distros:
    - rhel80-xlarge
  - name: .rollbackfuzzer
  - name: .sharding .common
  - name: .sharding .jscore !.wo_snapshot !.multi_stmt
  - name: .sharding .txns
  - name: .serverless
    distros:
    - rhel80-xlarge
  - name: .updatefuzzer
  - name: aggregation_repeat_queries
  - name: audit
  - name: burn_in_tests_gen
    depends_on:
    - name: version_burn_in_gen
      variant: generate-tasks-for-version
      omit_generated_tasks: true
    - name: archive_dist_test_debug
      variant: *linux_x86_dynamic_compile_variant_name
  - name: check_feature_flag_tags
  - name: check_for_todos
  - name: disk_wiredtiger
  - name: initial_sync_fuzzer_gen
  - name: fcv_upgrade_downgrade_replica_sets_jscore_passthrough_gen
  - name: fcv_upgrade_downgrade_sharding_jscore_passthrough_gen
  - name: fcv_upgrade_downgrade_sharded_collections_jscore_passthrough_gen
  - name: jsCore
    distros:
    - rhel80-xlarge
  - name: jsCore_min_batch_repeat_queries_ese_gsm
  - name: jsCore_txns_large_txns_format
  - name: json_schema
  - name: multi_stmt_txn_jscore_passthrough_with_migration_gen
  - name: multiversion_gen
  - name: .multiversion_sanity_check
  - name: replica_sets_api_version_jscore_passthrough_gen
  - name: replica_sets_reconfig_jscore_passthrough_gen
  - name: replica_sets_reconfig_jscore_stepdown_passthrough_gen
    distros:
    - rhel80-xlarge
  - name: replica_sets_reconfig_kill_primary_jscore_passthrough_gen
    distros:
    - rhel80-xlarge
  - name: change_streams_pre_images_replica_sets_stepdown_primary_jscore_passthrough_gen
    distros:
    - rhel80-xlarge
  - name: change_streams_pre_images_replica_sets_kill_secondary_jscore_passthrough_gen
    distros:
    - rhel80-xlarge
  - name: change_streams_change_collection_replica_sets_stepdown_primary_jscore_passthrough_gen
    distros:
    - rhel80-xlarge
  - name: change_streams_change_collection_replica_sets_kill_secondary_jscore_passthrough_gen
    distros:
    - rhel80-xlarge
  - name: retryable_writes_jscore_passthrough_gen
  - name: retryable_writes_jscore_stepdown_passthrough_gen
  - name: sasl
  - name: search
  - name: search_auth
  - name: search_pinned_connections_auth
  - name: search_ssl
  - name: secondary_reads_passthrough_gen
  - name: session_jscore_passthrough
  - name: sharding_api_version_jscore_passthrough_gen
  - name: test_api_version_compatibility
  - name: unittest_shell_hang_analyzer_gen
  - name: vector_search
  - name: vector_search_auth
  - name: vector_search_ssl

###########################################
#     Experimental buildvariants          #
###########################################

- <<: *linux_debug_aubsan_compile_variant_dependency
  name: &rhel80-debug-aubsan-classic-engine rhel80-debug-aubsan-classic-engine
  display_name: "* {A,UB}SAN Enterprise RHEL 8.0 DEBUG (Classic Engine)"
  cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
  modules:
  - enterprise
  run_on:
  - rhel80-build
  expansions:
    <<: *aubsan-lite-required-expansions
    test_flags: >-
      --mongodSetParameters="{internalQueryFrameworkControl: forceClassicEngine}"
      --excludeWithAnyTags=requires_ocsp_stapling,requires_increased_memlock_limits,requires_sbe
  tasks:
  - name: .aggregation !.sbe_only
  - name: .auth
  - name: audit
  - name: .causally_consistent !.wo_snapshot
  - name: .change_streams
  # - name: disk_wiredtiger
  - name: .misc_js
  - name: .concurrency !.ubsan !.no_txns !.kill_terminate !.compute_mode
  - name: .encrypt
  - name: external_auth
  - name: external_auth_aws
  - name: external_auth_oidc
  - name: initial_sync_fuzzer_gen
  - name: fcv_upgrade_downgrade_replica_sets_jscore_passthrough_gen
  - name: fcv_upgrade_downgrade_sharding_jscore_passthrough_gen
  - name: fcv_upgrade_downgrade_sharded_collections_jscore_passthrough_gen
  - name: .jscore .common !.sbe_only
  - name: jsCore_min_batch_repeat_queries_ese_gsm
  - name: jsCore_txns_large_txns_format
  - name: json_schema
  - name: .multi_shard .common
  - name: .query_fuzzer !.cqf_only
  - name: .read_write_concern
  - name: replica_sets_large_txns_format_jscore_passthrough
  - name: .replica_sets !.multi_oplog
  - name: .replica_sets .encrypt
  - name: .resharding_fuzzer
  - name: .retry
  - name: .rollbackfuzzer
  - name: .read_only
  - name: sasl
  - name: secondary_reads_passthrough_gen
  - name: session_jscore_passthrough
  - name: .sharding .jscore !.wo_snapshot
  - name: .sharding .common !.csrs !.jstestfuzz
  - name: .updatefuzzer
  - name: .serverless
  - name: unittest_shell_hang_analyzer_gen
  - name: .watchdog
  - name: generate_buildid_to_debug_symbols_mapping

- name: &shared-scons-cache-pruning shared-scons-cache-pruning
  display_name: "Shared SCons Cache Pruning"
  cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
  run_on:
  - ubuntu2204-small
  stepback: false
  tasks:
  - name: shared_scons_cache_pruning

- name: &windows-shared-scons-cache-pruning windows-shared-scons-cache-pruning
  display_name: "Windows shared SCons Cache Pruning"
  cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
  run_on:
  - windows-vsCurrent-small
  stepback: false
  expansions:
    python: '/cygdrive/c/python/python39/python.exe'
  tasks:
  - name: win_shared_scons_cache_pruning

###########################################
#          Copybara buildvariants           #
###########################################

- name: &copybara-sync-between-repos copybara-sync-between-repos
  modules:
  - enterprise
  display_name: "* Copybara Sync Between Repos"
  activate: true
  run_on:
  - ubuntu2204-small
  stepback: false
  tasks:
  - name: sync_repo_with_copybara
    priority: 50

###########################################
#       Build Metrics buildvariants       #
###########################################

- name: &enterprise-windows-build-metrics enterprise-windows-build-metrics
  display_name: "~ Build Metrics Enterprise Windows"
  cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
  stepback: false
  run_on:
  - windows-vsCurrent-small
  expansions:
    num_scons_link_jobs_available: 0.1
    compile_flags: >-
      CPPPATH="c:/sasl/include"
      LIBPATH="c:/sasl/lib"
      -j$(( $(grep -c ^processor /proc/cpuinfo) / 2 ))
      --win-version-min=win10
    python: '/cygdrive/c/python/python39/python.exe'
  tasks:
  - name: build_metrics_gen_TG

- name: &macos-enterprise-build-metrics macos-enterprise-build-metrics
  display_name: "~ Build Metrics Enterprise MacOS"
  cron: "0 4 * * *" # From the ${project_nightly_cron} parameter.
  stepback: false
  modules:
  - enterprise
  run_on:
  - macos-1100
  expansions:
    num_scons_link_jobs_available: 0.1
    compile_env: DEVELOPER_DIR=/Applications/Xcode13.app
    compile_flags: >-
      --ssl
      -j$(sysctl -n hw.logicalcpu)
      --libc++
      --variables-files=etc/scons/xcode_macosx.vars
  tasks:
  - name: build_metrics_gen_TG

- name: &enterprise-rhel-80-64-bit-build-metrics enterprise-rhel-80-64-bit-build-metrics
  display_name: "~ Build Metrics Enterprise RHEL 8.0 "
  cron: "0 4 * * *" # From the ${project_nightly_cron} parameter
  stepback: false
  modules:
  - enterprise
  run_on:
  - rhel80-build
  expansions:
    compile_flags: >-
      --ssl
      MONGO_DISTMOD=rhel80
      -j$(grep -c ^processor /proc/cpuinfo)
    repo_edition: enterprise
    large_distro_name: rhel80-large
    num_scons_link_jobs_available: 0.1
  tasks:
  - name: build_metrics_gen_TG

- name: &enterprise-rhel-80-aarch64-build-metrics enterprise-rhel-80-aarch64-build-metrics
  display_name: "~ Build Metrics Enterprise AL22 ARM"
  cron: "0 4 * * *" # From the ${project_nightly_cron} parameter
  stepback: false
  modules:
  - enterprise
  run_on:
  - amazon2023.0-arm64-large
  expansions:
    compile_flags: >-
      --ssl
      MONGO_DISTMOD=rhel82
      -j$(grep -c ^processor /proc/cpuinfo)
    repo_edition: enterprise
    large_distro_name: amazon2023.0-arm64-large
    num_scons_link_jobs_available: 0.1
  tasks:
  - name: build_metrics_gen_TG
