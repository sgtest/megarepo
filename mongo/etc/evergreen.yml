####################################################
#                  YAML Conventions                 #
#####################################################
# Please see our conventions document at
# https://wiki.corp.mongodb.com/pages/viewpage.action?pageId=133273894
# for help navigating this document, or for help with our lint rules.


#####################################################
#               A note on expansions                #
#####################################################

# Expansions usually appear in the form ${key|default}
# If 'key' is found in the executor's map of currently known
# expansions, the corresponding value is used. If the key can
# not be found, the default is used.
#
# Arbitrary expansions can be specified in the YAML configuration
# files in the following places:
# - The 'expansions' field for buildvariants (branch file)
# - The 'expansions' field for distros (distros file)
#
# A number of 'built-in' expansions are also available for use; these include:
# - environment variables available on the host machine
# - 'workdir' (references the executor's work directory).
# - 'task_id' (references the task id of the task the executor is working on).
# - 'build_variant' (references the executing task's buildvariant).
# - 'config_root' (references the root directory for the executor's configuration artifacts).


#####################################################
#          Setup environment in a new task          #
#####################################################

# There are several ways to setup the environment in your task.
#
# 1. If your task depends on 'archive_dist_test'/'archive_dist_test_debug' task you can call the function "do setup"
# - func: "do setup"
# Or alternatively call the functions in the sequence below, if you don't need everything else from "do setup"
# - func: "fetch artifacts" (includes python, shell scripts, jstests etc. from the mongo and enterprise repos)
# - func: "f_expansions_write"
# - func: "kill processes"
# - func: "cleanup environment"
# - func: "set up venv"
#
# 2. If your task does not depend on 'archive_dist_test'/'archive_dist_test_debug' task use the following functions
# call sequence
# - command: manifest.load
# - func: "git get project" (clone the entire mongo and enterprise repos)
# - func: "f_expansions_write"
# - func: "kill processes"
# - func: "cleanup environment"
# - func: "set up venv"

include:
- filename: etc/evergreen_yml_components/configuration.yml
- filename: etc/evergreen_yml_components/definitions.yml

- filename: etc/evergreen_yml_components/tasks/components/aggregation_framework/resmoke_tasks.yml
- filename: etc/evergreen_yml_components/tasks/components/change_streams/resmoke_tasks.yml
- filename: etc/evergreen_yml_components/tasks/components/replication/resmoke_tasks.yml

- filename: etc/evergreen_yml_components/variants/misc/task_generation.yml
- filename: etc/evergreen_yml_components/variants/misc/stm_daily_cron.yml
- filename: etc/evergreen_yml_components/variants/misc/tooling_metrics.yml
- filename: etc/evergreen_yml_components/variants/misc/burn_in_tags_generation.yml
- filename: etc/evergreen_yml_components/variants/misc/scons_cache_pruning.yml
- filename: etc/evergreen_yml_components/variants/misc/copybara.yml
- filename: etc/evergreen_yml_components/variants/misc/build_metrics.yml

- filename: etc/evergreen_yml_components/variants/sanitizer/build_dev.yml
- filename: etc/evergreen_yml_components/variants/sanitizer/test_dev.yml
- filename: etc/evergreen_yml_components/variants/sanitizer/test_dev_release.yml

- filename: etc/evergreen_yml_components/variants/ninja/build.yml

- filename: etc/evergreen_yml_components/variants/amazon/build_dev.yml
- filename: etc/evergreen_yml_components/variants/amazon/test_dev.yml

- filename: etc/evergreen_yml_components/variants/macos/build_dev.yml
- filename: etc/evergreen_yml_components/variants/macos/test_dev.yml

- filename: etc/evergreen_yml_components/variants/rhel/build_dev.yml
- filename: etc/evergreen_yml_components/variants/rhel/test_dev.yml
- filename: etc/evergreen_yml_components/variants/rhel/test_in_memory.yml
- filename: etc/evergreen_yml_components/variants/rhel/test_config_shard.yml
- filename: etc/evergreen_yml_components/variants/rhel/test_classic_engine.yml

- filename: etc/evergreen_yml_components/variants/ubuntu/build_dev.yml
- filename: etc/evergreen_yml_components/variants/ubuntu/test_dev.yml

- filename: etc/evergreen_yml_components/variants/windows/build_dev.yml
- filename: etc/evergreen_yml_components/variants/windows/test_dev.yml
- filename: etc/evergreen_yml_components/variants/windows/test_in_memory.yml

- filename: etc/evergreen_yml_components/variants/wiredtiger/build_dev.yml
- filename: etc/evergreen_yml_components/variants/wiredtiger/test_dev.yml


parameters:
- key: evergreen_config_file_path
  value: "etc/evergreen.yml"
  description: "path to this file"
