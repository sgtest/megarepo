command_type: system
stepback: false

include:
  - filename: etc/evergreen_yml_components/variants/misc/task_generation.yml
  - filename: etc/evergreen_yml_components/definitions.yml
  - filename: etc/evergreen_yml_components/tasks/resmoke/server_divisions/durable_transactions_and_availability/tasks.yml
  - filename: etc/evergreen_yml_components/tasks/resmoke/server_divisions/query/tasks.yml
  - filename: etc/evergreen_yml_components/tasks/compile_tasks.yml
  - filename: etc/evergreen_yml_components/tasks/misc_tasks.yml
  - filename: etc/evergreen_yml_components/perf_tasks.yml
  - filename: etc/evergreen_yml_components/variants/perf/perf.yml
  - filename: etc/evergreen_yml_components/variants/perf/perf_branching.yml

## Parameters for parameterized builds (see https://github.com/evergreen-ci/evergreen/wiki/Parameterized-Builds)
parameters:
  - key: patch_compile_flags
    description: "Additional SCons flags to be applied during scons compile invocations in this patch"
  # see https://github.com/10gen/performance-tooling-docs/blob/main/patch_testing.md#skipping-compilation-on-sys-perf-projects
  - key: reuse_compile_from
    description: "Version_id of the commit/patch to reuse the compile artifacts from, e.g., sys_perf_ef8504eefef4c9fe2062b8424e85053b3e1ad8d2"

variables:
  ###
  # Leave this section uncommented to enable compile.
  _real_compile_amazon2: &_compile_amazon2
    - name: compile
      variant: compile-amazon2
  _real_compile_rhel70: &_compile_rhel70
    - name: compile
      variant: compile-rhel70
  _real_compile_amazon_linux2_arm64: &_compile_amazon_linux2_arm64
    - name: compile
      variant: compile-amazon-linux2-arm64
  _real_compile_amazon_linux2_arm64_with_mongocrypt_shlib: &_compile_amazon_linux2_arm64_with_mongocrypt_shlib
    - name: compile
      variant: compile-amazon-linux2-arm64
    - name: compile_mongocrypt_shlib
      variant: compile-amazon-linux2-arm64-mongocrypt-shlib
  _real_compile_amazon2_streams: &_compile_amazon2_streams
    - name: compile
      variant: compile-amazon2-streams
  _real_compile_al2023_arm64: &_compile_al2023_arm64
    - name: compile
      variant: compile-al2023-arm64
  _real_compile_al2023_arm64_with_mongocrypt_shlib: &_compile_al2023_arm64_with_mongocrypt_shlib
    - name: compile
      variant: compile-al2023-arm64
    - name: compile_mongocrypt_shlib
      variant: compile-al2023-arm64-mongocrypt-shlib
  _real_compile_mixed_amazon_linux2_al2023_arm64: &_compile_mixed_amazon_linux2_al2023_arm64
    - name: compile
      variant: compile-amazon-linux2-arm64
    - name: compile
      variant: compile-al2023-arm64

  _real_expansions: &_expansion_updates []
  ###

  ###
  # **Or**: Leave this section uncommented to bypass/skip compile.
  #  _skip_compile_amazon2: &_compile_amazon2
  #      []
  #  _skip_compile_rhel70: &_compile_rhel70
  #      []
  #  _skip_compile_amazon_linux2_arm64: &_compile_amazon_linux2_arm64
  #     []
  #  _skip_compile_amazon_linux2_arm64_with_mongocrypt_shlib: &_compile_amazon_linux2_arm64_with_mongocrypt_shlib
  #     []
  #  _skip_compile_amazon2_streams: &_compile_amazon2_streams
  #     []
  #  _skip_compile_al2023_arm64: &_compile_al2023_arm64
  #     []
  #  _skip_expansions: &_expansion_updates
  #      # This is the normal (amazon2) "compile" artifact from https://evergreen.mongodb.com/version/sys_perf_97c6a9e443ff7e171b7310a1fa5c05d0768faff9
  #      - key: mdb_binary_for_client
  #        value: https://mciuploads.s3.amazonaws.com/dsi/sys_perf_97c6a9e443ff7e171b7310a1fa5c05d0768faff9/97c6a9e443ff7e171b7310a1fa5c05d0768faff9/linux/mongodb-sys_perf_97c6a9e443ff7e171b7310a1fa5c05d0768faff9.tar.gz
  #      - key: mdb_binary_for_server
  #        value: https://mciuploads.s3.amazonaws.com/dsi/sys_perf_97c6a9e443ff7e171b7310a1fa5c05d0768faff9/97c6a9e443ff7e171b7310a1fa5c05d0768faff9/linux/mongodb-sys_perf_97c6a9e443ff7e171b7310a1fa5c05d0768faff9.tar.gz
  ###

  _src_dir: &src_dir src/mongo
  _modules: &modules
    - enterprise
    - mongo-tools
    # - mongo
    - dsi
    - genny
    - workloads
    - linkbench
    - linkbench2
    - tsbs
    - mongo-perf
    - YCSB
    - py-tpcc
    - PrivateWorkloads
    - flamegraph

  _schedule_variant_auto_tasks_task: &schedule_variant_auto_tasks_task
    name: schedule_variant_auto_tasks
    activate: false
    depends_on:
      - name: schedule_global_auto_tasks
        variant: task_generation

  _schedule_patch_auto_tasks_task: &schedule_patch_auto_tasks_task
    name: schedule_patch_auto_tasks
    activate: false
    depends_on:
      - name: schedule_global_auto_tasks
        variant: task_generation

modules:
  ###
  # Same in every DSI project. Ensure that this block is synchronized with
  # evergreen-dsitest.yml, atlas/system_perf_atlas.yml, and src/dsi/onboarding.py
  # (search update-repos-here) in this repo, and etc/system_perf.yml and
  # etc/perf.yml in mongodb/mongo
  - name: dsi
    owner: 10gen
    repo: dsi
    prefix: ${workdir}/src
    branch: master
  - name: genny
    owner: 10gen
    repo: genny
    prefix: ${workdir}/src
    branch: master
  - name: workloads
    owner: 10gen
    repo: workloads
    prefix: ${workdir}/src
    branch: master
  - name: linkbench
    owner: 10gen
    repo: linkbench
    prefix: ${workdir}/src
    branch: master
  - name: linkbench2
    owner: 10gen
    repo: linkbench2
    prefix: ${workdir}/src
    branch: master
  - name: tsbs
    owner: mongodb-forks
    repo: tsbs
    prefix: ${workdir}/src
    branch: main
  - name: mongo-perf
    owner: mongodb
    repo: mongo-perf
    prefix: ${workdir}/src
    branch: master
  - name: YCSB
    owner: mongodb-labs
    repo: YCSB
    prefix: ${workdir}/src
    branch: production
  - name: py-tpcc
    owner: mongodb-labs
    repo: py-tpcc
    prefix: ${workdir}/src
    branch: production
  - name: flamegraph
    owner: mongodb-forks
    repo: flamegraph
    prefix: ${workdir}/src
    branch: master
  #  - name: mongo
  #    owner: mongodb
  #    repo: mongo
  #    prefix: ${workdir}/src
  #    branch: master
  ###
  - name: enterprise
    owner: 10gen
    repo: mongo-enterprise-modules
    prefix: src/mongo/db/modules
    branch: master
  # Pinned to version 100.7.2
  - name: mongo-tools
    owner: mongodb
    repo: mongo-tools
    prefix: mongo-tools/src/github.com/mongodb
    branch: db8c5c4
  - name: PrivateWorkloads
    owner: 10gen
    repo: PrivateWorkloads
    prefix: ${workdir}/src
    branch: production

###
# Same in every DSI project
pre:
  - func: "f_other_pre_ops"
  - func: "f_dsi_pre_run"
post:
  - func: "f_dsi_post_run"
  - func: "f_other_post_ops"
timeout:
  - func: "f_dsi_timeout"
  - func: "f_other_timeout"
###

functions:
  ###
  # Same in every DSI project
  f_dsi_pre_run:
    - command: manifest.load
    - command: expansions.update
      params:
        updates: *_expansion_updates
  f_run_dsi_workload:
    - command: git.get_project
      params:
        directory: *src_dir
        clone_depth: 1000
        revisions:
          dsi: ${dsi_rev}
          genny: ${genny_rev}
          linkbench: ${linkbench_rev}
          linkbench2: ${linkbench2_rev}
          tsbs: ${tsbs_rev}
          workloads: ${workloads_rev}
          mongo-perf: ${mongo-perf_rev}
          YCSB: ${YCSB_rev}
          py-tpcc: ${py-tpcc_rev}
          flamegraph: ${flamegraph_rev}
          # mongo: ${mongo_rev}
          PrivateWorkloads: ${PrivateWorkloads_rev}
    - command: expansions.write
      params:
        file: ./expansions.yml
        redacted: true
    - command: shell.exec
      params:
        script: ./src/dsi/run-dsi run_workload
    - command: shell.exec
      type: system
      params:
        script: ./src/dsi/run-dsi determine_failure -m SYSTEM
    - command: shell.exec
      type: setup
      params:
        script: ./src/dsi/run-dsi determine_failure -m SETUP
    - command: shell.exec
      type: test
      params:
        script: ./src/dsi/run-dsi determine_failure -m TEST
  f_dsi_post_run:
    - command: shell.exec
      params:
        script: ./src/dsi/run-dsi post_run
    - command: perf.send
      params:
        file: ./build/CedarReports/cedar_report.json
        aws_key: ${terraform_key}
        aws_secret: ${terraform_secret}
        bucket: genny-metrics
        region: us-east-1
        prefix: ${task_id}_${execution}
    - command: attach.results
      params:
        file_location: ./build/EvergreenResultsJson/results.json
    - command: s3.put
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: ./build/Artifacts/DSIArtifacts.tgz
        remote_file: ${project_dir}/${build_variant}/${revision}/${task_id}/${version_id}/logs/dsi-artifacts-${task_name}-${build_id}-${execution}.tgz
        bucket: mciuploads
        permissions: public-read
        content_type: application/x-gzip
        display_name: DSI Artifacts - Execution ${execution}
    - command: s3.put
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: ./build/Documentation/index.html
        remote_file: ${project_dir}/${build_variant}/${revision}/${task_id}/${version_id}/logs/${task_name}-${build_id}-index.html
        bucket: mciuploads
        permissions: public-read
        content_type: text/html
        display_name: Documentation
    - command: s3.put
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: bootstrap.yml
        remote_file: ${project_dir}/${build_variant}/${revision}/${task_id}/${version_id}/bootstrap-${task_name}-${build_id}-${execution}.yml
        bucket: mciuploads
        permissions: public-read
        content_type: text/plain
        display_name: Task Bootstrap Config
  f_dsi_timeout:
    - command: shell.exec
      params:
        script: ./src/dsi/run-dsi on_timeout
  ###

  f_other_post_ops:
    - command: shell.exec
      params:
        working_dir: src
        script: |
          # removes files from the (local) scons cache when it's over a
          # threshold, to the $prune_ratio percentage. Ideally override
          # these default values in the distro config in evergreen.

          if [ -d "${scons_cache_path}" ]; then
              /opt/mongodbtoolchain/v4/bin/python3 buildscripts/scons_cache_prune.py --cache-dir ${scons_cache_path} --cache-size ${scons_cache_size|200} --prune-ratio ${scons_prune_ratio|0.8}
          fi
  f_other_pre_ops:
    - &f_other_pre_ops
      command: shell.exec
      params:
        silent: true
        script: |
          for PS in mongo{,d,s,import,export,dump,restore,stat,files,top,bridge} resmoke.py python{,2} lldb _test; do
              pkill -9 "$PS"
          done
  f_other_timeout:
    # Can't be empty so just `echo`.
    - command: shell.exec
      params: {script: "echo"}

  f_generate_all_variant_auto_tasks:
    - command: git.get_project
      params:
        directory: *src_dir
        revisions:
          dsi: ${dsi_rev}
          genny: ${genny_rev}
          linkbench: ${linkbench_rev}
          linkbench2: ${linkbench2_rev}
          tsbs: ${tsbs_rev}
          workloads: ${workloads_rev}
          mongo-perf: ${mongo-perf_rev}
          YCSB: ${YCSB_rev}
          py-tpcc: ${py-tpcc_rev}
          PrivateWorkloads: ${PrivateWorkloads_rev}
    - command: expansions.write
      params:
        file: ./expansions.yml
    - command: shell.exec
      params:
        # The script below makes sure that if we generate all tasks in a patch, we will only generate
        # them and not run all of them, since activating all tasks is the default behavior for task
        # generation in a patch.
        script: |
          if [ "${is_patch|false}" = "true" ]; then
            ./src/genny/run-genny auto-tasks-all --project-file ./src/mongo/etc/system_perf.yml --project-file ./src/mongo/etc/evergreen_yml_components/variants/perf/perf.yml --project-file ./src/mongo/etc/evergreen_yml_components/variants/perf/perf_branching.yml --no-activate
          else
            ./src/genny/run-genny auto-tasks-all --project-file ./src/mongo/etc/system_perf.yml --project-file ./src/mongo/etc/evergreen_yml_components/variants/perf/perf.yml --project-file ./src/mongo/etc/evergreen_yml_components/variants/perf/perf_branching.yml
          fi
    - command: generate.tasks
      params:
        files:
          - build/TaskJSON/Tasks.json

  ###
  # Prepares the environment before compiling the binaries
  compile prep:
    # We create a virtual environment with the Python dependencies for compiling the server
    # installed.
    - command: shell.exec
      params:
        working_dir: src
        script: |
          set -o errexit
          set -o verbose

          mkdir -p mongodb/bin

          # This is copied from evergreen/functions/venv_setup.sh
          # Consider consolidating this in the future
          /opt/mongodbtoolchain/v4/bin/python3 -m venv "${workdir}/compile_venv"
          source "${workdir}/compile_venv/bin/activate"

          python -m pip install "poetry==1.5.1"
          # See BF-29897 / https://github.com/python-poetry/poetry/issues/7584
          poetry config installer.max-workers 10
          # Trying poetry install due to https://github.com/python-poetry/poetry/issues/7611
          python -m poetry install --no-root --sync || python -m poetry install --no-root --sync
    - command: expansions.write
      params:
        file: expansions.yml
        redacted: true
    - command: shell.exec
      params:
        working_dir: src
        script: |
          set -o errexit
          set -o verbose

          source "${workdir}/compile_venv/bin/activate"

          # We get the raw version string (r1.2.3-45-gabcdef) from git
          # And append "-sys-perf" at the end
          export MONGO_VERSION=$(git describe --abbrev=7)
          MONGO_VERSION="$MONGO_VERSION-sys-perf"

          # If this is a patch build, we add the patch version id to the version string so we know
          # this build was a patch, and which evergreen task it came from
          if [ "${is_patch|false}" = "true" ]; then
            MONGO_VERSION="$MONGO_VERSION-patch-${version_id}"
          fi

          # This script handles sanitizing the version string for use during SCons build
          # and when pushing artifacts up to S3.
          IS_PATCH=${is_patch|false} IS_COMMIT_QUEUE=${is_commit_queue|false} \
            buildscripts/generate_version_expansions.py --out version_expansions.yml
    - command: expansions.update
      params:
        file: src/version_expansions.yml
    - command: shell.exec
      params:
        working_dir: src
        script: |
          set -o errexit
          set -o verbose

          # This script handles whether the SCons cache should be used
          source "${workdir}/compile_venv/bin/activate"
          SCONS_CACHE_MODE=${scons_cache_mode|} USE_SCONS_CACHE=${use_scons_cache|false} \
            IS_PATCH=${is_patch|false} IS_COMMIT_QUEUE=${is_commit_queue|false} \
            python buildscripts/generate_compile_expansions.py --out compile_expansions.yml
    - command: expansions.update
      params:
        file: src/compile_expansions.yml
  compile prep old:
    # We create a virtual environment with the Python dependencies for compiling the server
    # installed.
    - command: shell.exec
      params:
        working_dir: src
        script: |
          set -o errexit
          set -o verbose

          mkdir -p mongodb/bin

          # This is copied from evergreen/functions/venv_setup.sh
          # Consider consolidating this in the future
          /opt/mongodbtoolchain/v4/bin/python3 -m venv "${workdir}/compile_venv"
          source "${workdir}/compile_venv/bin/activate"

          python -m pip install "poetry==1.5.1"
          # See BF-29897 / https://github.com/python-poetry/poetry/issues/7584
          poetry config installer.max-workers 10
          # Trying poetry install due to https://github.com/python-poetry/poetry/issues/7611
          python -m poetry install --no-root --sync || python -m poetry install --no-root --sync
    - command: expansions.write
      params:
        file: expansions.yml
        redacted: true
    - command: shell.exec
      params:
        working_dir: src
        script: |
          if [ -z "${reuse_compile_from}" ] || [ "${is_patch|false}" = "false" ]; then
            set -o errexit
            set -o verbose

            source "${workdir}/compile_venv/bin/activate"

            # We get the raw version string (r1.2.3-45-gabcdef) from git
            # And append "-sys-perf" at the end
            export MONGO_VERSION=$(git describe --abbrev=7)
            MONGO_VERSION="$MONGO_VERSION-sys-perf"

            # If this is a patch build, we add the patch version id to the version string so we know
            # this build was a patch, and which evergreen task it came from
            if [ "${is_patch|false}" = "true" ]; then
              MONGO_VERSION="$MONGO_VERSION-patch-${version_id}"
            fi

            # This script handles sanitizing the version string for use during SCons build
            # and when pushing artifacts up to S3.
            IS_PATCH=${is_patch|false} IS_COMMIT_QUEUE=${is_commit_queue|false} \
              buildscripts/generate_version_expansions.py --out version_expansions.yml
          else
            touch version_expansions.yml
          fi
    - command: expansions.update
      params:
        file: src/version_expansions.yml
    - command: shell.exec
      params:
        working_dir: src
        script: |
          if [ -z "${reuse_compile_from}" ] || [ "${is_patch|false}" = "false" ]; then
            set -o errexit
            set -o verbose

            # This script handles whether the SCons cache should be used
            source "${workdir}/compile_venv/bin/activate"
            SCONS_CACHE_MODE=${scons_cache_mode|} USE_SCONS_CACHE=${use_scons_cache|false} \
              IS_PATCH=${is_patch|false} IS_COMMIT_QUEUE=${is_commit_queue|false} \
              python buildscripts/generate_compile_expansions.py --out compile_expansions.yml
          else
            touch compile_expansions.yml
          fi
    - command: expansions.update
      params:
        file: src/compile_expansions.yml
  ###

  ###
  # Compile mongodb
  compile mongo tools:
    - command: shell.exec
      params:
        working_dir: src/mongo-tools/src/github.com/mongodb/mongo-tools
        script: |
          set -o verbose
          set -o errexit

          # make sure newlines in the scripts are handled correctly by windows
          if [ "Windows_NT" = "$OS" ]; then
            set -o igncr
          fi;

          export cleanup=false

          # install go for tools if required (al2023 for now).
          if [ ! -d "/opt/golang/go1.19" ]; then
            cleanup=true
            echo -n "go-lang missing downloading ..."
            go_file=./go1.19.8.tar.gz
            wget --quiet https://go.dev/dl/go1.19.8.linux$(echo ${compile_variant} | sed 's/^-al202.//').tar.gz -O "$go_file"
            echo -n " installing ..."
            sudo mkdir -p /opt/golang/go1.19
            sudo tar -C /opt/golang/go1.19 -xzf "$go_file" --strip-components=1
            [ -e "$go_file" ] && rm -f "$go_file"
            echo  "done"
          fi

          # set_goenv provides set_goenv()
          . ./set_goenv.sh
          GOROOT="" set_goenv || exit
          go version

          build_tools="bsondump mongostat mongofiles mongoexport mongoimport mongorestore mongodump mongotop"
          if [ "${build_mongoreplay}" = "true" ]; then
              build_tools="$build_tools mongoreplay"
          fi
          for i in $build_tools; do
              go build -o "../../../../../mongodb/bin/$i${exe|}" $i/main/$i.go
              "../../../../../mongodb/bin/$i${exe|}" --version
          done
          if "$cleanup"; then
            sudo rm -rf "/opt/golang/go1.19"
          fi
  compile mongo tools old:
    - command: shell.exec
      params:
        working_dir: src/mongo-tools/src/github.com/mongodb/mongo-tools
        script: |
          if [ -z "${reuse_compile_from}" ] || [ "${is_patch|false}" = "false" ]; then
            set -o verbose
            set -o errexit

            # make sure newlines in the scripts are handled correctly by windows
            if [ "Windows_NT" = "$OS" ]; then
              set -o igncr
            fi;

            export cleanup=false

            # install go for tools if required (al2023 for now).
            if [ ! -d "/opt/golang/go1.19" ]; then
              cleanup=true
              echo -n "go-lang missing downloading ..."
              go_file=./go1.19.8.tar.gz
              wget --quiet https://go.dev/dl/go1.19.8.linux$(echo ${compile_variant} | sed 's/^-al202.//').tar.gz -O "$go_file"
              echo -n " installing ..."
              sudo mkdir -p /opt/golang/go1.19
              sudo tar -C /opt/golang/go1.19 -xzf "$go_file" --strip-components=1
              [ -e "$go_file" ] && rm -f "$go_file"
              echo  "done"
            fi

            # set_goenv provides set_goenv()
            . ./set_goenv.sh
            GOROOT="" set_goenv || exit
            go version

            build_tools="bsondump mongostat mongofiles mongoexport mongoimport mongorestore mongodump mongotop"
            if [ "${build_mongoreplay}" = "true" ]; then
                build_tools="$build_tools mongoreplay"
            fi
            for i in $build_tools; do
                go build -o "../../../../../mongodb/bin/$i${exe|}" $i/main/$i.go
                "../../../../../mongodb/bin/$i${exe|}" --version
            done
            if "$cleanup"; then
              sudo rm -rf "/opt/golang/go1.19"
            fi
          fi
  generate feature flag list:
    - command: shell.exec
      params:
        working_dir: src
        script: |
          set -o errexit
          set -o verbose
          source "${workdir}/compile_venv/bin/activate"
          python ./buildscripts/idl/gen_all_feature_flag_list.py
          mkdir -p mongodb/feature_flags
          cp ./all_feature_flags.txt mongodb/feature_flags
  generate feature flag list old:
    - command: shell.exec
      params:
        working_dir: src
        script: |
          if [ -z "${reuse_compile_from}" ] || [ "${is_patch|false}" = "false" ]; then
            set -o errexit
            set -o verbose
            source "${workdir}/compile_venv/bin/activate"
            python ./buildscripts/idl/gen_all_feature_flag_list.py
            mkdir -p mongodb/feature_flags
            cp ./all_feature_flags.txt mongodb/feature_flags
          fi
  generate server params list:
    - command: shell.exec
      params:
        working_dir: src
        script: |
          set -o errexit
          set -o verbose
          source "${workdir}/compile_venv/bin/activate"
          python ./buildscripts/idl/gen_all_server_params_list.py
          mkdir -p mongodb/server_params
          cp ./all_server_params.txt mongodb/server_params
  generate server params list old:
    - command: shell.exec
      params:
        working_dir: src
        script: |
          if [ -z "${reuse_compile_from}" ] || [ "${is_patch|false}" = "false" ]; then
            set -o errexit
            set -o verbose
            source "${workdir}/compile_venv/bin/activate"
            python ./buildscripts/idl/gen_all_server_params_list.py
            mkdir -p mongodb/server_params
            cp ./all_server_params.txt mongodb/server_params
          fi
  compile mongodb:
    - command: shell.exec
      params:
        working_dir: src
        script: |
          if [ -z "${reuse_compile_from}" ] || [ "${is_patch|false}" = "false" ]; then
            set -o errexit
            set -o verbose
            source "${workdir}/compile_venv/bin/activate"
            python ./buildscripts/scons.py ${compile_flags|} ${scons_cache_args|} $extra_args install-core install-jstestshell SPLIT_DWARF=0 MONGO_VERSION=${version} DESTDIR=$(pwd)/mongodb ${patch_compile_flags|}
          fi
  download mongodb:
    - command: shell.exec
      params:
        working_dir: src
        script: |
            set -o errexit
            set -o verbose
            wget --quiet https://s3.amazonaws.com/mciuploads/${project}/${compile_variant}/${version_id}/binaries/mongo-${revision_order_id}.${ext|tgz}
            tar -xvf mongo-${revision_order_id}.${ext|tgz}
            mv ./dist-test/bin/mongo mongodb/bin
            mv ./dist-test/bin/mongos mongodb/bin
            mv ./dist-test/bin/mongod mongodb/bin
            mv ./dist-test/bin/mongocryptd mongodb/bin
            # Copy libs folder if it exists
            [ ! -d ./dist-test/lib ] || mv ./dist-test/lib mongodb
  download mongodb old:
    - command: shell.exec
      params:
        working_dir: src
        script: |
          if [ -z "${reuse_compile_from}" ] || [ "${is_patch|false}" = "false" ]; then
            set -o errexit
            set -o verbose
            wget --quiet https://s3.amazonaws.com/mciuploads/${project}/${compile_variant}/${version_id}/binaries/mongo-${revision_order_id}.${ext|tgz}
            tar -xvf mongo-${revision_order_id}.${ext|tgz}
            mv ./dist-test/bin/mongo mongodb/bin
            mv ./dist-test/bin/mongos mongodb/bin
            mv ./dist-test/bin/mongod mongodb/bin
            mv ./dist-test/bin/mongocryptd mongodb/bin
          fi
  download jstests:
    - command: shell.exec
      params:
        working_dir: src
        script: |
          set -o errexit
          set -o verbose
          mkdir -p mongodb/jstests/hooks
          if [ -d jstests/hooks ]
          then
            echo "Fetching JS test DB correctness checks from directory jstests"
            cp -a jstests/* mongodb/jstests

            echo "Now adding our own special run_validate_collections.js wrapper"
            mv mongodb/jstests/hooks/run_validate_collections.js mongodb/jstests/hooks/run_validate_collections.actual.js

            cat << EOF > mongodb/jstests/hooks/run_validate_collections.js
            print("NOTE: run_validate_collections.js will skip the oplog!");
            TestData = { skipValidationNamespaces: ['local.oplog.rs'] };
            await import("jstests/hooks/run_validate_collections.actual.js");
          EOF
          fi
  download jstests old:
    - command: shell.exec
      params:
        working_dir: src
        script: |
          if [ -z "${reuse_compile_from}" ] || [ "${is_patch|false}" = "false" ]; then
            set -o errexit
            set -o verbose
            mkdir -p mongodb/jstests/hooks
            if [ -d jstests/hooks ]
            then
              echo "Fetching JS test DB correctness checks from directory jstests"
              cp -a jstests/* mongodb/jstests

              echo "Now adding our own special run_validate_collections.js wrapper"
              mv mongodb/jstests/hooks/run_validate_collections.js mongodb/jstests/hooks/run_validate_collections.actual.js

              cat << EOF > mongodb/jstests/hooks/run_validate_collections.js
              print("NOTE: run_validate_collections.js will skip the oplog!");
              TestData = { skipValidationNamespaces: ['local.oplog.rs'] };
              await import("jstests/hooks/run_validate_collections.actual.js");
          EOF
            fi
          fi
  package binary:
    - command: shell.exec
      params:
        working_dir: src
        script: |
          tar czf mongodb${compile_variant|}.tar.gz mongodb
  package binary old:
    - command: shell.exec
      params:
        working_dir: src
        script: |
          if [ -z "${reuse_compile_from}" ] || [ "${is_patch|false}" = "false" ]; then
            tar czf mongodb${compile_variant|}.tar.gz mongodb
          fi
    - command: shell.exec
      params:
        working_dir: src
        script: |
          if [ -n "${reuse_compile_from}" ] && [ "${is_patch|false}" = "true" ]; then
            set -o errexit
            set -o verbose

            source "${workdir}/compile_venv/bin/activate"
            python buildscripts/download_sys_perf_binaries.py -v ${reuse_compile_from} -b ${build_variant} -u ${evergreen_api_user} -k ${evergreen_api_key}
            mv binary.tar.gz mongodb${compile_variant|}.tar.gz
          fi
  package old debugsymbols:
    - command: shell.exec
      params:
        working_dir: src
        script: |
          if [ -z "${reuse_compile_from}" ] || [ "${is_patch|false}" = "false" ]; then
            set -o errexit
            set -o verbose
            # Put all matching mongo debug from the build directory in an archive in the same location
            # as the library archive (i.e. mongodb/bin).
            tar czvf mongodb${compile_variant|}-debugsymbols.tar.gz $(find ./build/cached -name mongo\*.debug -type f) --xform 's:^.*/:mongodb/bin/:'
          fi
  upload binary:
    - command: s3.put
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/mongodb${compile_variant|}.tar.gz
        remote_file: ${project_dir}/${version_id}/${revision}/${platform}/mongodb${compile_variant|}-${version_id}.tar.gz
        bucket: mciuploads
        permissions: public-read
        content_type: ${content_type|application/x-gzip}
        display_name: mongodb${compile_variant|}.tar.gz
  upload old debugsymbols:
    - command: s3.put
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/mongodb${compile_variant|}-debugsymbols.tar.gz
        remote_file: ${project_dir}/${version_id}/${revision}/${platform}/mongodb${compile_variant|}-${version_id}-debugsymbols.tar.gz
        bucket: mciuploads
        permissions: public-read
        optional: true
        content_type: ${content_type|application/x-gzip}
        display_name: mongo-debugsymbols.tgz
  ###

  ###
  # Compile mongo_crypt_v1 shared library
  compile mongocrypt shlib:
    - command: shell.exec
      params:
        working_dir: src
        script: |
          set -o errexit
          set -o verbose
          source "${workdir}/compile_venv/bin/activate"
          if [ -z "${reuse_compile_from}" ] || [ "${is_patch|false}" = "false" ]; then
            python ./buildscripts/scons.py ${compile_flags|} ${scons_cache_args|} $extra_args SPLIT_DWARF=0 archive-mongo-crypt-dev MONGO_VERSION=${version} DESTDIR=$(pwd)/crypt-lib-${version} PKGDIR=$(pwd) ${patch_compile_flags|}
            # Put all matching mongo .debug from the build directory in an archive in the same location
            # as the library archive (i.e. lib).
            tar czvf mongo-crypt-dev-debugsymbols.tar.gz $(find ./build/cached -name mongo\*.debug -type f) --xform 's:^.*/:lib/:'
          else
            python buildscripts/download_sys_perf_binaries.py -v ${reuse_compile_from} -b ${build_variant} -u ${evergreen_api_user} -k ${evergreen_api_key}
            mv binary.tar.gz mongo-crypt-dev.tgz
          fi
    - command: s3.put
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/mongo-crypt-dev.tgz
        remote_file: ${project_dir}/${version_id}/${revision}/${platform}/mongo_crypt_shared_v1-${compile_variant|}-${version_id}.tgz
        bucket: mciuploads
        permissions: public-read
        content_type: ${content_type|application/x-gzip}
        display_name: mongo_crypt_shared_v1-${version|}-${compile_variant|}.tgz
    - command: s3.put
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_file: src/mongo-crypt-dev-debugsymbols.tar.gz
        remote_file: ${project_dir}/${version_id}/${revision}/${platform}/mongo_crypt_shared_v1-${compile_variant|}-${version_id}-debugsymbols.tgz
        bucket: mciuploads
        permissions: public-read
        content_type: ${content_type|application/x-gzip}
        optional: true
        display_name: mongo_crypt_shared_v1-debugsymbols.tgz
  ###

tasks:
  - name: compile
    commands:
      - command: manifest.load
      - command: git.get_project
        params:
          directory: src
          revisions:
            enterprise: ${enterprise_rev}
            mongo-tools: ${mongo-tools_rev}
      - func: "compile prep old"
      - func: "compile mongo tools old"
      - func: "generate feature flag list old"
      - func: "generate server params list old"
      - func: "compile mongodb"
      - func: "download jstests old"
      - func: "package binary old"
      - func: "upload binary"
      - func: "package old debugsymbols"
      - func: "upload old debugsymbols"

  - name: package_new_compile
    commands:
      - command: manifest.load
      - command: git.get_project
        params:
          directory: src
          revisions:
            enterprise: ${enterprise_rev}
            mongo-tools: ${mongo-tools_rev}
      - func: "compile prep"
      - func: "compile mongo tools"
      - func: "generate feature flag list"
      - func: "generate server params list"
      - func: "download mongodb"
      - func: "download jstests"
      - func: "package binary"
      - func: "upload binary"

  - name: compile_mongocrypt_shlib
    commands:
      - command: manifest.load
      - command: git.get_project
        params:
          directory: src
          revisions:
            enterprise: ${enterprise_rev}
      - func: "compile prep"
      - func: "compile mongocrypt shlib"

  - name: industry_benchmarks
    priority: 5
    commands:
      - func: f_run_dsi_workload
        vars:
          test_control: "ycsb"

  - name: ycsb_60GB
    priority: 5
    commands:
      - func: f_run_dsi_workload
        vars:
          test_control: "ycsb-60GB"

  - name: ycsb.load
    priority: 5
    commands:
      - func: f_run_dsi_workload
        vars:
          test_control: "ycsb.load"

  - name: ycsb_60GB.long
    priority: 5
    commands:
      - func: f_run_dsi_workload
        vars:
          test_control: "ycsb-60GB.long"

  - name: industry_benchmarks_secondary_reads
    priority: 5
    commands:
      - func: f_run_dsi_workload
        vars:
          test_control: "ycsb-secondary-reads"

  - name: industry_benchmarks_w1
    priority: 5
    commands:
      - func: f_run_dsi_workload
        vars:
          test_control: "ycsb-w1.2023-02"

  - name: industry_benchmarks_stepdowns
    priority: 5
    commands:
      - func: f_run_dsi_workload
        vars:
          test_control: "ycsb_stepdowns"

  - name: industry_benchmarks_rolling_restarts
    priority: 5
    commands:
      - func: f_run_dsi_workload
        vars:
          test_control: "ycsb_rolling_restarts"

  - name: industry_benchmarks_non_retryable_writes_stepdowns
    priority: 5
    commands:
      - func: f_run_dsi_workload
        vars:
          test_control: "ycsb_non_retryable_writes_stepdowns"

  - name: industry_benchmarks_non_retryable_writes_rolling_restarts
    priority: 5
    commands:
      - func: f_run_dsi_workload
        vars:
          test_control: "ycsb_non_retryable_writes_rolling_restarts"

  - name: genny_canaries
    priority: 5
    commands:
      - func: f_run_dsi_workload
        vars:
          test_control: "genny_canaries"

  - name: retryable_writes_workloads
    priority: 5
    commands:
      - func: f_run_dsi_workload
        vars:
          test_control: "retryable_writes"

  # Named Pipes single concurrent query benchmarks
  - name: external_data_source_1
    priority: 5
    commands:
      - func: f_run_dsi_workload
        vars:
          mongodb_setup: "external_data_source"
          test_control: "external_data_source_1"

  # Named Pipes four concurrent query benchmarks
  - name: external_data_source_4
    priority: 5
    commands:
      - func: f_run_dsi_workload
        vars:
          mongodb_setup: "external_data_source"
          test_control: "external_data_source_4"

buildvariants:
  - name: task_generation
    display_name: Task Generation
    cron: "0 0 1 1 *" # Every year starting 1/1 at 00:00
    modules: *modules
    expansions:
      platform: linux
      project_dir: &project_dir dsi
    run_on:
      - amazon2-build
    tasks:
      - name: generate_all_variant_auto_tasks
        activate: true
      - name: schedule_global_auto_tasks

  ###
  # Old compiles
  # - name: compile-amazon2
  #   display_name: Compile
  #   modules: *modules
  #   cron: "0 0 * * *" # Everyday at 00:00
  #   expansions: &compile-expansions
  #     platform: linux
  #     project_dir: *project_dir
  #     tooltags: ""
  #     use_scons_cache: true
  #     compile_flags: >-
  #       --ssl
  #       --separate-debug
  #       MONGO_DISTMOD=amazon2
  #       -j$(grep -c ^processor /proc/cpuinfo)
  #       --release
  #       --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars
  #       --use-diagnostic-latches=off
  #       install-mongocryptd
  #   run_on:
  #     - "amazon2-xlarge"
  #   tasks:
  #     - name: compile

  # - name: compile-amazon2-streams
  #   display_name: Compile Mongo Streams for Amazon2
  #   modules: *modules
  #   cron: "0 0 * * *" # Everyday at 00:00
  #   expansions:
  #     <<: *compile-expansions
  #     compile_variant: -stream-x86_64
  #     compile_flags: >-
  #       --ssl
  #       --separate-debug
  #       MONGO_DISTMOD=amazon2
  #       -j$(grep -c ^processor /proc/cpuinfo)
  #       --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars
  #       --streams-release-build
  #   run_on:
  #     - "amazon2-xlarge"
  #   tasks:
  #     - name: compile

  # - name: compile-amazon-linux2-arm64
  #   display_name: Compile for Amazon Linux 2 arm64
  #   modules: *modules
  #   cron: "0 0 * * *" # Everyday at 00:00
  #   expansions:
  #     <<: *compile-expansions
  #     compile_variant: -arm64
  #   run_on:
  #     - "amazon2-arm64-xlarge"
  #   tasks:
  #     - name: compile

  # - name: compile-amazon-linux2-arm64-mongocrypt-shlib
  #   display_name: Compile mongo_crypt_v1.so for Amazon Linux 2 arm64
  #   modules: *modules
  #   cron: "0 0 * * 4" # 00:00 on Thursday
  #   expansions:
  #     <<: *compile-expansions
  #     compile_variant: -arm64
  #     compile_flags: >-
  #       --separate-debug
  #       MONGO_DISTMOD=amazon2
  #       -j$(grep -c ^processor /proc/cpuinfo)
  #       --release
  #       --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars
  #       --use-diagnostic-latches=off
  #       --allocator=system
  #       --enterprise-features=fle
  #       --js-engine=none
  #       --link-model=dynamic-sdk
  #       --enable-http-client=off
  #       --ssl=off
  #       SHLINKFLAGS_EXTRA="-Wl,-Bsymbolic -Wl,--no-gnu-unique"
  #       CCFLAGS="-fno-gnu-unique"
  #   run_on:
  #     - "amazon2-arm64-large"
  #   tasks:
  #     - name: compile_mongocrypt_shlib

  # - &compile-al2023-arm64
  #   name: compile-al2023-arm64
  #   display_name: Compile for Al2023 arm64
  #   modules: *modules
  #   cron: "0 0 * * *" # Everyday at 00:00
  #   expansions: &compile-al2023-expansions
  #     platform: linux
  #     project_dir: *project_dir
  #     tooltags: ""
  #     use_scons_cache: true
  #     compile_flags: >-
  #       --ssl
  #       --separate-debug
  #       MONGO_DISTMOD=rhel82
  #       -j$(grep -c ^processor /proc/cpuinfo)
  #       --release
  #       --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars
  #       --use-diagnostic-latches=off
  #       install-mongocryptd
  #     compile_variant: -al2023-arm64
  #   run_on:
  #     - "amazon2023.0-arm64-large"
  #   tasks:
  #     - name: compile

  # - name: compile-al2023-arm64-mongocrypt-shlib
  #   display_name: Compile mongo_crypt_v1.so for Al2023 arm64
  #   modules: *modules
  #   cron: "0 0 * * 4" # 00:00 on Thursday
  #   expansions:
  #     <<: *compile-al2023-expansions
  #     compile_variant: -al2023-arm64
  #     compile_flags: >-
  #       --separate-debug
  #       MONGO_DISTMOD=rhel82
  #       -j$(grep -c ^processor /proc/cpuinfo)
  #       --release
  #       --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars
  #       --use-diagnostic-latches=off
  #       --allocator=system
  #       --enterprise-features=fle
  #       --js-engine=none
  #       --link-model=dynamic-sdk
  #       --enable-http-client=off
  #       --ssl=off
  #       SHLINKFLAGS_EXTRA="-Wl,-Bsymbolic -Wl,--no-gnu-unique"
  #       CCFLAGS="-fno-gnu-unique"
  #   run_on:
  #     - "amazon2023.0-arm64-large"
  #   tasks:
  #     - name: compile_mongocrypt_shlib
  ###

  ###
  # New compiles
  - name: amazon2-x86-compile
    display_name: Compile for Amazon Linux 2 x86 NEW
    modules: *modules
    expansions:
      platform: linux
      project_dir: *project_dir
      compile_variant: amazon2-x86-compile
      scons_cache_scope: shared
      scons_cache_mode: all
      has_packages: false
      compile_flags: >-
        --ssl
        MONGO_DISTMOD=amazon2
        -j$(grep -c ^processor /proc/cpuinfo)
        --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars
    run_on:
      - amazon2-xlarge
    tasks:
      - name: compile_and_package_serial_no_unittests_TG
      - name: package_new_compile
        depends_on:
          - name: archive_dist_test
            variant: amazon2-x86-compile

  - name: amazon2-x86-openssl111-compile
    display_name: Compile for Amazon Linux 2 x86 OpenSSL 1.1.1
    modules: *modules
    expansions:
      platform: linux
      project_dir: *project_dir
      compile_variant: amazon2-x86-openssl111-compile
      scons_cache_scope: shared
      scons_cache_mode: all
      has_packages: false
      compile_flags: >-
        --ssl
        MONGO_DISTMOD=amazon2
        -j$(grep -c ^processor /proc/cpuinfo)
        --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars
    run_on:
      - amazon2-openssl111-large
    tasks:
      - name: compile_and_package_serial_no_unittests_TG
      - name: package_new_compile
        depends_on:
          - name: archive_dist_test
            variant: amazon2-x86-openssl111-compile

  - name: amazon2-arm64-compile
    display_name: Compile for Amazon Linux 2 arm64 NEW
    modules: *modules
    expansions:
      platform: linux
      project_dir: *project_dir
      compile_variant: amazon2-arm64-compile
      scons_cache_scope: shared
      scons_cache_mode: all
      has_packages: false
      compile_flags: >-
        --ssl
        MONGO_DISTMOD=amazon2
        -j$(grep -c ^processor /proc/cpuinfo)
        --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars
    run_on:
      - amazon2-arm64-xlarge
    tasks:
      - name: compile_and_package_serial_no_unittests_TG
      - name: package_new_compile
        depends_on:
          - name: archive_dist_test
            variant: amazon2-arm64-compile

  - name: amazon2-arm64-mongocrypt-shlib-compile
    display_name: Compile mongo_crypt_v1.so for Amazon Linux 2 arm64 NEW
    modules: *modules
    cron: "0 0 * * 4" # 00:00 on Thursday
    expansions:
      platform: linux
      project_dir: *project_dir
      use_scons_cache: true
      compile_variant: amazon2-arm64-compile
      scons_cache_scope: shared
      scons_cache_mode: all
      has_packages: false
      compile_flags: >-
        --separate-debug
        MONGO_DISTMOD=amazon2
        -j$(grep -c ^processor /proc/cpuinfo)
        --release
        --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars
        --use-diagnostic-latches=off
        --allocator=system
        --enterprise-features=fle
        --js-engine=none
        --link-model=dynamic-sdk
        --enable-http-client=off
        --ssl=off
        SHLINKFLAGS_EXTRA="-Wl,-Bsymbolic -Wl,--no-gnu-unique"
        CCFLAGS="-fno-gnu-unique"
    run_on:
      - amazon2-arm64-xlarge
    tasks:
      - name: compile_mongocrypt_shlib

  - name: amazon2-x86-streams-compile
    display_name: Compile Streams for Amazon Linux 2 x86 NEW
    modules: *modules
    expansions:
      platform: linux
      project_dir: *project_dir
      compile_variant: amazon2-x86-streams-compile
      scons_cache_scope: shared
      scons_cache_mode: all
      has_packages: false
      compile_flags: >-
        --ssl
        MONGO_DISTMOD=amazon2
        -j$(grep -c ^processor /proc/cpuinfo)
        --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars
        --streams-release-build
    run_on:
      - amazon2-xlarge
    tasks:
      - name: compile_and_package_serial_no_unittests_TG
      - name: package_new_compile
        depends_on:
          - name: archive_dist_test
            variant: amazon2-x86-streams-compile

  - name: al2023-arm64-compile
    display_name: Compile for Al2023 arm64 NEW
    modules: *modules
    expansions:
      platform: linux
      project_dir: *project_dir
      compile_variant: al2023-arm64-compile
      scons_cache_scope: shared
      scons_cache_mode: all
      has_packages: false
      compile_flags: >-
        --ssl
        MONGO_DISTMOD=rhel82
        -j$(grep -c ^processor /proc/cpuinfo)
        --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars
    run_on:
      - amazon2023.0-arm64-large
    tasks:
      - name: compile_and_package_serial_no_unittests_TG
      - name: package_new_compile
        depends_on:
          - name: archive_dist_test
            variant: al2023-arm64-compile
  ###

  # - name: linux-intel-standalone-classic-query-engine
  #   display_name: Linux Intel Standalone (Classic Query Engine)
  #   cron: &cron_query_perf_schedule "0 0 * * 4" # 00:00 on Thursday
  #   modules: *modules
  #   expansions:
  #     mongodb_setup_release: 2022-11
  #     mongodb_setup: standalone-classic-query-engine
  #     infrastructure_provisioning_release: 2022-11
  #     infrastructure_provisioning: single-intel
  #     workload_setup: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     authentication: enabled
  #     storageEngine: wiredTiger
  #   run_on:
  #     - "rhel70-perf-single"
  #   depends_on: *_compile_amazon2
  #   tasks: &classic_engine_tasks
  #     - *schedule_patch_auto_tasks_task
  #     - *schedule_variant_auto_tasks_task
  #     - name: industry_benchmarks
  #     - name: ycsb_60GB
  #     - name: ycsb_60GB.long
  #     - name: crud_workloads_majority
  #     - name: bestbuy_agg
  #     - name: bestbuy_agg_merge_different_db
  #     - name: bestbuy_agg_merge_same_db
  #     - name: bestbuy_agg_merge_wordcount
  #     - name: bestbuy_query
  #     - name: cursor_manager
  #     - name: map_reduce_workloads
  #     - name: tpcc
  #     - name: tpcc_majority
  #     - name: tpch_1_normalized
  #     - name: tpch_1_denormalized
  #     - name: tpch_10_normalized
  #     - name: tpch_10_denormalized
  #     - name: canaries_only

  # - name: linux-intel-standalone-sbe
  #   display_name: Linux Intel Standalone (SBE)
  #   cron: *cron_query_perf_schedule
  #   modules: *modules
  #   expansions:
  #     mongodb_setup_release: 2022-11
  #     mongodb_setup: standalone-sbe
  #     infrastructure_provisioning_release: 2022-11
  #     infrastructure_provisioning: single-intel
  #     workload_setup: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     authentication: enabled
  #     storageEngine: wiredTiger
  #   run_on:
  #     - "rhel70-perf-single"
  #   depends_on: *_compile_amazon2
  #   tasks: *classic_engine_tasks

  # - name: linux-intel-1-node-replSet-classic-query-engine
  #   display_name: Linux Intel 1-Node ReplSet (Classic Query Engine)
  #   cron: &linux-1-node-repl-cron "0 0 * * 4" # 00:00 on Thursday
  #   modules: *modules
  #   expansions:
  #     mongodb_setup_release: 2022-11
  #     mongodb_setup: single-replica-classic-query-engine
  #     infrastructure_provisioning_release: 2022-11
  #     infrastructure_provisioning: single-intel
  #     workload_setup: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     authentication: enabled
  #     storageEngine: wiredTiger
  #   run_on:
  #     - "rhel70-perf-single"
  #   depends_on: *_compile_amazon2
  #   tasks: &classic_engine_1nodereplset_tasks
  #     - *schedule_patch_auto_tasks_task
  #     - *schedule_variant_auto_tasks_task
  #     - name: linkbench
  #     - name: linkbench2
  #     - name: snapshot_reads
  #     - name: canaries_only

  # - name: linux-intel-1-node-replSet-sbe
  #   display_name: Linux Intel 1-Node ReplSet (SBE)
  #   cron: *linux-1-node-repl-cron
  #   modules: *modules
  #   expansions:
  #     mongodb_setup_release: 2022-11
  #     mongodb_setup: single-replica-sbe
  #     infrastructure_provisioning_release: 2022-11
  #     infrastructure_provisioning: single-intel
  #     workload_setup: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     authentication: enabled
  #     storageEngine: wiredTiger
  #   run_on:
  #     - "rhel70-perf-single"
  #   depends_on: *_compile_amazon2
  #   tasks: *classic_engine_1nodereplset_tasks

  # - name: linux-1-node-replSet-lite-all-feature-flags.2022-11
  #   display_name: Linux 1-Node ReplSet (graviton lite, all FF) 2022-11
  #   cron: *linux-1-node-repl-cron
  #   modules: *modules
  #   expansions:
  #     mongodb_setup_release: 2022-11
  #     workload_setup: 2022-11
  #     mongodb_setup: single-replica-all-feature-flags
  #     infrastructure_provisioning: graviton-single-lite.2022-11
  #     infrastructure_provisioning_release: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     authentication: enabled
  #     storageEngine: wiredTiger
  #     compile_variant: -arm64
  #   run_on:
  #     - "rhel70-perf-single"
  #   depends_on: *_compile_amazon_linux2_arm64
  #   tasks:
  #     - *schedule_patch_auto_tasks_task
  #     - *schedule_variant_auto_tasks_task
  #     - name: bestbuy_4_analytics
  #     - name: bestbuy_4_analytics_columnstore
  #     - name: bestbuy_4_inserts
  #     - name: column_store_index_charts_events_1G
  #     - name: column_store_index_charts_events_10G
  #     - name: column_store_tpch_10_denormalized
  #     - name: column_store_tpch_10_denormalized_unindexed
  #     - name: ssb_column_store_comparison

  # - name: compile-rhel70
  #   display_name: Compile for Atlas-like
  #   modules: *modules
  #   cron: "0 0 * * *" # Everyday at 00:00
  #   expansions:
  #     <<: *compile-expansions
  #     compile_flags: >-
  #       --ssl
  #       --separate-debug
  #       MONGO_DISTMOD=rhel70
  #       -j$(grep -c ^processor /proc/cpuinfo)
  #       --release
  #       --variables-files=etc/scons/mongodbtoolchain_stable_gcc.vars
  #       --use-diagnostic-latches=off
  #     compile_variant: -rhel70
  #   run_on:
  #     - rhel70-xlarge
  #   tasks:
  #     - name: compile

  # - name: atlas-like-replica.2022-10
  #   display_name: M60-like-replica.2022-10 3-Node ReplSet
  #   cron: &atlas-like-repl-cron "0 0 * * 0,4"  # 00:00 on Sunday,Thursday
  #   modules: *modules
  #   expansions:
  #     mongodb_setup: atlas-like-replica.2022-10
  #     mongodb_setup_release: 2022-11
  #     infrastructure_provisioning: M60-like-replica.2023-04
  #     infrastructure_provisioning_release: 2023-09
  #     workload_setup: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     authentication: enabled
  #     storageEngine: wiredTiger
  #     compile_variant: -arm64
  #   run_on:
  #     - "rhel70-perf-M60-like"
  #   depends_on: *_compile_amazon_linux2_arm64
  #   tasks:
  #     - *schedule_patch_auto_tasks_task
  #     - *schedule_variant_auto_tasks_task
  #     - name: industry_benchmarks
  #     - name: ycsb_60GB
  #     - name: tpcc
  #     - name: tpcc_majority
  #     - name: linkbench
  #     - name: linkbench2

  # - name: m60-like-al2023-3-node-replSet.arm.aws.2023-09
  #   display_name: M60-like AL2023 3-Node ReplSet ARM AWS 2023-09
  #   cron: "0 0 * * 0,4" # 00:00 on Sunday, Thursday
  #   modules: *modules
  #   expansions:
  #     mongodb_setup: atlas-like-replica.2023-09
  #     mongodb_setup_release: 2022-11
  #     infrastructure_provisioning: M60-like-replica.2023-09
  #     infrastructure_provisioning_release: 2023-09
  #     workload_setup: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     authentication: enabled
  #     storageEngine: wiredTiger
  #     client_compile_variant: "-al2023-arm64"
  #     compile_variant: "-al2023-arm64"
  #     canaries: none # Packages required for the canaries are missing.
  #   run_on:
  #     - "rhel70-perf-M60-like"
  #   depends_on: *_compile_al2023_arm64
  #   tasks:
  #     - *schedule_patch_auto_tasks_task
  #     - *schedule_variant_auto_tasks_task
  #     - name: industry_benchmarks
  #     - name: ycsb_60GB
  #     # TODO: Turn on with Python3 py-tpcc support (PERF-4758)
  #     # - name: tpcc
  #     # - name: tpcc_majority
  #     - name: linkbench
  #     - name: linkbench2

  # - name: atlas-M30-real
  #   display_name: M30-Atlas ReplSet AWS
  #   cron: "0 0 * * 0,4" # 00:00 on Sunday, Thursday
  #   modules: *modules
  #   expansions:
  #     mongodb_setup: atlas
  #     canaries: none
  #     atlas_setup: M30-repl
  #     use_custom_build: true
  #     infrastructure_provisioning: workload_client_arm.2023-04
  #     infrastructure_provisioning_release: 2022-11
  #     workload_setup: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     storageEngine: wiredTiger
  #     compile_variant: "-arm64"
  #   run_on:
  #     - "rhel70-perf-atlas-large"
  #   depends_on:
  #     - name: compile
  #       variant: compile-amazon2
  #     - name: compile
  #       variant: compile-amazon-linux2-arm64
  #   tasks:
  #     - *schedule_patch_auto_tasks_task
  #     - *schedule_variant_auto_tasks_task
  #     - name: industry_benchmarks
  #     - name: tpcc
  #     - name: linkbench2

  # - name: atlas-M60-real
  #   display_name: M60-Atlas ReplSet AWS
  #   cron: "0 0 * * 0,4" # 00:00 on Sunday, Thursday
  #   modules: *modules
  #   expansions:
  #     mongodb_setup: atlas
  #     canaries: none
  #     atlas_setup: M60-repl
  #     use_custom_build: true
  #     infrastructure_provisioning: workload_client_arm.2023-04
  #     infrastructure_provisioning_release: 2022-11
  #     workload_setup: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     storageEngine: wiredTiger
  #     compile_variant: "-arm64"
  #   run_on:
  #     - "rhel70-perf-atlas-large"
  #   depends_on:
  #     - name: compile
  #       variant: compile-amazon2
  #     - name: compile
  #       variant: compile-amazon-linux2-arm64
  #   tasks:
  #     - *schedule_patch_auto_tasks_task
  #     - *schedule_variant_auto_tasks_task
  #     - name: industry_benchmarks
  #       cron: &high-value-workload-cron "0 */4 * * 1-5" # High-value workloads run every weekday, every 4 hours
  #     - name: ycsb_60GB
  #     - name: tpcc
  #     - name: tpcc_majority
  #     - name: linkbench
  #     - name: linkbench2

  # - name: atlas-M60-shard-real-aws-multi-client.2023-09
  #   display_name: M60-Shard Atlas AWS Multiple Workload Clients 2023-09
  #   cron: "0 0 * * 0,4" # 00:00 on Sunday, Thursday
  #   modules: *modules
  #   expansions:
  #     mongodb_setup: atlas-shard
  #     canaries: none
  #     atlas_setup: M60-shard
  #     use_custom_build: true
  #     infrastructure_provisioning: workload_client_multiple.arm.2023-09
  #     infrastructure_provisioning_release: 2022-11
  #     workload_setup: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     storageEngine: wiredTiger
  #     compile_variant: "-arm64"
  #   run_on:
  #     - "rhel70-perf-atlas-large"
  #   depends_on:
  #     - name: compile
  #       variant: compile-amazon-linux2-arm64
  #   tasks:
  #     - name: locust_bulk_insert

  # - name: atlas-M60-real-azure
  #   display_name: M60-Atlas ReplSet Azure
  #   cron: "0 0 * * 0,4" # 00:00 on Sunday, Thursday
  #   modules: *modules
  #   expansions:
  #     mongodb_setup: atlas
  #     canaries: none
  #     atlas_setup: M60-repl-azure
  #     use_custom_build_azure: true
  #     compile_variant: -rhel70
  #     infrastructure_provisioning: workload_client_intel.2023-04
  #     infrastructure_provisioning_release: 2022-11
  #     workload_setup: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     storageEngine: wiredTiger
  #   run_on:
  #     - "rhel70-perf-atlas-large"
  #   depends_on:
  #     - name: compile
  #       variant: compile-amazon2
  #     - name: compile
  #       variant: compile-rhel70
  #   tasks: # Cannot use *3nodetasks because secondary_performance uses a special mongodb setup
  #     - *schedule_patch_auto_tasks_task
  #     - *schedule_variant_auto_tasks_task
  #     - name: industry_benchmarks
  #     - name: ycsb_60GB
  #     - name: tpcc
  #     - name: tpcc_majority
  #     - name: linkbench
  #     - name: linkbench2

  # - name: renew-ssl-cert
  #   display_name: Renew SSL Cert
  #   cron: "0 0 * * 4" # 00:00 on Thursday
  #   modules: *modules
  #   run_on: # Certbot with route53 plugin is installed on Ubuntu 20.04
  #     - "ubuntu2004-small"
  #   tasks:
  #     - name: renew_ssl_cert

  # - name: linux-standalone.2022-11
  #   display_name: Linux Standalone 2022-11
  #   cron: &linux-standalone-cron "0 0 * * 2,4,6"  # Tuesday, Thursday and Saturday at 00:00
  #   modules: *modules
  #   expansions:
  #     mongodb_setup_release: 2022-11
  #     mongodb_setup: standalone
  #     infrastructure_provisioning_release: 2022-11
  #     infrastructure_provisioning: single
  #     workload_setup: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     authentication: enabled
  #     storageEngine: wiredTiger
  #     compile_variant: "-arm64"
  #   run_on:
  #     - "rhel70-perf-single"
  #   depends_on: *_compile_amazon_linux2_arm64
  #   tasks: &standalonetasks
  #     - *schedule_patch_auto_tasks_task
  #     - *schedule_variant_auto_tasks_task
  #     - name: dsi_integ_test_run_command_simple
  #     - name: smoke_test
  #     - name: canaries_only
  #     - name: industry_benchmarks
  #     - name: ycsb_60GB
  #     - name: ycsb_60GB.long
  #     - name: crud_workloads_majority
  #     - name: crud_workloads_w1
  #     - name: genny_canaries
  #     - name: cursor_manager
  #     - name: misc_workloads
  #     - name: map_reduce_workloads
  #     - name: non_sharded_workloads
  #     - name: bestbuy_agg
  #     - name: bestbuy_agg_merge_different_db
  #     - name: bestbuy_agg_merge_same_db
  #     - name: bestbuy_agg_merge_wordcount
  #     - name: bestbuy_query
  #     - name: tpcc
  #     - name: tpcc_majority
  #     - name: tpch_1_normalized
  #     - name: tpch_1_denormalized
  #     - name: tpch_10_normalized
  #     - name: tpch_10_denormalized
  #     - name: array_traversal_high_value
  #       cron: *high-value-workload-cron
  #     - name: filter_with_complex_logical_expression_high_value
  #       cron: *high-value-workload-cron

  # - name: linux-standalone-all-feature-flags.2022-11
  #   display_name: Linux Standalone (all feature flags) 2022-11
  #   cron: "0 0 * * 2,4,6" # Tuesday, Thursday and Saturday at 00:00
  #   modules: *modules
  #   expansions:
  #     mongodb_setup_release: 2022-11
  #     mongodb_setup: standalone-all-feature-flags
  #     infrastructure_provisioning_release: 2022-11
  #     infrastructure_provisioning: single
  #     workload_setup: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     authentication: enabled
  #     storageEngine: wiredTiger
  #     compile_variant: "-arm64"
  #   run_on:
  #     - "rhel70-perf-single"
  #   depends_on: *_compile_amazon_linux2_arm64
  #   tasks:
  #     - *schedule_patch_auto_tasks_task
  #     - *schedule_variant_auto_tasks_task
  #     - name: industry_benchmarks
  #     - name: ycsb_60GB
  #     - name: ycsb_60GB.long
  #     - name: crud_workloads_majority
  #     - name: bestbuy_agg
  #     - name: bestbuy_agg_merge_different_db
  #     - name: bestbuy_agg_merge_same_db
  #     - name: bestbuy_agg_merge_wordcount
  #     - name: bestbuy_4_analytics
  #     - name: bestbuy_4_analytics_columnstore
  #     - name: bestbuy_4_inserts
  #     - name: bestbuy_query
  #     - name: cursor_manager
  #     - name: map_reduce_workloads
  #     - name: tpcc
  #     - name: tpcc_majority
  #     - name: tpch_1_normalized
  #     - name: tpch_1_denormalized
  #     - name: tpch_10_normalized
  #     - name: tpch_10_denormalized
  #     - name: column_store_index_charts_events_1G
  #     - name: column_store_tpch_10_denormalized
  #     - name: column_store_tpch_10_denormalized_unindexed
  #     - name: ssb_column_store_comparison

  # - name: streams-single.intel.2023-10
  #   display_name: Streams-Single Intel 2023-10
  #   cron: "0 0 * * 2,4,6" # Tuesday, Thursday and Saturday at 00:00
  #   modules: *modules
  #   expansions:
  #     compile_variant: -stream-x86_64
  #     requires_mongostream: true
  #     mongodb_setup_release: 2022-11
  #     mongodb_setup: streams-single.2023-10
  #     infrastructure_provisioning_release: 2022-11
  #     infrastructure_provisioning: streams-single.intel.2023-10
  #     workload_setup: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     authentication: enabled
  #     storageEngine: wiredTiger
  #   run_on:
  #     - "rhel70-perf-single"
  #   depends_on: *_compile_amazon2_streams
  #   tasks:
  #     - *schedule_patch_auto_tasks_task
  #     - *schedule_variant_auto_tasks_task
  #     - name: stream_workloads

  # - name: linux-standalone-classic-query-engine.2022-11
  #   display_name: Linux Standalone (Classic Query Engine) 2022-11
  #   cron: *cron_query_perf_schedule
  #   modules: *modules
  #   expansions:
  #     mongodb_setup_release: 2022-11
  #     mongodb_setup: standalone-classic-query-engine
  #     infrastructure_provisioning_release: 2022-11
  #     infrastructure_provisioning: single
  #     workload_setup: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     authentication: enabled
  #     storageEngine: wiredTiger
  #     compile_variant: "-arm64"
  #   run_on:
  #     - "rhel70-perf-single"
  #   depends_on: *_compile_amazon_linux2_arm64
  #   tasks: *classic_engine_tasks

  # - name: linux-standalone-sbe.2022-11
  #   display_name: Linux Standalone (SBE) 2022-11
  #   cron: *cron_query_perf_schedule
  #   modules: *modules
  #   expansions:
  #     mongodb_setup_release: 2022-11
  #     mongodb_setup: standalone-sbe
  #     infrastructure_provisioning_release: 2022-11
  #     infrastructure_provisioning: single
  #     workload_setup: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     authentication: enabled
  #     storageEngine: wiredTiger
  #     compile_variant: "-arm64"
  #   run_on:
  #     - "rhel70-perf-single"
  #   depends_on: *_compile_amazon_linux2_arm64
  #   tasks: *classic_engine_tasks

  # - name: linux-standalone-sampling-bonsai.2022-11
  #   display_name: Linux Standalone (Bonsai with Sampling CE) 2022-11
  #   cron: "0 0 * * 0,2,3,4,5" # Run it every day except Saturday and Monday.
  #   modules: *modules
  #   expansions:
  #     mongodb_setup_release: 2022-11
  #     mongodb_setup: standalone-sampling-bonsai
  #     infrastructure_provisioning_release: 2022-11
  #     infrastructure_provisioning: single
  #     workload_setup: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     authentication: enabled
  #     storageEngine: wiredTiger
  #     compile_variant: "-arm64"
  #   run_on:
  #     - "rhel70-perf-single"
  #   depends_on: *_compile_amazon_linux2_arm64
  #   tasks: &bonsai_standalone_tasks
  #     - *schedule_patch_auto_tasks_task
  #     - *schedule_variant_auto_tasks_task

  # - name: linux-intel-standalone-sampling-bonsai
  #   display_name: Linux Intel Standalone (Bonsai with Sampling CE)
  #   cron: *cron_query_perf_schedule
  #   modules: *modules
  #   expansions:
  #     mongodb_setup_release: 2022-11
  #     mongodb_setup: standalone-sampling-bonsai
  #     infrastructure_provisioning_release: 2022-11
  #     infrastructure_provisioning: single-intel
  #     workload_setup: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     authentication: enabled
  #     storageEngine: wiredTiger
  #   run_on:
  #     - "rhel70-perf-single"
  #   depends_on: *_compile_amazon2
  #   tasks: *bonsai_standalone_tasks

  # - name: linux-standalone-heuristic-bonsai.2022-11
  #   display_name: Linux Standalone (Bonsai with Heuristic CE) 2022-11
  #   cron: "0 0 * * 0,2,3,4,5" # Run it every day except Saturday and Monday.
  #   modules: *modules
  #   expansions:
  #     mongodb_setup_release: 2022-11
  #     mongodb_setup: standalone-heuristic-bonsai
  #     infrastructure_provisioning_release: 2022-11
  #     infrastructure_provisioning: single
  #     workload_setup: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     authentication: enabled
  #     storageEngine: wiredTiger
  #     compile_variant: "-arm64"
  #   run_on:
  #     - "rhel70-perf-single"
  #   depends_on: *_compile_amazon_linux2_arm64
  #   tasks: *bonsai_standalone_tasks

  # - name: linux-intel-standalone-heuristic-bonsai
  #   display_name: Linux Intel Standalone (Bonsai with Heuristic CE)
  #   cron: *cron_query_perf_schedule
  #   modules: *modules
  #   expansions:
  #     mongodb_setup_release: 2022-11
  #     mongodb_setup: standalone-heuristic-bonsai
  #     infrastructure_provisioning_release: 2022-11
  #     infrastructure_provisioning: single-intel
  #     workload_setup: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     authentication: enabled
  #     storageEngine: wiredTiger
  #   run_on:
  #     - "rhel70-perf-single"
  #   depends_on: *_compile_amazon2
  #   tasks: *bonsai_standalone_tasks

  # - name: linux-intel-1-node-replSet-sampling-bonsai
  #   display_name: Linux Intel 1-Node ReplSet (Bonsai with Sampling CE)
  #   cron: *linux-1-node-repl-cron
  #   modules: *modules
  #   expansions:
  #     mongodb_setup_release: 2022-11
  #     mongodb_setup: single-replica-sampling-bonsai
  #     infrastructure_provisioning_release: 2022-11
  #     infrastructure_provisioning: single-intel
  #     workload_setup: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     authentication: enabled
  #     storageEngine: wiredTiger
  #   run_on:
  #     - "rhel70-perf-single"
  #   depends_on: *_compile_amazon2
  #   tasks: &bonsai_1nodereplset_tasks
  #     - *schedule_patch_auto_tasks_task
  #     - *schedule_variant_auto_tasks_task
  #     - name: linkbench2
  #     - name: snapshot_reads

  # - name: linux-1-node-replSet-sampling-bonsai.2022-11
  #   display_name: Linux 1-Node ReplSet (Bonsai with Sampling CE) 2022-11
  #   cron: *linux-1-node-repl-cron
  #   modules: *modules
  #   expansions:
  #     mongodb_setup_release: 2022-11
  #     mongodb_setup: single-replica-sampling-bonsai
  #     infrastructure_provisioning_release: 2022-11
  #     infrastructure_provisioning: single
  #     workload_setup: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     authentication: enabled
  #     storageEngine: wiredTiger
  #     compile_variant: "-arm64"
  #   run_on:
  #     - "rhel70-perf-single"
  #   depends_on: *_compile_amazon_linux2_arm64
  #   tasks: *bonsai_1nodereplset_tasks

  # - name: linux-intel-1-node-replSet-heuristic-bonsai
  #   display_name: Linux Intel 1-Node ReplSet (Bonsai with Heuristic CE)
  #   cron: *linux-1-node-repl-cron
  #   modules: *modules
  #   expansions:
  #     mongodb_setup_release: 2022-11
  #     mongodb_setup: single-replica-heuristic-bonsai
  #     infrastructure_provisioning_release: 2022-11
  #     infrastructure_provisioning: single-intel
  #     workload_setup: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     authentication: enabled
  #     storageEngine: wiredTiger
  #   run_on:
  #     - "rhel70-perf-single"
  #   depends_on: *_compile_amazon2
  #   tasks: *bonsai_1nodereplset_tasks

  # - name: linux-1-node-replSet-heuristic-bonsai.2022-11
  #   display_name: Linux 1-Node ReplSet (Bonsai with Heuristic CE) 2022-11
  #   cron: *linux-1-node-repl-cron
  #   modules: *modules
  #   expansions:
  #     mongodb_setup_release: 2022-11
  #     mongodb_setup: single-replica-heuristic-bonsai
  #     infrastructure_provisioning_release: 2022-11
  #     infrastructure_provisioning: single
  #     workload_setup: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     authentication: enabled
  #     storageEngine: wiredTiger
  #     compile_variant: "-arm64"
  #   run_on:
  #     - "rhel70-perf-single"
  #   depends_on: *_compile_amazon_linux2_arm64
  #   tasks: *bonsai_1nodereplset_tasks

  # - name: linux-1-node-replSet-classic-query-engine.2022-11
  #   display_name: Linux 1-Node ReplSet (Classic Query Engine) 2022-11
  #   cron: *linux-1-node-repl-cron
  #   modules: *modules
  #   expansions:
  #     mongodb_setup_release: 2022-11
  #     mongodb_setup: single-replica-classic-query-engine
  #     infrastructure_provisioning_release: 2022-11
  #     infrastructure_provisioning: single
  #     workload_setup: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     authentication: enabled
  #     storageEngine: wiredTiger
  #     compile_variant: "-arm64"
  #   run_on:
  #     - "rhel70-perf-single"
  #   depends_on: *_compile_amazon_linux2_arm64
  #   tasks: *classic_engine_1nodereplset_tasks

  # - name: linux-1-node-replSet-sbe.2022-11
  #   display_name: Linux 1-Node ReplSet (SBE) 2022-11
  #   cron: *linux-1-node-repl-cron
  #   modules: *modules
  #   expansions:
  #     mongodb_setup_release: 2022-11
  #     mongodb_setup: single-replica-sbe
  #     infrastructure_provisioning_release: 2022-11
  #     infrastructure_provisioning: single
  #     workload_setup: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     authentication: enabled
  #     storageEngine: wiredTiger
  #     compile_variant: "-arm64"
  #   run_on:
  #     - "rhel70-perf-single"
  #   depends_on: *_compile_amazon_linux2_arm64
  #   tasks: *classic_engine_1nodereplset_tasks

  # - name: linux-1-node-replSet-all-feature-flags.2022-11
  #   display_name: Linux 1-Node ReplSet (all feature flags) 2022-11
  #   cron: *linux-1-node-repl-cron
  #   modules: *modules
  #   expansions:
  #     mongodb_setup_release: 2022-11
  #     mongodb_setup: single-replica-all-feature-flags
  #     infrastructure_provisioning_release: 2022-11
  #     infrastructure_provisioning: single
  #     workload_setup: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     authentication: enabled
  #     storageEngine: wiredTiger
  #     compile_variant: "-arm64"
  #   run_on:
  #     - "rhel70-perf-single"
  #   depends_on: *_compile_amazon_linux2_arm64
  #   tasks:
  #     - *schedule_patch_auto_tasks_task
  #     - *schedule_variant_auto_tasks_task
  #     - name: linkbench
  #     - name: linkbench2

  # - name: linux-1-node-replSet.2022-11
  #   display_name: Linux 1-Node ReplSet 2022-11
  #   cron: *linux-1-node-repl-cron
  #   modules: *modules
  #   expansions:
  #     mongodb_setup_release: 2022-11
  #     mongodb_setup: single-replica
  #     infrastructure_provisioning_release: 2022-11
  #     infrastructure_provisioning: single
  #     workload_setup: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     authentication: enabled
  #     storageEngine: wiredTiger
  #     compile_variant: "-arm64"
  #   run_on:
  #     - "rhel70-perf-single"
  #   depends_on: *_compile_amazon_linux2_arm64
  #   tasks: &1nodetasks
  #     - *schedule_patch_auto_tasks_task
  #     - *schedule_variant_auto_tasks_task
  #     - name: industry_benchmarks
  #     - name: ycsb_60GB
  #     - name: ycsb_60GB.long
  #     - name: crud_workloads_majority
  #     - name: misc_workloads
  #     - name: map_reduce_workloads
  #     - name: smoke_test
  #     - name: canaries_only
  #     - name: non_sharded_workloads
  #     - name: bestbuy_agg
  #     - name: bestbuy_agg_merge_different_db
  #     - name: bestbuy_agg_merge_same_db
  #     - name: bestbuy_agg_merge_wordcount
  #     - name: bestbuy_query
  #     - name: change_streams_latency
  #     - name: change_streams_listen_throughput
  #     - name: snapshot_reads
  #     - name: linkbench
  #     - name: linkbench2
  #     - name: tsbs_load
  #     - name: tsbs_query
  #     - name: tsbs_query_finance
  #     - name: tsbs_query_manual_bucketing
  #     - name: tsbs_query_fixed_bucketing
  #     - name: tsbs-query-genny
  #     - name: tsbs-query-optimizations
  #     - name: tpcc
  #     - name: tpcc_majority
  #     - name: tpch_1_normalized
  #     - name: tpch_1_denormalized
  #     - name: tpch_10_normalized
  #     - name: tpch_10_denormalized

  # - name: linux-1-node-replSet-test-commands.2022-11
  #   display_name: Linux 1-Node ReplSet With Test Commands 2022-11
  #   cron: *linux-1-node-repl-cron
  #   modules: *modules
  #   expansions:
  #     mongodb_setup_release: 2022-11
  #     mongodb_setup: single-replica
  #     infrastructure_provisioning_release: 2022-11
  #     infrastructure_provisioning: single
  #     workload_setup: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     authentication: enabled
  #     storageEngine: wiredTiger
  #     compile_variant: "-arm64"
  #     # Needed to allow enabling failpoints.
  #     config_params_json: &config_params_enableTestCommmands '{"v":0, "enableTestCommands": true}'
  #   run_on:
  #     - "rhel70-perf-single"
  #   depends_on: *_compile_amazon_linux2_arm64
  #   tasks: &1node-test-commands-tasks
  #     - name: startup

  # - name: linux-standalone-audit.2022-11
  #   display_name: Linux Standalone Audit 2022-11
  #   cron: "0 0 * * 4" # 00:00 on Thursday
  #   modules: *modules
  #   expansions:
  #     mongodb_setup_release: 2022-11
  #     mongodb_setup: standalone-audit
  #     infrastructure_provisioning_release: 2022-11
  #     infrastructure_provisioning: single
  #     workload_setup: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     authentication: enabled
  #     storageEngine: wiredTiger
  #     compile_variant: "-arm64"
  #   run_on:
  #     - "rhel70-perf-single"
  #   depends_on: *_compile_amazon_linux2_arm64
  #   tasks: &audit-tasks
  #     - *schedule_patch_auto_tasks_task
  #     - *schedule_variant_auto_tasks_task
  #     - name: industry_benchmarks
  #     - name: crud_workloads_majority
  #     - name: smoke_test

  # - name: linux-1-node-replSet-audit-log-encryption-no-compression.2022-11
  #   display_name: Linux Single-node Replica Set Audit w/ At-Rest Log Encryption (No compression) 2022-11
  #   cron: "0 0 * * 4" # 00:00 on Thursday
  #   modules: *modules
  #   expansions:
  #     mongodb_setup_release: 2022-11
  #     mongodb_setup: single-replica-audit-log-encryption-no-compression
  #     infrastructure_provisioning_release: 2022-11
  #     infrastructure_provisioning: single
  #     workload_setup: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     authentication: enabled
  #     storageEngine: wiredTiger
  #     compile_variant: "-arm64"
  #   run_on:
  #     - "rhel70-perf-single"
  #   depends_on: *_compile_amazon_linux2_arm64
  #   tasks: *audit-tasks

  # - name: linux-1-node-replSet-audit.2022-11
  #   display_name: Linux Single-node Replica Set Audit 2022-11
  #   cron: "0 0 * * 4" # 00:00 on Thursday
  #   modules: *modules
  #   expansions:
  #     mongodb_setup_release: 2022-11
  #     mongodb_setup: single-replica-audit
  #     infrastructure_provisioning_release: 2022-11
  #     infrastructure_provisioning: single
  #     workload_setup: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     authentication: enabled
  #     storageEngine: wiredTiger
  #     compile_variant: "-arm64"
  #   run_on:
  #     - "rhel70-perf-single"
  #   depends_on: *_compile_amazon_linux2_arm64
  #   tasks: *audit-tasks

  # - name: linux-shard-lite-fle.2022-11
  #   display_name: Linux Shard Lite FLE 2022-11
  #   cron: "0 0 * * 0,4" # 00:00 on Sunday,Thursday
  #   modules: *modules
  #   expansions:
  #     mongodb_setup_release: 2022-11
  #     mongodb_setup: shard-lite-fle
  #     infrastructure_provisioning_release: 2022-11
  #     infrastructure_provisioning: shard-lite
  #     workload_setup: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     authentication: enabled
  #     storageEngine: wiredTiger
  #     compile_variant: "-arm64"
  #     requires_mongocrypt_shlib: true
  #   run_on:
  #     - "rhel70-perf-shard-lite"
  #   depends_on: *_compile_amazon_linux2_arm64_with_mongocrypt_shlib
  #   tasks:
  #     - *schedule_patch_auto_tasks_task
  #     - *schedule_variant_auto_tasks_task
  #     - name: medical_workload_diagnosis_50_50_high_value
  #       cron: *high-value-workload-cron
  #     - name: ycsb_like_queryable_encrypt1_cfdefault_high_value
  #       cron: *high-value-workload-cron

  # - name: linux-1-node-replSet-audit-log-encryption-compression.2022-11
  #   display_name: Linux Single-node Replica Set Audit w/ At-Rest Log Encryption (With compression) 2022-11
  #   cron: "0 0 * * 4" # 00:00 on Thursday
  #   modules: *modules
  #   expansions:
  #     mongodb_setup_release: 2022-11
  #     mongodb_setup: single-replica-audit-log-encryption-compression
  #     infrastructure_provisioning_release: 2022-11
  #     infrastructure_provisioning: single
  #     workload_setup: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     authentication: enabled
  #     storageEngine: wiredTiger
  #     compile_variant: "-arm64"
  #   run_on:
  #     - "rhel70-perf-single"
  #   depends_on: *_compile_amazon_linux2_arm64
  #   tasks: *audit-tasks

  # - name: linux-1-node-replSet-fle.2022-11
  #   display_name: Linux 1-Node ReplSet FLE 2022-11
  #   cron: "0 0 * * 0,4" # 00:00 on Sunday,Thursday
  #   modules: *modules
  #   expansions:
  #     mongodb_setup_release: 2022-11
  #     mongodb_setup: single-replica-fle
  #     infrastructure_provisioning_release: 2022-11
  #     infrastructure_provisioning: single
  #     workload_setup: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     authentication: enabled
  #     fle: enabled
  #     storageEngine: wiredTiger
  #     compile_variant: "-arm64"
  #     requires_mongocrypt_shlib: true
  #   run_on:
  #     - "rhel70-perf-single"
  #   depends_on: *_compile_amazon_linux2_arm64_with_mongocrypt_shlib
  #   tasks:
  #     - *schedule_patch_auto_tasks_task
  #     - *schedule_variant_auto_tasks_task
  #     - name: industry_benchmarks
  #     - name: linkbench

  # - name: linux-1-node-replSet-ese-cbc.2022-11
  #   display_name: Linux 1-Node ReplSet ESE CBC 2022-11
  #   cron: "0 0 * * 4" # 00:00 on Thursday
  #   modules: *modules
  #   expansions:
  #     mongodb_setup_release: 2022-11
  #     mongodb_setup: single-replica-ese-cbc
  #     infrastructure_provisioning_release: 2022-11
  #     infrastructure_provisioning: single
  #     workload_setup: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     authentication: enabled
  #     storageEngine: wiredTiger
  #     compile_variant: "-arm64"
  #   run_on:
  #     - "rhel70-perf-single"
  #   depends_on: *_compile_amazon_linux2_arm64
  #   tasks:
  #     - *schedule_patch_auto_tasks_task
  #     - *schedule_variant_auto_tasks_task
  #     - name: industry_benchmarks
  #     - name: smoke_test
  #     - name: ycsb_60GB
  #     - name: ycsb_60GB.long

  # - name: linux-1-node-replSet-ese-gcm.2022-11
  #   display_name: Linux 1-Node ReplSet ESE GCM 2022-11
  #   cron: "0 0 1 * *" # 00:00 on the first of each month
  #   modules: *modules
  #   expansions:
  #     mongodb_setup_release: 2022-11
  #     mongodb_setup: single-replica-ese-gcm
  #     infrastructure_provisioning_release: 2022-11
  #     infrastructure_provisioning: single
  #     workload_setup: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     authentication: enabled
  #     storageEngine: wiredTiger
  #     compile_variant: "-arm64"
  #   run_on:
  #     - "rhel70-perf-single"
  #   depends_on: *_compile_amazon_linux2_arm64
  #   tasks:
  #     - *schedule_patch_auto_tasks_task
  #     - *schedule_variant_auto_tasks_task
  #     - name: industry_benchmarks
  #     - name: smoke_test
  #     - name: ycsb_60GB
  #     - name: ycsb_60GB.long

  # - name: linux-1-node-15gbwtcache.2022-11
  #   display_name: Linux 1-Node ReplSet 15 GB WiredTiger Cache 2022-11
  #   cron: "0 0 * * 2,4" # 00:00 on Tuesday,Thursday
  #   modules: *modules
  #   expansions:
  #     mongodb_setup_release: 2022-11
  #     mongodb_setup: single-replica-15gbwtcache
  #     infrastructure_provisioning_release: 2022-11
  #     infrastructure_provisioning: single
  #     workload_setup: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     authentication: enabled
  #     storageEngine: wiredTiger
  #     compile_variant: "-arm64"
  #   run_on:
  #     - "rhel70-perf-single"
  #   depends_on: *_compile_amazon_linux2_arm64
  #   tasks:
  #     - *schedule_patch_auto_tasks_task
  #     - *schedule_variant_auto_tasks_task
  #     - name: industry_benchmarks
  #     - name: smoke_test
  #     - name: ycsb_60GB
  #     - name: ycsb_60GB.long

  # - name: linux-3-node-1dayhistory-15gbwtcache.2022-11
  #   display_name: Linux 3-Node ReplSet 1 Day History 15 GB WiredTiger Cache 2022-11
  #   cron: "0 0 * * 0,4" # 00:00 on Sunday,Thursday
  #   modules: *modules
  #   expansions:
  #     mongodb_setup_release: 2022-11
  #     mongodb_setup: replica-1dayhistory-15gbwtcache
  #     infrastructure_provisioning_release: 2022-11
  #     infrastructure_provisioning: replica
  #     workload_setup: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     authentication: enabled
  #     storageEngine: wiredTiger
  #     compile_variant: "-arm64"
  #   run_on:
  #     - "rhel70-perf-replset"
  #   depends_on: *_compile_amazon_linux2_arm64
  #   tasks:
  #     - *schedule_patch_auto_tasks_task
  #     - *schedule_variant_auto_tasks_task
  #     - name: crud_workloads_majority
  #     - name: crud_workloads_w1
  #     - name: smoke_test
  #     - name: ycsb_60GB
  #     - name: ycsb_60GB.long

  # - &shard-baseline
  #   name: linux-3-shard.2022-11
  #   display_name: Linux 3-Shard Cluster 2022-11
  #   cron: &linux-3-shard-cron "0 0 * * 4" # 00:00 on Thursday
  #   modules: *modules
  #   expansions: &shard-baseline-expansions
  #     mongodb_setup_release: 2022-11
  #     mongodb_setup: shard
  #     infrastructure_provisioning_release: 2022-11
  #     infrastructure_provisioning: shard
  #     workload_setup: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     authentication: enabled
  #     storageEngine: wiredTiger
  #     compile_variant: "-arm64"
  #   run_on:
  #     - "rhel70-perf-shard"
  #   depends_on: *_compile_amazon_linux2_arm64
  #   tasks: &linux_3_shard_tasks
  #     - *schedule_patch_auto_tasks_task
  #     - *schedule_variant_auto_tasks_task
  #     - name: industry_benchmarks
  #     - name: industry_benchmarks_w1
  #     - name: crud_workloads_majority
  #     - name: crud_workloads_w1
  #     - name: misc_workloads
  #     - name: map_reduce_workloads
  #     - name: smoke_test
  #     - name: canaries_only
  #     - name: mongos_workloads
  #       cron: *high-value-workload-cron
  #     - name: mongos_large_catalog_workloads
  #     - name: move_chunk_workloads
  #       cron: *high-value-workload-cron
  #     - name: change_streams_latency
  #       cron: *high-value-workload-cron
  #     - name: change_streams_listen_throughput
  #       cron: *high-value-workload-cron
  #     - name: change_streams_multi_mongos
  #     - name: tsbs_query_sharded
  #     - name: tsbs_query_finance_sharded
  #     - name: tsbs_query_sharded_balancer
  #     - name: tsbs_query_finance_sharded_balancer

  # - name: linux-3-shard-heuristic-bonsai.2022-11
  #   display_name: Linux 3-Shard Cluster 2022-11 (Bonsai with Heuristic CE)
  #   cron: *linux-3-shard-cron
  #   modules: *modules
  #   expansions:
  #     mongodb_setup_release: 2022-11
  #     mongodb_setup: shard-heuristic-bonsai
  #     infrastructure_provisioning_release: 2022-11
  #     infrastructure_provisioning: shard
  #     workload_setup: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     authentication: enabled
  #     storageEngine: wiredTiger
  #     compile_variant: "-arm64"
  #   run_on:
  #     - "rhel70-perf-shard"
  #   depends_on: *_compile_amazon_linux2_arm64
  #   tasks:
  #     - *schedule_patch_auto_tasks_task
  #     - *schedule_variant_auto_tasks_task
  #     - name: industry_benchmarks
  #     - name: industry_benchmarks_w1

  # - <<: *shard-baseline
  #   name: linux-3-shard-query-settings
  #   display_name: Linux 3-Shard Cluster (QuerySettings)
  #   cron: *linux-3-shard-cron
  #   modules: *modules
  #   expansions:
  #     <<: *shard-baseline-expansions
  #     mongodb_setup: shard-query-settings
  #   tasks:
  #     - *schedule_patch_auto_tasks_task
  #     - name: schedule_variant_auto_tasks
  #     - name: industry_benchmarks
  #       cron: *high-value-workload-cron
  #     - name: tpcc_majority
  #       cron: *high-value-workload-cron
  #     - name: mixed_workloads_genny_rate_limited_high_value
  #       cron: *high-value-workload-cron
  #     - name: bestbuy_agg
  #       cron: *high-value-workload-cron
  #     - name: large_indexed_ins_high_value
  #       cron: *high-value-workload-cron
  #     - name: expressive_queries_high_value
  #       cron: *high-value-workload-cron
  #     - name: time_series_sort_high_value
  #       cron: *high-value-workload-cron
  #     - name: tsbs_query
  #       cron: *high-value-workload-cron
  #     - name: array_traversal_high_value
  #       cron: *high-value-workload-cron
  #     - name: filter_with_complex_logical_expression_high_value
  #     - name: tsbs_query
  #       cron: *high-value-workload-cron
  #     - name: mongos_workloads
  #       cron: *high-value-workload-cron

  # - name: linux-shard-lite-audit.2022-11
  #   display_name: Linux Shard Lite Cluster Audit 2022-11
  #   cron: "0 0 * * 0,4" # 00:00 on Sunday,Thursday
  #   modules: *modules
  #   expansions:
  #     mongodb_setup_release: 2022-11
  #     mongodb_setup: shard-lite-audit
  #     infrastructure_provisioning_release: 2022-11
  #     infrastructure_provisioning: shard-lite-audit
  #     workload_setup: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     authentication: enabled
  #     storageEngine: wiredTiger
  #     compile_variant: "-arm64"
  #   run_on:
  #     - "rhel70-perf-shard-lite"
  #   depends_on: *_compile_amazon_linux2_arm64
  #   tasks:
  #     - name: industry_benchmarks

  # - &shard-lite-baseline
  #   name: linux-shard-lite.2022-11
  #   display_name: Linux Shard Lite Cluster 2022-11
  #   cron: "0 0 * * 0,4" # 00:00 on Sunday,Thursday
  #   modules: *modules
  #   expansions: &shard-lite-baseline-expansions
  #     mongodb_setup_release: 2022-11
  #     mongodb_setup: shard-lite
  #     infrastructure_provisioning_release: 2022-11
  #     infrastructure_provisioning: shard-lite
  #     workload_setup: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     authentication: enabled
  #     storageEngine: wiredTiger
  #     compile_variant: "-arm64"
  #   run_on:
  #     - "rhel70-perf-shard-lite"
  #   depends_on: *_compile_amazon_linux2_arm64
  #   tasks:
  #     - *schedule_patch_auto_tasks_task
  #     - *schedule_variant_auto_tasks_task
  #     - name: bestbuy_agg
  #     - name: bestbuy_agg_merge_different_db
  #     - name: bestbuy_agg_merge_same_db
  #     - name: bestbuy_agg_merge_target_hashed
  #     - name: bestbuy_agg_merge_wordcount
  #     - name: bestbuy_query
  #     - name: change_streams_latency
  #     - name: change_streams_preimage_latency
  #     - name: change_streams_preimage_throughput
  #     - name: change_streams_listen_throughput
  #     - name: industry_benchmarks
  #     - name: linkbench
  #     - name: mongos_workloads
  #     - name: mongos_large_catalog_workloads
  #     - name: move_chunk_large_chunk_map_workloads
  #     - name: move_chunk_workloads
  #     - name: move_chunk_waiting_workloads
  #     - name: smoke_test
  #     - name: tsbs_query_sharded
  #     - name: tsbs_query_finance_sharded
  #     - name: tsbs_query_sharded_balancer
  #     - name: tsbs_query_finance_sharded_balancer

  # - name: linux-shard-lite-intel.2022-11
  #   display_name: Linux Shard Lite Cluster Intel 2022-11
  #   cron: "0 0 * * 0,4" # 00:00 on Sunday,Thursday
  #   modules: *modules
  #   expansions:
  #     mongodb_setup_release: 2022-11
  #     mongodb_setup: shard-lite
  #     infrastructure_provisioning_release: 2022-11
  #     infrastructure_provisioning: shard-lite-intel.2022-11
  #     workload_setup: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     authentication: enabled
  #     storageEngine: wiredTiger
  #   run_on:
  #     - "rhel70-perf-shard-lite"
  #   depends_on: *_compile_amazon2
  #   tasks:
  #     - *schedule_patch_auto_tasks_task
  #     - *schedule_variant_auto_tasks_task
  #     - name: industry_benchmarks
  #     - name: mongos_workloads
  #     - name: move_chunk_workloads
  #     - name: move_chunk_waiting_workloads
  #     - name: smoke_test

  # - name: linux-shard-lite-read-concern-available.2022-11
  #   display_name: Linux Shard Lite ReadConcern Available 2022-11
  #   cron: "0 0 * * 4" # 00:00 on Thursday
  #   modules: *modules
  #   expansions:
  #     mongodb_setup_release: 2022-11
  #     mongodb_setup: shard-lite-read-concern-available
  #     infrastructure_provisioning_release: 2022-11
  #     infrastructure_provisioning: shard-lite
  #     workload_setup: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     authentication: enabled
  #     storageEngine: wiredTiger
  #     compile_variant: "-arm64"
  #   run_on:
  #     - "rhel70-perf-shard-lite"
  #   depends_on: *_compile_amazon_linux2_arm64
  #   tasks:
  #     - *schedule_patch_auto_tasks_task
  #     - *schedule_variant_auto_tasks_task
  #     - name: industry_benchmarks
  #     - name: linkbench

  # - name: linux-shard-lite-all-feature-flags.2022-11
  #   display_name: Linux Shard Lite (all feature flags) 2022-11
  #   cron: "0 0 * * 4" # 00:00 on Thursday
  #   modules: *modules
  #   expansions:
  #     mongodb_setup_release: 2022-11
  #     mongodb_setup: shard-lite-all-feature-flags
  #     infrastructure_provisioning_release: 2022-11
  #     infrastructure_provisioning: shard-lite
  #     workload_setup: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     authentication: enabled
  #     storageEngine: wiredTiger
  #     compile_variant: "-arm64"
  #   run_on:
  #     - "rhel70-perf-shard-lite"
  #   depends_on: *_compile_amazon_linux2_arm64
  #   tasks:
  #     - *schedule_patch_auto_tasks_task
  #     - *schedule_variant_auto_tasks_task
  #     - name: change_streams_preimage_throughput
  #     - name: change_streams_preimage_latency
  #     - name: tsbs_query_sharded
  #     - name: tsbs_query_finance_sharded
  #     - name: tsbs_query_sharded_balancer
  #     - name: tsbs_query_finance_sharded_balancer

  # - name: linux-shard-single.2022-11
  #   display_name: Linux Shard Single 2022-11
  #   cron: "0 0 * * 2,4" # 00:00 on Tuesday,Thursday
  #   modules: *modules
  #   expansions:
  #     mongodb_setup_release: 2022-11
  #     mongodb_setup: shard-single
  #     infrastructure_provisioning_release: 2022-11
  #     infrastructure_provisioning: shard-single
  #     workload_setup: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     authentication: enabled
  #     storageEngine: wiredTiger
  #     compile_variant: "-arm64"
  #   run_on:
  #     - "rhel70-perf-shard-lite"
  #   depends_on: *_compile_amazon_linux2_arm64
  #   tasks:
  #     - *schedule_patch_auto_tasks_task
  #     - *schedule_variant_auto_tasks_task

  # - name: linux-3-node-replSet.2022-11
  #   display_name: Linux 3-Node ReplSet 2022-11
  #   cron: &linux-3-node-cron "0 0 * * 1,2,3,4,5,6" # Everyday except Sunday at 00:00
  #   modules: *modules
  #   expansions:
  #     mongodb_setup_release: 2022-11
  #     mongodb_setup: replica
  #     infrastructure_provisioning_release: 2022-11
  #     infrastructure_provisioning: replica
  #     workload_setup: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     authentication: enabled
  #     storageEngine: wiredTiger
  #     compile_variant: "-arm64"
  #   run_on:
  #     - "rhel70-perf-replset"
  #   depends_on: *_compile_amazon_linux2_arm64
  #   tasks:
  #     - *schedule_patch_auto_tasks_task
  #     - *schedule_variant_auto_tasks_task
  #     - name: industry_benchmarks
  #       cron: *high-value-workload-cron
  #     - name: industry_benchmarks_w1
  #     - name: ycsb_60GB
  #     - name: ycsb.load
  #     - name: ycsb_60GB.long
  #       cron: *high-value-workload-cron
  #     - name: industry_benchmarks_secondary_reads
  #     - name: crud_workloads_majority
  #     - name: crud_workloads_w1
  #     - name: misc_workloads
  #     - name: map_reduce_workloads
  #     - name: refine_shard_key_transaction_stress
  #     - name: smoke_test
  #     - name: secondary_performance # Uses a special 2 node mongodb setup
  #     - name: non_sharded_workloads
  #     - name: bestbuy_agg
  #       cron: *high-value-workload-cron
  #     - name: bestbuy_agg_merge_different_db
  #     - name: bestbuy_agg_merge_same_db
  #     - name: bestbuy_agg_merge_wordcount
  #     - name: bestbuy_query
  #     - name: change_streams_preimage_throughput
  #     - name: change_streams_latency
  #     - name: change_streams_preimage_latency
  #     - name: change_streams_listen_throughput
  #     - name: snapshot_reads
  #     - name: secondary_reads
  #     - name: tpcc
  #     - name: tpcc_majority
  #       cron: *high-value-workload-cron
  #     - name: tpch_1_normalized
  #     - name: tpch_1_denormalized
  #     # TODO: Enable in SERVER-66572.
  #     # - name: tpch_10_normalized
  #     # - name: tpch_10_denormalized
  #     - name: linkbench
  #     - name: linkbench2
  #       cron: *high-value-workload-cron
  #     - name: tsbs_load
  #       cron: *high-value-workload-cron
  #     - name: tsbs_query
  #       cron: *high-value-workload-cron
  #     - name: tsbs_query_finance
  #     - name: tsbs_query_manual_bucketing
  #     - name: tsbs_query_fixed_bucketing
  #     - name: tsbs-query-genny
  #     - name: tsbs-query-optimizations
  #     - name: tsbs-expression-query
  #     - name: big_update_10k
  #     - name: mixed_workloads_genny_rate_limited_high_value
  #       cron: *high-value-workload-cron
  #     - name: load_test_high_value
  #       cron: *high-value-workload-cron
  #     - name: majority_reads10_k_threads_high_value
  #       cron: *high-value-workload-cron
  #     - name: large_indexed_ins_high_value
  #       cron: *high-value-workload-cron
  #     - name: expressive_queries_high_value
  #       cron: *high-value-workload-cron
  #     - name: time_series_sort_high_value
  #       cron: *high-value-workload-cron

  # - name: linux-3-node-replSet-intel.2022-11
  #   display_name: Linux 3-Node ReplSet Intel 2022-11
  #   cron: *linux-3-node-cron
  #   modules: *modules
  #   expansions:
  #     mongodb_setup_release: 2022-11
  #     mongodb_setup: replica
  #     infrastructure_provisioning_release: 2022-11
  #     infrastructure_provisioning: replica-intel.2022-11
  #     workload_setup: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     authentication: enabled
  #     storageEngine: wiredTiger
  #   run_on:
  #     - "rhel70-perf-replset"
  #   depends_on: *_compile_amazon2
  #   tasks: &3node-intel-tasks
  #     - *schedule_patch_auto_tasks_task
  #     - *schedule_variant_auto_tasks_task
  #     - name: industry_benchmarks
  #       cron: *high-value-workload-cron
  #     - name: ycsb_60GB
  #     - name: ycsb_60GB.long
  #       cron: *high-value-workload-cron
  #     - name: crud_workloads_majority
  #     - name: smoke_test
  #     - name: bestbuy_agg
  #       cron: *high-value-workload-cron
  #     - name: bestbuy_agg_merge_different_db
  #     - name: bestbuy_agg_merge_same_db
  #     - name: bestbuy_agg_merge_wordcount
  #     - name: bestbuy_query
  #     - name: tpcc_majority
  #       cron: *high-value-workload-cron
  #     - name: linkbench
  #     - name: linkbench2
  #       cron: *high-value-workload-cron
  #     - name: tsbs_query
  #       cron: *high-value-workload-cron
  #     - name: mixed_workloads_genny_rate_limited_high_value
  #       cron: *high-value-workload-cron
  #     - name: load_test_high_value
  #       cron: *high-value-workload-cron
  #     - name: majority_reads10_k_threads_high_value
  #       cron: *high-value-workload-cron
  #     - name: large_indexed_ins_high_value
  #       cron: *high-value-workload-cron
  #     - name: expressive_queries_high_value
  #       cron: *high-value-workload-cron
  #     - name: time_series_sort_high_value
  #       cron: *high-value-workload-cron
  #     - name: tsbs-expression-query

  # - &3node-query-stats-rate-limit
  #   name: linux-3-node-replSet-intel-limited-1-query-stats.2022-11
  #   display_name: Linux 3-Node ReplSet Intel 2022-11 (Rate Limited with 1, QueryStats)
  #   cron: *high-value-workload-cron
  #   modules: *modules
  #   expansions: &3node-query-stats-rate-limit-expansions
  #     mongodb_setup_release: 2022-11
  #     # All of the Rate Limited 3node ReplSet QueryStats build variants currently use this
  #     # mongodb_setup file with config params passed in for the different rate limits.
  #     # If genny uses this setup file for autorun workloads, all of the build variants
  #     # using this setup file will run those workloads. If you want to create a special workload
  #     # configuration for a specific rate limit, a separate mongodb_setup YAML will need to be
  #     # created. This will be changed in EVG-20490.
  #     mongodb_setup: replica-query-stats-rate-limit
  #     infrastructure_provisioning_release: 2022-11
  #     infrastructure_provisioning: replica-intel.2022-11
  #     workload_setup: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     authentication: enabled
  #     storageEngine: wiredTiger
  #     config_params_json: '{"v": 0, "internalQueryStatsRateLimit": 1}'
  #   run_on:
  #     - "rhel70-perf-replset"
  #   depends_on: *_compile_amazon2
  #   tasks:
  #     - *schedule_patch_auto_tasks_task
  #     - *schedule_variant_auto_tasks_task
  #     - name: industry_benchmarks
  #     - name: ycsb_60GB.long
  #     - name: linkbench2
  #     - name: tpcc_majority
  #     - name: mixed_workloads_genny_rate_limited_high_value
  #     - name: majority_reads10_k_threads_high_value
  #     - name: bestbuy_agg
  #     - name: large_indexed_ins_high_value
  #     - name: expressive_queries_high_value
  #     - name: time_series_sort_high_value
  #     - name: tsbs_query

  # - <<: *3node-query-stats-rate-limit
  #   name: linux-3-node-replSet-intel-limited-10-query-stats.2022-11
  #   display_name: Linux 3-Node ReplSet Intel 2022-11 (Rate Limited with 10, QueryStats)
  #   expansions:
  #     <<: *3node-query-stats-rate-limit-expansions
  #     config_params_json: '{"v": 0, "internalQueryStatsRateLimit": 10}'

  # - <<: *3node-query-stats-rate-limit
  #   name: linux-3-node-replSet-intel-limited-1000-query-stats.2022-11
  #   display_name: Linux 3-Node ReplSet Intel 2022-11 (Rate Limited with 1000, QueryStats)
  #   expansions:
  #     <<: *3node-query-stats-rate-limit-expansions
  #     config_params_json: '{"v": 0, "internalQueryStatsRateLimit": 1000}'

  # - <<: *3node-query-stats-rate-limit
  #   name: linux-3-node-replSet-intel-limited-10000-query-stats.2022-11
  #   display_name: Linux 3-Node ReplSet Intel 2022-11 (Rate Limited with 10000, QueryStats)
  #   expansions:
  #     <<: *3node-query-stats-rate-limit-expansions
  #     config_params_json: '{"v": 0, "internalQueryStatsRateLimit": 10000}'

  # - name: linux-3-node-replSet-last-continuous-fcv.2022-11
  #   display_name: Linux 3-Node ReplSet (Last Continuous FCV) 2022-11
  #   cron: "0 0 * * 4" # 00:00 on Thursday
  #   modules: *modules
  #   expansions:
  #     mongodb_setup_release: 2022-11
  #     mongodb_setup: replica-last-continuous-fcv
  #     infrastructure_provisioning_release: 2022-11
  #     infrastructure_provisioning: replica
  #     workload_setup: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     authentication: enabled
  #     storageEngine: wiredTiger
  #     compile_variant: "-arm64"
  #   run_on:
  #     - "rhel70-perf-replset"
  #   depends_on: *_compile_amazon_linux2_arm64
  #   tasks:
  #     - *schedule_patch_auto_tasks_task
  #     - *schedule_variant_auto_tasks_task
  #     - name: industry_benchmarks
  #     - name: ycsb_60GB
  #     - name: ycsb_60GB.long
  #     - name: industry_benchmarks_secondary_reads
  #     - name: industry_benchmarks_w1
  #     - name: crud_workloads_majority
  #     - name: crud_workloads_w1
  #     - name: misc_workloads
  #     - name: map_reduce_workloads
  #     - name: refine_shard_key_transaction_stress
  #     - name: smoke_test
  #     - name: secondary_performance # Uses a special 2 node mongodb setup
  #     - name: non_sharded_workloads
  #     - name: bestbuy_agg
  #     - name: bestbuy_agg_merge_different_db
  #     - name: bestbuy_agg_merge_same_db
  #     - name: bestbuy_agg_merge_wordcount
  #     - name: bestbuy_query
  #     - name: change_streams_latency
  #     - name: change_streams_listen_throughput
  #     - name: snapshot_reads
  #     - name: secondary_reads
  #     - name: tpcc
  #     - name: tpcc_majority
  #     - name: tpch_1_normalized
  #     - name: tpch_1_denormalized
  #     # TODO: Enable in SERVER-66572.
  #     # - name: tpch_10_normalized
  #     # - name: tpch_10_denormalized
  #     - name: linkbench
  #     - name: linkbench2
  #     - name: tsbs_load
  #     - name: tsbs_query
  #     - name: tsbs_query_finance
  #     - name: tsbs_query_manual_bucketing
  #     - name: tsbs_query_fixed_bucketing
  #     - name: tsbs-query-genny
  #     - name: tsbs-query-optimizations

  # - name: linux-3-node-replSet-last-lts-fcv.2022-11
  #   display_name: Linux 3-Node ReplSet (Last LTS FCV) 2022-11
  #   cron: "0 0 * * 4" # 00:00 on Thursday
  #   modules: *modules
  #   expansions:
  #     mongodb_setup_release: 2022-11
  #     mongodb_setup: replica-last-lts-fcv
  #     infrastructure_provisioning_release: 2022-11
  #     infrastructure_provisioning: replica
  #     workload_setup: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     authentication: enabled
  #     storageEngine: wiredTiger
  #     compile_variant: "-arm64"
  #   run_on:
  #     - "rhel70-perf-replset"
  #   depends_on: *_compile_amazon_linux2_arm64
  #   tasks:
  #     - *schedule_patch_auto_tasks_task
  #     - *schedule_variant_auto_tasks_task
  #     - name: industry_benchmarks
  #     - name: ycsb_60GB
  #     - name: ycsb_60GB.long
  #     - name: industry_benchmarks_secondary_reads
  #     - name: industry_benchmarks_w1
  #     - name: crud_workloads_majority
  #     - name: crud_workloads_w1
  #     - name: misc_workloads
  #     - name: map_reduce_workloads
  #     - name: refine_shard_key_transaction_stress
  #     - name: smoke_test
  #     - name: secondary_performance # Uses a special 2 node mongodb setup
  #     - name: non_sharded_workloads
  #     - name: bestbuy_agg
  #     - name: bestbuy_agg_merge_different_db
  #     - name: bestbuy_agg_merge_same_db
  #     - name: bestbuy_agg_merge_wordcount
  #     - name: bestbuy_query
  #     - name: change_streams_latency
  #     - name: change_streams_listen_throughput
  #     - name: snapshot_reads
  #     - name: secondary_reads
  #     - name: tpcc
  #     - name: tpcc_majority
  #     - name: tpch_1_normalized
  #     - name: tpch_1_denormalized
  #     # TODO: Enable in SERVER-66572.
  #     # - name: tpch_10_normalized
  #     # - name: tpch_10_denormalized
  #     - name: linkbench
  #     - name: linkbench2
  #     - name: tsbs_load
  #     - name: tsbs_query
  #     - name: tsbs_query_finance
  #     - name: tsbs_query_manual_bucketing
  #     - name: tsbs_query_fixed_bucketing
  #     - name: tsbs-query-genny
  #     - name: tsbs-query-optimizations

  # - name: linux-3-node-replSet-all-feature-flags.2022-11
  #   display_name: Linux 3-Node ReplSet (all feature flags) 2022-11
  #   cron: "0 0 * * 4" # 00:00 on Thursday
  #   modules: *modules
  #   expansions:
  #     mongodb_setup_release: 2022-11
  #     mongodb_setup: replica-all-feature-flags
  #     infrastructure_provisioning_release: 2022-11
  #     infrastructure_provisioning: replica
  #     workload_setup: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     authentication: enabled
  #     storageEngine: wiredTiger
  #     compile_variant: "-arm64"
  #   run_on:
  #     - "rhel70-perf-replset"
  #   depends_on: *_compile_amazon_linux2_arm64
  #   tasks:
  #     - *schedule_patch_auto_tasks_task
  #     - *schedule_variant_auto_tasks_task
  #     - name: industry_benchmarks
  #     - name: ycsb_60GB
  #     - name: ycsb_60GB.long
  #     - name: industry_benchmarks_secondary_reads
  #     - name: industry_benchmarks_w1
  #     - name: crud_workloads_majority
  #     - name: crud_workloads_w1
  #     - name: misc_workloads
  #     - name: map_reduce_workloads
  #     - name: refine_shard_key_transaction_stress
  #     - name: smoke_test
  #     - name: secondary_performance # Uses a special 2 node mongodb setup
  #     - name: non_sharded_workloads
  #     - name: bestbuy_agg
  #     - name: bestbuy_agg_merge_different_db
  #     - name: bestbuy_agg_merge_same_db
  #     - name: bestbuy_agg_merge_wordcount
  #     - name: bestbuy_query
  #     - name: change_streams_latency
  #     - name: change_streams_listen_throughput
  #     - name: change_streams_preimage_throughput
  #     - name: change_streams_preimage_latency
  #     - name: snapshot_reads
  #     - name: secondary_reads
  #     - name: tpcc
  #     - name: tpcc_majority
  #     - name: tpch_1_normalized
  #     - name: tpch_1_denormalized
  #     # TODO: Enable in SERVER-66572.
  #     # - name: tpch_10_normalized
  #     # - name: tpch_10_denormalized
  #     - name: linkbench
  #     - name: linkbench2
  #     - name: tsbs_load
  #     - name: tsbs_query
  #     - name: tsbs_query_finance
  #     - name: tsbs_query_manual_bucketing
  #     - name: tsbs_query_fixed_bucketing
  #     - name: tsbs-query-genny
  #     - name: tsbs-query-optimizations
  #     - name: tsbs-expression-query
  #     - name: dbcheck

  # - name: linux-3-node-replSet-query-settings
  #   display_name: Linux 3-Node ReplSet 2022-11 (QuerySettings)
  #   cron: *linux-3-node-cron
  #   modules: *modules
  #   expansions:
  #     mongodb_setup_release: 2022-11
  #     mongodb_setup: replica-query-settings
  #     infrastructure_provisioning_release: 2022-11
  #     infrastructure_provisioning: replica
  #     workload_setup: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     authentication: enabled
  #     storageEngine: wiredTiger
  #     compile_variant: "-arm64"
  #   run_on:
  #     - "rhel70-perf-replset"
  #   depends_on: *_compile_amazon_linux2_arm64
  #   tasks:
  #     - *schedule_patch_auto_tasks_task
  #     - name: schedule_variant_auto_tasks
  #     - name: industry_benchmarks
  #       cron: *high-value-workload-cron
  #     - name: ycsb_60GB
  #     - name: ycsb_60GB.long
  #       cron: *high-value-workload-cron
  #     - name: tpcc_majority
  #       cron: *high-value-workload-cron
  #     - name: linkbench2
  #       cron: *high-value-workload-cron
  #     - name: mixed_workloads_genny_rate_limited_high_value
  #       cron: *high-value-workload-cron
  #     - name: majority_reads10_k_threads_high_value
  #       cron: *high-value-workload-cron
  #     - name: bestbuy_agg
  #       cron: *high-value-workload-cron
  #     - name: large_indexed_ins_high_value
  #       cron: *high-value-workload-cron
  #     - name: expressive_queries_high_value
  #       cron: *high-value-workload-cron
  #     - name: time_series_sort_high_value
  #       cron: *high-value-workload-cron
  #     - name: tsbs_query
  #       cron: *high-value-workload-cron
  #     - name: array_traversal_high_value
  #       cron: *high-value-workload-cron
  #     - name: filter_with_complex_logical_expression_high_value
  #     - name: tsbs_query
  #       cron: *high-value-workload-cron

  # - name: linux-3-node-replSet-notls.2022-11
  #   display_name: Linux 3-Node ReplSet (No TLS) 2022-11
  #   cron: "0 0 * * 4" # 00:00 on Thursday
  #   modules: *modules
  #   expansions:
  #     mongodb_setup: replica-tls-disabled
  #     mongodb_setup_release: 2022-11
  #     infrastructure_provisioning: replica
  #     infrastructure_provisioning_release: 2022-11
  #     workload_setup: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     authentication: enabled
  #     storageEngine: wiredTiger
  #     compile_variant: "-arm64"
  #   run_on:
  #     - "rhel70-perf-replset"
  #   depends_on: *_compile_amazon_linux2_arm64
  #   tasks:
  #     - *schedule_patch_auto_tasks_task
  #     - *schedule_variant_auto_tasks_task
  #     - name: crud_workloads_majority
  #     - name: industry_benchmarks

  # - name: linux-3-node-replSet-maintenance-events.2022-11
  #   display_name: Linux 3-Node ReplSet (Maintenance Events) 2022-11
  #   cron: "0 0 * * 0,4" # 00:00 on Sunday,Thursday
  #   modules: *modules
  #   expansions:
  #     mongodb_setup_release: 2022-11
  #     mongodb_setup: replica-maintenance-events
  #     infrastructure_provisioning_release: 2022-11
  #     infrastructure_provisioning: replica
  #     platform: linux
  #     workload_setup: 2022-11
  #     project_dir: *project_dir
  #     authentication: enabled
  #     storageEngine: wiredTiger
  #     compile_variant: "-arm64"
  #   run_on:
  #     - "rhel70-perf-replset"
  #   depends_on: *_compile_amazon_linux2_arm64
  #   tasks:
  #     - *schedule_patch_auto_tasks_task
  #     - *schedule_variant_auto_tasks_task
  #     - name: industry_benchmarks_stepdowns
  #     - name: industry_benchmarks_rolling_restarts
  #     - name: industry_benchmarks_non_retryable_writes_stepdowns
  #     - name: industry_benchmarks_non_retryable_writes_rolling_restarts
  #     - name: linkbench_stepdowns
  #     - name: linkbench_rolling_restarts
  #     - name: linkbench_non_retryable_writes_stepdowns
  #     - name: linkbench_non_retryable_writes_rolling_restarts
  #     - name: mixed_workloads_genny_stepdowns
  #     - name: mixed_workloads_genny_rolling_restarts

  # # On PERF-730 we changed the initial sync tests to use two nodes instead of three. To avoid
  # # losing history, the name remains unchanged, but the display_name reflects the change to 2-Node.
  # - name: linux-3-node-replSet-initialsync.2022-11
  #   display_name: Linux 2-Node ReplSet Initial Sync 2022-11
  #   cron: "0 0 * * 4" # 00:00 on Thursday
  #   modules: *modules
  #   expansions:
  #     mongodb_setup_release: 2022-11
  #     mongodb_setup: replica-2node
  #     infrastructure_provisioning_release: 2022-11
  #     infrastructure_provisioning: replica-2node
  #     workload_setup: 2022-11
  #     platform: linux
  #     authentication: disabled
  #     storageEngine: wiredTiger
  #     compile_variant: "-arm64"
  #     project_dir: *project_dir
  #   depends_on: *_compile_amazon_linux2_arm64
  #   run_on:
  #     - "rhel70-perf-replset"
  #   tasks:
  #     - *schedule_patch_auto_tasks_task
  #     - *schedule_variant_auto_tasks_task
  #     - name: initialsync-large
  #     - name: initialsync-large-fcbis

  # - name: linux-replSet-initialsync-logkeeper.2022-11
  #   display_name: Linux ReplSet Initial Sync LogKeeper 2022-11
  #   cron: "0 0 * * 4" # 00:00 on Thursday
  #   modules: *modules
  #   expansions:
  #     mongodb_setup_release: 2022-11
  #     mongodb_setup: initialsync-logkeeper
  #     infrastructure_provisioning_release: 2022-11
  #     infrastructure_provisioning: initialsync-logkeeper
  #     workload_setup: 2022-11
  #     # EBS logkeeper snapshot with FCV set to 7.3
  #     snapshotId: snap-0651d6a7d0adfe68b
  #     platform: linux
  #     authentication: disabled
  #     storageEngine: wiredTiger
  #     compile_variant: "-arm64"
  #     project_dir: *project_dir
  #   run_on:
  #     - "rhel70-perf-initialsync-logkeeper"
  #   depends_on: *_compile_amazon_linux2_arm64
  #   tasks:
  #     - *schedule_patch_auto_tasks_task
  #     - *schedule_variant_auto_tasks_task
  #     - name: initialsync-logkeeper
  #     - name: initialsync-logkeeper-fcbis

  # # Uncomment this to run logkeeper FCV updates automatically. This is only intended to be run in
  # # patch builds.
  # # - name: linux-replSet-initialsync-logkeeper-snapshot-update
  # #   display_name: Linux ReplSet Initial Sync LogKeeper Snapshot Update
  # #   cron: "0 0 * * 4"  # 00:00 on Thursday
  # #   modules: *modules
  # #   expansions:
  # #     mongodb_setup_release: 2022-11
  # #     mongodb_setup: initialsync-logkeeper-snapshot-update
  # #     infrastructure_provisioning_release: 2022-11
  # #     infrastructure_provisioning: initialsync-logkeeper-snapshot-update
  # #     # Update this to latest snapshot after each LTS release.
  # #     snapshotId: snap-0651d6a7d0adfe68b
  # #     platform: linux
  # #     authentication: disabled
  # #     storageEngine: wiredTiger
  # #     project_dir: *project_dir
  # #     compile_variant: "-arm64"
  # #   run_on:
  # #     - "rhel70-perf-initialsync-logkeeper"
  # #   depends_on: *_compile_amazon_linux2_arm64
  # #   tasks:
  # #     - *schedule_patch_auto_tasks_task
  # #     - *schedule_variant_auto_tasks_task
  # #     - name: initialsync-logkeeper-snapshot-update

  # - name: linux-replSet-audit.2022-11
  #   display_name: Linux 3-Node ReplSet Audit 2022-11
  #   cron: "0 0 * * 4" # 00:00 on Thursday
  #   modules: *modules
  #   expansions:
  #     mongodb_setup_release: 2022-11
  #     mongodb_setup: replica-audit
  #     infrastructure_provisioning_release: 2022-11
  #     infrastructure_provisioning: replica
  #     workload_setup: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     authentication: enabled
  #     storageEngine: wiredTiger
  #     compile_variant: "-arm64"
  #   run_on:
  #     - "rhel70-perf-replset"
  #   depends_on: *_compile_amazon_linux2_arm64
  #   tasks:
  #     - *schedule_patch_auto_tasks_task
  #     - *schedule_variant_auto_tasks_task
  #     - name: industry_benchmarks

  # - name: linux-replSet-auth-delay.2022-11
  #   display_name: Linux 3-Node ReplSet (Auth Delay) 2022-11
  #   cron: "0 0 * * 4" # 00:00 on Thursday
  #   modules: *modules
  #   expansions:
  #     mongodb_setup_release: 2022-11
  #     mongodb_setup: replica-auth-cluster-delay
  #     infrastructure_provisioning_release: 2022-11
  #     infrastructure_provisioning: replica
  #     workload_setup: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     authentication: enabled
  #     storageEngine: wiredTiger
  #     compile_variant: "-arm64"
  #   run_on:
  #     - "rhel70-perf-replset"
  #   depends_on: *_compile_amazon_linux2_arm64
  #   tasks:
  #     - *schedule_patch_auto_tasks_task
  #     - *schedule_variant_auto_tasks_task

  # - name: linux-3-node-replSet-250mbwtcache.2023-05
  #   display_name: Linux 3-Node ReplSet 250 MB WiredTiger Cache 2023-05
  #   cron: *linux-3-node-cron
  #   modules: *modules
  #   expansions:
  #     mongodb_setup_release: 2022-11
  #     mongodb_setup: replica-250mbwtcache.2023-05
  #     infrastructure_provisioning_release: 2022-11
  #     infrastructure_provisioning: replica
  #     workload_setup: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     authentication: enabled
  #     storageEngine: wiredTiger
  #     compile_variant: "-arm64"
  #   run_on:
  #     - "rhel70-perf-replset"
  #   depends_on: *_compile_amazon_linux2_arm64
  #   tasks:
  #     - *schedule_patch_auto_tasks_task
  #     - *schedule_variant_auto_tasks_task

  # - &linux-microbenchmarks-standalone-arm
  #   name: linux-microbenchmarks-standalone-arm.2023-01
  #   display_name: MicroBenchmarks Arm Standalone inMemory.2023-01
  #   cron: &linux-microbench-cron "0 0 * * 0,2,3,4,5"  # Run it every day except Saturday and Monday.
  #   modules: *modules
  #   expansions: &standalone-arm-expansions
  #     mongodb_setup_release: 2022-11
  #     mongodb_setup: mongo-perf-standalone.2023-02
  #     infrastructure_provisioning_release: 2022-11
  #     infrastructure_provisioning: workload_client_mongod_combined.2023-01
  #     workload_setup: 2022-11
  #     use_scons_cache: true
  #     platform: linux
  #     canaries: none
  #     storageEngine: inMemory
  #     project_dir: *project_dir
  #     compile_variant: "-arm64"
  #   run_on:
  #     - "rhel70-perf-microbenchmarks"
  #   depends_on: *_compile_amazon_linux2_arm64
  #   tasks:
  #   - name: big_collection
  #   - name: genny_scale_InsertRemove
  #   - name: genny_execution_UserAcquisition
  #   - name: aggregation_read_commands
  #   - name: aggregation_read_commands_large_dataset
  #   - name: agg-query-comparison_read_commands
  #     cron: *high-value-workload-cron
  #   - name: query_read_commands
  #   - name: query_read_commands_large_dataset
  #   - name: views-aggregation
  #   - name: views-query
  #   - name: where_read_commands
  #   - name: update_read_commands
  #   - name: insert_read_commands
  #   - name: wildcard-index-read_read_commands
  #   - name: wildcard-index-write_read_commands
  #   - name: geo_read_commands
  #   - name: misc_read_commands
  #   - name: misc_custom_filter_default_read_commands
  #   - name: misc_custom_filter_slow_or_sample_read_commands
  #   - name: misc_custom_filter_complex_read_commands
  #   - name: misc_custom_filter_whole_doc_read_commands
  #   - name: misc_slowms_everything_read_commands
  #   - name: singleThreaded_read_commands
  #   - name: pipeline-updates
  #   - name: javascript
  #   - name: compound_wildcard_index_write_commands
  #   - name: compound_wildcard_index_read_commands
  #   - name: tie-breaking-heuristics

  # - &linux-microbenchmarks-repl-arm
  #   name: linux-microbenchmarks-repl-arm.2023-01
  #   display_name: MicroBenchmarks Arm 1-Node ReplSet inMemory.2023-01
  #   cron: "0 0 * * 0,2,3,4,5" # Run it every day except Saturday and Monday.
  #   modules: *modules
  #   expansions: &repl-arm-expansions
  #     mongodb_setup_release: 2022-11
  #     mongodb_setup: mongo-perf-replica.2023-02
  #     infrastructure_provisioning_release: 2022-11
  #     infrastructure_provisioning: workload_client_mongod_combined.2023-01
  #     workload_setup: 2022-11
  #     use_scons_cache: true
  #     platform: linux
  #     canaries: none
  #     storageEngine: inMemory
  #     project_dir: *project_dir
  #     compile_variant: "-arm64"
  #   run_on:
  #     - "rhel70-perf-microbenchmarks"
  #   depends_on: *_compile_amazon_linux2_arm64
  #   tasks:
  #     - name: genny_scale_InsertRemove
  #     - name: update_read_commands
  #     - name: insert_read_commands
  #     - name: misc_read_commands
  #     - name: singleThreaded_read_commands
  #     - name: wildcard-index-write_read_commands
  #     - name: pipeline-updates

  # - <<: *linux-microbenchmarks-standalone-arm
  #   name: linux-microbenchmarks-standalone-all-feature-flags-arm.2023-01
  #   display_name: MicroBenchmarks Arm Standalone inMemory (all feature flags).2023-01
  #   cron: "0 0 * * 0,2,3,4,5" # Run it every day except Saturday and Monday.
  #   expansions:
  #     <<: *standalone-arm-expansions
  #     mongodb_setup: mongo-perf-standalone-all-feature-flags.2023-02
  #   # Same as standalone tasks, but with tasks required all feature flags added
  #   tasks: &mirobenchmarks-all-feature-flags-tasks
  #   - name: big_collection
  #   - name: genny_scale_InsertRemove
  #   - name: genny_execution_UserAcquisition
  #   - name: aggregation_read_commands
  #   - name: aggregation_read_commands_large_dataset
  #   - name: agg-query-comparison_read_commands
  #     cron: "0 0 * * 0,2,3,4,5" # *linux-microbenchmarks-standalone-arm contains high-value cron for this task. resetting correct cron
  #   - name: query_read_commands
  #   - name: query_read_commands_large_dataset
  #   - name: views-aggregation
  #   - name: views-query
  #   - name: where_read_commands
  #   - name: update_read_commands
  #   - name: insert_read_commands
  #   - name: wildcard-index-read_read_commands
  #   - name: wildcard-index-write_read_commands
  #   - name: geo_read_commands
  #   - name: misc_read_commands
  #   - name: misc_custom_filter_default_read_commands
  #   - name: misc_custom_filter_slow_or_sample_read_commands
  #   - name: misc_custom_filter_complex_read_commands
  #   - name: misc_custom_filter_whole_doc_read_commands
  #   - name: misc_slowms_everything_read_commands
  #   - name: singleThreaded_read_commands
  #   - name: pipeline-updates
  #   - name: javascript
  #   - name: compound_wildcard_index_write_commands
  #   - name: compound_wildcard_index_read_commands
  #   - name: tie-breaking-heuristics

  # - <<: *linux-microbenchmarks-standalone-arm
  #   name: linux-microbenchmarks-standalone-classic-query-engine-arm.2023-01
  #   display_name: MicroBenchmarks Arm Standalone inMemory (Classic Query Engine).2023-01
  #   cron: *cron_query_perf_schedule
  #   expansions:
  #     <<: *standalone-arm-expansions
  #     mongodb_setup: mongo-perf-standalone-classic-query-engine.2023-02
  #   tasks:
  #     - name: big_collection
  #     - name: genny_scale_InsertRemove
  #     - name: genny_execution_UserAcquisition
  #     - name: aggregation_read_commands
  #     - name: aggregation_read_commands_large_dataset
  #     - name: agg-query-comparison_read_commands
  #       cron: *cron_query_perf_schedule # *linux-microbenchmarks-standalone-arm contains high-value cron for this task. resetting to correct cron
  #     - name: query_read_commands
  #     - name: query_read_commands_large_dataset
  #     - name: views-aggregation
  #     - name: views-query
  #     - name: where_read_commands
  #     - name: update_read_commands
  #     - name: insert_read_commands
  #     - name: wildcard-index-read_read_commands
  #     - name: wildcard-index-write_read_commands
  #     - name: geo_read_commands
  #     - name: misc_read_commands
  #     - name: misc_custom_filter_default_read_commands
  #     - name: misc_custom_filter_slow_or_sample_read_commands
  #     - name: misc_custom_filter_complex_read_commands
  #     - name: misc_custom_filter_whole_doc_read_commands
  #     - name: misc_slowms_everything_read_commands
  #     - name: singleThreaded_read_commands
  #     - name: pipeline-updates
  #     - name: javascript
  #     - name: compound_wildcard_index_write_commands
  #     - name: compound_wildcard_index_read_commands
  #     - name: tie-breaking-heuristics
  #   # yaml does not nicely merge arrays, so DO NOT ADD INDIVIDUAL TASKS HERE.
  #   # Add tasks to the anchor that this variant references
  #   # If diverging from that list, add the entire list of desired tasks here

  # - <<: *linux-microbenchmarks-standalone-arm
  #   name: linux-microbenchmarks-standalone-sbe-arm.2023-01
  #   display_name: MicroBenchmarks Arm Standalone inMemory (SBE).2023-01
  #   cron: *cron_query_perf_schedule
  #   expansions:
  #     <<: *standalone-arm-expansions
  #     mongodb_setup: mongo-perf-standalone-sbe.2023-02
  #   tasks:
  #     - name: big_collection
  #     - name: genny_scale_InsertRemove
  #     - name: genny_execution_UserAcquisition
  #     - name: aggregation_read_commands
  #     - name: aggregation_read_commands_large_dataset
  #     - name: agg-query-comparison_read_commands
  #       cron: *cron_query_perf_schedule # *linux-microbenchmarks-standalone-arm contains high-value cron for this task. resetting to correct cron
  #     - name: query_read_commands
  #     - name: query_read_commands_large_dataset
  #     - name: views-aggregation
  #     - name: views-query
  #     - name: where_read_commands
  #     - name: update_read_commands
  #     - name: insert_read_commands
  #     - name: wildcard-index-read_read_commands
  #     - name: wildcard-index-write_read_commands
  #     - name: geo_read_commands
  #     - name: misc_read_commands
  #     - name: misc_custom_filter_default_read_commands
  #     - name: misc_custom_filter_slow_or_sample_read_commands
  #     - name: misc_custom_filter_complex_read_commands
  #     - name: misc_custom_filter_whole_doc_read_commands
  #     - name: misc_slowms_everything_read_commands
  #     - name: singleThreaded_read_commands
  #     - name: pipeline-updates
  #     - name: javascript
  #     - name: compound_wildcard_index_write_commands
  #     - name: compound_wildcard_index_read_commands
  #     - name: tie-breaking-heuristics
  #   # yaml does not nicely merge arrays, so DO NOT ADD INDIVIDUAL TASKS HERE.
  #   # Add tasks to the anchor that this variant references
  #   # If diverging from that list, add the entire list of desired tasks here

  # - <<: *linux-microbenchmarks-standalone-arm
  #   name: linux-microbenchmarks-standalone-sampling-bonsai-arm.2023-01
  #   display_name: MicroBenchmarks Arm Standalone inMemory (Bonsai with Sampling CE).2023-01
  #   cron: *cron_query_perf_schedule
  #   expansions:
  #     <<: *standalone-arm-expansions
  #     mongodb_setup:
  #       mongo-perf-standalone-sampling-bonsai.2023-02
  #       # Try to use the Bonsai optimizer with sampling CE mode, or fall back to the classic planner.
  #   tasks: &microbenchmarks-bonsai-tasks
  #     - name: agg-query-comparison_read_commands
  #     - name: aggregation_read_commands
  #     - name: big_collection
  #     - name: query_read_commands
  #     - name: query_read_commands_large_dataset

  # - <<: *linux-microbenchmarks-standalone-arm
  #   name: linux-microbenchmarks-standalone-heuristic-bonsai-arm.2023-01
  #   display_name: MicroBenchmarks Arm Standalone inMemory (Bonsai with Heuristic CE).2023-01
  #   cron: "0 0 * * 0,2,3,4,5" # Run it every day except Saturday and Monday.
  #   expansions:
  #     <<: *standalone-arm-expansions
  #     mongodb_setup:
  #       mongo-perf-standalone-heuristic-bonsai.2023-02
  #       # Try to use the Bonsai optimizer with heuristic CE mode, or fall back to the classic planner.
  #   tasks: *microbenchmarks-bonsai-tasks

  # - <<: *linux-microbenchmarks-repl-arm
  #   name: linux-microbenchmarks-repl-all-feature-flags-arm.2023-01
  #   display_name: MicroBenchmarks Arm 1-Node ReplSet inMemory (all feature flags).2023-01
  #   cron: "0 0 * * 0,2,3,4,5" # Run it every day except Saturday and Monday.
  #   expansions:
  #     <<: *repl-arm-expansions
  #     mongodb_setup: mongo-perf-replica-all-feature-flags.2023-02
  #   # yaml does not nicely merge arrays, so DO NOT ADD INDIVIDUAL TASKS HERE.
  #   # Add tasks to the anchor that this variant references
  #   # If diverging from that list, add the entire list of desired tasks here

  # - &linux-microbenchmarks-standalone-intel
  #   <<: *linux-microbenchmarks-standalone-arm
  #   name: linux-microbenchmarks-standalone-intel.2023-01
  #   display_name: MicroBenchmarks Intel Standalone inMemory.2023-01
  #   cron: "0 0 * * 0,2,3,4,5" # Run it every day except Saturday and Monday.
  #   expansions: &standalone-intel-expansions
  #     <<: *standalone-arm-expansions
  #     infrastructure_provisioning: workload_client_mongod_combined_intel.2023-01
  #     compile_variant: ""
  #   run_on:
  #     - "rhel70-perf-microbenchmarks"
  #   depends_on: *_compile_amazon2
  #   tasks:
  #     - name: big_collection
  #     - name: genny_scale_InsertRemove
  #     - name: genny_execution_UserAcquisition
  #     - name: aggregation_read_commands
  #     - name: aggregation_read_commands_large_dataset
  #     - name: agg-query-comparison_read_commands
  #       cron: "0 0 * * 0,2,3,4,5" # *linux-microbenchmarks-standalone-arm contains high-value cron for this task. resetting to correct cron
  #     - name: query_read_commands
  #     - name: query_read_commands_large_dataset
  #     - name: views-aggregation
  #     - name: views-query
  #     - name: where_read_commands
  #     - name: update_read_commands
  #     - name: insert_read_commands
  #     - name: wildcard-index-read_read_commands
  #     - name: wildcard-index-write_read_commands
  #     - name: geo_read_commands
  #     - name: misc_read_commands
  #     - name: misc_custom_filter_default_read_commands
  #     - name: misc_custom_filter_slow_or_sample_read_commands
  #     - name: misc_custom_filter_complex_read_commands
  #     - name: misc_custom_filter_whole_doc_read_commands
  #     - name: misc_slowms_everything_read_commands
  #     - name: singleThreaded_read_commands
  #     - name: pipeline-updates
  #     - name: javascript
  #     - name: compound_wildcard_index_write_commands
  #     - name: compound_wildcard_index_read_commands
  #     - name: tie-breaking-heuristics
  #   # yaml does not nicely merge arrays, so DO NOT ADD INDIVIDUAL TASKS HERE.
  #   # Add tasks to the anchor that this variant references
  #   # If diverging from that list, add the entire list of desired tasks here

  # - &linux-microbenchmarks-repl-intel
  #   <<: *linux-microbenchmarks-repl-arm
  #   name: linux-microbenchmarks-repl-intel.2023-01
  #   display_name: MicroBenchmarks Intel 1-Node ReplSet inMemory.2023-01
  #   cron: "0 0 * * 0,2,3,4,5" # Run it every day except Saturday and Monday.
  #   expansions: &repl-intel-expansions
  #     <<: *repl-arm-expansions
  #     infrastructure_provisioning: workload_client_mongod_combined_intel.2023-01
  #     compile_variant: ""
  #   run_on:
  #     - "rhel70-perf-microbenchmarks"
  #   depends_on: *_compile_amazon2
  #   # yaml does not nicely merge arrays, so DO NOT ADD INDIVIDUAL TASKS HERE.
  #   # Add tasks to the anchor that this variant references
  #   # If diverging from that list, add the entire list of desired tasks here

  # - <<: *linux-microbenchmarks-standalone-intel
  #   name: linux-microbenchmarks-standalone-all-feature-flags.2023-01
  #   display_name: MicroBenchmarks Intel Standalone inMemory (all feature flags).2023-01
  #   cron: "0 0 * * 0,2,3,4,5" # Run it every day except Saturday and Monday.
  #   expansions:
  #     <<: *standalone-intel-expansions
  #     mongodb_setup: mongo-perf-standalone-all-feature-flags.2023-02
  #   tasks: *mirobenchmarks-all-feature-flags-tasks
  #   # yaml does not nicely merge arrays, so DO NOT ADD INDIVIDUAL TASKS HERE.
  #   # Add tasks to the anchor that this variant references
  #   # If diverging from that list, add the entire list of desired tasks here

  # - <<: *linux-microbenchmarks-standalone-intel
  #   name: linux-microbenchmarks-standalone-classic-query-engine.2023-01
  #   display_name: MicroBenchmarks Intel Standalone inMemory (Classic Query Engine).2023-01
  #   cron: *cron_query_perf_schedule
  #   expansions:
  #     <<: *standalone-intel-expansions
  #     mongodb_setup: mongo-perf-standalone-classic-query-engine.2023-02
  #   tasks:
  #     - name: big_collection
  #     - name: genny_scale_InsertRemove
  #     - name: genny_execution_UserAcquisition
  #     - name: aggregation_read_commands
  #     - name: aggregation_read_commands_large_dataset
  #     - name: agg-query-comparison_read_commands
  #       cron: *cron_query_perf_schedule # *linux-microbenchmarks-standalone-arm contains high-value cron for this task. Resetting to correct cron
  #     - name: query_read_commands
  #     - name: query_read_commands_large_dataset
  #     - name: views-aggregation
  #     - name: views-query
  #     - name: where_read_commands
  #     - name: update_read_commands
  #     - name: insert_read_commands
  #     - name: wildcard-index-read_read_commands
  #     - name: wildcard-index-write_read_commands
  #     - name: geo_read_commands
  #     - name: misc_read_commands
  #     - name: misc_custom_filter_default_read_commands
  #     - name: misc_custom_filter_slow_or_sample_read_commands
  #     - name: misc_custom_filter_complex_read_commands
  #     - name: misc_custom_filter_whole_doc_read_commands
  #     - name: misc_slowms_everything_read_commands
  #     - name: singleThreaded_read_commands
  #     - name: pipeline-updates
  #     - name: javascript
  #     - name: compound_wildcard_index_write_commands
  #     - name: compound_wildcard_index_read_commands
  #     - name: tie-breaking-heuristics
  #   # yaml does not nicely merge arrays, so DO NOT ADD INDIVIDUAL TASKS HERE.
  #   # Add tasks to the anchor that this variant references
  #   # If diverging from that list, add the entire list of desired tasks here

  # - <<: *linux-microbenchmarks-standalone-intel
  #   name: linux-microbenchmarks-standalone-sbe.2023-01
  #   display_name: MicroBenchmarks Intel Standalone inMemory (SBE).2023-01
  #   cron: *cron_query_perf_schedule
  #   expansions:
  #     <<: *standalone-intel-expansions
  #     mongodb_setup: mongo-perf-standalone-sbe.2023-02
  #   tasks:
  #     - name: big_collection
  #     - name: genny_scale_InsertRemove
  #     - name: genny_execution_UserAcquisition
  #     - name: aggregation_read_commands
  #     - name: aggregation_read_commands_large_dataset
  #     - name: agg-query-comparison_read_commands
  #       cron: *cron_query_perf_schedule # *linux-microbenchmarks-standalone-arm contains high-value cron for this task. Resetting to correct cron
  #     - name: query_read_commands
  #     - name: query_read_commands_large_dataset
  #     - name: views-aggregation
  #     - name: views-query
  #     - name: where_read_commands
  #     - name: update_read_commands
  #     - name: insert_read_commands
  #     - name: wildcard-index-read_read_commands
  #     - name: wildcard-index-write_read_commands
  #     - name: geo_read_commands
  #     - name: misc_read_commands
  #     - name: misc_custom_filter_default_read_commands
  #     - name: misc_custom_filter_slow_or_sample_read_commands
  #     - name: misc_custom_filter_complex_read_commands
  #     - name: misc_custom_filter_whole_doc_read_commands
  #     - name: misc_slowms_everything_read_commands
  #     - name: singleThreaded_read_commands
  #     - name: pipeline-updates
  #     - name: javascript
  #     - name: compound_wildcard_index_write_commands
  #     - name: compound_wildcard_index_read_commands
  #     - name: tie-breaking-heuristics
  #   # yaml does not nicely merge arrays, so DO NOT ADD INDIVIDUAL TASKS HERE.
  #   # Add tasks to the anchor that this variant references
  #   # If diverging from that list, add the entire list of desired tasks here

  # - <<: *linux-microbenchmarks-standalone-intel
  #   name: linux-microbenchmarks-standalone-sampling-bonsai.2023-01
  #   display_name: MicroBenchmarks Intel Standalone inMemory (Bonsai with Sampling CE).2023-01
  #   cron: *cron_query_perf_schedule
  #   expansions:
  #     <<: *standalone-intel-expansions
  #     mongodb_setup: mongo-perf-standalone-sampling-bonsai.2023-02
  #     # Try to use the Bonsai optimizer with sampling CE mode, or fall back to the classic planner.
  #   tasks: *microbenchmarks-bonsai-tasks

  # - <<: *linux-microbenchmarks-standalone-intel
  #   name: linux-microbenchmarks-standalone-heuristic-bonsai.2023-01
  #   display_name: MicroBenchmarks Intel Standalone inMemory (Bonsai with Heuristic CE).2023-01
  #   cron: *cron_query_perf_schedule
  #   expansions:
  #     <<: *standalone-intel-expansions
  #     mongodb_setup: mongo-perf-standalone-heuristic-bonsai.2023-02
  #     # Try to use the Bonsai optimizer with heuristic CE mode, or fall back to the classic planner.
  #   tasks: *microbenchmarks-bonsai-tasks

  # - <<: *linux-microbenchmarks-repl-intel
  #   name: linux-microbenchmarks-repl-all-feature-flags.2023-01
  #   display_name: MicroBenchmarks Intel 1-Node ReplSet inMemory (all feature flags).2023-01
  #   cron: "0 0 * * 0,2,3,4,5" # Run it every day except Saturday and Monday.
  #   expansions:
  #     <<: *repl-intel-expansions
  #     mongodb_setup: mongo-perf-replica-all-feature-flags.2023-02
  #   # yaml does not nicely merge arrays, so DO NOT ADD INDIVIDUAL TASKS HERE.
  #   # Add tasks to the anchor that this variant references
  #   # If diverging from that list, add the entire list of desired tasks here

  # - name: linux-1-node-replSet-longRunning.2023-02
  #   display_name: Linux 1-Node ReplSet Long-Running 2023-02
  #   cron: "0 0 1 * *" # 00:00 on the first of each month
  #   modules: *modules
  #   expansions:
  #     mongodb_setup_release: 2022-11
  #     mongodb_setup: single-replica
  #     infrastructure_provisioning_release: 2022-11
  #     infrastructure_provisioning: M60-like-single-large-volume.2023-02
  #     workload_setup: 2022-11
  #     platform: linux
  #     project_dir: *project_dir
  #     authentication: enabled
  #     storageEngine: wiredTiger
  #     compile_variant: "-arm64"
  #   run_on:
  #     - "rhel70-perf-single"
  #   depends_on: *_compile_amazon_linux2_arm64
  #   tasks:
  #     - name: tsbs_query_high_cardinality

  # - name: linux-arm-3-shard-resharding.2023-08
  #   display_name: Linux 3-Shard Resharding
  #   cron: "0 0 * * 4" # 00:00 on Thursday
  #   modules: *modules
  #   expansions:
  #     mongodb_setup_release: 2022-11
  #     mongodb_setup: resharding-3shard.2023-08
  #     infrastructure_provisioning_release: 2022-11
  #     infrastructure_provisioning: resharding-3shard.2023-08
  #     workload_setup: 2022-11
  #     snapshotId: snap-0e7434150d05e0e47 # FCV 7.3
  #     platform: linux
  #     authentication: disabled
  #     storageEngine: wiredTiger
  #     compile_variant: "-arm64"
  #     project_dir: *project_dir
  #   run_on:
  #     - "rhel70-perf-shard"
  #   depends_on: *_compile_amazon_linux2_arm64
  #   tasks:
  #     - *schedule_patch_auto_tasks_task
  #     - *schedule_variant_auto_tasks_task
  #     - name: genny_resharding_withIndexes

  # Uncomment this to run resharding snapshot FCV updates automatically.
  # This is only intended to be run in patch builds.
  # - name: resharding-3shard-snapshot-update
  #   display_name: Resharding 3-Shard Snapshot Update
  #   cron: "0 0 * * 4"  # 00:00 on Thursday
  #   modules: *modules
  #   expansions:
  #     mongodb_setup_release: 2022-11
  #     mongodb_setup: resharding-3shard-snapshot-update.2023-10
  #     infrastructure_provisioning_release: 2022-11
  #     infrastructure_provisioning: resharding-3shard-snapshot-update.2023-10
  #     # Update this to latest snapshot after each LTS release.
  #     snapshotId: snap-0ef92078b2edfc612 # FCV 7.2
  #     platform: linux
  #     authentication: disabled
  #     storageEngine: wiredTiger
  #     project_dir: *project_dir
  #     compile_variant: "-arm64"
  #   run_on:
  #     - "rhel70-perf-shard"
  #   depends_on: *_compile_amazon_linux2_arm64
  #   tasks:
  #     - *schedule_patch_auto_tasks_task
  #     - *schedule_variant_auto_tasks_task
  #     - name: resharding-3shard-snapshot-update
