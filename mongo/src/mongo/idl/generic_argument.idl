# Copyright (C) 2020-present MongoDB, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the Server Side Public License, version 1,
# as published by MongoDB, Inc.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Server Side Public License for more details.
#
# You should have received a copy of the Server Side Public License
# along with this program. If not, see
# <http://www.mongodb.com/licensing/server-side-public-license>.
#
# As a special exception, the copyright holders give permission to link the
# code of portions of this program with the OpenSSL library under certain
# conditions as described in each individual source file and distribute
# linked combinations including the program with the OpenSSL library. You
# must comply with the Server Side Public License in all respects for
# all of the code used other than as permitted herein. If you modify file(s)
# with this exception, you may extend this exception to your version of the
# file(s), but you are not obligated to do so. If you do not wish to do so,
# delete this exception statement from your version. If you delete this
# exception statement from all source files in the program, then also delete
# it in the license file.
#
global:
    cpp_namespace: "mongo"
    cpp_includes:
        - "mongo/db/basic_types.h"
        - "mongo/s/shard_version.h"

imports:
    - "mongo/client/read_preference_setting.idl"
    - "mongo/db/basic_types.idl"
    - "mongo/db/repl/read_concern.idl"
    - "mongo/db/repl/replication_types.idl"
    - "mongo/db/session/logical_session_id.idl"
    - "mongo/db/vector_clock.idl"
    - "mongo/db/write_concern_options.idl"       
    - "mongo/rpc/metadata/impersonated_user_metadata.idl"
    - "mongo/s/sharding_types.idl"
    - "mongo/s/gossiped_routing_cache.idl"

# This file lists the generic arguments accepted by all commands.

structs:
    GenericArgsAPIV1:
        description: "Arguments accepted by all commands. These are guaranteed backwards-compatible for as long as the server supports API Version 1. Previously named generic_args_api_v1."
        strict: false
        is_generic_cmd_list: "arg" 
        # Note that the _types_ of these fields are not checked for API version compatability! 
        # Historically, these types were parsed and serialized directly from BSON by hand-written  
        # C++ code. The API comapatibility checker does not enforce stability of the types of these fields,
        # only of their names (i.e. that none are removed or have their name changed). 
        fields:
            apiVersion:
                type: string
                forward_to_shards: false
                optional: true
            apiStrict:
                type: bool
                forward_to_shards: false
                optional: true
            apiDeprecationErrors:
                type: bool
                forward_to_shards: false
                optional: true
            $db:
                type: IDLAnyType
                cpp_name: "dbName"
                forward_to_shards: false
                # The IDL compiler injects this directly into command requests, so we ignore it here.
                ignore: true
            maxTimeMS:
                type: safeInt64
                validator: { gte: 0 }
                forward_to_shards: true
                optional: true
            readConcern:
                type: ReadConcernIdl
                forward_to_shards: true
                optional: true
            writeConcern:
                type: WriteConcern
                forward_to_shards: true
                optional: true            
            lsid:
                type: LogicalSessionFromClient
                forward_to_shards: true
                optional: true
            clientOperationKey:
                type: uuid
                forward_to_shards: true
                optional: true                
            txnNumber:
                type: TxnNumber
                forward_to_shards: true
                optional: true            
            autocommit:
                type: bool
                forward_to_shards: true
                optional: true
            startTransaction:
                type: bool
                forward_to_shards: true
                optional: true
            stmtId:
                type: StmtId
                forward_to_shards: true
                optional: true
            comment:
                type: IDLAnyType
                forward_to_shards: true
                optional: true
            $readPreference:
                type: ReadPreferenceIdl
                cpp_name: "readPreference"
                forward_to_shards: false
                optional: true
            $clusterTime:
                type: ClusterTime
                cpp_name: "dollarClusterTime"
                forward_to_shards: false
                optional: true

    GenericArgsAPIV1Unstable:
        description: "Arguments accepted by all commands. These are not guaranteed backwards-compatible. Previously named generic_args_unstable_v1."
        strict: false
        is_generic_cmd_list: "arg"
        fields:
            $audit:
                type: ImpersonatedUserMetadata
                cpp_name: "dollarAudit"
                forward_to_shards: false
                optional: true
                stability: "internal"
            $client:
                type: object_owned
                cpp_name: "dollarClient"
                forward_to_shards: false
                optional: true
                stability: "internal"
            $configServerState:
                type: object_owned
                cpp_name: "dollarConfigServerState"
                forward_to_shards: false
                optional: true
                stability: "internal"
            allowImplicitCollectionCreation:
                type: bool
                forward_to_shards: false
                optional: true
                stability: "internal"
            $oplogQueryData:
                type: object_owned
                cpp_name: "dollarOplogQueryData"
                forward_to_shards: false
                optional: true
                stability: "internal"
            $queryOptions:
                type: object_owned
                cpp_name: unwrappedReadPref
                forward_to_shards: true
                optional: true
                stability: "internal"
            $replData:
                type: IDLAnyType
                cpp_name: "dollarReplData"
                forward_to_shards: false
                optional: true
                stability: "internal"
            databaseVersion:
                type: database_version
                forward_to_shards: false
                optional: true
                stability: "internal"
            help:
                type: bool
                forward_to_shards: false
                optional: true
                stability: "internal"
            shardVersion:
                type: shard_version
                forward_to_shards: false
                optional: true
                stability: "internal"
            tracking_info:
                type: object_owned
                forward_to_shards: false
                optional: true
                stability: "internal"
            coordinator:
                type: bool
                forward_to_shards: true
                optional: true
                stability: "internal"
            maxTimeMSOpOnly:
                type: safeInt64
                validator: { gte: 0 }
                forward_to_shards: false
                optional: true
                stability: "internal"
            usesDefaultMaxTimeMS:
                type: bool
                forward_to_shards: false
                optional: true
                stability: "internal"
            $configTime:
                type: timestamp
                cpp_name: "dollarConfigTime"
                forward_to_shards: false
                optional: true
                stability: "internal"
            $topologyTime:
                type: timestamp
                cpp_name: "dollarTopologyTime"
                forward_to_shards: false
                optional: true
                stability: "internal"
            txnRetryCounter:
                type: TxnRetryCounter
                forward_to_shards: true
                optional: true
                stability: "internal"
            mayBypassWriteBlocking:
                type: bool
                forward_to_shards: true
                optional: true
                stability: "internal"
            expectPrefix:
                type: bool
                forward_to_shards: false
                optional: true
                stability: "internal"
            requestGossipRoutingCache:
                type: array<IDLAnyType>
                forward_to_shards: false
                optional: true
                stability: "internal"
            startOrContinueTransaction:
                type: bool
                forward_to_shards: true
                optional: true
                stability: "internal"

    GenericReplyFieldsAPIV1:
        description: "Fields that may appear in any command reply. These are guaranteed backwards-compatible for as long as the server supports API Version 1."
        strict: false
        is_generic_cmd_list: "reply"
        fields:
            $clusterTime:
                type: ClusterTime
                cpp_name: "dollarClusterTime"
                forward_from_shards: false
                optional: true
            operationTime:
                type: logicalTime
                forward_from_shards: false
                optional: true

    GenericReplyFieldsAPIV1Unstable:
        description: "Fields that may appear in any command reply. These are not guaranteed backwards-compatible."
        strict: false
        is_generic_cmd_list: "reply"
        fields:
            $configServerState:
                type: object_owned
                cpp_name: "dollarConfigServerState"
                forward_from_shards: false
                optional: true
            $gleStats:
                type: object_owned
                cpp_name: "dollarGleStats"
                forward_from_shards: false
                optional: true
            lastCommittedOpTime:
                type: optime
                forward_from_shards: false
                optional: true
            readOnly:
                type: bool
                forward_from_shards: false
                optional: true
            additionalParticipants:
                type: array<object_owned> 
                forward_from_shards: false
                optional: true
            $configTime:
                type: timestamp
                cpp_name: "dollarConfigTime"
                forward_from_shards: false
                optional: true
            $replData:
                type: object_owned
                cpp_name: "dollarReplData"
                forward_from_shards: false
                optional: true
            $topologyTime:
                type: timestamp
                cpp_name: "dollarTopologyTime"
                forward_from_shards: false
                optional: true
            $oplogQueryData:
                type: object_owned
                cpp_name: "dollarOplogQueryData"
                forward_from_shards: false
                optional: true
            ok:
                type: safeBool
                forward_from_shards: true
                optional: true
            routingCacheGossip:
                type: array<GossipedRoutingCache>
                forward_from_shards: false
                optional: true

