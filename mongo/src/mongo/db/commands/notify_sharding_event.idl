 
 # Copyright (C) 2022-present MongoDB, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the Server Side Public License, version 1,
# as published by MongoDB, Inc.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Server Side Public License for more details.
#
# You should have received a copy of the Server Side Public License
# along with this program. If not, see
# <http://www.mongodb.com/licensing/server-side-public-license>.
#
# As a special exception, the copyright holders give permission to link the
# code of portions of this program with the OpenSSL library under certain
# conditions as described in each individual source file and distribute
# linked combinations including the program with the OpenSSL library. You
# must comply with the Server Side Public License in all respects for
# all of the code used other than as permitted herein. If you modify file(s)
# with this exception, you may extend this exception to your version of the
# file(s), but you are not obligated to do so. If you do not wish to do so,
# delete this exception statement from your version. If you delete this
# exception statement from all source files in the program, then also delete
# it in the license file.
#


global:
    cpp_namespace: "mongo"
    cpp_includes:
        - "mongo/client/connection_string.h"
        - "mongo/db/commands/notify_sharding_event_utils.h"

imports:
    - "mongo/db/basic_types.idl"
    - "mongo/s/sharding_types.idl"

enums:
    CommitPhase:
        description: "Specifies the phase of the event being generated
                      (For Sharding DDL commits described through 2-phase notifications)."
        type: string
        values:
            kPrepare: "prepare"
            kSuccessful: "commitSuccessful"
            kAborted: "commitAborted"

structs:
    
    DatabasesAdded:
        description: "Event describing the explicit/implicit addition of a set of databases
                      to the config catalog"
        strict: false
        fields:
            names:
                description: "The name of the databases being added to the config catalog"
                type: array<database_name>
            primaryShard:
                description: "The primary shard assigned to the added database;
                              only expected to be populated when phase == prepare"
                type: shard_id
                optional: true
            areImported:
                description: "When true, the added databases come with pre-existing user collections 
                              (e.g. the databases got added as part of addShard())"
                type: bool
            phase:
                description: "The sub-phase of the event being notified."
                type: CommitPhase
                
commands:
    _shardsvrNotifyShardingEvent:
        command_name: _shardsvrNotifyShardingEvent
        cpp_name: ShardsvrNotifyShardingEventRequest
        description: "Internal command to be invoked by the config server to notify a shard
                      of an event concerning the shard itself or the whole cluster."
        namespace: ignored
        api_version: ""
        strict: false
        reply_type: OkReply
        fields:
            eventType:
                type: string
                description: "The type of sharding event"
                validator: { callback: "notify_sharding_event::validateEventType" }
            details:
                type: object_owned
                description: "A descriptor of the sharding event 
                             (to be serialized and interpreted based on the value of eventType)."

