# Copyright (C) 2023-present MongoDB, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the Server Side Public License, version 1,
# as published by MongoDB, Inc.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Server Side Public License for more details.
#
# You should have received a copy of the Server Side Public License
# along with this program. If not, see
# <http://www.mongodb.com/licensing/server-side-public-license>.
#
# As a special exception, the copyright holders give permission to link the
# code of portions of this program with the OpenSSL library under certain
# conditions as described in each individual source file and distribute
# linked combinations including the program with the OpenSSL library. You
# must comply with the Server Side Public License in all respects for
# all of the code used other than as permitted herein. If you modify file(s)
# with this exception, you may extend this exception to your version of the
# file(s), but you are not obligated to do so. If you do not wish to do so,
# delete this exception statement from your version. If you delete this
# exception statement from all source files in the program, then also delete
# it in the license file.
#

global:
  cpp_namespace: "mongo"

imports:
  - "mongo/db/basic_types.idl"
  - "mongo/db/pipeline/value.idl"

structs:
  VectorSearchSpec:
    description: Specification for a $vectorSearch stage given in the full, explicit format.
    strict: true
    # Many of the $vectorSearch parameters are unique or complex types that are not supported
    # by the default IDL query shapification. We will mark these fields as 'parameter' here
    # so that they are passed through and manually override them when serializing the stage.
    query_shape_component: true
    fields:
      queryVector:
        description: The query vector.
        optional: false
        type: array<double>
        query_shape: parameter
      path:
        description: The path on which to search.
        optional: false
        type: string
        query_shape: literal
      index:
        description: The index to use.
        optional: true
        type: string
        query_shape: anonymize
      limit:
        description: Maximum number of documents to return.
        optional: false
        type: numeric
        query_shape: parameter
      numCandidates:
        description: Number of candidate documents mongot should consider.
        optional: true
        type: numeric
        query_shape: parameter
      filter:
        description: Pre-filter to apply before performing search.
        optional: true
        type: object_owned
        query_shape: parameter

