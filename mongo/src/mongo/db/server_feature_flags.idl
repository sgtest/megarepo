# Copyright (C) 2021-present MongoDB, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the Server Side Public License, version 1,
# as published by MongoDB, Inc.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Server Side Public License for more details.
#
# You should have received a copy of the Server Side Public License
# along with this program. If not, see
# <http://www.mongodb.com/licensing/server-side-public-license>.
#
# As a special exception, the copyright holders give permission to link the
# code of portions of this program with the OpenSSL library under certain
# conditions as described in each individual source file and distribute
# linked combinations including the program with the OpenSSL library. You
# must comply with the Server Side Public License in all respects for
# all of the code used other than as permitted herein. If you modify file(s)
# with this exception, you may extend this exception to your version of the
# file(s), but you are not obligated to do so. If you do not wish to do so,
# delete this exception statement from your version. If you delete this
# exception statement from all source files in the program, then also delete
# it in the license file.
#

global:
    cpp_namespace: "mongo"

feature_flags:
    featureFlagSecurityToken:
        description: "Enable parsing and handling of SecurityTokens in multitenancy mode"
        cpp_varname: gFeatureFlagSecurityToken
        default: false
        shouldBeFCVGated: true
    featureFlagRequireTenantID:
        # Only available with the server parameter "multitenancySupport".
        description: >-
            When enabled in conjunction with the server parameter "multitenancySupport",
            require tenantID to be a part of NamespaceString and TenantDatabase.
        cpp_varname: gFeatureFlagRequireTenantID
        default: false
        shouldBeFCVGated: true
    featureFlagGlobalIndexes:
        description: "Enable support for global indexes"
        cpp_varname: gFeatureFlagGlobalIndexes
        default: false
        shouldBeFCVGated: true
    featureFlagAdditionalParticipants:
        description: "Adding additional participants to existing transactions"
        cpp_varname: gFeatureFlagAdditionalParticipants
        default: false
        shouldBeFCVGated: true
    featureFlagBulkWriteCommand:
        description: "Support for bulkWrite command and one-shot transactions"
        cpp_varname: gFeatureFlagBulkWriteCommand
        default: false
        shouldBeFCVGated: true
    featureFlagAuditConfigClusterParameter:
        description: "Enable use of new auditConfig cluster server parameter"
        cpp_varname: feature_flags::gFeatureFlagAuditConfigClusterParameter
        default: true
        version: 7.1
        shouldBeFCVGated: true
    featureFlagOCSF:
        description: "Provide an OCSF compatible output for audit logs"
        cpp_varname: gFeatureFlagOCSF
        default: false
        shouldBeFCVGated: false
    featureFlagStreams:
        description: "Enable support for streams"
        cpp_varname: gFeatureFlagStreams
        default: false
        shouldBeFCVGated: true
    featureFlagUseUnreplicatedTruncatesForDeletions:
        description: "Feature flag to enable pre-image collection and change collection maintenance
        using unreplicated truncates instead of normal document deletions replicated from the
        primary."
        cpp_varname: feature_flags::gFeatureFlagUseUnreplicatedTruncatesForDeletions
        default: true
        shouldBeFCVGated: false
    featureFlagTTLIndexesOnCappedCollections:
        description: "Enables support for capped collections having a TTL index."
        cpp_varname: feature_flags::gFeatureFlagTTLIndexesOnCappedCollections
        default: true
        version: 7.1
        shouldBeFCVGated: true
    featureFlagEndOfTransactionChangeEvent:
        description: "Feature flag to enable endOfTransaction oplog entry and change stream event"
        cpp_varname: feature_flags::gFeatureFlagEndOfTransactionChangeEvent
        default: false
        shouldBeFCVGated: true
    featureFlagAllMongodsAreSharded:
        description: "Feature flag to enable and autobootstrap sharding for all mongods"
        cpp_varname: gFeatureFlagAllMongodsAreSharded
        default: false
        shouldBeFCVGated: true
    featureFlagShardKeyIndexOptionalHashedSharding:
        description: "Feature flag to make a supporting shard key index for hashed sharding optional"
        cpp_varname: gFeatureFlagShardKeyIndexOptionalHashedSharding
        default: true
        version: 7.0
        shouldBeFCVGated: true
    featureFlagBanEncryptionOptionsInCollectionCreation:
        description: "Feature flag that bans encryption options from being used in createCollection
        commands"
        cpp_varname: gFeatureFlagBanEncryptionOptionsInCollectionCreation
        default: true
        version: 7.2
        shouldBeFCVGated: true
    featureFlagRearchitectUserAcquisition:
        description: "Enable new flow for authentication and authorization"
        cpp_varname: gFeatureFlagRearchitectUserAcquisition
        default: false
        shouldBeFCVGated: false
    featureFlagOIDCInternalAuthorization:
        description: "Feature flag gating OIDC authentication with internal authorization"
        cpp_varname: gFeatureFlagOIDCInternalAuthorization
        default: false
        shouldBeFCVGated: false
