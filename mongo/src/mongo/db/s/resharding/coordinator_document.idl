# Copyright (C) 2020-present MongoDB, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the Server Side Public License, version 1,
# as published by MongoDB, Inc.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Server Side Public License for more details.
#
# You should have received a copy of the Server Side Public License
# along with this program. If not, see
# <http://www.mongodb.com/licensing/server-side-public-license>.
#
# As a special exception, the copyright holders give permission to link the
# code of portions of this program with the OpenSSL library under certain
# conditions as described in each individual source file and distribute
# linked combinations including the program with the OpenSSL library. You
# must comply with the Server Side Public License in all respects for
# all of the code used other than as permitted herein. If you modify file(s)
# with this exception, you may extend this exception to your version of the
# file(s), but you are not obligated to do so. If you do not wish to do so,
# delete this exception statement from your version. If you delete this
# exception statement from all source files in the program, then also delete
# it in the license file.
#

# This file defines the format of documents stored in config.reshardingOperations on the config
# server.

global:
    cpp_namespace: "mongo"

imports:
    - "mongo/s/resharding/common_types.idl"

structs:
    DonorShardEntry:
        description: "Represents a donor shard for a particular resharding operation on the
                      coordinator."
        generate_comparison_operators: false
        # Use strict:false to avoid complications around upgrade/downgrade. This isn't technically
        # required for resharding because durable state from all resharding operations is cleaned up
        # before the upgrade or downgrade can complete.
        strict: false
        fields:
            id: shard_id
            # We intentionally have the mutable state nested in a subobject to make it easy to
            # overwrite with a single $set.
            mutableState: DonorShardContext

    RecipientShardEntry:
        description: "Represents a recipient shard for a particular resharding operation on the
                      coordinator."
        generate_comparison_operators: false
        # Use strict:false to avoid complications around upgrade/downgrade. This isn't technically
        # required for resharding because durable state from all resharding operations is cleaned up
        # before the upgrade or downgrade can complete.
        strict: false
        fields:
            id: shard_id
            # We intentionally have the mutable state nested in a subobject to make it easy to
            # overwrite with a single $set.
            mutableState: RecipientShardContext

    ReshardingCoordinatorMetrics:
        description: "Contains metrics about the resharding operation on the coordinator."
        strict: false
        fields:
            operationRuntime:
                    type: ReshardingMetricsTimeInterval
                    description: >-
                        The time interval of the entire resharding operation on the coordinator.
                    optional: true            
            documentCopy:
                    type: ReshardingMetricsTimeInterval
                    description: >-
                        The time interval that it takes to clone documents on this coordinator.
                    optional: true
            oplogApplication:
                    type: ReshardingMetricsTimeInterval
                    description: >-
                        The time interval that it takes to apply oplog entries on this coordinator.
                    optional: true

    ReshardingCoordinatorDocument:
        description: "Represents a resharding operation on the coordinator."
        inline_chained_structs: true
        chained_structs:
            CommonReshardingMetadata: CommonReshardingMetadata
            ReshardingApproxCopySize: ReshardingApproxCopySizeStruct
            AbortReason: AbortReasonStruct
        generate_comparison_operators: false
        # Use strict:false to avoid complications around upgrade/downgrade. This isn't technically
        # required for resharding because durable state from all resharding operations is cleaned up
        # before the upgrade or downgrade can complete.
        strict: false
        fields:
            state: CoordinatorState
            cloneTimestamp:
                type: timestamp
                description: "The timestamp for the snapshot read while cloning from the donors."
                optional: true
            donorShards:
                type: array<DonorShardEntry>
                description: "The list of all donor shards for this resharding operation."
            recipientShards:
                type: array<RecipientShardEntry>
                description: "The list of all recipient shards for this resharding operation."
            zones:
                type: array<ReshardingZoneType>
                description: "The zones associated with the new shard key."
                optional: true
            numInitialChunks:
                type: long
                description: "The number of chunks the new collection should have after resharding."
                optional: true
            presetReshardedChunks:
                type: array<ReshardedChunk>
                description: >-
                    Mapping of chunk ranges to be used as the initial split output. This is only
                    for testing purposes.
                optional: true
            active:
                type: bool
                # TODO(SERVER-77873): Deprecated by the resharding improvements project, and should
                # be removed with that feature flag.
                description: >-
                    Dummy field that always has the same value (true) to have a unique
                    index on in order to prevent multiple resharding operations from being active at
                    the same time.
                default: true
            metrics:
                type: ReshardingCoordinatorMetrics
                description: "Metrics related to the coordinator."
                optional: true
            shardDistribution:
                type: array<ShardKeyRange>
                description: "The key ranges for the new shard key. This should be continuous and complete."
                optional: true
            unique:
                type: bool
                description: "The user-specified value for the unique request field."
                optional: true
            collation:
                type: object_owned
                description: "The user-specified value for the collation request field."
                optional: true
            sourceKey:
                type: object_owned
                description:  >-
                    The shard key of the collection before resharding
                    (defined as optional for retro compatibility).
                optional: true
            forceRedistribution:
                type: bool
                description: "Whether to initiate reshardCollection if the shardKey doesn't change."
                optional: true
            quiescePeriodEnd:
                type: date
                description: "When to release the instance following its completion."
                optional: true
