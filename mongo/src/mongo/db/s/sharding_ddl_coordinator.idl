# Copyright (C) 2021-present MongoDB, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the Server Side Public License, version 1,
# as published by MongoDB, Inc.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Server Side Public License for more details.
#
# You should have received a copy of the Server Side Public License
# along with this program. If not, see
# <http://www.mongodb.com/licensing/server-side-public-license>.
#
# As a special exception, the copyright holders give permission to link the
# code of portions of this program with the OpenSSL library under certain
# conditions as described in each individual source file and distribute
# linked combinations including the program with the OpenSSL library. You
# must comply with the Server Side Public License in all respects for
# all of the code used other than as permitted herein. If you modify file(s)
# with this exception, you may extend this exception to your version of the
# file(s), but you are not obligated to do so. If you do not wish to do so,
# delete this exception statement from your version. If you delete this
# exception statement from all source files in the program, then also delete
# it in the license file.
#

# This file defines the format of documents stored in config.DDL.Operations.

global:
    cpp_namespace: "mongo"
    cpp_includes:
        - "mongo/db/s/forwardable_operation_metadata.h"
        - "mongo/db/s/sharding_ddl_util.h"
        - "mongo/s/database_version.h"

imports:
    - "mongo/db/basic_types.idl"
    - "mongo/db/session/logical_session_id.idl"

enums:
    DDLCoordinatorType:
        description: "Type of the sharding DDL Operation."
        type: string
        values:
            kMovePrimary: "movePrimary"
            kDropDatabase: "dropDatabase_V2"
            kDropCollection: "dropCollection_V2"
            kRenameCollection: "renameCollection_V2"
            kCreateCollection: "createCollection_V4"
            # TODO SERVER-79304: Remove once 8.0 becomes last LTS
            kCreateCollectionPre73Compatible: "createCollection_V3"
            # TODO SERVER-79064: Remove once 8.0 becomes last LTS
            kRefineCollectionShardKeyPre71Compatible: "refineCollectionShardKey"
            kRefineCollectionShardKey: "refineCollectionShardKey_V2"
            kSetAllowMigrations: "setAllowMigrations"
            kCollMod: "collMod_V3"
            kReshardCollection: "reshardCollection"
            # Note: the V3 refers to the coordinator version, not the FLE2 protocol version
            kCompactStructuredEncryptionData: "compactStructuredEncryptionData_V3"
            kCleanupStructuredEncryptionData: "cleanupStructuredEncryptionData"
            kMigrationBlockingOperation: "migrationBlockingOperation"

types:
    ForwardableOperationMetadata:
        description: "Forwardable operation metadata assiociated with this coordinator."
        cpp_type: ForwardableOperationMetadata
        bson_serialization_type: object
        serializer: "mongo::ForwardableOperationMetadata::toBSON"
        deserializer: "mongo::ForwardableOperationMetadata"

    DatabaseVersion:
        description: ""
        cpp_type: DatabaseVersion
        bson_serialization_type: object
        serializer: "mongo::DatabaseVersion::toBSON"
        deserializer: "mongo::DatabaseVersion"

    ErrorStatus:
        bson_serialization_type: any
        description: "Status representing an error state"
        cpp_type: "::mongo::Status"
        serializer: "::mongo::sharding_ddl_util_serializeErrorStatusToBSON"
        deserializer: "::mongo::sharding_ddl_util_deserializeErrorStatusFromBSON"

structs:
    ShardingDDLCoordinatorId:
        description: "Identifier for a specific sharding DDL Coordinator."
        generate_comparison_operators: false
        strict: false
        fields:
            namespace:
                description: "The target namespace of the DDL operation."
                cpp_name: nss
                type: namespacestring
            operationType:
                description: "Type of the sharding DDL coordinator."
                type: DDLCoordinatorType

    ShardingDDLSession:
        description: "Container for DDL coordinator session."
        strict: true
        fields:
            lsid:
                type: LogicalSessionId
            txnNumber:
                type: TxnNumber

    ShardingDDLCoordinatorMetadata:
        description: "Commong metadata for all sharding DDL coordinator."
        generate_comparison_operators: false
        strict: false
        fields:
            _id:
                type: ShardingDDLCoordinatorId
                cpp_name: id
            recoveredFromDisk:
                type: bool
                default: false
            forwardableOpMetadata:
                type: ForwardableOperationMetadata
                optional: true
            databaseVersion:
                type: DatabaseVersion
                optional: true
            session:
                type: ShardingDDLSession
                optional: true
            bucketNss:
                description: "In case of sharded timeseries this variable will hold the underlying bucket namespace"
                type: namespacestring
                optional: true
            abortReason:
                description: "Error triggering the cleanup pipeline"
                type: ErrorStatus
                optional: true
