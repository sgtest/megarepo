# Copyright (C) 2020-present MongoDB, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the Server Side Public License, version 1,
# as published by MongoDB, Inc.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Server Side Public License for more details.
#
# You should have received a copy of the Server Side Public License
# along with this program. If not, see
# <http://www.mongodb.com/licensing/server-side-public-license>.
#
# As a special exception, the copyright holders give permission to link the
# code of portions of this program with the OpenSSL library under certain
# conditions as described in each individual source file and distribute
# linked combinations including the program with the OpenSSL library. You
# must comply with the Server Side Public License in all respects for
# all of the code used other than as permitted herein. If you modify file(s)
# with this exception, you may extend this exception to your version of the
# file(s), but you are not obligated to do so. If you do not wish to do so,
# delete this exception statement from your version. If you delete this
# exception statement from all source files in the program, then also delete
# it in the license file.
#

# reshardCollection IDL file

global:
    cpp_namespace: "mongo"

imports:
    - "mongo/db/basic_types.idl"
    - "mongo/s/resharding/common_types.idl"

commands:
  reshardCollection:
    description: "The public reshardCollection command on mongos."
    command_name: reshardCollection
    strict: true
    namespace: type
    api_version: ""
    type: namespacestring
    fields:
      key:
        type: object
        description: "The index specification document to use as the new shard key."
        optional: false
      unique:
        type: bool
        description: "Whether the shard key index should enforce a unique constraint."
        optional: true
      numInitialChunks:
        type: safeInt64
        description: "The number of chunks to create initially."
        optional: true
      collation:
        type: object
        description: "The collation to use for the shard key index."
        optional: true
      zones:
        type: array<ReshardingZoneType>
        description: "The zones for the new shard key."
        optional: true
      _presetReshardedChunks:
        type: array<ReshardedChunk>
        description: "Mapping of chunk ranges. This is only for testing purposes."
        optional: true
      collectionUUID:
        type: uuid
        description: "The expected UUID of the collection."
        optional: true
      shardDistribution:
        type: array<ShardKeyRange>
        description: "The key ranges for the new shard key. This should be continuous and complete."
        optional: true
      forceRedistribution:
        type: bool
        description: "Whether initiate reshardCollection if the shardKey doesn't change."
        optional: true
      reshardingUUID:
        type: uuid
        description: >-
            "A user-provided identifier used to identify this resharding operation for
            retryability purposes."
        optional: true

  _configsvrReshardCollection:
    command_name: _configsvrReshardCollection
    cpp_name: ConfigsvrReshardCollection
    description: "The internal reshardCollection command on the config server."
    strict: false
    namespace: type
    api_version: ""
    type: namespacestring
    fields:
      key:
        type: object
        description: "The index specification document to use as the new shard key."
        optional: false
      unique:
        type: bool
        description: "Whether the shard key index should enforce a unique constraint."
        optional: true
      numInitialChunks:
        type: safeInt64
        description: "The number of chunks to create initially."
        optional: true
      collation:
        type: object
        description: "The collation to use for the shard key index."
        optional: true
      zones:
        type: array<ReshardingZoneType>
        description: "The zones associated with the new shard key."
        optional: true
      _presetReshardedChunks:
        type: array<ReshardedChunk>
        description: >-
          "Mapping of chunk ranges to be used as the initial split output. This is only for 
          testing purposes."
        optional: true
      shardDistribution:
        type: array<ShardKeyRange>
        description: "The key ranges for the new shard key. This should be continuous and complete."
        optional: true
      forceRedistribution:
        type: bool
        description: "Whether initiate reshardCollection if the shardKey doesn't change."
        optional: true
      reshardingUUID:
        type: uuid
        description: >-
            "A user-provided identifier used to identify this resharding operation for
            retryability purposes."
        optional: true
      provenance:
        type: string
        description: "The source operation that called this resharding operation."
        optional: true
