# AUTO-GENERATED FILE DO NOT MANUALLY EDIT
# generated from the parse_libs_from_ninja.py script in scripts directory via `python ./parse_libs_from_ninja.py`
Import("env")
env = env.Clone(NINJA_GENSOURCE_INDEPENDENT=True)
env.InjectThirdParty(libraries=['abseil-cpp'])
if env.ToolchainIs('msvc'):
    env.Append(
        CPPDEFINES=[
            'NOMINMAX',
        ],
        CCFLAGS=[],
    )

if env.ToolchainIs('gcc'):
    env.Append(CCFLAGS=[
        '-Wno-error=ignored-attributes',
    ], )
# absl_strerror added as a dependency of other abseil libraries
env.BazelLibrary(
    target='absl_strerror',
    source=[
        'dist/absl/base/internal/strerror.cc',
    ],
    LIBDEPS=[],
)
# absl_scoped_set_env added as a dependency of other abseil libraries
env.BazelLibrary(
    target='absl_scoped_set_env',
    source=[
        'dist/absl/base/internal/scoped_set_env.cc',
    ],
    LIBDEPS=[
        'absl_log_severity',
        'absl_raw_logging_internal',
    ],
)
# absl_spinlock_wait is an explicit dependency to the server build
env.BazelLibrary(
    target='absl_spinlock_wait',
    source=[
        'dist/absl/base/internal/spinlock_wait.cc',
    ],
    LIBDEPS=[],
)
# absl_log_severity is an explicit dependency to the server build
env.BazelLibrary(
    target='absl_log_severity',
    source=[
        'dist/absl/base/log_severity.cc',
    ],
    LIBDEPS=[],
)
# absl_base is an explicit dependency to the server build
env.BazelLibrary(
    target='absl_base',
    source=[
        'dist/absl/base/internal/cycleclock.cc',
        'dist/absl/base/internal/spinlock.cc',
        'dist/absl/base/internal/sysinfo.cc',
        'dist/absl/base/internal/thread_identity.cc',
        'dist/absl/base/internal/unscaledcycleclock.cc',
    ],
    LIBDEPS=[
        'absl_log_severity',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
    ],
)
# absl_raw_logging_internal is an explicit dependency to the server build
env.BazelLibrary(
    target='absl_raw_logging_internal',
    source=[
        'dist/absl/base/internal/raw_logging.cc',
    ],
    LIBDEPS=[
        'absl_log_severity',
    ],
)
# absl_malloc_internal is an explicit dependency to the server build
env.BazelLibrary(
    target='absl_malloc_internal',
    source=[
        'dist/absl/base/internal/low_level_alloc.cc',
    ],
    LIBDEPS=[
        'absl_base',
        'absl_log_severity',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
    ],
)
# absl_throw_delegate is an explicit dependency to the server build
env.BazelLibrary(
    target='absl_throw_delegate',
    source=[
        'dist/absl/base/internal/throw_delegate.cc',
    ],
    LIBDEPS=[
        'absl_log_severity',
        'absl_raw_logging_internal',
    ],
)
# absl_raw_hash_set is an explicit dependency to the server build
env.BazelLibrary(
    target='absl_raw_hash_set',
    source=[
        'dist/absl/container/internal/raw_hash_set.cc',
    ],
    LIBDEPS=[
        'absl_bad_optional_access',
        'absl_bad_variant_access',
        'absl_base',
        'absl_city',
        'absl_civil_time',
        'absl_debugging_internal',
        'absl_demangle_internal',
        'absl_exponential_biased',
        'absl_graphcycles_internal',
        'absl_hash',
        'absl_hashtablez_sampler',
        'absl_int128',
        'absl_kernel_timeout_internal',
        'absl_log_severity',
        'absl_low_level_hash',
        'absl_malloc_internal',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_stacktrace',
        'absl_string_view',
        'absl_strings',
        'absl_strings_internal',
        'absl_symbolize',
        'absl_synchronization',
        'absl_throw_delegate',
        'absl_time',
        'absl_time_zone',
    ],
)
# absl_hashtablez_sampler is an explicit dependency to the server build
env.BazelLibrary(
    target='absl_hashtablez_sampler',
    source=[
        'dist/absl/container/internal/hashtablez_sampler.cc',
        'dist/absl/container/internal/hashtablez_sampler_force_weak_definition.cc',
    ],
    LIBDEPS=[
        'absl_base',
        'absl_civil_time',
        'absl_debugging_internal',
        'absl_demangle_internal',
        'absl_exponential_biased',
        'absl_graphcycles_internal',
        'absl_int128',
        'absl_kernel_timeout_internal',
        'absl_log_severity',
        'absl_malloc_internal',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_stacktrace',
        'absl_string_view',
        'absl_strings',
        'absl_strings_internal',
        'absl_symbolize',
        'absl_synchronization',
        'absl_throw_delegate',
        'absl_time',
        'absl_time_zone',
    ],
)
# absl_crc_cord_state added as a dependency of other abseil libraries
env.BazelLibrary(
    target='absl_crc_cord_state',
    source=[
        'dist/absl/crc/internal/crc_cord_state.cc',
    ],
    LIBDEPS=[
        'absl_base',
        'absl_crc32c',
        'absl_crc_cpu_detect',
        'absl_crc_internal',
        'absl_int128',
        'absl_log_severity',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_str_format_internal',
        'absl_string_view',
        'absl_strings',
        'absl_strings_internal',
        'absl_throw_delegate',
    ],
)
# absl_crc32c added as a dependency of other abseil libraries
env.BazelLibrary(
    target='absl_crc32c',
    source=[
        'dist/absl/crc/crc32c.cc',
        'dist/absl/crc/internal/crc_memcpy_fallback.cc',
        'dist/absl/crc/internal/crc_memcpy_x86_64.cc',
        'dist/absl/crc/internal/crc_non_temporal_memcpy.cc',
    ],
    LIBDEPS=[
        'absl_base',
        'absl_crc_cpu_detect',
        'absl_crc_internal',
        'absl_int128',
        'absl_log_severity',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_str_format_internal',
        'absl_string_view',
        'absl_strings',
        'absl_strings_internal',
        'absl_throw_delegate',
    ],
)
# absl_crc_internal added as a dependency of other abseil libraries
env.BazelLibrary(
    target='absl_crc_internal',
    source=[
        'dist/absl/crc/internal/crc.cc',
        'dist/absl/crc/internal/crc_x86_arm_combined.cc',
    ],
    LIBDEPS=[
        'absl_base',
        'absl_crc_cpu_detect',
        'absl_log_severity',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
    ],
)
# absl_crc_cpu_detect added as a dependency of other abseil libraries
env.BazelLibrary(
    target='absl_crc_cpu_detect',
    source=[
        'dist/absl/crc/internal/cpu_detect.cc',
    ],
    LIBDEPS=[
        'absl_base',
        'absl_log_severity',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
    ],
)
# absl_stacktrace is an explicit dependency to the server build
env.BazelLibrary(
    target='absl_stacktrace',
    source=[
        'dist/absl/debugging/stacktrace.cc',
    ],
    LIBDEPS=[
        'absl_debugging_internal',
        'absl_log_severity',
        'absl_raw_logging_internal',
    ],
)
# absl_examine_stack added as a dependency of other abseil libraries
env.BazelLibrary(
    target='absl_examine_stack',
    source=[
        'dist/absl/debugging/internal/examine_stack.cc',
    ],
    LIBDEPS=[
        'absl_base',
        'absl_debugging_internal',
        'absl_demangle_internal',
        'absl_int128',
        'absl_log_severity',
        'absl_malloc_internal',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_stacktrace',
        'absl_string_view',
        'absl_strings',
        'absl_strings_internal',
        'absl_symbolize',
        'absl_throw_delegate',
    ],
)
# absl_symbolize is an explicit dependency to the server build
env.BazelLibrary(
    target='absl_symbolize',
    source=[
        'dist/absl/debugging/symbolize.cc',
    ],
    LIBDEPS=[
        'absl_base',
        'absl_debugging_internal',
        'absl_demangle_internal',
        'absl_int128',
        'absl_log_severity',
        'absl_malloc_internal',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_string_view',
        'absl_strings',
        'absl_strings_internal',
        'absl_throw_delegate',
    ],
)
# absl_debugging_internal is an explicit dependency to the server build
env.BazelLibrary(
    target='absl_debugging_internal',
    source=[
        'dist/absl/debugging/internal/address_is_readable.cc',
        'dist/absl/debugging/internal/elf_mem_image.cc',
        'dist/absl/debugging/internal/vdso_support.cc',
    ],
    LIBDEPS=[
        'absl_log_severity',
        'absl_raw_logging_internal',
    ],
)
# absl_demangle_internal is an explicit dependency to the server build
env.BazelLibrary(
    target='absl_demangle_internal',
    source=[
        'dist/absl/debugging/internal/demangle.cc',
    ],
    LIBDEPS=[
        'absl_base',
        'absl_log_severity',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
    ],
)
# absl_leak_check added as a dependency of other abseil libraries
env.BazelLibrary(
    target='absl_leak_check',
    source=[
        'dist/absl/debugging/leak_check.cc',
    ],
    LIBDEPS=[],
)
# absl_failure_signal_handler added as a dependency of other abseil libraries
env.BazelLibrary(
    target='absl_failure_signal_handler',
    source=[
        'dist/absl/debugging/failure_signal_handler.cc',
    ],
    LIBDEPS=[
        'absl_base',
        'absl_debugging_internal',
        'absl_demangle_internal',
        'absl_examine_stack',
        'absl_int128',
        'absl_log_severity',
        'absl_malloc_internal',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_stacktrace',
        'absl_string_view',
        'absl_strings',
        'absl_strings_internal',
        'absl_symbolize',
        'absl_throw_delegate',
    ],
)
# absl_flags_config added as a dependency of other abseil libraries
env.BazelLibrary(
    target='absl_flags_config',
    source=[
        'dist/absl/flags/usage_config.cc',
    ],
    LIBDEPS=[
        'absl_base',
        'absl_civil_time',
        'absl_debugging_internal',
        'absl_demangle_internal',
        'absl_flags_program_name',
        'absl_graphcycles_internal',
        'absl_int128',
        'absl_kernel_timeout_internal',
        'absl_log_severity',
        'absl_malloc_internal',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_stacktrace',
        'absl_string_view',
        'absl_strings',
        'absl_strings_internal',
        'absl_symbolize',
        'absl_synchronization',
        'absl_throw_delegate',
        'absl_time',
        'absl_time_zone',
    ],
)
# absl_flags_marshalling added as a dependency of other abseil libraries
env.BazelLibrary(
    target='absl_flags_marshalling',
    source=[
        'dist/absl/flags/marshalling.cc',
    ],
    LIBDEPS=[
        'absl_bad_optional_access',
        'absl_base',
        'absl_int128',
        'absl_log_severity',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_str_format_internal',
        'absl_string_view',
        'absl_strings',
        'absl_strings_internal',
        'absl_throw_delegate',
    ],
)
# absl_flags is an explicit dependency to the server build
env.BazelLibrary(
    target='absl_flags',
    source=[
        'dist/absl/flags/flag.cc',
    ],
    LIBDEPS=[
        'absl_bad_optional_access',
        'absl_bad_variant_access',
        'absl_base',
        'absl_city',
        'absl_civil_time',
        'absl_cord',
        'absl_cord_internal',
        'absl_cordz_functions',
        'absl_cordz_handle',
        'absl_cordz_info',
        'absl_crc32c',
        'absl_crc_cord_state',
        'absl_crc_cpu_detect',
        'absl_crc_internal',
        'absl_debugging_internal',
        'absl_demangle_internal',
        'absl_exponential_biased',
        'absl_flags_commandlineflag',
        'absl_flags_commandlineflag_internal',
        'absl_flags_config',
        'absl_flags_internal',
        'absl_flags_marshalling',
        'absl_flags_private_handle_accessor',
        'absl_flags_program_name',
        'absl_flags_reflection',
        'absl_graphcycles_internal',
        'absl_hash',
        'absl_hashtablez_sampler',
        'absl_int128',
        'absl_kernel_timeout_internal',
        'absl_log_severity',
        'absl_low_level_hash',
        'absl_malloc_internal',
        'absl_raw_hash_set',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_stacktrace',
        'absl_str_format_internal',
        'absl_string_view',
        'absl_strings',
        'absl_strings_internal',
        'absl_symbolize',
        'absl_synchronization',
        'absl_throw_delegate',
        'absl_time',
        'absl_time_zone',
    ],
)
# absl_flags_private_handle_accessor added as a dependency of other abseil libraries
env.BazelLibrary(
    target='absl_flags_private_handle_accessor',
    source=[
        'dist/absl/flags/internal/private_handle_accessor.cc',
    ],
    LIBDEPS=[
        'absl_bad_optional_access',
        'absl_base',
        'absl_flags_commandlineflag',
        'absl_flags_commandlineflag_internal',
        'absl_int128',
        'absl_log_severity',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_string_view',
        'absl_strings',
        'absl_strings_internal',
        'absl_throw_delegate',
    ],
)
# absl_flags_commandlineflag_internal added as a dependency of other abseil libraries
env.BazelLibrary(
    target='absl_flags_commandlineflag_internal',
    source=[
        'dist/absl/flags/internal/commandlineflag.cc',
    ],
    LIBDEPS=[],
)
# absl_flags_commandlineflag added as a dependency of other abseil libraries
env.BazelLibrary(
    target='absl_flags_commandlineflag',
    source=[
        'dist/absl/flags/commandlineflag.cc',
    ],
    LIBDEPS=[
        'absl_bad_optional_access',
        'absl_base',
        'absl_flags_commandlineflag_internal',
        'absl_int128',
        'absl_log_severity',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_string_view',
        'absl_strings',
        'absl_strings_internal',
        'absl_throw_delegate',
    ],
)
# absl_flags_program_name added as a dependency of other abseil libraries
env.BazelLibrary(
    target='absl_flags_program_name',
    source=[
        'dist/absl/flags/internal/program_name.cc',
    ],
    LIBDEPS=[
        'absl_base',
        'absl_civil_time',
        'absl_debugging_internal',
        'absl_demangle_internal',
        'absl_graphcycles_internal',
        'absl_int128',
        'absl_kernel_timeout_internal',
        'absl_log_severity',
        'absl_malloc_internal',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_stacktrace',
        'absl_string_view',
        'absl_strings',
        'absl_strings_internal',
        'absl_symbolize',
        'absl_synchronization',
        'absl_throw_delegate',
        'absl_time',
        'absl_time_zone',
    ],
)
# absl_flags_reflection added as a dependency of other abseil libraries
env.BazelLibrary(
    target='absl_flags_reflection',
    source=[
        'dist/absl/flags/reflection.cc',
    ],
    LIBDEPS=[
        'absl_bad_optional_access',
        'absl_bad_variant_access',
        'absl_base',
        'absl_city',
        'absl_civil_time',
        'absl_cord',
        'absl_cord_internal',
        'absl_cordz_functions',
        'absl_cordz_handle',
        'absl_cordz_info',
        'absl_crc32c',
        'absl_crc_cord_state',
        'absl_crc_cpu_detect',
        'absl_crc_internal',
        'absl_debugging_internal',
        'absl_demangle_internal',
        'absl_exponential_biased',
        'absl_flags_commandlineflag',
        'absl_flags_commandlineflag_internal',
        'absl_flags_config',
        'absl_flags_private_handle_accessor',
        'absl_flags_program_name',
        'absl_graphcycles_internal',
        'absl_hash',
        'absl_hashtablez_sampler',
        'absl_int128',
        'absl_kernel_timeout_internal',
        'absl_log_severity',
        'absl_low_level_hash',
        'absl_malloc_internal',
        'absl_raw_hash_set',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_stacktrace',
        'absl_str_format_internal',
        'absl_string_view',
        'absl_strings',
        'absl_strings_internal',
        'absl_symbolize',
        'absl_synchronization',
        'absl_throw_delegate',
        'absl_time',
        'absl_time_zone',
    ],
)
# absl_flags_internal added as a dependency of other abseil libraries
env.BazelLibrary(
    target='absl_flags_internal',
    source=[
        'dist/absl/flags/internal/flag.cc',
    ],
    LIBDEPS=[
        'absl_bad_optional_access',
        'absl_base',
        'absl_civil_time',
        'absl_debugging_internal',
        'absl_demangle_internal',
        'absl_flags_commandlineflag',
        'absl_flags_commandlineflag_internal',
        'absl_flags_config',
        'absl_flags_marshalling',
        'absl_flags_program_name',
        'absl_graphcycles_internal',
        'absl_int128',
        'absl_kernel_timeout_internal',
        'absl_log_severity',
        'absl_malloc_internal',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_stacktrace',
        'absl_str_format_internal',
        'absl_string_view',
        'absl_strings',
        'absl_strings_internal',
        'absl_symbolize',
        'absl_synchronization',
        'absl_throw_delegate',
        'absl_time',
        'absl_time_zone',
    ],
)
# absl_flags_usage added as a dependency of other abseil libraries
env.BazelLibrary(
    target='absl_flags_usage',
    source=[
        'dist/absl/flags/usage.cc',
    ],
    LIBDEPS=[
        'absl_bad_optional_access',
        'absl_bad_variant_access',
        'absl_base',
        'absl_city',
        'absl_civil_time',
        'absl_cord',
        'absl_cord_internal',
        'absl_cordz_functions',
        'absl_cordz_handle',
        'absl_cordz_info',
        'absl_crc32c',
        'absl_crc_cord_state',
        'absl_crc_cpu_detect',
        'absl_crc_internal',
        'absl_debugging_internal',
        'absl_demangle_internal',
        'absl_exponential_biased',
        'absl_flags',
        'absl_flags_commandlineflag',
        'absl_flags_commandlineflag_internal',
        'absl_flags_config',
        'absl_flags_internal',
        'absl_flags_marshalling',
        'absl_flags_private_handle_accessor',
        'absl_flags_program_name',
        'absl_flags_reflection',
        'absl_flags_usage_internal',
        'absl_graphcycles_internal',
        'absl_hash',
        'absl_hashtablez_sampler',
        'absl_int128',
        'absl_kernel_timeout_internal',
        'absl_log_severity',
        'absl_low_level_hash',
        'absl_malloc_internal',
        'absl_raw_hash_set',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_stacktrace',
        'absl_str_format_internal',
        'absl_string_view',
        'absl_strings',
        'absl_strings_internal',
        'absl_symbolize',
        'absl_synchronization',
        'absl_throw_delegate',
        'absl_time',
        'absl_time_zone',
    ],
)
# absl_flags_usage_internal added as a dependency of other abseil libraries
env.BazelLibrary(
    target='absl_flags_usage_internal',
    source=[
        'dist/absl/flags/internal/usage.cc',
    ],
    LIBDEPS=[
        'absl_bad_optional_access',
        'absl_bad_variant_access',
        'absl_base',
        'absl_city',
        'absl_civil_time',
        'absl_cord',
        'absl_cord_internal',
        'absl_cordz_functions',
        'absl_cordz_handle',
        'absl_cordz_info',
        'absl_crc32c',
        'absl_crc_cord_state',
        'absl_crc_cpu_detect',
        'absl_crc_internal',
        'absl_debugging_internal',
        'absl_demangle_internal',
        'absl_exponential_biased',
        'absl_flags',
        'absl_flags_commandlineflag',
        'absl_flags_commandlineflag_internal',
        'absl_flags_config',
        'absl_flags_internal',
        'absl_flags_marshalling',
        'absl_flags_private_handle_accessor',
        'absl_flags_program_name',
        'absl_flags_reflection',
        'absl_graphcycles_internal',
        'absl_hash',
        'absl_hashtablez_sampler',
        'absl_int128',
        'absl_kernel_timeout_internal',
        'absl_log_severity',
        'absl_low_level_hash',
        'absl_malloc_internal',
        'absl_raw_hash_set',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_stacktrace',
        'absl_str_format_internal',
        'absl_string_view',
        'absl_strings',
        'absl_strings_internal',
        'absl_symbolize',
        'absl_synchronization',
        'absl_throw_delegate',
        'absl_time',
        'absl_time_zone',
    ],
)
# absl_flags_parse added as a dependency of other abseil libraries
env.BazelLibrary(
    target='absl_flags_parse',
    source=[
        'dist/absl/flags/parse.cc',
    ],
    LIBDEPS=[
        'absl_bad_optional_access',
        'absl_bad_variant_access',
        'absl_base',
        'absl_city',
        'absl_civil_time',
        'absl_cord',
        'absl_cord_internal',
        'absl_cordz_functions',
        'absl_cordz_handle',
        'absl_cordz_info',
        'absl_crc32c',
        'absl_crc_cord_state',
        'absl_crc_cpu_detect',
        'absl_crc_internal',
        'absl_debugging_internal',
        'absl_demangle_internal',
        'absl_exponential_biased',
        'absl_flags',
        'absl_flags_commandlineflag',
        'absl_flags_commandlineflag_internal',
        'absl_flags_config',
        'absl_flags_internal',
        'absl_flags_marshalling',
        'absl_flags_private_handle_accessor',
        'absl_flags_program_name',
        'absl_flags_reflection',
        'absl_flags_usage',
        'absl_flags_usage_internal',
        'absl_graphcycles_internal',
        'absl_hash',
        'absl_hashtablez_sampler',
        'absl_int128',
        'absl_kernel_timeout_internal',
        'absl_log_severity',
        'absl_low_level_hash',
        'absl_malloc_internal',
        'absl_raw_hash_set',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_stacktrace',
        'absl_str_format_internal',
        'absl_string_view',
        'absl_strings',
        'absl_strings_internal',
        'absl_symbolize',
        'absl_synchronization',
        'absl_throw_delegate',
        'absl_time',
        'absl_time_zone',
    ],
)
# absl_low_level_hash is an explicit dependency to the server build
env.BazelLibrary(
    target='absl_low_level_hash',
    source=[
        'dist/absl/hash/internal/low_level_hash.cc',
    ],
    LIBDEPS=[
        'absl_base',
        'absl_int128',
        'absl_log_severity',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
    ],
)
# absl_city is an explicit dependency to the server build
env.BazelLibrary(
    target='absl_city',
    source=[
        'dist/absl/hash/internal/city.cc',
    ],
    LIBDEPS=[
        'absl_base',
        'absl_log_severity',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
    ],
)
# absl_hash is an explicit dependency to the server build
env.BazelLibrary(
    target='absl_hash',
    source=[
        'dist/absl/hash/internal/hash.cc',
    ],
    LIBDEPS=[
        'absl_bad_optional_access',
        'absl_bad_variant_access',
        'absl_base',
        'absl_city',
        'absl_int128',
        'absl_log_severity',
        'absl_low_level_hash',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_string_view',
        'absl_strings',
        'absl_strings_internal',
        'absl_throw_delegate',
    ],
)
# absl_die_if_null added as a dependency of other abseil libraries
env.BazelLibrary(
    target='absl_die_if_null',
    source=[
        'dist/absl/log/die_if_null.cc',
    ],
    LIBDEPS=[
        'absl_bad_optional_access',
        'absl_bad_variant_access',
        'absl_base',
        'absl_city',
        'absl_civil_time',
        'absl_debugging_internal',
        'absl_demangle_internal',
        'absl_examine_stack',
        'absl_graphcycles_internal',
        'absl_hash',
        'absl_int128',
        'absl_kernel_timeout_internal',
        'absl_log_entry',
        'absl_log_globals',
        'absl_log_internal_conditions',
        'absl_log_internal_format',
        'absl_log_internal_globals',
        'absl_log_internal_log_sink_set',
        'absl_log_internal_message',
        'absl_log_internal_nullguard',
        'absl_log_internal_proto',
        'absl_log_severity',
        'absl_log_sink',
        'absl_low_level_hash',
        'absl_malloc_internal',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_stacktrace',
        'absl_str_format_internal',
        'absl_strerror',
        'absl_string_view',
        'absl_strings',
        'absl_strings_internal',
        'absl_symbolize',
        'absl_synchronization',
        'absl_throw_delegate',
        'absl_time',
        'absl_time_zone',
    ],
)
# absl_log_internal_message added as a dependency of other abseil libraries
env.BazelLibrary(
    target='absl_log_internal_message',
    source=[
        'dist/absl/log/internal/log_message.cc',
    ],
    LIBDEPS=[
        'absl_bad_optional_access',
        'absl_bad_variant_access',
        'absl_base',
        'absl_city',
        'absl_civil_time',
        'absl_debugging_internal',
        'absl_demangle_internal',
        'absl_examine_stack',
        'absl_graphcycles_internal',
        'absl_hash',
        'absl_int128',
        'absl_kernel_timeout_internal',
        'absl_log_entry',
        'absl_log_globals',
        'absl_log_internal_format',
        'absl_log_internal_globals',
        'absl_log_internal_log_sink_set',
        'absl_log_internal_nullguard',
        'absl_log_internal_proto',
        'absl_log_severity',
        'absl_log_sink',
        'absl_low_level_hash',
        'absl_malloc_internal',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_stacktrace',
        'absl_str_format_internal',
        'absl_strerror',
        'absl_string_view',
        'absl_strings',
        'absl_strings_internal',
        'absl_symbolize',
        'absl_synchronization',
        'absl_throw_delegate',
        'absl_time',
        'absl_time_zone',
    ],
)
# absl_log_internal_nullguard added as a dependency of other abseil libraries
env.BazelLibrary(
    target='absl_log_internal_nullguard',
    source=[
        'dist/absl/log/internal/nullguard.cc',
    ],
    LIBDEPS=[],
)
# absl_log_internal_globals added as a dependency of other abseil libraries
env.BazelLibrary(
    target='absl_log_internal_globals',
    source=[
        'dist/absl/log/internal/globals.cc',
    ],
    LIBDEPS=[
        'absl_base',
        'absl_civil_time',
        'absl_int128',
        'absl_log_severity',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_string_view',
        'absl_strings',
        'absl_strings_internal',
        'absl_throw_delegate',
        'absl_time',
        'absl_time_zone',
    ],
)
# absl_log_internal_log_sink_set added as a dependency of other abseil libraries
env.BazelLibrary(
    target='absl_log_internal_log_sink_set',
    source=[
        'dist/absl/log/internal/log_sink_set.cc',
    ],
    LIBDEPS=[
        'absl_bad_optional_access',
        'absl_bad_variant_access',
        'absl_base',
        'absl_city',
        'absl_civil_time',
        'absl_debugging_internal',
        'absl_demangle_internal',
        'absl_graphcycles_internal',
        'absl_hash',
        'absl_int128',
        'absl_kernel_timeout_internal',
        'absl_log_entry',
        'absl_log_globals',
        'absl_log_internal_globals',
        'absl_log_severity',
        'absl_log_sink',
        'absl_low_level_hash',
        'absl_malloc_internal',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_stacktrace',
        'absl_string_view',
        'absl_strings',
        'absl_strings_internal',
        'absl_symbolize',
        'absl_synchronization',
        'absl_throw_delegate',
        'absl_time',
        'absl_time_zone',
    ],
)
# absl_log_internal_proto added as a dependency of other abseil libraries
env.BazelLibrary(
    target='absl_log_internal_proto',
    source=[
        'dist/absl/log/internal/proto.cc',
    ],
    LIBDEPS=[
        'absl_base',
        'absl_int128',
        'absl_log_severity',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_string_view',
        'absl_strings',
        'absl_strings_internal',
        'absl_throw_delegate',
    ],
)
# absl_log_entry added as a dependency of other abseil libraries
env.BazelLibrary(
    target='absl_log_entry',
    source=[
        'dist/absl/log/log_entry.cc',
    ],
    LIBDEPS=[
        'absl_base',
        'absl_civil_time',
        'absl_int128',
        'absl_log_severity',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_string_view',
        'absl_strings',
        'absl_strings_internal',
        'absl_throw_delegate',
        'absl_time',
        'absl_time_zone',
    ],
)
# absl_log_internal_format added as a dependency of other abseil libraries
env.BazelLibrary(
    target='absl_log_internal_format',
    source=[
        'dist/absl/log/internal/log_format.cc',
    ],
    LIBDEPS=[
        'absl_base',
        'absl_civil_time',
        'absl_int128',
        'absl_log_internal_globals',
        'absl_log_severity',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_str_format_internal',
        'absl_string_view',
        'absl_strings',
        'absl_strings_internal',
        'absl_throw_delegate',
        'absl_time',
        'absl_time_zone',
    ],
)
# absl_log_internal_check_op added as a dependency of other abseil libraries
env.BazelLibrary(
    target='absl_log_internal_check_op',
    source=[
        'dist/absl/log/internal/check_op.cc',
    ],
    LIBDEPS=[
        'absl_bad_optional_access',
        'absl_bad_variant_access',
        'absl_base',
        'absl_city',
        'absl_civil_time',
        'absl_debugging_internal',
        'absl_demangle_internal',
        'absl_examine_stack',
        'absl_graphcycles_internal',
        'absl_hash',
        'absl_int128',
        'absl_kernel_timeout_internal',
        'absl_log_entry',
        'absl_log_globals',
        'absl_log_internal_format',
        'absl_log_internal_globals',
        'absl_log_internal_log_sink_set',
        'absl_log_internal_message',
        'absl_log_internal_nullguard',
        'absl_log_internal_proto',
        'absl_log_severity',
        'absl_log_sink',
        'absl_low_level_hash',
        'absl_malloc_internal',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_stacktrace',
        'absl_str_format_internal',
        'absl_strerror',
        'absl_string_view',
        'absl_strings',
        'absl_strings_internal',
        'absl_symbolize',
        'absl_synchronization',
        'absl_throw_delegate',
        'absl_time',
        'absl_time_zone',
    ],
)
# absl_log_internal_conditions added as a dependency of other abseil libraries
env.BazelLibrary(
    target='absl_log_internal_conditions',
    source=[
        'dist/absl/log/internal/conditions.cc',
    ],
    LIBDEPS=[
        'absl_base',
        'absl_log_severity',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
    ],
)
# absl_log_initialize added as a dependency of other abseil libraries
env.BazelLibrary(
    target='absl_log_initialize',
    source=[
        'dist/absl/log/initialize.cc',
    ],
    LIBDEPS=[
        'absl_bad_optional_access',
        'absl_bad_variant_access',
        'absl_base',
        'absl_city',
        'absl_civil_time',
        'absl_hash',
        'absl_int128',
        'absl_log_globals',
        'absl_log_internal_globals',
        'absl_log_severity',
        'absl_low_level_hash',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_string_view',
        'absl_strings',
        'absl_strings_internal',
        'absl_throw_delegate',
        'absl_time',
        'absl_time_zone',
    ],
)
# absl_log_sink added as a dependency of other abseil libraries
env.BazelLibrary(
    target='absl_log_sink',
    source=[
        'dist/absl/log/log_sink.cc',
    ],
    LIBDEPS=[
        'absl_base',
        'absl_civil_time',
        'absl_int128',
        'absl_log_entry',
        'absl_log_severity',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_string_view',
        'absl_strings',
        'absl_strings_internal',
        'absl_throw_delegate',
        'absl_time',
        'absl_time_zone',
    ],
)
# absl_log_globals added as a dependency of other abseil libraries
env.BazelLibrary(
    target='absl_log_globals',
    source=[
        'dist/absl/log/globals.cc',
    ],
    LIBDEPS=[
        'absl_bad_optional_access',
        'absl_bad_variant_access',
        'absl_base',
        'absl_city',
        'absl_hash',
        'absl_int128',
        'absl_log_severity',
        'absl_low_level_hash',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_string_view',
        'absl_strings',
        'absl_strings_internal',
        'absl_throw_delegate',
    ],
)
# absl_log_flags added as a dependency of other abseil libraries
env.BazelLibrary(
    target='absl_log_flags',
    source=[
        'dist/absl/log/flags.cc',
    ],
    LIBDEPS=[
        'absl_bad_optional_access',
        'absl_bad_variant_access',
        'absl_base',
        'absl_city',
        'absl_civil_time',
        'absl_cord',
        'absl_cord_internal',
        'absl_cordz_functions',
        'absl_cordz_handle',
        'absl_cordz_info',
        'absl_crc32c',
        'absl_crc_cord_state',
        'absl_crc_cpu_detect',
        'absl_crc_internal',
        'absl_debugging_internal',
        'absl_demangle_internal',
        'absl_exponential_biased',
        'absl_flags',
        'absl_flags_commandlineflag',
        'absl_flags_commandlineflag_internal',
        'absl_flags_config',
        'absl_flags_internal',
        'absl_flags_marshalling',
        'absl_flags_private_handle_accessor',
        'absl_flags_program_name',
        'absl_flags_reflection',
        'absl_graphcycles_internal',
        'absl_hash',
        'absl_hashtablez_sampler',
        'absl_int128',
        'absl_kernel_timeout_internal',
        'absl_log_globals',
        'absl_log_severity',
        'absl_low_level_hash',
        'absl_malloc_internal',
        'absl_raw_hash_set',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_stacktrace',
        'absl_str_format_internal',
        'absl_string_view',
        'absl_strings',
        'absl_strings_internal',
        'absl_symbolize',
        'absl_synchronization',
        'absl_throw_delegate',
        'absl_time',
        'absl_time_zone',
    ],
)
# absl_int128 is an explicit dependency to the server build
env.BazelLibrary(
    target='absl_int128',
    source=[
        'dist/absl/numeric/int128.cc',
    ],
    LIBDEPS=[],
)
# absl_periodic_sampler added as a dependency of other abseil libraries
env.BazelLibrary(
    target='absl_periodic_sampler',
    source=[
        'dist/absl/profiling/internal/periodic_sampler.cc',
    ],
    LIBDEPS=[
        'absl_exponential_biased',
    ],
)
# absl_exponential_biased is an explicit dependency to the server build
env.BazelLibrary(
    target='absl_exponential_biased',
    source=[
        'dist/absl/profiling/internal/exponential_biased.cc',
    ],
    LIBDEPS=[],
)
# absl_random_internal_randen_hwaes is an explicit dependency to the server build
env.BazelLibrary(
    target='absl_random_internal_randen_hwaes',
    source=[
        'dist/absl/random/internal/randen_detect.cc',
    ],
    LIBDEPS=[
        'absl_random_internal_platform',
        'absl_random_internal_randen_hwaes_impl',
    ],
)
# absl_random_internal_seed_material is an explicit dependency to the server build
env.BazelLibrary(
    target='absl_random_internal_seed_material',
    source=[
        'dist/absl/random/internal/seed_material.cc',
    ],
    LIBDEPS=[
        'absl_bad_optional_access',
        'absl_base',
        'absl_int128',
        'absl_log_severity',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_string_view',
        'absl_strings',
        'absl_strings_internal',
        'absl_throw_delegate',
    ],
)
# absl_random_internal_randen_slow is an explicit dependency to the server build
env.BazelLibrary(
    target='absl_random_internal_randen_slow',
    source=[
        'dist/absl/random/internal/randen_slow.cc',
    ],
    LIBDEPS=[
        'absl_random_internal_platform',
    ],
)
# absl_random_seed_gen_exception is an explicit dependency to the server build
env.BazelLibrary(
    target='absl_random_seed_gen_exception',
    source=[
        'dist/absl/random/seed_gen_exception.cc',
    ],
    LIBDEPS=[],
)
# absl_random_internal_pool_urbg is an explicit dependency to the server build
env.BazelLibrary(
    target='absl_random_internal_pool_urbg',
    source=[
        'dist/absl/random/internal/pool_urbg.cc',
    ],
    LIBDEPS=[
        'absl_bad_optional_access',
        'absl_base',
        'absl_int128',
        'absl_log_severity',
        'absl_random_internal_platform',
        'absl_random_internal_randen',
        'absl_random_internal_randen_hwaes',
        'absl_random_internal_randen_hwaes_impl',
        'absl_random_internal_randen_slow',
        'absl_random_internal_seed_material',
        'absl_random_seed_gen_exception',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_string_view',
        'absl_strings',
        'absl_strings_internal',
        'absl_throw_delegate',
    ],
)
# absl_random_distributions is an explicit dependency to the server build
env.BazelLibrary(
    target='absl_random_distributions',
    source=[
        'dist/absl/random/discrete_distribution.cc',
        'dist/absl/random/gaussian_distribution.cc',
    ],
    LIBDEPS=[
        'absl_base',
        'absl_int128',
        'absl_log_severity',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_string_view',
        'absl_strings',
        'absl_strings_internal',
        'absl_throw_delegate',
    ],
)
# absl_random_internal_randen_hwaes_impl is an explicit dependency to the server build
env.BazelLibrary(
    target='absl_random_internal_randen_hwaes_impl',
    source=[
        'dist/absl/random/internal/randen_hwaes.cc',
    ],
    LIBDEPS=[
        'absl_random_internal_platform',
    ],
)
# absl_random_seed_sequences is an explicit dependency to the server build
env.BazelLibrary(
    target='absl_random_seed_sequences',
    source=[
        'dist/absl/random/seed_sequences.cc',
    ],
    LIBDEPS=[
        'absl_bad_optional_access',
        'absl_base',
        'absl_int128',
        'absl_log_severity',
        'absl_random_internal_platform',
        'absl_random_internal_pool_urbg',
        'absl_random_internal_randen',
        'absl_random_internal_randen_hwaes',
        'absl_random_internal_randen_hwaes_impl',
        'absl_random_internal_randen_slow',
        'absl_random_internal_seed_material',
        'absl_random_seed_gen_exception',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_string_view',
        'absl_strings',
        'absl_strings_internal',
        'absl_throw_delegate',
    ],
)
# absl_random_internal_randen is an explicit dependency to the server build
env.BazelLibrary(
    target='absl_random_internal_randen',
    source=[
        'dist/absl/random/internal/randen.cc',
    ],
    LIBDEPS=[
        'absl_random_internal_platform',
        'absl_random_internal_randen_hwaes',
        'absl_random_internal_randen_hwaes_impl',
        'absl_random_internal_randen_slow',
    ],
)
# absl_random_internal_distribution_test_util added as a dependency of other abseil libraries
env.BazelLibrary(
    target='absl_random_internal_distribution_test_util',
    source=[
        'dist/absl/random/internal/chi_square.cc',
        'dist/absl/random/internal/distribution_test_util.cc',
    ],
    LIBDEPS=[
        'absl_base',
        'absl_int128',
        'absl_log_severity',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_str_format_internal',
        'absl_string_view',
        'absl_strings',
        'absl_strings_internal',
        'absl_throw_delegate',
    ],
)
# absl_random_internal_platform is an explicit dependency to the server build
env.BazelLibrary(
    target='absl_random_internal_platform',
    source=[
        'dist/absl/random/internal/randen_round_keys.cc',
    ],
    LIBDEPS=[],
)
# absl_statusor is an explicit dependency to the server build
env.BazelLibrary(
    target='absl_statusor',
    source=[
        'dist/absl/status/statusor.cc',
    ],
    LIBDEPS=[
        'absl_bad_optional_access',
        'absl_bad_variant_access',
        'absl_base',
        'absl_civil_time',
        'absl_cord',
        'absl_cord_internal',
        'absl_cordz_functions',
        'absl_cordz_handle',
        'absl_cordz_info',
        'absl_crc32c',
        'absl_crc_cord_state',
        'absl_crc_cpu_detect',
        'absl_crc_internal',
        'absl_debugging_internal',
        'absl_demangle_internal',
        'absl_exponential_biased',
        'absl_graphcycles_internal',
        'absl_int128',
        'absl_kernel_timeout_internal',
        'absl_log_severity',
        'absl_malloc_internal',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_stacktrace',
        'absl_status',
        'absl_str_format_internal',
        'absl_strerror',
        'absl_string_view',
        'absl_strings',
        'absl_strings_internal',
        'absl_symbolize',
        'absl_synchronization',
        'absl_throw_delegate',
        'absl_time',
        'absl_time_zone',
    ],
)
# absl_status is an explicit dependency to the server build
env.BazelLibrary(
    target='absl_status',
    source=[
        'dist/absl/status/status.cc',
        'dist/absl/status/status_payload_printer.cc',
    ],
    LIBDEPS=[
        'absl_bad_optional_access',
        'absl_base',
        'absl_civil_time',
        'absl_cord',
        'absl_cord_internal',
        'absl_cordz_functions',
        'absl_cordz_handle',
        'absl_cordz_info',
        'absl_crc32c',
        'absl_crc_cord_state',
        'absl_crc_cpu_detect',
        'absl_crc_internal',
        'absl_debugging_internal',
        'absl_demangle_internal',
        'absl_exponential_biased',
        'absl_graphcycles_internal',
        'absl_int128',
        'absl_kernel_timeout_internal',
        'absl_log_severity',
        'absl_malloc_internal',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_stacktrace',
        'absl_str_format_internal',
        'absl_strerror',
        'absl_string_view',
        'absl_strings',
        'absl_strings_internal',
        'absl_symbolize',
        'absl_synchronization',
        'absl_throw_delegate',
        'absl_time',
        'absl_time_zone',
    ],
)
# absl_cord is an explicit dependency to the server build
env.BazelLibrary(
    target='absl_cord',
    source=[
        'dist/absl/strings/cord.cc',
        'dist/absl/strings/cord_analysis.cc',
        'dist/absl/strings/cord_buffer.cc',
    ],
    LIBDEPS=[
        'absl_bad_optional_access',
        'absl_base',
        'absl_civil_time',
        'absl_cord_internal',
        'absl_cordz_functions',
        'absl_cordz_handle',
        'absl_cordz_info',
        'absl_crc32c',
        'absl_crc_cord_state',
        'absl_crc_cpu_detect',
        'absl_crc_internal',
        'absl_debugging_internal',
        'absl_demangle_internal',
        'absl_exponential_biased',
        'absl_graphcycles_internal',
        'absl_int128',
        'absl_kernel_timeout_internal',
        'absl_log_severity',
        'absl_malloc_internal',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_stacktrace',
        'absl_str_format_internal',
        'absl_string_view',
        'absl_strings',
        'absl_strings_internal',
        'absl_symbolize',
        'absl_synchronization',
        'absl_throw_delegate',
        'absl_time',
        'absl_time_zone',
    ],
)
# absl_string_view added as a dependency of other abseil libraries
env.BazelLibrary(
    target='absl_string_view',
    source=[
        'dist/absl/strings/string_view.cc',
    ],
    LIBDEPS=[
        'absl_base',
        'absl_log_severity',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_throw_delegate',
    ],
)
# absl_strings is an explicit dependency to the server build
env.BazelLibrary(
    target='absl_strings',
    source=[
        'dist/absl/strings/ascii.cc',
        'dist/absl/strings/charconv.cc',
        'dist/absl/strings/escaping.cc',
        'dist/absl/strings/internal/charconv_bigint.cc',
        'dist/absl/strings/internal/charconv_parse.cc',
        'dist/absl/strings/internal/damerau_levenshtein_distance.cc',
        'dist/absl/strings/internal/memutil.cc',
        'dist/absl/strings/internal/stringify_sink.cc',
        'dist/absl/strings/match.cc',
        'dist/absl/strings/numbers.cc',
        'dist/absl/strings/str_cat.cc',
        'dist/absl/strings/str_replace.cc',
        'dist/absl/strings/str_split.cc',
        'dist/absl/strings/substitute.cc',
    ],
    LIBDEPS=[
        'absl_base',
        'absl_int128',
        'absl_log_severity',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_string_view',
        'absl_strings_internal',
        'absl_throw_delegate',
    ],
)
# absl_strings_internal is an explicit dependency to the server build
env.BazelLibrary(
    target='absl_strings_internal',
    source=[
        'dist/absl/strings/internal/ostringstream.cc',
        'dist/absl/strings/internal/utf8.cc',
        'dist/absl/strings/internal/escaping.cc',
    ],
    LIBDEPS=[
        'absl_base',
        'absl_log_severity',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
    ],
)
# absl_cordz_functions is an explicit dependency to the server build
env.BazelLibrary(
    target='absl_cordz_functions',
    source=[
        'dist/absl/strings/internal/cordz_functions.cc',
    ],
    LIBDEPS=[
        'absl_exponential_biased',
        'absl_log_severity',
        'absl_raw_logging_internal',
    ],
)
# absl_cordz_info is an explicit dependency to the server build
env.BazelLibrary(
    target='absl_cordz_info',
    source=[
        'dist/absl/strings/internal/cordz_info.cc',
    ],
    LIBDEPS=[
        'absl_base',
        'absl_civil_time',
        'absl_cord_internal',
        'absl_cordz_functions',
        'absl_cordz_handle',
        'absl_crc32c',
        'absl_crc_cord_state',
        'absl_crc_cpu_detect',
        'absl_crc_internal',
        'absl_debugging_internal',
        'absl_demangle_internal',
        'absl_exponential_biased',
        'absl_graphcycles_internal',
        'absl_int128',
        'absl_kernel_timeout_internal',
        'absl_log_severity',
        'absl_malloc_internal',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_stacktrace',
        'absl_str_format_internal',
        'absl_string_view',
        'absl_strings',
        'absl_strings_internal',
        'absl_symbolize',
        'absl_synchronization',
        'absl_throw_delegate',
        'absl_time',
        'absl_time_zone',
    ],
)
# absl_cord_internal is an explicit dependency to the server build
env.BazelLibrary(
    target='absl_cord_internal',
    source=[
        'dist/absl/strings/internal/cord_internal.cc',
        'dist/absl/strings/internal/cord_rep_btree.cc',
        'dist/absl/strings/internal/cord_rep_btree_navigator.cc',
        'dist/absl/strings/internal/cord_rep_btree_reader.cc',
        'dist/absl/strings/internal/cord_rep_crc.cc',
        'dist/absl/strings/internal/cord_rep_consume.cc',
        'dist/absl/strings/internal/cord_rep_ring.cc',
    ],
    LIBDEPS=[
        'absl_base',
        'absl_crc32c',
        'absl_crc_cord_state',
        'absl_crc_cpu_detect',
        'absl_crc_internal',
        'absl_int128',
        'absl_log_severity',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_str_format_internal',
        'absl_string_view',
        'absl_strings',
        'absl_strings_internal',
        'absl_throw_delegate',
    ],
)
# absl_str_format_internal is an explicit dependency to the server build
env.BazelLibrary(
    target='absl_str_format_internal',
    source=[
        'dist/absl/strings/internal/str_format/arg.cc',
        'dist/absl/strings/internal/str_format/bind.cc',
        'dist/absl/strings/internal/str_format/extension.cc',
        'dist/absl/strings/internal/str_format/float_conversion.cc',
        'dist/absl/strings/internal/str_format/output.cc',
        'dist/absl/strings/internal/str_format/parser.cc',
    ],
    LIBDEPS=[
        'absl_base',
        'absl_int128',
        'absl_log_severity',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_string_view',
        'absl_strings',
        'absl_strings_internal',
        'absl_throw_delegate',
    ],
)
# absl_cordz_sample_token added as a dependency of other abseil libraries
env.BazelLibrary(
    target='absl_cordz_sample_token',
    source=[
        'dist/absl/strings/internal/cordz_sample_token.cc',
    ],
    LIBDEPS=[
        'absl_base',
        'absl_civil_time',
        'absl_cord_internal',
        'absl_cordz_functions',
        'absl_cordz_handle',
        'absl_cordz_info',
        'absl_crc32c',
        'absl_crc_cord_state',
        'absl_crc_cpu_detect',
        'absl_crc_internal',
        'absl_debugging_internal',
        'absl_demangle_internal',
        'absl_exponential_biased',
        'absl_graphcycles_internal',
        'absl_int128',
        'absl_kernel_timeout_internal',
        'absl_log_severity',
        'absl_malloc_internal',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_stacktrace',
        'absl_str_format_internal',
        'absl_string_view',
        'absl_strings',
        'absl_strings_internal',
        'absl_symbolize',
        'absl_synchronization',
        'absl_throw_delegate',
        'absl_time',
        'absl_time_zone',
    ],
)
# absl_cordz_handle is an explicit dependency to the server build
env.BazelLibrary(
    target='absl_cordz_handle',
    source=[
        'dist/absl/strings/internal/cordz_handle.cc',
    ],
    LIBDEPS=[
        'absl_base',
        'absl_civil_time',
        'absl_debugging_internal',
        'absl_demangle_internal',
        'absl_graphcycles_internal',
        'absl_int128',
        'absl_kernel_timeout_internal',
        'absl_log_severity',
        'absl_malloc_internal',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_stacktrace',
        'absl_string_view',
        'absl_strings',
        'absl_strings_internal',
        'absl_symbolize',
        'absl_synchronization',
        'absl_throw_delegate',
        'absl_time',
        'absl_time_zone',
    ],
)
# absl_synchronization is an explicit dependency to the server build
env.BazelLibrary(
    target='absl_synchronization',
    source=[
        'dist/absl/synchronization/barrier.cc',
        'dist/absl/synchronization/blocking_counter.cc',
        'dist/absl/synchronization/internal/create_thread_identity.cc',
        'dist/absl/synchronization/internal/futex_waiter.cc',
        'dist/absl/synchronization/internal/per_thread_sem.cc',
        'dist/absl/synchronization/internal/pthread_waiter.cc',
        'dist/absl/synchronization/internal/sem_waiter.cc',
        'dist/absl/synchronization/internal/stdcpp_waiter.cc',
        'dist/absl/synchronization/internal/waiter_base.cc',
        'dist/absl/synchronization/internal/win32_waiter.cc',
        'dist/absl/synchronization/notification.cc',
        'dist/absl/synchronization/mutex.cc',
    ],
    LIBDEPS=[
        'absl_base',
        'absl_civil_time',
        'absl_debugging_internal',
        'absl_demangle_internal',
        'absl_graphcycles_internal',
        'absl_int128',
        'absl_kernel_timeout_internal',
        'absl_log_severity',
        'absl_malloc_internal',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_stacktrace',
        'absl_string_view',
        'absl_strings',
        'absl_strings_internal',
        'absl_symbolize',
        'absl_throw_delegate',
        'absl_time',
        'absl_time_zone',
    ],
)
# absl_kernel_timeout_internal added as a dependency of other abseil libraries
env.BazelLibrary(
    target='absl_kernel_timeout_internal',
    source=[
        'dist/absl/synchronization/internal/kernel_timeout.cc',
    ],
    LIBDEPS=[
        'absl_base',
        'absl_civil_time',
        'absl_int128',
        'absl_log_severity',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_string_view',
        'absl_strings',
        'absl_strings_internal',
        'absl_throw_delegate',
        'absl_time',
        'absl_time_zone',
    ],
)
# absl_graphcycles_internal is an explicit dependency to the server build
env.BazelLibrary(
    target='absl_graphcycles_internal',
    source=[
        'dist/absl/synchronization/internal/graphcycles.cc',
    ],
    LIBDEPS=[
        'absl_base',
        'absl_log_severity',
        'absl_malloc_internal',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
    ],
)
# absl_time_zone is an explicit dependency to the server build
env.BazelLibrary(
    target='absl_time_zone',
    source=[
        'dist/absl/time/internal/cctz/src/time_zone_fixed.cc',
        'dist/absl/time/internal/cctz/src/time_zone_format.cc',
        'dist/absl/time/internal/cctz/src/time_zone_if.cc',
        'dist/absl/time/internal/cctz/src/time_zone_impl.cc',
        'dist/absl/time/internal/cctz/src/time_zone_info.cc',
        'dist/absl/time/internal/cctz/src/time_zone_libc.cc',
        'dist/absl/time/internal/cctz/src/time_zone_lookup.cc',
        'dist/absl/time/internal/cctz/src/time_zone_posix.cc',
        'dist/absl/time/internal/cctz/src/zone_info_source.cc',
    ],
    LIBDEPS=[],
)
# absl_civil_time is an explicit dependency to the server build
env.BazelLibrary(
    target='absl_civil_time',
    source=[
        'dist/absl/time/internal/cctz/src/civil_time_detail.cc',
    ],
    LIBDEPS=[],
)
# absl_time is an explicit dependency to the server build
env.BazelLibrary(
    target='absl_time',
    source=[
        'dist/absl/time/civil_time.cc',
        'dist/absl/time/clock.cc',
        'dist/absl/time/duration.cc',
        'dist/absl/time/format.cc',
        'dist/absl/time/time.cc',
    ],
    LIBDEPS=[
        'absl_base',
        'absl_civil_time',
        'absl_int128',
        'absl_log_severity',
        'absl_raw_logging_internal',
        'absl_spinlock_wait',
        'absl_string_view',
        'absl_strings',
        'absl_strings_internal',
        'absl_throw_delegate',
        'absl_time_zone',
    ],
)
# absl_bad_any_cast_impl added as a dependency of other abseil libraries
env.BazelLibrary(
    target='absl_bad_any_cast_impl',
    source=[
        'dist/absl/types/bad_any_cast.cc',
    ],
    LIBDEPS=[
        'absl_log_severity',
        'absl_raw_logging_internal',
    ],
)
# absl_bad_optional_access is an explicit dependency to the server build
env.BazelLibrary(
    target='absl_bad_optional_access',
    source=[
        'dist/absl/types/bad_optional_access.cc',
    ],
    LIBDEPS=[
        'absl_log_severity',
        'absl_raw_logging_internal',
    ],
)
# absl_bad_variant_access is an explicit dependency to the server build
env.BazelLibrary(
    target='absl_bad_variant_access',
    source=[
        'dist/absl/types/bad_variant_access.cc',
    ],
    LIBDEPS=[
        'absl_log_severity',
        'absl_raw_logging_internal',
    ],
)
