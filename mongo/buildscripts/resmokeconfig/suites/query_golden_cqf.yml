test_kind: js_test

selector:
  roots:
  - jstests/query_golden/**/*.js
  exclude_files:
  - jstests/query_golden/libs/**
executor:
  archive:
    hooks:
      - ValidateCollections
  config:
    shell_options:
      crashOnInvalidBSONError: ""
      objcheck: ""
      eval: |
        // Keep in sync with query_golden_classic.yml.
        await import("jstests/libs/override_methods/detect_spawning_own_mongod.js");
        await import("jstests/libs/set_force_bonsai.js");
        await import("jstests/libs/override_methods/golden_overrides.js");
        _openGoldenData(jsTestName(), {relativePath: "jstests/query_golden/expected_output"});
  hooks:
  - class: ValidateCollections
    shell_options:
      global_vars:
        TestData:
          skipValidationOnNamespaceNotFound: false
  - class: CleanEveryN
    n: 20
  fixture:
    class: MongoDFixture
    mongod_options:
      # Keep in sync with cqf.yml.
      set_parameters:
        enableTestCommands: 1
        featureFlagCommonQueryFramework: true
        internalQueryCardinalityEstimatorMode: "sampling"
        internalQueryFrameworkControl: "forceBonsai"
