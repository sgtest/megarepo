test_kind: js_test

selector:
  roots:
  - jstests/core/**/*.js
  # TODO: SERVER-86059 Support tracking unsharded collections with FLE in the sharding catalog
  # - src/mongo/db/modules/*/jstests/fle2/**/*.js
  exclude_files:
  # These tests are run in sharded_jscore_txns.
  - jstests/core/txns/**/*.js
  # The following tests fail because a certain command or functionality is not supported by
  # mongos. This command or functionality is placed in a comment next to the failing test.
  - jstests/core/**/apitest_db.js  # serverStatus output doesn't have storageEngine.
  - jstests/core/**/awaitdata_getmore_cmd.js  # capped collections.
  - jstests/core/**/bypass_doc_validation.js  # sharded $out output not permitted
  - jstests/core/**/check_shard_index.js  # checkShardingIndex.
  - jstests/core/**/collection_truncate.js  # emptycapped.
  - jstests/core/**/compact_keeps_indexes.js  # compact.
  - jstests/core/**/currentop.js  # uses fsync.
  - jstests/core/**/dbhash.js  # dbhash.
  - jstests/core/**/fsync.js  # uses fsync.
  - jstests/core/**/geo_s2cursorlimitskip.js  # profiling.
  - jstests/core/**/geo_update_btree2.js  # notablescan.
  - jstests/core/**/index9.js  # "local" database.
  - jstests/core/**/queryoptimizera.js  # "local" database.
  - jstests/core/**/stages*.js  # stageDebug.
  - jstests/core/**/startup_log.js  # "local" database.
  - jstests/core/**/tailable_cursor_invalidation.js # capped collections.
  - jstests/core/**/tailable_getmore_batch_size.js # capped collections.
  - jstests/core/**/tailable_skip_limit.js # capped collections.
  - jstests/core/**/top.js  # top.
  # The following tests fail because mongos behaves differently from mongod when testing certain
  # functionality. The differences are in a comment next to the failing test.
  - jstests/core/**/explain_missing_database.js  # Behavior with no db different on mongos.
  - jstests/core/**/geo_2d_explain.js  # executionSuccess in different spot in explain().
  - jstests/core/**/geo_s2explain.js  # inputStage in different spot in explain().
  - jstests/core/**/geo_s2sparse.js  # keysPerIndex in different spot in validate().
  - jstests/core/**/operation_latency_histogram.js  # Stats are counted differently on mongos, SERVER-24880.
  # The following tests fail because explain expect a different plan query when collections live on separate shards
  # This test expects sharded collections to be sharded across multiple shards.
  - jstests/core/administrative/current_op/currentop_shell.js
  # The following tests fail because they count indexes. These counts do not take into account the
  # additional hashed shard key indexes that are automatically added by this passthrough.
  - jstests/core/**/apitest_dbcollection.js
  - jstests/core/**/bad_index_plugin.js
  - jstests/core/**/create_indexes.js
  - jstests/core/**/list_indexes_non_existent_ns.js
  - jstests/core/**/mr_preserve_indexes.js
  # These tests fail because sharded clusters do not clean up correctly after failed index builds.
  # See SERVER-33207 as an example.
  - jstests/core/**/geo_borders.js
  # TODO: Remove after fixing SERVER-29449. executionStats.nReturned is incorrect for sharded
  # queries with a limit or for distinct commands.
  - jstests/core/**/distinct_index1.js
  - jstests/core/**/explain1.js
  - jstests/core/**/explain4.js
  - jstests/core/**/sortk.js
  # TODO: Remove after fixing SERVER-32563. The implementation of explain for the count command is
  # incorrect on sharded collections.
  - jstests/core/**/explain_count.js
  - jstests/core/**/explain_server_params.js
  # TODO SERVER-32311: These tests use plan stage helpers which can't handle sharded explain output.
  - jstests/core/**/expr_index_use.js
  - jstests/core/**/index_multikey.js
  - jstests/core/**/optimized_match_explain.js
  - jstests/core/**/sort_array.js

  # The following tests are excluded specifically for this passthrough suite.
  # TransitionTo/FromDedicated runs remove/addShard which implicitly will set a cluster parameter, which
  # will conflict with tests that explicitly set cluster parameters.
  - jstests/core/query/query_settings/**/*.js

  exclude_with_any_tags:
  - assumes_standalone_mongod
  - assumes_against_mongod_not_mongos
  # This passthrough implicitly shards the accessed collections. Do not run tests where collections
  # can't be created on `getCollection` call.
  - assumes_no_implicit_collection_creation_on_get_collection
  # Tests tagged with the following will fail because they assume collections are not sharded.
  - assumes_no_implicit_collection_creation_after_drop
  - assumes_no_implicit_index_creation
  - assumes_unsharded_collection
  - cannot_create_unique_index_when_using_hashed_shard_key
  # system.profile collection doesn't exist on mongos.
  - requires_profiling
  # Capped collections cannot be sharded
  - requires_capped

  # The following tags are excluded specifically for this suite.
  - config_shard_incompatible
  # Currently this passthrough enables the balancer to allow the config transition to successfully complete.
  - assumes_balancer_off

executor:
  archive:
    hooks:
      - CheckReplDBHash
      - CheckMetadataConsistencyInBackground
      - ValidateCollections
  config:
    shell_options:
      eval: await import("jstests/libs/override_methods/implicitly_shard_accessed_collections.js")
  hooks:
  - class: ContinuousConfigShardTransition
  - class: CheckReplDBHash
  - class: CheckMetadataConsistencyInBackground
  - class: ValidateCollections
  - class: CheckOrphansDeleted
  - class: CleanEveryN
    n: 20
  fixture:
    class: ShardedClusterFixture
    config_shard: "any"
    num_shards: 2
    mongos_options:
      set_parameters:
        enableTestCommands: 1
    mongod_options:
      set_parameters:
        enableTestCommands: 1
        orphanCleanupDelaySecs: 1
