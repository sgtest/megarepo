# This suite is based on the jstestfuzz_replication suite. It is used for testing that there is
# feature parity between a replica set bootstrapped as a single-shard cluster and replica set
# endpoint enabled and a regular replica set. It does that by comparing the responses that two
# such replica sets return for the same command generated by the fuzzer.

test_kind: js_test

selector:
  roots:
  - jstestfuzz/out/*.js

executor:
  archive:
    hooks:
      # TODO (SERVER-83433): Add back the test coverage for running db hash check on replica set
      # that is fsync locked and has replica set endpoint enabled.
      # - CheckReplDBHash
      - CheckReplOplogs
      - ValidateCollections
  config:
    shell_options:
      eval: >-
        await import('jstests/libs/override_methods/rs_endpoint_check_parity_replica_set.js');
      crashOnInvalidBSONError: ""
      objcheck: ""
      global_vars:
        TestData: &TestData
          testingReplicaSetEndpoint: true
          # Other fuzzers test commands against replica sets with logical session ids.
          disableImplicitSessions: true
  hooks:
  - class: RunQueryStats
    allow_feature_not_supported: true
  - class: FuzzerRestoreSettings
    shell_options:
      global_vars:
        TestData: *TestData
  # The CheckReplDBHash hook waits until all operations have replicated to and have been applied
  # on the secondaries, so we run the ValidateCollections hook after it to ensure we're
  # validating the entire contents of the collection.
  - class: CheckReplOplogs
  # TODO (SERVER-83433): Add back the test coverage for running db hash check on replica set that
  # is fsync locked and has replica set endpoint enabled.
  # - class: CheckReplDBHash
  #   shell_options:
  #     global_vars:
  #       TestData:
  #         skipValidationOnInvalidViewDefinitions: true
  - class: ValidateCollections
    shell_options:
      global_vars:
        TestData:
          skipValidationOnInvalidViewDefinitions: true
  fixture:
    class: MultiReplicaSetFixture
    num_replica_sets: 2
    num_nodes_per_replica_set: 2
    common_mongod_options:
      set_parameters:
        disableLogicalSessionCacheRefresh: false
        enableTestCommands: 1
        transactionLifetimeLimitSeconds: 1
        writePeriodicNoops: 1
        internalQueryStatsRateLimit: -1
        internalQueryStatsErrorsAreCommandFatal: true
      verbose: ''
    per_mongod_options:
      - set_parameters:
          featureFlagAllMongodsAreSharded: true
          featureFlagReplicaSetEndpoint: true
      - set_parameters:
          featureFlagAllMongodsAreSharded: false
          featureFlagReplicaSetEndpoint: false
    per_replica_set_options:
      - use_auto_bootstrap_procedure: 1
      - use_auto_bootstrap_procedure: 0
    persist_connection_strings: true
