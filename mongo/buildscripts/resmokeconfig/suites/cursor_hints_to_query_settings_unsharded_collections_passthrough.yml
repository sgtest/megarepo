# This test suite emulates cursor hints with query settings commands. This aims to test the
# correctness of query settings application.
test_kind: js_test

selector:
  roots:
    - jstests/core/**/*.js
  exclude_files:
    # TODO SERVER-81601 Re-enable once query settings support views.
    - jstests/core/views/*.js
    - jstests/core/query/agg_hint.js

    # TODO SERVER-85242 Re-enable once the fallback mechanism also covers runtime planning errors.
    - jstests/core/query/or/orj.js

    # TODO SERVER-81601 Re-enable once query settings support views.
    - jstests/core/timeseries/**/*.js

    # The following tests fail because a certain command or functionality is not supported by
    # mongos. This command or functionality is placed in a comment next to the failing test.
    - jstests/core/**/apitest_db.js  # serverStatus output doesn't have storageEngine.
    - jstests/core/**/awaitdata_getmore_cmd.js  # capped collections.
    - jstests/core/**/bypass_doc_validation.js  # sharded $out output not permitted
    - jstests/core/**/check_shard_index.js  # checkShardingIndex.
    - jstests/core/**/collection_truncate.js  # emptycapped.
    - jstests/core/**/compact_keeps_indexes.js  # compact.
    - jstests/core/**/currentop.js  # uses fsync.
    - jstests/core/**/dbhash.js  # dbhash.
    - jstests/core/**/fsync.js  # uses fsync.
    - jstests/core/**/geo_s2cursorlimitskip.js  # profiling.
    - jstests/core/**/geo_update_btree2.js  # notablescan.
    - jstests/core/**/index9.js  # "local" database.
    - jstests/core/**/queryoptimizera.js  # "local" database.
    - jstests/core/**/stages*.js  # stageDebug.
    - jstests/core/**/startup_log.js  # "local" database.
    - jstests/core/**/tailable_cursor_invalidation.js # capped collections.
    - jstests/core/**/tailable_getmore_batch_size.js # capped collections.
    - jstests/core/**/tailable_skip_limit.js # capped collections.
    - jstests/core/**/top.js  # top.
    - jstests/core/capped/capped_max1.js # capped collections

    # The following tests fail because mongos behaves differently from mongod when testing certain
    # functionality. The differences are in a comment next to the failing test.
    - jstests/core/**/explain_missing_database.js  # Behavior with no db different on mongos, SERVER-18047.
    - jstests/core/**/geo_2d_explain.js  # executionSuccess in different spot in explain().
    - jstests/core/**/geo_s2explain.js  # inputStage in different spot in explain().
    - jstests/core/**/geo_s2sparse.js  # keysPerIndex in different spot in validate().
    - jstests/core/**/operation_latency_histogram.js  # Stats are counted differently on mongos, SERVER-24880.

    # Query settings do not force indexes, and therefore empty filter will result in collection scans.
    - jstests/core/index/geo/geo6.js
    - jstests/core/index/index_check6.js
    - jstests/core/index/index_diag.js
    - jstests/core/index/index_multikey.js
    - jstests/core/query/covered_multikey.js
    - jstests/core/query/explain/explain_shell_helpers.js
    - jstests/core/return_key.js

    # This suite emits additional explains alongside the tested command. This interferes with the number of
    # expected plan cache entries.
    - jstests/core/query/plan_cache/plan_cache_sbe_hinted.js

    # The following tests fail because they count indexes. These counts do not take into account the
    # additional hashed shard key indexes that are automatically added by this passthrough.
    - jstests/core/catalog/list_indexes_invalid.js

    # The following tests fail because they count indexes. These counts do not take into account the
    # additional hashed shard key indexes that are automatically added by this passthrough.
    - jstests/core/query/mr/mr_merge.js
    - jstests/core/query/mr/mr_preserve_indexes.js

    # This suite intercepts exceptions in order to override only commands which worked originally. This interferes
    # with the expected exit code of the test and/or 'assert.throws()'.
    - jstests/core/query/count/count_plan_summary.js
    - jstests/core/query/cursor/getmore_invalidated_cursors.js

    # Query settings have a higher precedence over index filters.
    - jstests/core/index/index_filter_catalog_independent.js
    - jstests/core/index/index_filter_collation.js
    - jstests/core/index/index_filter_commands.js
    - jstests/core/index/index_filter_on_hidden_index.js
    - jstests/core/index/wildcard/compound_wildcard_index_filter.js
    - jstests/core/index/wildcard/wildcard_index_filter.js

    # Tests partial/sparse indexes. These cannot be forced using query settings if they
    # lead to an incomplete result set.
    - jstests/core/index/index_multiple_compatibility.js
    - jstests/core/index/indext.js
    - jstests/core/index/sparse_index_internal_expr.js
    - jstests/core/query/exists/existsa.js
    # Similar to the above, column store and timeseries indexes cannot be forced using query settings.
    - jstests/core/columnstore/columnstore_index_correctness.js

    - jstests/core/query/query_settings/**/*.js
    - jstests/core/txns/**/*.js
  exclude_with_any_tags:
    - assumes_standalone_mongod
    - assumes_against_mongod_not_mongos
    - requires_non_retryable_commands
    - requires_profiling
executor:
  archive:
    hooks:
      - CheckReplDBHash
      - CheckMetadataConsistencyInBackground
      - ValidateCollections
  config:
    shell_options:
      crashOnInvalidBSONError: ""
      objcheck: ""
      eval: >-
        await import("jstests/libs/override_methods/detect_spawning_own_mongod.js");
        await import("jstests/libs/override_methods/make_cursor_hints_into_query_settings.js");
      global_vars:
        TestData:
          isCursorHintsToQuerySettings: true
  hooks:
    - class: CheckReplDBHash
    - class: CheckMetadataConsistencyInBackground
    - class: ValidateCollections
      shell_options:
        global_vars:
          TestData:
            skipValidationOnNamespaceNotFound: false
    - class: CheckOrphansDeleted
    - class: CleanEveryN
      n: 20
  fixture:
    class: ShardedClusterFixture
    num_shards: 2
    enable_balancer: false
    mongos_options:
      set_parameters:
        enableTestCommands: 1
        # TODO SERVER-52304 Remove this once the query settings feature flag is enabled.
        featureFlagQuerySettings: true
    mongod_options:
      set_parameters:
        enableTestCommands: 1
        # TODO SERVER-52304 Remove this once the query settings feature flag is enabled.
        featureFlagQuerySettings: true
