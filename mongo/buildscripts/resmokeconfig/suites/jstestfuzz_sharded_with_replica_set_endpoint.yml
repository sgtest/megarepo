# This suite is based on the jstestfuzz_sharded suite. It is used for testing that there is
# feature parity between a single-shard cluster connected using replica set endpoint and a
# single-shard cluster connected using a router. It does that by comparing the responses that
# two such sharded clusters return for the same command generated by the fuzzer.

test_kind: js_test

selector:
  roots:
  - jstestfuzz/out/*.js

executor:
  archive:
    hooks:
      # TODO (SERVER-83433): Add back the test coverage for running db hash check on replica set that
      # is fsync locked and has replica set endpoint enabled.
      # - class: CheckReplDBHash
      - CheckMetadataConsistencyInBackground
      - ValidateCollections
  config:
    shell_options:
      eval: >-
        await import('jstests/libs/override_methods/rs_endpoint_check_parity_sharded_cluster.js');
      global_vars:
        TestData: &TestData
          testingReplicaSetEndpoint: true
          # Other fuzzers test commands against sharded clusters with logical session ids.
          disableImplicitSessions: true
      crashOnInvalidBSONError: ""
      objcheck: ""
  hooks:
  - class: RunQueryStats
    allow_feature_not_supported: true
  - class: FuzzerRestoreSettings
    shell_options:
      global_vars:
        TestData: *TestData
  # TODO (SERVER-83433): Add back the test coverage for running db hash check on replica set that
  # is fsync locked and has replica set endpoint enabled.
  # - class: CheckReplDBHash
  #   shell_options:
  #     global_vars:
  #       TestData:
  #         skipValidationOnInvalidViewDefinitions: true
  - class: CheckMetadataConsistencyInBackground
    shell_options:
      global_vars:
        TestData: *TestData
  - class: ValidateCollections
    shell_options:
      global_vars:
        TestData:
          skipValidationOnInvalidViewDefinitions: true
  - class: CheckRoutingTableConsistency
    shell_options:
      global_vars:
        TestData:
          <<: *TestData
          mayForgeReshardingTempCollections: true
  fixture:
    class: MultiShardedClusterFixture
    num_sharded_clusters: 2
    num_shards: 1
    num_rs_nodes_per_shard: 2
    config_shard: "any"
    common_mongod_options:
      set_parameters:
        disableLogicalSessionCacheRefresh: false
        enableTestCommands: 1
        transactionLifetimeLimitSeconds: 1
        writePeriodicNoops: 1
        internalQueryStatsRateLimit: -1
        internalQueryStatsErrorsAreCommandFatal: true
      verbose: ''
    per_mongod_options:
      - set_parameters:
          featureFlagRouterPort: true
          featureFlagReplicaSetEndpoint: true
      - set_parameters:
          featureFlagRouterPort: false
          featureFlagReplicaSetEndpoint: false
    per_sharded_cluster_options:
      - embedded_router: 1
        replica_set_endpoint: 1
      - embedded_router: 0
        replica_set_endpoint: 0
    persist_connection_strings: true
