test_kind: js_test

selector:
  roots:
  - jstests/core/**/*.js
  - jstests/fle2/**/*.js
  - src/mongo/db/modules/*/jstests/fle2/**/*.js

  exclude_files:
  # These tests are run in sharded_jscore_txns.
  - jstests/core/txns/**/*.js
  # TODO: SERVER-81495 Enable timeseries tests
  - jstests/core/timeseries/**/*.js
  # TODO: SERVER-83396 Enable once unsplittable collections are created through the create command
  - jstests/core/ddl/create_collection.js
  - jstests/core/failcommand_failpoint.js
  - jstests/core/views/views_collation.js

  # TODO: SERVER-82802 Enable after fixing system.js feature with collections living outside the primary
  - jstests/core/**/mr_stored.js
  - jstests/core/**/system_js_access.js
  - jstests/core/**/system_js_drop.js
  - jstests/core/**/where_system_js.js
  - jstests/core/loadserverscripts.js
  - jstests/core/storefunc.js
  # TODO: SERVER-83399 Enable after fix
  - src/mongo/db/modules/enterprise/jstests/fle2/cleanup_collection.js
  - src/mongo/db/modules/enterprise/jstests/fle2/compact_collection.js
  # The following tests fail because a certain command or functionality is not supported on
  # mongos. This command or functionality is placed in a comment next to the failing test.
  - jstests/core/**/apitest_db.js  # serverStatus output doesn't have storageEngine.
  - jstests/core/**/check_shard_index.js  # checkShardingIndex.
  - jstests/core/**/collection_truncate.js  # emptycapped.
  - jstests/core/**/compact_keeps_indexes.js  # compact.
  - jstests/core/**/currentop.js  # uses fsync.
  - jstests/core/**/dbhash.js  # dbhash.
  - jstests/core/**/dbhash2.js  # dbhash.
  - jstests/core/**/fsync.js  # uses fsync.
  - jstests/core/**/geo_s2cursorlimitskip.js  # profiling.
  - jstests/core/**/geo_update_btree2.js  # notablescan.
  - jstests/core/**/index9.js  # "local" database.
  - jstests/core/**/queryoptimizera.js  # "local" database.
  - jstests/core/**/stages*.js  # stageDebug.
  - jstests/core/**/startup_log.js  # "local" database.
  - jstests/core/**/top.js  # top.
  # The following tests fail because mongos behaves differently from mongod when testing certain
  # functionality. The differences are in a comment next to the failing test.
  - jstests/core/**/explain_missing_database.js  # Behavior with no db different on mongos.
  - jstests/core/**/geo_2d_explain.js  # executionSuccess in different spot in explain().
  - jstests/core/**/geo_s2explain.js  # inputStage in different spot in explain().
  - jstests/core/**/geo_s2sparse.js  # keysPerIndex in different spot in validate().
  - jstests/core/**/operation_latency_histogram.js  # Stats are counted differently on mongos, SERVER-24880.
  - jstests/core/**/or_to_in.js # queryPlanner in different spot in explain()
  # The following tests fail because of divergent dropCollection behavior between standalones and
  # sharded clusters. These tests expect a second drop command to error, whereas in sharded clusters
  # we expect a second drop to return status OK.
  - jstests/core/**/explain_upsert.js
  # The following tests fail because explain expect a different plan query when collections live on separate shards
  # TODO: SERVER-83351 Investigate if this tests can be rewritten to support sharded-cluster scenarios
  - jstests/core/query/explain/explain_find_trivially_false_predicates_in_agg_pipelines.js
  - jstests/core/query/plan_cache/plan_cache_list_plans.js
  - jstests/core/index/index_filter_commands.js
  - jstests/core/index/index_stats.js
  # TODO: SERVER-83582 Enable after fix
  - jstests/core/write/insert/insert_id_undefined.js
  exclude_with_any_tags:
  - assumes_standalone_mongod
  - assumes_against_mongod_not_mongos
  # system.profile collection doesn't exist on mongos.
  - requires_profiling
  - assumes_no_implicit_collection_creation_on_get_collection
  # TODO: SERVER-81937 Enable transaction tests
  - uses_transactions
  # TODO: SERVER-83268 Enable timeseries tests
  - requires_timeseries

executor:
  archive:
    hooks:
      - CheckReplDBHash
      - CheckMetadataConsistencyInBackground
      - ValidateCollections
    tests: true
  config:
    shell_options:
      eval: load("jstests/libs/override_methods/implicitly_create_unsplittable_collections_on_random_shards.js")
  hooks:
  - class: CheckReplDBHash
  - class: CheckMetadataConsistencyInBackground
  - class: ValidateCollections
  - class: CheckOrphansDeleted
  - class: CleanEveryN
    n: 20
  fixture:
    class: ShardedClusterFixture
    num_shards: 2
    enable_balancer: false
    mongos_options:
      set_parameters:
        enableTestCommands: 1
    mongod_options:
      set_parameters:
        enableTestCommands: 1
