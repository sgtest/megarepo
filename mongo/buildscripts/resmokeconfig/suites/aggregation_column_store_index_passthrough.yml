# This test suite re-uses the tests in the aggregation suite but will automatically create a column
# store index on each collection using the failpoint defined in the test fixture's parameters below.
# For more details and rationale for this approach, see the failpoint's definition.
test_kind: js_test

selector:
  roots:
  - jstests/aggregation/**/*.js
  exclude_files:
  - jstests/aggregation/extras/*.js
  - jstests/aggregation/data/*.js

  exclude_with_any_tags:
  - assumes_no_implicit_index_creation
  # Column Store Indexes are known to mess up projection field order and it is fundamental to the
  # design so we accept these tests will fail.
  - tests_projection_field_order

executor:
  archive:
    hooks:
      - ValidateCollections
  config:
    shell_options:
      # This override method helps some tests remain applicable in the passthrough by hiding the
      # column store indexes from 'listIndexes' output, so tests can still see only a list of
      # indexes that the test itself created.
      eval: await import("jstests/libs/override_methods/hide_column_store_indexes_from_get_indexes.js")
  hooks:
  - class: ValidateCollections
  - class: CleanEveryN
    n: 20
  fixture:
    class: MongoDFixture
    mongod_options:
      set_parameters:
        enableTestCommands: 1
        failpoint.createColumnIndexOnAllCollections:
          mode: alwaysOn
        internalQueryColumnScanMinAvgDocSizeBytes: 0
        internalQueryColumnScanMinCollectionSizeBytes: 0
        internalQueryColumnScanMinNumColumnFilters: 0
