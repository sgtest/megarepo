test_kind: fsm_workload_test

# This suite connects to a running mongod replica set to test backup_restore.
# It must specify resmoke.py options '--shellConnPort' or '--shellConnString'.

selector:
  roots:
  - jstests/concurrency/fsm_workloads/**/*.js
  exclude_files:
  # The auto_compact.js workload can slow down the system and cause timeouts.
  - jstests/concurrency/fsm_workloads/auto_compact.js

  # These workloads use up to 100MB of memory, which can overwhelm test hosts.
  - jstests/concurrency/fsm_workloads/agg_group_external.js
  - jstests/concurrency/fsm_workloads/agg_sort.js
  - jstests/concurrency/fsm_workloads/agg_sort_external.js
  - jstests/concurrency/fsm_workloads/schema_validator_with_expr_variables.js

  # The findAndModify_update_grow.js workload can cause OOM kills on test hosts.
  - jstests/concurrency/fsm_workloads/findAndModify_update_grow.js

  # These workloads run the reIndex command, which is only allowed on a standalone node.
  - jstests/concurrency/fsm_workloads/reindex.js
  - jstests/concurrency/fsm_workloads/reindex_background.js
  - jstests/concurrency/fsm_workloads/reindex_writeconflict.js

  # These workloads kill random cursors.
  - jstests/concurrency/fsm_workloads/kill_multicollection_aggregation.js
  - jstests/concurrency/fsm_workloads/invalidated_cursors.js
  - jstests/concurrency/fsm_workloads/globally_managed_cursors.js

  # These workloads use a verbose log level.
  - jstests/concurrency/fsm_workloads/collection_uuid.js
  - jstests/concurrency/fsm_workloads/random_moveChunk_update_shard_key.js

  exclude_with_any_tags:
  # The ability to shut down a node while its in the middle of applying ops is required for
  # backup_restore. The workloads which perform certain operations which can cause the test to fail
  # have been excluded.
  # Background indexes can still be running when the mongod is shut down (SERVER-24639).
  - creates_background_indexes
  # Workloads that use a write concern will fail since the workload only connects to the primary.
  - uses_write_concern
  # Sharding is not supported for backup_restore.
  - requires_sharding
  # Transactions are not supported for backup_restore because the dbhash check can hang when
  # running the collMod operation due to an idle transaction on a collection.
  - uses_transactions

executor:
  config:
    shell_options:
      global_vars:
        TestData:
          # The backup_restore*.js tests are expected to run the FSM workloads directly against the
          # primary of the replica set without being aware of the other members.
          discoverTopology: False
  hooks:
  - class: WaitForReplication
  - class: CleanupConcurrencyWorkloads
    exclude_dbs:
      - crud
  fixture:
    class: ExternalFixture
