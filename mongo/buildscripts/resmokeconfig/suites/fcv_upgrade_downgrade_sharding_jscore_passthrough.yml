test_kind: js_test

# Cloned from buildscripts/resmokeconfig/suites/sharding_jscore_passthrough.yml
# to run FCV upgrade downgrade in the background

selector:
  roots:
  - jstests/core/**/*.js
  - jstests/fle2/**/*.js
  - jstests/aggregation/**/*.js
  - src/mongo/db/modules/*/jstests/fle/**/*.js

  exclude_files:
  # The following tests fail because a certain command or functionality is not supported on
  # mongos. This command or functionality is placed in a comment next to the failing test.
  - jstests/core/**/apitest_db.js  # serverStatus output doesn't have storageEngine.
  - jstests/core/**/check_shard_index.js  # checkShardingIndex.
  - jstests/core/**/collection_truncate.js  # emptycapped.
  - jstests/core/**/compact_keeps_indexes.js  # compact.
  - jstests/core/**/currentop.js  # uses fsync.
  - jstests/core/**/dbhash.js  # dbhash.
  - jstests/core/**/fsync.js  # uses fsync.
  - jstests/core/**/geo_s2cursorlimitskip.js  # profiling.
  - jstests/core/**/geo_update_btree2.js  # notablescan.
  - jstests/core/**/index9.js  # "local" database.
  - jstests/core/**/queryoptimizera.js  # "local" database.
  - jstests/core/**/stages*.js  # stageDebug.
  - jstests/core/**/startup_log.js  # "local" database.
  - jstests/core/**/top.js  # top.
  # The following tests fail because mongos behaves differently from mongod when testing certain
  # functionality. The differences are in a comment next to the failing test.
  - jstests/core/**/explain_missing_database.js  # Behavior with no db different on mongos.
  - jstests/core/**/geo_2d_explain.js  # executionSuccess in different spot in explain().
  - jstests/core/**/geo_s2explain.js  # inputStage in different spot in explain().
  - jstests/core/**/geo_s2sparse.js  # keysPerIndex in different spot in validate().
  - jstests/core/**/operation_latency_histogram.js  # Stats are counted differently on mongos, SERVER-24880.
  - jstests/core/**/or_to_in.js # queryPlanner in different spot in explain()
  # The following tests fail because of divergent dropCollection behavior between standalones and
  # sharded clusters. These tests expect a second drop command to error, whereas in sharded clusters
  # we expect a second drop to return status OK.
  - jstests/core/**/explain_upsert.js

  # Excludes from fcv_upgrade_downgrade_jscore_passthrough.yml
  #
  # TODO (SERVER-78220): Investigate failing api version tests in the fcv jscore passthrough suite.
  - jstests/core/api/api_version_unstable_indexes.js

  # TODO (SERVER-78202): Investigate failing timeseries tests in the fcv jscore passthrough suite.
  - jstests/core/timeseries/timeseries_update.js
  - jstests/core/timeseries/timeseries_update_concurrent.js
  - jstests/core/timeseries/timeseries_update_one.js
  - jstests/core/timeseries/timeseries_update_multi.js
  - jstests/core/timeseries/timeseries_find_and_modify_update.js
  - jstests/core/timeseries/timeseries_delete_compressed_buckets.js
  - jstests/core/timeseries/timeseries_bucket_limit_count.js

  # These timeseries tests rely on specific bucketing behaviour that is not guaranteed across FCV
  # upgrade/downgrade
  # TODO SERVER-70605: remove this block.
  - jstests/core/timeseries/bucket_granularity.js
  - jstests/core/timeseries/timeseries_bucket_spanning_epoch.js
  - jstests/core/timeseries/timeseries_id_range.js
  - jstests/core/timeseries/timeseries_insert_after_update.js
  - jstests/core/timeseries/timeseries_sparse.js
  - jstests/core/timeseries/timeseries_large_measurements.js
  - jstests/core/timeseries/timeseries_min_max.js
  - jstests/core/timeseries/timeseries_simple.js
  - jstests/core/timeseries/timeseries_collation.js
  - jstests/core/timeseries/bucket_timestamp_rounding.js

  # These use "columnstore indexes are under development and cannot be used without enabling the feature flag"
  - jstests/core/query/null_query_semantics.js
  - jstests/core/query/project/projection_semantics.js
  - jstests/core/index/hidden_index.js

  # TODO: Remove after fixing SERVER-78201: the following received command without explicit readConcern.
  - jstests/aggregation/sources/densify/internal_parse.js
  - jstests/aggregation/api_version_stage_allowance_checks.js

  # TODO (SERVER-78200): The tests below sometimes hang when they run concurrently with a setFCV command.
  - src/mongo/db/modules/*/jstests/fle/fle_admin_e2e.js
  - src/mongo/db/modules/*/jstests/fle/fle_implicit_encryption.js
  - src/mongo/db/modules/*/jstests/fle/fle_use_cases.js
  - src/mongo/db/modules/*/jstests/fle/fle_drivers_integration.js

  # Expected failure due to command count being not precise due to potential retry of index build.
  - jstests/core/operation_latency_histogram.js

  # Expected failures due to unexpected query execution stats from restarted operations from fcv upgrade.
  - jstests/aggregation/sources/lookup/lookup_query_stats.js
  - jstests/aggregation/sources/facet/facet_stats.js
  - jstests/aggregation/sources/unionWith/unionWith_query_stats.js

  # SERVER-85472: test runs an updateOne without shard key which will use an internal transaction
  # that can be aborted by the fcv upgrade downgrade suite.
  - jstests/aggregation/sources/unionWith/unionWith_invalid_usage.js

  # Expected failure due to interfering collMod commands acquiring a lock that the test does not expect.
  - jstests/core/write/crud_ops_do_not_throw_locktimeout.js

  # The tests below use transactions (which are aborted on fcv upgrade/downgrade) and thus are expected to fail.
  - jstests/core/role_management_helpers.js
  - jstests/core/roles_info.js
  - jstests/core/views/views_all_commands.js

  # Sharding specific failed:
  #
  # $unionWith explain output does not check whether the collection is sharded in a sharded
  # cluster.
  - jstests/aggregation/sources/unionWith/unionWith_explain.js
  # Cannot specify runtime constants option to a mongos
  - jstests/aggregation/expressions/internal_js_emit_with_scope.js
  - jstests/aggregation/accumulators/internal_js_reduce_with_scope.js
  # The tests below depend on internal transactions which are expected to get interrupted during an FCV upgrade or downgrade, but they do not have the 'uses_transactions' tag so are not excluded by default in this suite.
  - jstests/aggregation/sources/lookup/lookup_non_correlated.js
  - jstests/core/ddl/collection_uuid_index_commands.js
  # Queryable encryption tests create internal transactions which are expected to fail.
  - jstests/core/queryable_encryption/*.js
  # TODO (SERVER-77910): Find out why spill_to_disk.js fails to spill to disk after FCV down.
  - jstests/aggregation/spill_to_disk.js

  # TODO SERVER-80490: The test below requires a precise lock count that can get modified by concurrent
  # setFCV operations. The exclusion can be removed once the linked ticket is fixed.
  - jstests/core/top.js

  # SERVER-85456: this test uses benchRun which does not use runCommand and index creation can fail.
  - jstests/core/bench_test1.js

  exclude_with_any_tags:
  - assumes_standalone_mongod
  - assumes_against_mongod_not_mongos
  # system.profile collection doesn't exist on mongos.
  - requires_profiling
  # columnstore indexes are under development and cannot be used without enabling the feature flag
  - featureFlagColumnstoreIndexes
  # TODO SERVER-52419 Remove this tag.
  - featureFlagBulkWriteCommand
  - featureFlagFLE2CleanupCommand
  # TODO SERVER-71537: Remove Feature Flag for PM-412.
  - featureFlagQuerySettings
  # TODO: SERVER-66393 Remove Feature Flag for PM-2919.
  - featureFlagTimeseriesUpdatesSupport
  # Transactions are aborted upon fcv upgrade or downgrade.
  - uses_transactions
  # Exclude tests that require a specific fcv.
  # Once SERVER-81054 is complete this is no longer needed.
  - requires_fcv_71
  - requires_fcv_72
  - requires_fcv_73
  - requires_fcv_80
  # Exclude tests that are not compatible with upgrade/downgrade.
  - cannot_run_during_upgrade_downgrade

executor:
  archive:
    hooks:
      - CheckReplDBHash
      - CheckMetadataConsistencyInBackground
      - ValidateCollections
      - FCVUpgradeDowngradeInBackground
  config:
    shell_options:
      eval: >-
        await import("jstests/libs/override_methods/retry_aborted_db_and_index_creation.js");
  hooks:
  - class: CheckReplDBHash
  - class: CheckMetadataConsistencyInBackground
  - class: ValidateCollections
    shell_options:
      global_vars:
        TestData:
          # Skip enforcing this check in FCV upgrade/downgrade suites as time-series buckets are not
          # always compressed in a downgraded FCV.
          skipEnforceTimeseriesBucketsAreAlwaysCompressedOnValidate: true
          nonClusteredConfigTransactions: true
  - class: FCVUpgradeDowngradeInBackground
  - class: CleanEveryN
    n: 20
  fixture:
    class: ShardedClusterFixture
    num_shards: 1
    mongos_options:
      set_parameters:
        enableTestCommands: 1
        disableTransitionFromLatestToLastContinuous: False
    mongod_options:
      set_parameters:
        enableTestCommands: 1
        disableTransitionFromLatestToLastContinuous: False
    num_rs_nodes_per_shard: 2
