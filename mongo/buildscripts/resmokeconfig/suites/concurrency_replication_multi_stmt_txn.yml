test_kind: fsm_workload_test

selector:
  roots:
  - jstests/concurrency/fsm_workloads/**/*.js
  exclude_files:
  ##
  # Disabled due to MongoDB restrictions and/or workload restrictions
  ##
  # These workloads use >100MB of data, which can overwhelm test hosts.
  - jstests/concurrency/fsm_workloads/agg_group_external.js
  - jstests/concurrency/fsm_workloads/agg_sort_external.js
  # The findAndModify_update_grow.js workload can cause OOM kills on test hosts.
  - jstests/concurrency/fsm_workloads/findAndModify_update_grow.js

  # Relies on having one thread observe writes from the other threads, which won't become visible
  # once a transaction in the thread is started because it'll keep reading from the same snapshot.
  - jstests/concurrency/fsm_workloads/create_index_background.js
  - jstests/concurrency/fsm_workloads/create_index_background_partial_filter.js
  - jstests/concurrency/fsm_workloads/create_index_background_wildcard.js

  # Expects reads to die with a particular error, but other errors are possible if the read is part
  # of a transaction (e.g. ErrorCodes.LockTimeout).
  - jstests/concurrency/fsm_workloads/drop_index_during_replan.js
  - jstests/concurrency/fsm_workloads/drop_index_during_lookup.js

  # Performs direct writes to system.views
  - jstests/concurrency/fsm_workloads/view_catalog_direct_system_writes.js

  # Extracts error code from write error, which is obscured by runInsideTransaction.
  - jstests/concurrency/fsm_workloads/access_collection_in_transaction_after_catalog_changes.js

  # Induces non-blindly-retriable errors (see SERVER-45767).
  - jstests/concurrency/fsm_workloads/create_database.js

  # These workloads run the reIndex command, which is only allowed on a standalone node.
  - jstests/concurrency/fsm_workloads/reindex.js
  - jstests/concurrency/fsm_workloads/reindex_background.js
  - jstests/concurrency/fsm_workloads/reindex_writeconflict.js

  # This workload causes transactions to start with or include a getMore command with
  # readConcernArgs attached, causing addParticipant implementation to fail. TODO: SERVER-87789.
  - jstests/concurrency/fsm_workloads/exchange_producer.js

  exclude_with_any_tags:
  - does_not_support_causal_consistency
  - requires_sharding
  # Snapshot reads in transactions are banned on capped collections.
  - requires_capped
  # Sharing cursors between state functions will fail in this suite because it will attempt to use
  # the same cursor in multiple transactions.
  - state_functions_share_cursor
  # These start a transaction in one state function and use it in other state functions. This suite
  # would instead execute each state function as its own transaction.
  - state_functions_share_transaction
  # Tests which expect commands to fail and catch the error can cause transactions to abort and
  # retry indefinitely.
  - catches_command_failures
  # time-series collections do not support write transactions
  - requires_timeseries
  - does_not_support_transactions

executor:
  archive:
    hooks:
      - CheckReplDBHashInBackground
      - ValidateCollectionsInBackground
      - CheckReplDBHash
      - ValidateCollections
    tests: true
  config:
    shell_options:
      global_vars:
        TestData:
          runInsideTransaction: true
          runningWithSessions: true
          traceExceptions: false
  hooks:
  # The CheckReplDBHash hook waits until all operations have replicated to and have been applied
  # on the secondaries, so we run the ValidateCollections hook after it to ensure we're
  # validating the entire contents of the collection.
  #
  # TODO SERVER-26466: Add CheckReplOplogs hook to the concurrency suite.
  - class: CheckReplDBHashInBackground
  - class: ValidateCollectionsInBackground
  - class: CheckReplDBHash
  - class: ValidateCollections
  - class: CleanupConcurrencyWorkloads
  fixture:
    class: ReplicaSetFixture
    mongod_options:
      oplogSize: 1024
      set_parameters:
        enableTestCommands: 1
        queryAnalysisSamplerConfigurationRefreshSecs: 1
        queryAnalysisWriterIntervalSecs: 1
        roleGraphInvalidationIsFatal: 1
    num_nodes: 3
