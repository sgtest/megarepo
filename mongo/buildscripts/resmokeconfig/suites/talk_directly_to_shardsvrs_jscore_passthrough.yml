test_kind: js_test

selector:
  roots:
  - jstests/core/**/*.js
  - jstests/fle2/**/*.js
  - src/mongo/db/modules/*/jstests/fle2/**/*.js
  exclude_files:
  # This test expects that the connection (i.e. 'threadName') does not change throughout each test
  # case. That is not always true when the test driver use a replica set connection string. As this
  # test sets fail point with error code NotWritablePrimary, the test driver changes its topology to
  # ReplicaSetNoPrimary and create a new connection once it get the primary again.
  - jstests/core/**/failcommand_failpoint.js
  # TODO: SERVER-71487 Legacy shell does not carry over encryption information through
  # getMores in reconfig suites.
  - src/mongo/db/modules/*/jstests/fle2/query/*getMore*.js

  exclude_with_any_tags:
  - assumes_standalone_mongod
  - command_not_supported_in_serverless
  # capped collections are banned in Serverless.
  - requires_capped
  # In this suite the test talks directly to shardsvrs (doesn't go through mongos).
  - directly_against_shardsvrs_incompatible

executor:
  archive:
    tests: true
    hooks:
      - CheckReplDBHash
      - CheckReplOplogs
      - ValidateCollections
  config:
    shell_options:
      eval: >-
        globalThis.testingReplication = true;
  hooks:
  # The CheckReplDBHash hook waits until all operations have replicated to and have been applied
  # on the secondaries, so we run the ValidateCollections hook after it to ensure we're
  # validating the entire contents of the collection.
  - class: CheckReplOplogs
  - class: CheckReplDBHash
  - class: ValidateCollections
  - class: CleanEveryN
    n: 20
  fixture:
    class: TalkDirectlyToShardsvrsFixture
    common_mongod_options:
      set_parameters:
        enableTestCommands: 1
    num_replica_sets: 1
    num_nodes_per_replica_set: 3
    use_replica_set_connection_string: true
