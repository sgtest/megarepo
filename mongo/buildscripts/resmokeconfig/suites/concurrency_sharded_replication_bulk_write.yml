test_kind: fsm_workload_test

selector:
  roots:
  - jstests/concurrency/fsm_workloads/**/*.js
  - src/mongo/db/modules/*/jstests/concurrency/fsm_workloads/*.js
  exclude_files:
  # SERVER-13116 distinct isn't sharding aware
  - jstests/concurrency/fsm_workloads/distinct.js
  - jstests/concurrency/fsm_workloads/distinct_noindex.js
  - jstests/concurrency/fsm_workloads/distinct_projection.js

  # Disabled due to SERVER-33753, '.count() without a predicate can be wrong on sharded
  # collections'. This bug is problematic for these workloads because they assert on count()
  # values:
  - jstests/concurrency/fsm_workloads/agg_match.js

  # Disabled due to MongoDB restrictions and/or workload restrictions

  # These workloads sometimes trigger 'Could not lock auth data update lock'
  # errors because the AuthorizationManager currently waits for only five
  # seconds to acquire the lock for authorization documents
  - jstests/concurrency/fsm_workloads/auth_create_role.js
  - jstests/concurrency/fsm_workloads/auth_create_user.js
  - jstests/concurrency/fsm_workloads/auth_drop_role.js
  - jstests/concurrency/fsm_workloads/auth_drop_user.js

  # uses >100MB of data, which can overwhelm test hosts
  - jstests/concurrency/fsm_workloads/agg_group_external.js
  - jstests/concurrency/fsm_workloads/agg_sort_external.js

  # compact can only be run against a standalone mongod
  - jstests/concurrency/fsm_workloads/compact.js
  - jstests/concurrency/fsm_workloads/compact_while_creating_indexes.js

  # convertToCapped can't be run on mongos processes
  - jstests/concurrency/fsm_workloads/convert_to_capped_collection.js
  - jstests/concurrency/fsm_workloads/convert_to_capped_collection_index.js

  # findAndModify requires a shard key
  - jstests/concurrency/fsm_workloads/findAndModify_mixed_queue_unindexed.js
  - jstests/concurrency/fsm_workloads/findAndModify_remove_queue_unindexed.js
  - jstests/concurrency/fsm_workloads/findAndModify_update_collscan.js
  - jstests/concurrency/fsm_workloads/findAndModify_update_queue.js
  - jstests/concurrency/fsm_workloads/findAndModify_update_queue_unindexed.js

  # remove cannot be {} for findAndModify
  - jstests/concurrency/fsm_workloads/findAndModify_remove_queue.js

  # can cause OOM kills on test hosts
  - jstests/concurrency/fsm_workloads/findAndModify_update_grow.js


  # cannot createIndex after dropDatabase without sharding first
  - jstests/concurrency/fsm_workloads/plan_cache_drop_database.js

  # reIndex is not supported in mongos.
  - jstests/concurrency/fsm_workloads/reindex.js
  - jstests/concurrency/fsm_workloads/reindex_background.js
  - jstests/concurrency/fsm_workloads/reindex_writeconflict.js

  # The WTWriteConflictException failpoint is not supported on mongos.
  - jstests/concurrency/fsm_workloads/collmod_writeconflict.js

  # our .remove(query, {justOne: true}) calls lack shard keys
  - jstests/concurrency/fsm_workloads/remove_single_document.js

  # cannot use upsert command with $where with sharded collections
  - jstests/concurrency/fsm_workloads/upsert_where.js

  # stagedebug can only be run against a standalone mongod
  - jstests/concurrency/fsm_workloads/yield_and_hashed.js
  - jstests/concurrency/fsm_workloads/yield_and_sorted.js

  # TODO Undenylist (SERVER-38852).
  - jstests/concurrency/fsm_workloads/agg_out_interrupt_cleanup.js
  - jstests/concurrency/fsm_workloads/timeseries_agg_out_interrupt_cleanup.js

  # serverStatus does not include transaction metrics on mongos.
  - jstests/concurrency/fsm_workloads/multi_statement_transaction_atomicity_isolation_metrics_test.js

  # Uses the same transaction id across different routers, which is not allowed because when either
  # router tries to commit, it may not know the full participant list.
  - jstests/concurrency/fsm_workloads/multi_statement_transaction_all_commands_same_session.js

  # Inserts directly into system.views using applyOps, which is not available on mongos.
  - jstests/concurrency/fsm_workloads/view_catalog_direct_system_writes.js

  # Time-series collections are not supported on mongos.
  - jstests/concurrency/fsm_workloads/create_timeseries_collection.js

  # The test may spuriously fail when run against sharded clusters, due to limitations of the
  # infrastructure. See SERVER-77039 for full details.
  - jstests/concurrency/fsm_workloads/map_reduce_drop.js

  # TODO SERVER-80989: Remove this.
  # This test can downgrade the FCV from latest to lastContinuousFCV and lastLTSFCV, but until
  # SERVER-80989 is done, the testing infrastructure will only enable the bulkWrite feature flag
  # as of the latest FCV, and so when the FCV is downgraded via this test the bulkWrite command
  # starts to error. However, once this feature flag is marked as not being FCV gated that will
  # not be a problem.
  - jstests/concurrency/fsm_workloads/random_internal_transactions_setFCV_operations.js
  - jstests/concurrency/fsm_workloads/random_DDL_CRUD_setFCV_operations.js

  exclude_with_any_tags:
  - requires_replication
  - assumes_balancer_on
  # mongos has no system.profile collection.
  - requires_profiling
  - assumes_unsharded_collection

executor:
  archive:
    hooks:
      # TODO (SERVER-63855): remove 'RunDBCheckInBackground' or put it back.
      # - RunDBCheckInBackground
      - CheckReplDBHashInBackground
      - CheckReplDBHash
      - CheckMetadataConsistencyInBackground
      - ValidateCollections
    tests: true
  config:
    shell_options:
      global_vars:
        TestData:
          runningWithBalancer: false
          fsmPreOverridesLoadedCallback:
            import('jstests/libs/override_methods/single_crud_op_as_bulk_write.js');
  hooks:
  - class: CheckShardFilteringMetadata
  # TODO (SERVER-63855): remove 'RunDBCheckInBackground' or put it back.
  # - class: RunDBCheckInBackground
  - class: CheckReplDBHashInBackground
  - class: CheckReplDBHash
  - class: CheckMetadataConsistencyInBackground
  - class: CheckOrphansDeleted
  - class: CheckRoutingTableConsistency
  - class: ValidateCollections # Validation can interfere with other operations, so this goes last.
  - class: CleanupConcurrencyWorkloads
  fixture:
    class: ShardedClusterFixture
    enable_balancer: false
    mongos_options:
      set_parameters:
        enableTestCommands: 1
        queryAnalysisSamplerConfigurationRefreshSecs: 1
        defaultConfigCommandTimeoutMS: 90000
    shard_options:
      mongod_options:
        oplogSize: 1024
    mongod_options:
      set_parameters:
        enableTestCommands: 1
        roleGraphInvalidationIsFatal: 1
        queryAnalysisWriterIntervalSecs: 1
        defaultConfigCommandTimeoutMS: 90000
    num_rs_nodes_per_shard: 3
    num_shards: 2
    num_mongos: 2
