# Define supported build platforms.
load("//bazel/platforms:remote_execution_containers.bzl", "REMOTE_EXECUTION_CONTAINERS")

package(default_visibility = ["//visibility:public"])

[
    platform(
        name = "linux_arm64_" + compiler,
        constraint_values = [
            "@platforms//os:linux",
            "@platforms//cpu:arm64",
            "@bazel_tools//tools/cpp:" + compiler,
        ],
        exec_properties = {
            "container-image": REMOTE_EXECUTION_CONTAINERS["linux_arm64"]["container-image"],
            "dockerNetwork": "standard",
        },
    )
    for compiler in [
        "clang",
        "gcc",
    ]
]

[
    platform(
        name = "linux_amd64_" + compiler,
        constraint_values = [
            "@platforms//os:linux",
            "@platforms//cpu:x86_64",
            "@bazel_tools//tools/cpp:" + compiler,
        ],
        exec_properties = {
            "container-image": REMOTE_EXECUTION_CONTAINERS["linux_amd64"]["container-image"],
            "dockerNetwork": "standard",
        },
    )
    for compiler in [
        "clang",
        "gcc",
    ]
]

platform(
    name = "windows_amd64_msvc",
    constraint_values = [
        "@platforms//cpu:x86_64",
        "@platforms//os:windows",
        "@bazel_tools//tools/cpp:msvc",
    ],
)

platform(
    name = "macos_arm64_clang",
    constraint_values = [
        "@platforms//cpu:arm64",
        "@platforms//os:macos",
        "@bazel_tools//tools/cpp:clang",
    ],
)

platform(
    name = "macos_amd64_clang",
    constraint_values = [
        "@platforms//cpu:x86_64",
        "@platforms//os:macos",
        "@bazel_tools//tools/cpp:clang",
    ],
)
