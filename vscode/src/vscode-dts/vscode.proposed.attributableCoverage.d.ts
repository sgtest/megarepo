/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/

declare module 'vscode' {
	export class FileCoverage2 extends FileCoverage {
		/**
		 * A list of {@link TestItem test cases} that generated coverage in this
		 * file. If set, test items may be passed in {@link TestRunProfile.loadDetailedCoverage}
		 * to request coverage information generated by a specific test case in
		 * the file.
		 */
		fromTests: TestItem[];

		constructor(
			uri: Uri,
			statementCoverage: TestCoverageCount,
			branchCoverage?: TestCoverageCount,
			declarationCoverage?: TestCoverageCount,
			fromTests?: TestItem[],
		);
	}

	export interface TestRunProfile2 {
		/**
		 * An extension-provided function that provides detailed statement and
		 * function-level coverage for a file. The editor will call this when more
		 * detail is needed for a file, such as when it's opened in an editor or
		 * expanded in the **Test Coverage** view.
		 *
		 * The {@link FileCoverage} object passed to this function is the same instance
		 * emitted on {@link TestRun.addCoverage} calls associated with this profile.
		 *
		 * @param testRun The test run that generated the coverage data.
		 * @param fileCoverage The file coverage object to load detailed coverage for.
		 * @param token A cancellation token that indicates the operation should be cancelled.
		 * @param fromTestItem If provided, requests coverage for a specific test in the
		 * file. This is only set if tests are added in {@link FileCoverage.fromTests}.
		 */
		loadDetailedCoverage?: (testRun: TestRun, fileCoverage: FileCoverage, token: CancellationToken, fromTestItem?: TestItem) => Thenable<FileCoverageDetail[]>;
	}
}
