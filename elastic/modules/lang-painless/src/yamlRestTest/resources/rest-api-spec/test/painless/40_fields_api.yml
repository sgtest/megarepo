# Integration tests for sort script queries using Painless

setup:
- skip:
    version: " - 7.14.99"
    reason: "sort script fields api was added in 7.15.0"

---
"sort script fields api":
     - do:
         indices.create:
           index: test
           body:
             settings:
               number_of_shards: 2
             mappings:
               properties:
                 dval:
                   type: double
     - do:
         index:
           index: test
           id: d1
           body: {"dval": 10, "sval": "f"}
     - do:
         index:
           index: test
           id: d2
           body: {}
     - do:
         index:
           index: test
           id: d3
           body: {"dval": 5, "sval": "a"}
     - do:
         indices.refresh: {}
     - do:
         search:
           rest_total_hits_as_int: true
           index: test
           body:
             sort:
               _script:
                 type: number
                 script:
                   source: "field('dval').getValue(3)"
     - match: { hits.total: 3 }
     - match: { hits.hits.0._id: d2 }
     - match: { hits.hits.1._id: d3 }
     - match: { hits.hits.2._id: d1 }
     - do:
         search:
           rest_total_hits_as_int: true
           index: test
           body:
             sort:
               _script:
                 type: string
                 script:
                   source: "field('sval.keyword').getValue('g')"
     - match: { hits.total: 3 }
     - match: { hits.hits.0._id: d3 }
     - match: { hits.hits.1._id: d1 }
     - match: { hits.hits.2._id: d2 }

---
"script score fields api":
    - do:
        indices.create:
          index: test
          body:
            settings:
              number_of_shards: 2
            mappings:
              properties:
                dval:
                  type: double
    - do:
        index:
          index: test
          id: d1
          body: {"dval": 10}
    - do:
        index:
          index: test
          id: d2
          body: {}
    - do:
        index:
          index: test
          id: d3
          body: {"dval": 5}
    - do:
        indices.refresh: {}
    - do:
        search:
          rest_total_hits_as_int: true
          index: test
          body:
            query:
              script_score:
                query: {match_all: {} }
                script:
                  source: "field('dval').getValue(3)"
    - match: { hits.total: 3 }
    - match: { hits.hits.0._id: d1 }
    - match: { hits.hits.1._id: d3 }
    - match: { hits.hits.2._id: d2 }

---
"filter script fields api":
    - do:
        indices.create:
          index: test
          body:
            settings:
              number_of_shards: 2
            mappings:
              properties:
                dval:
                  type: double
    - do:
        index:
          index: test
          id: d1
          body: {"dval": 10, "sval": "f"}
    - do:
        index:
          index: test
          id: d2
          body: {}
    - do:
        index:
          index: test
          id: d3
          body: {"dval": 5, "sval": "a"}
    - do:
        indices.refresh: {}
    - do:
        search:
          rest_total_hits_as_int: true
          body:
            query:
              bool:
                filter:
                  script:
                    script: "field('dval').getValue(6) > 6"
    - match: { hits.total: 1 }
    - match: { hits.hits.0._id: d1 }
    - do:
        search:
          rest_total_hits_as_int: true
          body:
            query:
              bool:
                filter:
                  script:
                    script: "field('sval.keyword').getValue('b') == 'a'"
    - match: { hits.total: 1 }
    - match: { hits.hits.0._id: d3 }
