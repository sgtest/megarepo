setup:
  - do:
      indices.create:
        index: tsdb
        body:
          settings:
            mode: time_series
            routing_path: [key]
            time_series:
              start_time: "2021-01-01T00:00:00Z"
              end_time: "2022-01-01T00:00:00Z"
          mappings:
            properties:
              key:
                type: keyword
                time_series_dimension: true
              "@timestamp":
                type: date

  - do:
      bulk:
        index: tsdb
        refresh: true
        body:
          - '{ "index": {} }'
          - '{ "key": "bar", "val": 2, "@timestamp": "2021-01-01T00:00:10Z" }'
          - '{ "index": {}}'
          - '{ "key": "bar", "val": 10, "@timestamp": "2021-01-01T00:00:00Z" }'
          - '{ "index": {}}'
          - '{ "key": "bar", "val": 50, "@timestamp": "2021-01-01T00:00:30Z" }'
          - '{ "index": {}}'
          - '{ "key": "bar", "val": 40, "@timestamp": "2021-01-01T00:00:20Z" }'

  # Let's try to create another segment to make things a bit more interesting
  - do:
      bulk:
        index: tsdb
        refresh: true
        body:
          - '{ "index": {} }'
          - '{ "key": "foo", "val": 20, "@timestamp": "2021-01-01T00:00:00Z" }'
          - '{ "create": {} }'
          - '{ "key": "foo", "val": 30, "@timestamp": "2021-01-01T00:10:00Z" }'
          - '{ "index": {} }'
          - '{ "key": "baz", "val": 20, "@timestamp": "2021-01-01T00:00:00Z" }'
          - '{ "index": {} }'
          - '{ "key": "baz", "val": 20, "@timestamp": "2021-01-01T00:00:00" }'

---
"Basic test":
  - skip:
      version: " - 8.6.99"
      reason: Time series result serialization changed in 8.6.0

  - do:
      search:
        index: tsdb
        body:
          query:
            range:
              "@timestamp":
                gte: "2021-01-01T00:10:00Z"
          size: 0
          aggs:
            ts:
              time_series:
                keyed: false



  - match: { hits.total.value: 1 }
  - length: { aggregations: 1 }

  - match: { aggregations.ts.buckets.0.key: { "key": "foo" } }
  - match: { aggregations.ts.buckets.0.doc_count: 1 }

---

"Basic test profiled":
  - skip:
      version: " - 8.7.99"
      reason: Time series profiling enabled in 8.8

  - do:
      search:
        index: tsdb
        body:
          profile: true
          query:
            range:
              "@timestamp":
                gte: "2021-01-01T00:10:00Z"
          size: 0
          aggs:
            ts:
              time_series:
                keyed: false

  - match: { profile.shards.0.aggregations.0.type: /TimeSeriesAggregator/ }
  - match: { profile.shards.0.aggregations.0.description: ts }

---
"Size test":
  - skip:
      version: " - 8.6.99"
      reason: Size added in 8.7.0

  - do:
      search:
        index: tsdb
        body:
          query:
            range:
              "@timestamp":
                gte: "2019-01-01T00:10:00Z"
          size: 0
          aggs:
            ts:
              time_series:
                keyed: false
                size: 1

  - length: { aggregations.ts.buckets: 1 }
  - match: { aggregations.ts.buckets.0.key: { "key": "bar" } }

  - do:
      search:
        index: tsdb
        body:
          query:
            range:
              "@timestamp":
                gte: "2019-01-01T00:10:00Z"
          size: 0
          aggs:
            ts:
              time_series:
                keyed: false
                size: 3

  - length: { aggregations.ts.buckets: 3 }
  - match: { aggregations.ts.buckets.0.key: { "key": "bar" } }
  - match: { aggregations.ts.buckets.1.key: { "key": "baz" } }
  - match: { aggregations.ts.buckets.2.key: { "key": "foo" } }

---
"Score test filter some":
  - skip:
      version: " - 8.8.99"
      reason: Time series min score fixed in 8.9

  - do:
      search:
        index: tsdb
        body:
          query:
            function_score:
              field_value_factor:
                field: "val"
                factor: 0.1
                missing: 1
          size: 0
          min_score: 0.3
          aggs:
            ts:
              time_series:
                keyed: false

  - match: { hits.total.value: 6 }
  - length: { aggregations: 1 }

  - length: { aggregations.ts.buckets: 3 }

---
"Score test filter all":
  - skip:
      version: " - 8.8.99"
      reason: Time series min score fixed in 8.9

  - do:
      search:
        index: tsdb
        body:
          query:
            range:
              "@timestamp":
                gte: "2021-01-01T00:10:00Z"
          size: 0
          min_score: 100
          aggs:
            ts:
              time_series:
                keyed: false

  - match: { hits.total.value: 0 }
  - length: { aggregations: 1 }
  - length: { aggregations.ts.buckets: 0 }


---
"Sampler aggregation with nested time series aggregation failure":
  - skip:
      version: " - 8.6.99"
      reason: "Handling for time series aggregation failures introduced in 8.7.0"

  - do:
      catch: '/\[random_sampler\] aggregation \[sample\] does not support sampling \[time_series\] aggregation \[ts\]/'
      search:
        index: tsdb
        body:
          aggs:
            sample:
              random_sampler:
                probability: 1.0
              aggs:
                by_timestamp:
                  date_histogram:
                    field: "@timestamp"
                    fixed_interval: 1h
                  aggs:
                    ts:
                      time_series:
                        keyed: false
                      aggs:
                        sum:
                          sum:
                            field: val

---
"Composite aggregation with nested time series aggregation failure":
  - skip:
      version: " - 8.6.99"
      reason: "Handling for time series aggregation failures introduced in 8.7.0"

  - do:
      catch: '/\[composite\] aggregation is incompatible with time series execution mode/'
      search:
        index: tsdb
        body:
          aggs:
            by_key:
              composite:
                sources: [
                  {
                    "key": {
                      "terms": {
                        "field": "key"
                      }
                    }
                  }
                ]
              aggs:
                date:
                  date_histogram:
                    field: "@timestamp"
                    fixed_interval: "1h"
                  aggs:
                    ts:
                      time_series:
                        keyed: false
                      aggs:
                        sum:
                          sum:
                            field: val

---
"Global aggregation with nested time series aggregation failure":
  - skip:
      version: " - 8.6.99"
      reason: "Handling for time series aggregation failures introduced in 8.7.0"

  - do:
      catch: '/Time series aggregations cannot be used inside global aggregation./'
      search:
        index: tsdb
        body:
          aggs:
            global:
              global: {}
              aggs:
                ts:
                  time_series:
                    keyed: false
                  aggs:
                    sum:
                      sum:
                        field: val
---
"Configure with no synthetic source":
  - skip:
      version: " - 8.8.99"
      reason: "Error message fix in 8.9"

  - do:
      catch: '/Time series indices only support synthetic source./'
      indices.create:
        index: tsdb_error
        body:
          settings:
            mode: time_series
            routing_path: [key]
          mappings:
            _source:
              enabled: false

---
"Number for keyword routing field":
  - skip:
      version: " - 8.10.99"
      reason: "Fix in 8.11"

  - do:
      bulk:
        index: tsdb
        refresh: true
        body:
          - '{ "index": {} }'
          - '{ "key": 10, "val": 1, "@timestamp": "2021-10-01T00:00:10Z" }'
          - '{ "index": {}}'
          - '{ "key": 11, "val": 2, "@timestamp": "2021-10-01T00:00:00Z" }'

  - do:
      search:
        index: tsdb
        body:
          query:
            range:
              "@timestamp":
                gte: "2021-10-01T00:00:00Z"
          size: 0
          aggs:
            ts:
              time_series:
                keyed: false

  - match: { hits.total.value: 2 }
  - length: { aggregations: 1 }

  - match: { aggregations.ts.buckets.0.key: { "key": "10" } }
  - match: { aggregations.ts.buckets.0.doc_count: 1 }
