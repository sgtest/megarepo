---

- name: Install GNUtls
  apt:
    name: "{{ item }}"
    state: installed
    update_cache: yes
  with_items:
    - gnutls-bin
    - ssl-cert

- name: Create GNUtls templates dir
  file:
    path: "{{ ssl_dir_templates }}"
    state: directory
    group: ssl-cert
    mode: 0777

- name: Copy server cert template
  template:
    src: cert_server.conf.j2
    dest: "{{ ssl_dir_templates }}/cert_server.conf"
    mode: 0666

- name: Copy server keystore template
  template:
    src: keystore_server.conf.j2
    dest: "{{ ssl_dir_templates }}/keystore_server.conf"
    mode: 0666

- name: Copy CA Cert
  copy:
    src: "../certs/ca.crt"
    dest: "{{ ssl_dir_certs }}/ca_server.pem"
    mode: 0666
  register: copy_ca

- name: Copy CA Key
  copy:
    src: "../certs/ca.key"
    dest: "{{ ssl_dir_private }}/ca_server.key"
    mode: 0600

- name: Create Key for LDAP Service
  command: "certtool -p --sec-param high --outfile {{ ssl_dir_private }}/{{ openldap_key_name }}"
  args:
    creates: "{{ ssl_dir_private }}/{{ openldap_key_name }}"

- name: Set group for LDAP Key
  file:
    path: "{{ ssl_dir_private }}/{{ openldap_key_name }}"
    group: ssl-cert
    mode: 0640

- name: Delete old LDAP cert
  file:
    path: "{{ ssl_dir_certs }}/{{ openldap_cert_name}}"
    state: absent
  when: copy_ca.changed

- name: Create Cert for LDAP
  command: "certtool -c --load-privkey {{ ssl_dir_private }}/{{ openldap_key_name }} --load-ca-certificate {{ ssl_dir_certs }}/ca_server.pem --load-ca-privkey {{ ssl_dir_private }}/ca_server.key --template {{ ssl_dir_templates }}/cert_server.conf --outfile {{ ssl_dir_certs }}/{{ openldap_cert_name}}"
  args:
    creates: "{{ ssl_dir_certs }}/{{ openldap_cert_name}}"

- name: Create Key for Tomcat Service
  command: "certtool -p --sec-param high --outfile {{ ssl_dir_private }}/{{ tomcat_key_name }}"
  args:
    creates: "{{ ssl_dir_private }}/{{ tomcat_key_name }}"

- name: Set group for Tomcat Key
  file:
    path: "{{ ssl_dir_private }}/{{ tomcat_key_name }}"
    group: ssl-cert
    mode: 0640

- name: Delete old Tomcat cert
  file:
    path: "{{ ssl_dir_certs }}/{{ tomcat_cert_name }}"
    state: absent
  when: copy_ca.changed

- name: Create Cert for Tomcat
  command: "certtool -c --load-privkey {{ ssl_dir_private }}/{{ tomcat_key_name }} --load-ca-certificate {{ ssl_dir_certs }}/ca_server.pem --load-ca-privkey {{ ssl_dir_private }}/ca_server.key --template {{ ssl_dir_templates }}/cert_server.conf --outfile {{ ssl_dir_certs }}/{{ tomcat_cert_name}}"
  args:
    creates: "{{ ssl_dir_certs }}/{{ tomcat_cert_name}}"
  register: tomcat_cert

- name: Delete old Tomcat Keystore
  file:
    path: "{{ ssl_dir_private }}/{{ tomcat_keystore_name }}"
    state: absent
  when: tomcat_cert.changed

- name: Create Keystore for Tomcat
  command: "certtool --load-ca-certificate {{ ssl_dir_certs }}/ca_server.pem --load-privkey {{ ssl_dir_private }}/{{ tomcat_key_name }} --load-certificate {{ ssl_dir_certs }}/{{ tomcat_cert_name }} --template {{ ssl_dir_templates }}/keystore_server.conf --outder --to-p12 --outfile {{ ssl_dir_private }}/{{ tomcat_keystore_name }}"
  args:
    creates: "{{ ssl_dir_private }}/{{ tomcat_keystore_name }}"
  notify: Restart Tomcat Service

- name: Set group for Tomcat Keystore
  file:
    path: "{{ ssl_dir_private }}/{{ tomcat_keystore_name }}"
    group: ssl-cert
    mode: 0640
...
