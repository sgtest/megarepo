---
- name: Download Shibboleth IdP
  get_url:
    url: "http://shibboleth.net/downloads/identity-provider/{{ shib_idp_version }}/shibboleth-identity-provider-{{ shib_idp_version }}.tar.gz"
    timeout: 30
    dest: "/tmp/shibboleth-identity-provider-{{ shib_idp_version }}.tar.gz"
    sha256sum: 8bd852dcdc7e6729ee645c0374a3c476b152fa24506fb86ffec33dfd190e607c

- name: Create base directory for shibboleth idp
  file:
    path: "{{ shib_installdir }}"
    state: directory
    owner: "{{ ansible_ssh_user }}"

- name: Extract shibboleth
  unarchive:
    src: "/tmp/shibboleth-identity-provider-{{ shib_idp_version }}.tar.gz"
    dest: "{{ shib_installdir }}"
    remote_src: yes

- name: Copying shibboleth idp install files
  template:
    src: idp.properties.j2
    dest: "{{ shib_installdir }}/shibboleth-identity-provider-{{ shib_idp_version }}/bin/idp.properties"

- name: Copying shibboleth ldap properties
  template:
    src: ldap.properties.j2
    dest: "{{ shib_installdir }}/shibboleth-identity-provider-{{ shib_idp_version }}/bin/ldap.properties"

- name: Copy silent installation file
  template:
    src: idp.silent.params.j2
    dest: "{{ shib_installdir }}/shibboleth-identity-provider-{{ shib_idp_version }}/bin/idp.silent.params"

- name: Install Shibboleth IdP
  shell: "{{ shib_installdir }}/shibboleth-identity-provider-{{ shib_idp_version }}/bin/install.sh -propertyfile {{ shib_installdir }}/shibboleth-identity-provider-{{ shib_idp_version }}/bin/idp.silent.params"
  environment:
    JAVA_HOME: "{{ java_home }}"
  args:
    creates: "{{ shib_home }}"

- name: Turn on log debugging level
  ignore_errors: yes
  replace:
    path: "{{ shib_home }}/conf/logback.xml"
    regexp: '<variable\s+name\s*=\s*"idp\.loglevel\.idp"\s+value="\w*\"\s*\/>'
    replace: "<variable name=\"idp.loglevel.idp\" value=\"TRACE\" />"

# HACK!
- name: Fix metadata error because of port after hostname
  replace:
    path: "{{ shib_home }}/metadata/idp-metadata.xml"
    regexp: "({{ shib_dns_name }}):8443"
    replace: '\1'

- name: Fetch idp metadata
  fetch:
    src: "{{ shib_home }}/metadata/idp-metadata.xml"
    dest: "generated/"
    flat: yes

- name: Setting attr resolve/release policy and enable unverified RPs
  copy:
    src: "{{ item }}"
    dest: "{{ shib_home }}/conf/{{ item }}"
    mode: 0600
  with_items:
    - attribute-resolver.xml
    - attribute-filter.xml
    - relying-party.xml

- name: Change owner and group for Shibboleth IdP
  file:
    path: "{{ shib_home }}"
    recurse: yes
    owner: tomcat8
    group: tomcat8

- name: Copy shib war descriptor to Catalina localhost
  template:
    src: idp.xml.j2
    dest: /etc/tomcat8/Catalina/localhost/idp.xml
    owner: tomcat8
    group: tomcat8
  notify: Restart Tomcat Service

...
