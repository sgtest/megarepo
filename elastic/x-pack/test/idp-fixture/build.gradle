import org.elasticsearch.gradle.VersionProperties
import org.elasticsearch.gradle.Architecture
import static org.elasticsearch.gradle.internal.distribution.InternalElasticsearchDistributionTypes.DOCKER;

apply plugin: 'elasticsearch.test.fixtures'

dockerCompose {
  composeAdditionalArgs = ['--compatibility']

  if (System.getenv('BUILDKITE') == 'true') {
    // This flag is only available on newer versions of docker-compose, and many Jenkins agents have older versions
    upAdditionalArgs = ["--wait"]
  }
}

tasks.named("preProcessFixture").configure {
  file("${testFixturesDir}/shared/oidc").mkdirs()
}

tasks.register("copyFiles", Sync) {
  from file("oidc/override.properties.template")
  into "${buildDir}/config"
  doLast {
    file("${buildDir}/config").setReadable(true, false)
    file("${buildDir}/config/override.properties.template").setReadable(true, false)
  }
}

tasks.named("postProcessFixture").configure {
  dependsOn "copyFiles"
  inputs.dir("${testFixturesDir}/shared/oidc")
  File confTemplate = file("${buildDir}/config/override.properties.template")
  File confFile = file("${testFixturesDir}/shared/oidc/override.properties")
  outputs.file(confFile)
  doLast {
    assert confTemplate.exists()
    String confContents = confTemplate.text
      .replace("\${MAPPED_PORT}", "${ext."test.fixtures.oidc-provider.tcp.8080"}")
    confFile.text = confContents
  }
}

tasks.named('composePull').configure {
  enabled = false // this task fails due to docker-compose oddities
}
