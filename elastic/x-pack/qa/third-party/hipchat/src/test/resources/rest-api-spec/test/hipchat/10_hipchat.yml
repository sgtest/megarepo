---
"Test Hipchat v1 account Action":
  - do:
      cluster.health:
          wait_for_status: yellow

  - do:
      xpack.watcher.put_watch:
        id: "hipchat_v1_watch"
        body:  >
          {
            "trigger": {
              "schedule": {
                "interval": "1d"
              }
            },
            "input": {
              "simple": {
                "foo": "something from input"
              }
            },
            "actions": {
              "my_hipchat_action": {
                "hipchat": {
                  "account": "v1_account",
                  "message": {
                    "from" : "watcher-tests",
                    "room" : ["test-watcher", "test-watcher-2", "test watcher with spaces"],
                    "body": "From input {{ctx.payload.foo}}, and some tests (facepalm) in the v1 account",
                    "format": "text",
                    "color": "red",
                    "notify": true
                  }
                }
              }
            }
          }
  
  - do:
      xpack.watcher.execute_watch:
        id: "hipchat_v1_watch"
        body: >
          {
            "record_execution": true
          }

  - match: { watch_record.trigger_event.type: "manual" }
  - match: { watch_record.state: "executed" }
  - match: { watch_record.result.actions.0.id: "my_hipchat_action" }
  - match: { watch_record.result.actions.0.type: "hipchat" }
  - match: { watch_record.result.actions.0.status: "success" }
  - match: { watch_record.result.actions.0.hipchat.account: "v1_account" }
  - match: { watch_record.result.actions.0.hipchat.sent_messages.0.room: "test-watcher" }
  - match: { watch_record.result.actions.0.hipchat.sent_messages.1.room: "test-watcher-2" }
  - match: { watch_record.result.actions.0.hipchat.sent_messages.2.room: "test watcher with spaces" }
  - match: { watch_record.result.actions.0.hipchat.sent_messages.0.status: "success" }
  - match: { watch_record.result.actions.0.hipchat.sent_messages.1.status: "success" }
  - match: { watch_record.result.actions.0.hipchat.sent_messages.2.status: "success" }

  # Waits for the watcher history index to be available
  - do:
      cluster.health:
          index: ".watcher-history-*"
          wait_for_no_relocating_shards: true
          timeout: 60s

  - do:
      indices.refresh: {}

  - do:
      search:
        index: ".watcher-history-*"
        body: >
          {
            "query" : {
              "term" : {
                "watch_id" : "hipchat_v1_watch"
              }
            }
          }

  - match: { hits.total: 1 }
  - match: { hits.hits.0._source.state: "executed" }
  - match: { hits.hits.0._source.result.actions.0.id: "my_hipchat_action" }
  - match: { hits.hits.0._source.result.actions.0.type: "hipchat" }
  - match: { hits.hits.0._source.result.actions.0.status: "success" }
  - match: { hits.hits.0._source.result.actions.0.hipchat.account: "v1_account" }
  - match: { hits.hits.0._source.result.actions.0.hipchat.sent_messages.0.room: "test-watcher" }
  - match: { hits.hits.0._source.result.actions.0.hipchat.sent_messages.1.room: "test-watcher-2" }
  - match: { hits.hits.0._source.result.actions.0.hipchat.sent_messages.2.room: "test watcher with spaces" }
  - match: { hits.hits.0._source.result.actions.0.hipchat.sent_messages.0.status: "success" }
  - match: { hits.hits.0._source.result.actions.0.hipchat.sent_messages.1.status: "success" }
  - match: { hits.hits.0._source.result.actions.0.hipchat.sent_messages.2.status: "success" }

---
"Test Hipchat integration account Action":
  - do:
      cluster.health:
          wait_for_status: yellow

  # custom rooms, custom users and custom from are not allowed for this account type to be configured
  - do:
      xpack.watcher.put_watch:
        id: "hipchat_integration_account_watch"
        body:  >
          {
            "trigger": {
              "schedule": {
                "interval": "1d"
              }
            },
            "input": {
              "simple": {
                "foo": "something from input"
              }
            },
            "actions": {
              "my_hipchat_action": {
                "hipchat": {
                  "account": "integration_account",
                  "message": {
                    "body": "From input {{ctx.payload.foo}}, and some tests (facepalm) in the integration account",
                    "format": "text",
                    "color": "red",
                    "notify": true
                  }
                }
              }
            }
          }
  
  - do:
      xpack.watcher.execute_watch:
        id: "hipchat_integration_account_watch"
        body: >
          {
            "record_execution": true
          }

  - match: { watch_record.trigger_event.type: "manual" }
  - match: { watch_record.state: "executed" }
  - match: { watch_record.result.actions.0.id: "my_hipchat_action" }
  - match: { watch_record.result.actions.0.type: "hipchat" }
  - match: { watch_record.result.actions.0.status: "success" }
  - match: { watch_record.result.actions.0.hipchat.account: "integration_account" }
  - match: { watch_record.result.actions.0.hipchat.sent_messages.0.status: "success" }
  - match: { watch_record.result.actions.0.hipchat.sent_messages.0.room: "test-watcher" }

  # Waits for the watcher history index to be available
  - do:
      cluster.health:
          index: ".watcher-history-*"
          wait_for_no_relocating_shards: true
          timeout: 60s

  - do:
      indices.refresh: {}

  - do:
      search:
        index: ".watcher-history-*"
        body: >
          {
            "query" : {
              "term" : {
                "watch_id" : "hipchat_integration_account_watch"
              }
            }
          }

  - match: { hits.total: 1 }
  - match: { hits.hits.0._source.state: "executed" }
  - match: { hits.hits.0._source.result.actions.0.id: "my_hipchat_action" }
  - match: { hits.hits.0._source.result.actions.0.type: "hipchat" }
  - match: { hits.hits.0._source.result.actions.0.status: "success" }
  - match: { hits.hits.0._source.result.actions.0.hipchat.account: "integration_account" }
  - match: { hits.hits.0._source.result.actions.0.hipchat.sent_messages.0.room: "test-watcher" }
  - match: { hits.hits.0._source.result.actions.0.hipchat.sent_messages.0.status: "success" }

---
"Test Hipchat user account Action":
  - do:
      cluster.health:
          wait_for_status: yellow

  - do:
      xpack.watcher.put_watch:
        id: "hipchat_user_account_watch"
        body:  >
          {
            "trigger": {
              "schedule": {
                "interval": "1d"
              }
            },
            "input": {
              "simple": {
                "foo": "something from input"
              }
            },
            "actions": {
              "my_hipchat_action": {
                "hipchat": {
                  "account": "user_account",
                  "message": {
                    "user" : [ "watcher@elastic.co" ],
                    "room" : ["test-watcher", "test-watcher-2", "test watcher with spaces"],
                    "body": "From input {{ctx.payload.foo}}, and some tests (facepalm) in the user_account test. <b>bold</b>",
                    "format": "html"
                  }
                }
              }
            }
          }
  
  - do:
      xpack.watcher.execute_watch:
        id: "hipchat_user_account_watch"
        body: >
          {
            "record_execution": true
          }

  - match: { watch_record.trigger_event.type: "manual" }
  - match: { watch_record.state: "executed" }
  - match: { watch_record.result.actions.0.id: "my_hipchat_action" }
  - match: { watch_record.result.actions.0.type: "hipchat" }
  - match: { watch_record.result.actions.0.status: "success" }
  - match: { watch_record.result.actions.0.hipchat.account: "user_account" }
  - match: { watch_record.result.actions.0.hipchat.sent_messages.0.room: "test-watcher" }
  - match: { watch_record.result.actions.0.hipchat.sent_messages.1.room: "test-watcher-2" }
  - match: { watch_record.result.actions.0.hipchat.sent_messages.2.room: "test watcher with spaces" }
  - match: { watch_record.result.actions.0.hipchat.sent_messages.3.user: "watcher@elastic.co" }
  - match: { watch_record.result.actions.0.hipchat.sent_messages.0.status: "success" }
  - match: { watch_record.result.actions.0.hipchat.sent_messages.1.status: "success" }
  - match: { watch_record.result.actions.0.hipchat.sent_messages.2.status: "success" }
  - match: { watch_record.result.actions.0.hipchat.sent_messages.3.status: "success" }

  # Waits for the watcher history index to be available
  - do:
      cluster.health:
          index: ".watcher-history-*"
          wait_for_no_relocating_shards: true
          timeout: 60s

  - do:
      indices.refresh: {}

  - do:
      search:
        index: ".watcher-history-*"
        body: >
          {
            "query" : {
              "term" : {
                "watch_id" : "hipchat_user_account_watch"
              }
            }
          }

  - match: { hits.total: 1 }
  - match: { hits.hits.0._source.state: "executed" }
  - match: { hits.hits.0._source.result.actions.0.id: "my_hipchat_action" }
  - match: { hits.hits.0._source.result.actions.0.type: "hipchat" }
  - match: { hits.hits.0._source.result.actions.0.status: "success" }
  - match: { hits.hits.0._source.result.actions.0.hipchat.account: "user_account" }
  - match: { hits.hits.0._source.result.actions.0.hipchat.sent_messages.0.room: "test-watcher" }
  - match: { hits.hits.0._source.result.actions.0.hipchat.sent_messages.1.room: "test-watcher-2" }
  - match: { hits.hits.0._source.result.actions.0.hipchat.sent_messages.2.room: "test watcher with spaces" }
  - match: { hits.hits.0._source.result.actions.0.hipchat.sent_messages.3.user: "watcher@elastic.co" }
  - match: { hits.hits.0._source.result.actions.0.hipchat.sent_messages.0.status: "success" }
  - match: { hits.hits.0._source.result.actions.0.hipchat.sent_messages.1.status: "success" }
  - match: { hits.hits.0._source.result.actions.0.hipchat.sent_messages.2.status: "success" }
  - match: { hits.hits.0._source.result.actions.0.hipchat.sent_messages.1.status: "success" }


