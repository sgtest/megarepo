Project smbFixtureProject = xpackProject("test:smb-fixture")
evaluationDependsOn(smbFixtureProject.path)

apply plugin: 'elasticsearch.vagrantsupport'
apply plugin: 'elasticsearch.standalone-test'

dependencies {
  testCompile project(xpackModule('security'))
  testCompile project(path: xpackModule('security'), configuration: 'testArtifacts')
}

// add test resources from security, so tests can use example certs
sourceSets.test.resources.srcDirs(project(xpackModule('security')).sourceSets.test.resources.srcDirs)
compileTestJava.options.compilerArgs << "-Xlint:-deprecation,-rawtypes,-serial,-try,-unchecked"

// we have to repeat these patterns because the security test resources are effectively in the src of this project
forbiddenPatterns {
  exclude '**/*.key'
  exclude '**/*.p12'
  exclude '**/*.der'
}

test {
  /*
   * We have to disable setting the number of available processors as tests in the same JVM randomize processors and will step on each
   * other if we allow them to set the number of available processors as it's set-once in Netty.
   */
  systemProperty 'es.set.netty.runtime.available.processors', 'false'
  include '**/*IT.class'
  include '**/*Tests.class'
}

// these are just tests, no need to audit
thirdPartyAudit.enabled = false

task smbFixture {
  dependsOn "vagrantCheckVersion", "virtualboxCheckVersion", smbFixtureProject.up
}

if (project.rootProject.vagrantSupported) {
  if (project.hasProperty('useExternalAD') == false) {
    test.dependsOn smbFixture
    test.finalizedBy smbFixtureProject.halt
  }
} else {
  test.enabled = false
}
