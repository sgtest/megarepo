apply plugin: 'elasticsearch.standalone-rest-test'
apply plugin: 'elasticsearch.rest-test'

dependencies {
  testCompile project(path: xpackModule('core'), configuration: 'runtime')
}

// bring in watcher rest test suite
task copyWatcherRestTests(type: Copy) {
  into project.sourceSets.test.output.resourcesDir
  from project(xpackProject('plugin').path).sourceSets.test.resources.srcDirs
  include 'rest-api-spec/test/watcher/**'
}

integTestCluster {
  dependsOn copyWatcherRestTests
  setting 'xpack.monitoring.enabled', 'false'
  setting 'xpack.ml.enabled', 'false'
  setting 'xpack.security.enabled', 'true'
  // settings to test settings filtering on
  setting 'xpack.notification.email.account._email.smtp.host', 'host.domain'
  setting 'xpack.notification.email.account._email.smtp.port', '587'
  setting 'xpack.notification.email.account._email.smtp.user', '_user'
  setting 'xpack.notification.email.account._email.smtp.password', '_passwd'
  setting 'xpack.license.self_generated.type', 'trial'
  extraConfigFile 'roles.yml', 'roles.yml'
  setupCommand 'setupTestAdminUser',
               'bin/elasticsearch-users', 'useradd', 'test_admin', '-p', 'x-pack-test-password', '-r', 'superuser'
  setupCommand 'setupXpackUserForTests',
               'bin/elasticsearch-users', 'useradd', 'x_pack_rest_user', '-p', 'x-pack-test-password', '-r', 'watcher_manager'
  setupCommand 'setupWatcherManagerUser',
               'bin/elasticsearch-users', 'useradd', 'watcher_manager', '-p', 'x-pack-test-password', '-r', 'watcher_manager'
  setupCommand 'setupPowerlessUser',
               'bin/elasticsearch-users', 'useradd', 'powerless_user', '-p', 'x-pack-test-password', '-r', 'crappy_role'
  waitCondition = { node, ant ->
    File tmpFile = new File(node.cwd, 'wait.success')
    ant.get(src: "http://${node.httpUri()}/_cluster/health?wait_for_nodes=>=${numNodes}&wait_for_status=yellow",
            dest: tmpFile.toString(),
            username: 'test_admin',
            password: 'x-pack-test-password',
            ignoreerrors: true,
            retries: 10)
    return tmpFile.exists()
  }
}
