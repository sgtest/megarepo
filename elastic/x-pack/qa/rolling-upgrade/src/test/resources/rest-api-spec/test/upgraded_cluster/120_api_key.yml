---
"Create and Get API key in the upgraded cluster":

  - skip:
      features: headers

  - do:
      security.create_api_key:
        body:  >
          {
            "name": "my-new-api-key",
            "metadata": {"application": "myapp"}
          }
  - match: { name: "my-new-api-key" }
  - is_true: id
  - is_true: api_key

  - do:
      security.get_api_key:
        name: "my-old-api-key"

  - length: { api_keys: 1 }

  - match: { api_keys.0.name: "my-old-api-key" }
  - match: { api_keys.0.metadata: {} }

  - do:
      security.get_api_key:
        name: "my-new-api-key"

  - length: { api_keys: 1 }

  - match: { api_keys.0.name: "my-new-api-key" }
  - match: { api_keys.0.metadata: { "application": "myapp" } }

  - do:
      security.get_api_key:
        name: "my-mixed-api-key-1"

  - length: { api_keys: 1 }

  - match: { api_keys.0.name: "my-mixed-api-key-1" }
  - match: { api_keys.0.metadata: {} }

  - do:
      security.get_api_key:
        name: "my-mixed-api-key-2"

  - length: { api_keys: 1 }

  - match: { api_keys.0.name: "my-mixed-api-key-2" }
# We cannot assert metadata for this API key because it is possible
# that the security index is on an old node and the metadata is dropped
# when transfer through the wire. But at least the key will be created
# and retrieved successfully
