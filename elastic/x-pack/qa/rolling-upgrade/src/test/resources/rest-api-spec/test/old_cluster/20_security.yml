---
"Verify native store security actions":
  # create native user and role
  - do:
     xpack.security.put_user:
       username: "native_user"
       body:  >
           {
             "password" : "x-pack-test-password",
             "roles" : [ "native_role" ]
           }
  - match: { user: { created: true } }

  - do:
      xpack.security.put_role:
        name: "native_role"
        body:  >
            {
              "cluster": ["all"],
              "indices": [
                {
                  "names": "test_index",
                  "privileges": ["all"]
                }
              ]
            }
  - match: { role: { created: true } }

  # validate that the user and role work in the cluster by executing a health request and getting a valid response back
  - do:
      headers:
        Authorization: "Basic bmF0aXZlX3VzZXI6eC1wYWNrLXRlc3QtcGFzc3dvcmQ="
      cluster.health: {}
  - match: { timed_out: false }

  - do:
      xpack.security.clear_cached_roles:
        name: "native_role"

  - do:
      xpack.security.clear_cached_realms:
        realms: "_all"

  - do:
      cluster.health:
        index: ".security"
        wait_for_active_shards: 2 # 1 primary and 1 replica since we have two nodes

  # Check that enabling a user in old cluster will not prevent the user from having a "default password" in the new cluster.
  # See: org.elasticsearch.xpack.security.authc.esnative.NativeRealmMigrator.doConvertDefaultPasswords
  - do:
      xpack.security.disable_user:
        username: "kibana"

  - do:
      xpack.security.get_user:
        username: "kibana"
  - match: { kibana.enabled: false }

  - do:
      xpack.security.change_password:
        username: "logstash_system"
        body: >
            {
              "password" : "changed-it"
            }

  - do:
      xpack.security.enable_user:
        username: "logstash_system"

  - do:
      xpack.security.get_user:
        username: "logstash_system"
  - match: { logstash_system.enabled: true }
