dependencies {
  testCompile project(path: xpackModule('core'), configuration: 'shadow')
}

Project mainProject = project

group = "${group}.x-pack.qa.sql.security"

subprojects {
  // Use resources from the parent project in subprojects
  sourceSets {
    test {
      java {
        srcDirs = ["${mainProject.projectDir}/src/test/java"]
      }
      resources {
        srcDirs = ["${mainProject.projectDir}/src/test/resources"]
      }
    }
  }

  dependencies {
    testCompile project(path: xpackModule('core'), configuration: 'shadow')
  }

  integTestCluster {
    // Setup auditing so we can use it in some tests
    setting 'xpack.security.audit.enabled', 'true'
    setting 'xpack.security.audit.outputs', 'logfile'
    setting 'xpack.security.enabled', 'true'
    setting 'xpack.license.self_generated.type', 'trial'
    // Setup roles used by tests
    extraConfigFile 'roles.yml', '../roles.yml'
    /* Setup the one admin user that we run the tests as.
     * Tests use "run as" to get different users. */
    setupCommand 'setupUser#test_admin',
                'bin/elasticsearch-users', 'useradd', 'test_admin', '-p', 'x-pack-test-password', '-r', 'superuser'
    // Subprojects override the wait condition to work properly with security
  }

  integTestRunner {
    systemProperty 'tests.audit.logfile',
        "${ -> integTest.nodes[0].homeDir}/logs/${ -> integTest.nodes[0].clusterName }_access.log"
  }

  runqa {
    // Setup auditing so we can use it in some tests
    setting 'xpack.security.audit.enabled', 'true'
    setting 'xpack.security.audit.outputs', 'logfile'
    setting 'xpack.security.enabled', 'true'
    setting 'xpack.license.self_generated.type', 'trial'
    // Setup roles used by tests
    extraConfigFile 'roles.yml', '../roles.yml'
    /* Setup the one admin user that we run the tests as.
     * Tests use "run as" to get different users. */
    setupCommand 'setupUser#test_admin',
                'bin/elasticsearch-users', 'useradd', 'test_admin', '-p', 'x-pack-test-password', '-r', 'superuser'
  }
}
