//
//  Nested documents
//
// CsvJdbc has issues with foo.bar so msot fields are aliases or wrapped inside a function

describeParent
DESCRIBE test_emp;

column               | type

birth_date           | TIMESTAMP
dep                  | STRUCT
dep.dep_id           | VARCHAR
dep.dep_name         | VARCHAR
dep.dep_name.keyword | VARCHAR
dep.from_date        | TIMESTAMP
dep.to_date          | TIMESTAMP
emp_no               | INTEGER
first_name           | VARCHAR
first_name.keyword   | VARCHAR
gender               | VARCHAR
hire_date            | TIMESTAMP
languages            | TINYINT
last_name            | VARCHAR
last_name.keyword    | VARCHAR
salary               | INTEGER
;

// disable until we figure out how to use field names with . in their name
//nestedStar
//SELECT dep.* FROM test_emp ORDER BY dep.dep_id LIMIT 5;

//dep.dep_id:s         | dep.dep_name:s       | dep.from_date:ts     | dep.to_date:ts

//d001                 | Marketing            | 744336000000         | 253370764800000
//d001                 | Marketing            | 704332800000         | 806371200000
//d001                 | Marketing            | 577929600000         | 253370764800000
//d002                 | Finance              | 732672000000         | 965865600000
//d007                 | Sales                | 720921600000         | 253370764800000
//;

filterPerNestedWithOrderByTopLevel
SELECT first_name f, last_name l, YEAR(dep.from_date) d FROM test_emp WHERE dep.dep_name = 'Production' ORDER BY f LIMIT 5;

f:s                  | l:s                  | d:i

Alain                | Chappelet            | 1988
Chirstian            | Koblick              | 1986
Duangkaew            | Piveteau             | 1996
Elvis                | Demeyer              | 1994
Gino                 | Leonhardt            | 1989
;

filterPerNestedWithOrderByNested
SELECT first_name f, last_name l, YEAR(dep.from_date) d FROM test_emp WHERE dep.dep_name = 'Production' ORDER BY dep.from_date LIMIT 5;

f:s                  | l:s                  | d:i

Sreekrishna          | Servieres            | 1985
Zhongwei             | Rosen                | 1986
Chirstian            | Koblick              | 1986
Vishv                | Zockler              | 1987
Alain                | Chappelet            | 1988
;

filterPerNestedWithOrderByNestedWithAlias
SELECT first_name f, dep.dep_id i, MONTH(dep.from_date) d FROM test_emp WHERE dep.dep_name = 'Production' ORDER BY i LIMIT 5;

f:s                  | i:s                  | d:i

Parto                | d004                 | 12
Chirstian            | d004                 | 12
Duangkaew            | d004                 | 11
Kazuhide             | d004                 | 7
Mayuko               | d004                 | 12
;

filterPerNestedWithOrderByNestedWithoutProjection
SELECT first_name f, MONTH(dep.from_date) d FROM test_emp WHERE dep.dep_name = 'Production' ORDER BY dep.dep_id LIMIT 5;

f:s        | d:i

Parto      | 12
Chirstian  | 12
Duangkaew  | 11
Kazuhide   | 7
Mayuko     | 12
;

selectWithScalarOnNested
SELECT first_name f, last_name l, YEAR(dep.from_date) start FROM test_emp WHERE dep.dep_name = 'Production' AND languages > 1 ORDER BY start LIMIT 5;

f:s                  | l:s                  | start:i

Sreekrishna          | Servieres            | 1985
Zhongwei             | Rosen                | 1986
Chirstian            | Koblick              | 1986
Alain                | Chappelet            | 1988
Zvonko               | Nyanchama            | 1989
;

selectWithScalarOnNestedWithoutProjection
SELECT first_name f, last_name l FROM test_emp WHERE dep.dep_name = 'Production' AND languages > 1 ORDER BY YEAR(dep.from_date) LIMIT 5;

f:s                  | l:s

Sreekrishna          | Servieres
Zhongwei             | Rosen
Chirstian            | Koblick
Alain                | Chappelet
Zvonko               | Nyanchama
;
