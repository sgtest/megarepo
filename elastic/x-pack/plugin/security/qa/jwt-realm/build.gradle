import org.elasticsearch.gradle.Version
import org.elasticsearch.gradle.internal.info.BuildParams

apply plugin: 'elasticsearch.legacy-java-rest-test'

dependencies {
  javaRestTestImplementation project(path: xpackModule('core'))
  javaRestTestImplementation(testArtifact(project(xpackModule('security'))))
  javaRestTestImplementation(testArtifact(project(xpackModule('core'))))
  javaRestTestImplementation project(":client:rest")
}

def random = BuildParams.random
boolean explicitIdTokenType = random.nextBoolean()
def serviceSubject = 'service_' + random.nextInt(1, 9) + '@app' + random.nextInt(1, 9) + '.example.com'

tasks.named("javaRestTest").configure {
  systemProperty 'jwt2.service_subject', serviceSubject
}

testClusters.matching { it.name == 'javaRestTest' }.configureEach {
  testDistribution = 'DEFAULT'

  numberOfNodes = 2

  // This can be turned on to help debug failing tests, but generates more output than is needed for CI
  // setting 'logger.org.elasticsearch.xpack.security.authc.jwt', 'DEBUG'

  extraConfigFile 'http.key', file('src/javaRestTest/resources/ssl/http.key')
  extraConfigFile 'http.crt', file('src/javaRestTest/resources/ssl/http.crt')
  extraConfigFile 'ca.crt', file('src/javaRestTest/resources/ssl/ca.crt')
  extraConfigFile 'rsa.jwkset', file('src/javaRestTest/resources/jwk/rsa-public-jwkset.json')

  setting 'xpack.ml.enabled', 'false'
  setting 'xpack.license.self_generated.type', 'trial'
  setting 'xpack.security.enabled', 'true'
  setting 'xpack.security.http.ssl.enabled', 'true'
  setting 'xpack.security.transport.ssl.enabled', 'false'
  setting 'xpack.security.authc.token.enabled', 'true'
  setting 'xpack.security.authc.api_key.enabled', 'true'

  setting 'xpack.security.http.ssl.enabled', 'true'
  setting 'xpack.security.http.ssl.certificate', 'http.crt'
  setting 'xpack.security.http.ssl.key', 'http.key'
  setting 'xpack.security.http.ssl.key_passphrase', 'http-password'
  setting 'xpack.security.http.ssl.certificate_authorities', 'ca.crt'
  setting 'xpack.security.http.ssl.client_authentication', 'optional'

  setting 'xpack.security.authc.realms.file.admin_file.order', '0'

  // These realm settings are generated by JwtRealmGenerateTests
  setting 'xpack.security.authc.realms.jwt.jwt1.order', '1'
  if (explicitIdTokenType) {
    setting 'xpack.security.authc.realms.jwt.jwt1.token_type', 'id_token'
  }
  setting 'xpack.security.authc.realms.jwt.jwt1.allowed_issuer', 'https://issuer.example.com/'
  setting 'xpack.security.authc.realms.jwt.jwt1.allowed_audiences', 'https://audience.example.com/'
  setting 'xpack.security.authc.realms.jwt.jwt1.claims.principal', 'sub'
  setting 'xpack.security.authc.realms.jwt.jwt1.claims.groups', 'roles'
  setting 'xpack.security.authc.realms.jwt.jwt1.claims.dn', 'dn'
  setting 'xpack.security.authc.realms.jwt.jwt1.claims.name', 'name'
  setting 'xpack.security.authc.realms.jwt.jwt1.claims.mail', 'mail'
  setting 'xpack.security.authc.realms.jwt.jwt1.required_claims.token_use', 'id'
  setting 'xpack.security.authc.realms.jwt.jwt1.required_claims.version', '2.0'
  setting 'xpack.security.authc.realms.jwt.jwt1.client_authentication.type', 'NONE'
  // Use default value (RS256) for signature algorithm
  setting 'xpack.security.authc.realms.jwt.jwt1.pkc_jwkset_path', 'rsa.jwkset'

  // Place native realm after JWT realm to verify realm chain fall-through
  setting 'xpack.security.authc.realms.native.lookup_native.order', '2'

  setting 'xpack.security.authc.realms.jwt.jwt2.order', '3'
  setting 'xpack.security.authc.realms.jwt.jwt2.token_type', 'access_token'
  setting 'xpack.security.authc.realms.jwt.jwt2.fallback_claims.sub', 'email'
  setting 'xpack.security.authc.realms.jwt.jwt2.fallback_claims.aud', 'scope'
  setting 'xpack.security.authc.realms.jwt.jwt2.allowed_issuer', 'my-issuer'
  setting 'xpack.security.authc.realms.jwt.jwt2.allowed_subjects', serviceSubject
  setting 'xpack.security.authc.realms.jwt.jwt2.allowed_audiences', 'es01,es02,es03'
  setting 'xpack.security.authc.realms.jwt.jwt2.allowed_signature_algorithms', 'HS256,HS384'
  // Both email or sub works because of fallback
  if (random.nextBoolean()) {
    setting 'xpack.security.authc.realms.jwt.jwt2.claims.principal', 'email'
  } else {
    setting 'xpack.security.authc.realms.jwt.jwt2.claims.principal', 'sub'
  }
  setting 'xpack.security.authc.realms.jwt.jwt2.claim_patterns.principal', '^(.*)@[^.]*[.]example[.]com$'
  setting 'xpack.security.authc.realms.jwt.jwt2.required_claims.token_use', 'access'
  setting 'xpack.security.authc.realms.jwt.jwt2.authorization_realms', 'lookup_native'
  setting 'xpack.security.authc.realms.jwt.jwt2.client_authentication.type', 'shared_secret'
  keystore 'xpack.security.authc.realms.jwt.jwt2.client_authentication.shared_secret', 'test-secret'
  keystore 'xpack.security.authc.realms.jwt.jwt2.hmac_key', 'test-HMAC/secret passphrase-value'

  // Place PKI realm after JWT realm to verify realm chain fall-through
  setting 'xpack.security.authc.realms.pki.pki_realm.order', '4'

  setting 'xpack.security.authc.realms.jwt.jwt3.order', '5'
  if (explicitIdTokenType) {
    setting 'xpack.security.authc.realms.jwt.jwt3.token_type', 'id_token'
  }
  setting 'xpack.security.authc.realms.jwt.jwt3.allowed_issuer', 'jwt3-issuer'
  setting 'xpack.security.authc.realms.jwt.jwt3.allowed_audiences', '[jwt3-audience]'
  setting 'xpack.security.authc.realms.jwt.jwt3.allowed_signature_algorithms', '[HS384, HS512]'
  setting 'xpack.security.authc.realms.jwt.jwt3.claims.principal', 'sub'
  setting 'xpack.security.authc.realms.jwt.jwt3.client_authentication.type', 'Shared_Secret'
  keystore 'xpack.security.authc.realms.jwt.jwt3.hmac_jwkset',
   '{"keys":[{"kty":"oct","kid":"test-hmac-384","k":"W3mR8v_MP0_YdDo1OB0uwOgPX6-7PzkICVxMDVCZlPGw3vyPr8SRb5akrRSNU-zV"},{"kty":"oct","kid":"test-hmac-512","k":"U4kMAa7tBwKOD4ggab4ZRGeHlFTILgNbescS1b5nambKJPmrB7QjeTryvfrE8zjYSvLxW2-tzFJUpk38a6FjPA"}]}'
  keystore 'xpack.security.authc.realms.jwt.jwt3.client_authentication.shared_secret', 'test-secret'

  user username: "admin_user", password: "admin-password"
  user username: "test_file_user", password: "test-password", role: "viewer"
}

