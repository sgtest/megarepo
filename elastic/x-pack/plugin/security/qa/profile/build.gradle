import org.elasticsearch.gradle.Version
import org.elasticsearch.gradle.internal.info.BuildParams

apply plugin: 'elasticsearch.legacy-java-rest-test'

dependencies {
  javaRestTestImplementation project(':x-pack:plugin:core')
  javaRestTestImplementation project(':client:rest-high-level')
  javaRestTestImplementation project(':x-pack:plugin:security')
}

boolean literalUsername = BuildParams.random.nextBoolean()

testClusters.matching { it.name == 'javaRestTest' }.configureEach {
  testDistribution = 'DEFAULT'
  numberOfNodes = 2

  rolesFile file('src/javaRestTest/resources/roles.yml')

  setting 'xpack.ml.enabled', 'false'
  setting 'xpack.license.self_generated.type', 'trial'

  setting 'xpack.security.enabled', 'true'
  setting 'xpack.security.authc.token.enabled', 'true'
  setting 'xpack.security.authc.api_key.enabled', 'true'

  setting 'xpack.security.authc.realms.ldap.ldap1.enabled', 'false'
  setting 'xpack.security.authc.domains.my_domain.realms', 'default_file,ldap1'

  // randomize between hashed and literal username for profile uid
  if (literalUsername) {
    setting 'xpack.security.authc.domains.my_domain.uid_generation.literal_username', 'true'
    setting 'xpack.security.authc.domains.my_domain.uid_generation.suffix', 'es'
  }

  setting 'xpack.security.authc.realms.saml.saml1.enabled', 'false'
  setting 'xpack.security.authc.realms.active_directory.ad1.enabled', 'false'
  setting 'xpack.security.authc.domains.other_domain.realms', 'saml1,ad1'

  // Ensure new cache setting is recognised
  setting 'xpack.security.authz.store.roles.has_privileges.cache.max_size', '100'

  user username: "test-admin", password: 'x-pack-test-password'
  user username: "rac-user", password: 'x-pack-test-password', role: "rac_user_role"
}
