import org.elasticsearch.gradle.info.BuildParams

evaluationDependsOn(xpackModule('core'))

apply plugin: 'elasticsearch.esplugin'

esplugin {
  name 'x-pack-autoscaling'
  description 'Elasticsearch Expanded Pack Plugin - Autoscaling'
  classname 'org.elasticsearch.xpack.autoscaling.Autoscaling'
  extendedPlugins = ['x-pack-core']
  hasNativeController false
  requiresKeystore true
}
archivesBaseName = 'x-pack-autoscaling'

integTest.enabled = false

task internalClusterTest(type: Test) {
  description = 'Java fantasy integration tests'
  mustRunAfter test

  include '**/*IT.class'
  systemProperty 'es.set.netty.runtime.available.processors', 'false'
  if (BuildParams.isSnapshotBuild() == false) {
    systemProperty 'es.autoscaling_feature_flag_registered', 'true'
  }
}

check.dependsOn internalClusterTest

dependencies {
  compileOnly project(path: xpackModule('core'), configuration: 'default')
  testCompile project(path: xpackModule('core'), configuration: 'testArtifacts')
}

// add all sub-projects of the qa sub-project
gradle.projectsEvaluated {
  project.subprojects
    .find { it.path == project.path + ":qa" }
    .subprojects
    .findAll { it.path.startsWith(project.path + ":qa") }
    .each { check.dependsOn it.check }
}

testingConventions.naming {
  IT {
    baseClass "org.elasticsearch.xpack.autoscaling.AutoscalingIntegTestCase"
  }
}
