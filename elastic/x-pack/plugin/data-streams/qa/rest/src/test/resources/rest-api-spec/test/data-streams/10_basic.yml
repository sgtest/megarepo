setup:
  - skip:
      features: allowed_warnings
  - do:
      allowed_warnings:
        - "index template [my-template1] has index patterns [simple-data-stream1] matching patterns from existing older templates [global] with patterns (global => [*]); this template [my-template1] will take precedence during new index creation"
      indices.put_index_template:
        name: my-template1
        body:
          index_patterns: [simple-data-stream1]
          template:
            settings:
              index.number_of_replicas: 0
          data_stream: {}

  - do:
      allowed_warnings:
        - "index template [my-template2] has index patterns [simple-data-stream2] matching patterns from existing older templates [global] with patterns (global => [*]); this template [my-template2] will take precedence during new index creation"
      indices.put_index_template:
        name: my-template2
        body:
          index_patterns: [simple-data-stream2]
          template:
            mappings:
              properties:
                '@timestamp':
                  type: date_nanos
          data_stream: {}

---
"Create data stream":
  - skip:
      version: " - 7.8.99"
      reason: "data streams only supported in 7.9+"

  - do:
      indices.create_data_stream:
        name: simple-data-stream1
  - is_true: acknowledged

  - do:
      indices.create_data_stream:
        name: simple-data-stream2
  - is_true: acknowledged

  - do:
      indices.get_data_stream:
        name: "*"
  - match: { data_streams.0.name: simple-data-stream1 }
  - match: { data_streams.0.timestamp_field.name: '@timestamp' }
  - match: { data_streams.0.generation: 1 }
  - length: { data_streams.0.indices: 1 }
  - match: { data_streams.0.indices.0.index_name: '.ds-simple-data-stream1-000001' }
  - match: { data_streams.0.status: 'GREEN' }
  - match: { data_streams.0.template: 'my-template1' }
  - match: { data_streams.1.name: simple-data-stream2 }
  - match: { data_streams.1.timestamp_field.name: '@timestamp' }
  - match: { data_streams.0.generation: 1 }
  - length: { data_streams.1.indices: 1 }
  - match: { data_streams.1.indices.0.index_name: '.ds-simple-data-stream2-000001' }
  - match: { data_streams.1.template: 'my-template2' }

  - do:
      indices.get_mapping:
        index: .ds-simple-data-stream1-000001
        expand_wildcards: hidden
  - match: { \.ds-simple-data-stream1-000001.mappings.properties.@timestamp.type: 'date' }

  - do:
      indices.get_mapping:
        index: .ds-simple-data-stream2-000001
        expand_wildcards: hidden
  - match: { \.ds-simple-data-stream2-000001.mappings.properties.@timestamp.type: 'date_nanos' }

  - do:
      index:
        index:  simple-data-stream1
        body:
          '@timestamp': '2020-12-12'
          foo: bar

  - do:
      indices.refresh:
        index: simple-data-stream1

  - do:
      search:
        index: simple-data-stream1
        body: { query: { match_all: {} } }
  - length:   { hits.hits: 1  }
  - match: { hits.hits.0._index: .ds-simple-data-stream1-000001 }
  - match: { hits.hits.0._source.foo: 'bar' }

  - do:
      indices.delete_data_stream:
        name: simple-data-stream1
  - is_true: acknowledged

  - do:
      indices.delete_data_stream:
        name: simple-data-stream2
  - is_true: acknowledged

---
"Create data stream with invalid name":
  - skip:
      version: " - 7.8.99"
      reason: "data streams only supported in 7.9+"

  - do:
      catch: bad_request
      indices.create_data_stream:
        name: invalid-data-stream#-name

  - match: { status: 400 }
  - match: { error.root_cause.0.type: "illegal_argument_exception" }
  - match: { error.root_cause.0.reason: "data_stream [invalid-data-stream#-name] must not contain '#'" }

---
"Get data stream":
  - skip:
      version: " - 7.8.99"
      reason: "data streams available in 7.9+"

  - do:
      indices.create_data_stream:
        name: simple-data-stream1
  - is_true: acknowledged

  - do:
      indices.create_data_stream:
        name: simple-data-stream2
  - is_true: acknowledged

  - do:
      indices.get_data_stream: {}
  - match: { data_streams.0.name: simple-data-stream1 }
  - match: { data_streams.0.timestamp_field.name: '@timestamp' }
  - match: { data_streams.0.generation: 1 }
  - match: { data_streams.1.name: simple-data-stream2 }
  - match: { data_streams.1.timestamp_field.name: '@timestamp' }
  - match: { data_streams.1.generation: 1 }

  - do:
      indices.get_data_stream:
        name: simple-data-stream1
  - match: { data_streams.0.name: simple-data-stream1 }
  - match: { data_streams.0.timestamp_field.name: '@timestamp' }
  - match: { data_streams.0.generation: 1 }

  - do:
      indices.get_data_stream:
        name: simple-data-stream*
  - match: { data_streams.0.name: simple-data-stream1 }
  - match: { data_streams.0.timestamp_field.name: '@timestamp' }
  - match: { data_streams.0.generation: 1 }
  - match: { data_streams.1.name: simple-data-stream2 }
  - match: { data_streams.1.timestamp_field.name: '@timestamp' }
  - match: { data_streams.1.generation: 1 }

  - do:
      indices.get_data_stream:
        name: nonexistent-data-stream
      catch: missing

  - match: { status: 404 }
  - match: { error.root_cause.0.type: "index_not_found_exception" }

  - do:
      indices.get_data_stream:
        name: nonexistent*
  - match: { data_streams: [] }

  - do:
      indices.delete_data_stream:
        name: simple-data-stream1
  - is_true: acknowledged

  - do:
      indices.delete_data_stream:
        name: simple-data-stream2
  - is_true: acknowledged

---
"Delete data stream with backing indices":
  - skip:
      version: " - 7.8.99"
      reason: "data streams only supported in 7.9+"

  - do:
      indices.create_data_stream:
        name: simple-data-stream1
  - is_true: acknowledged

  - do:
      indices.create:
        index: test_index
        body:
          settings:
            number_of_shards:   1
            number_of_replicas: 1

  - do:
      indices.get:
        index: ['.ds-simple-data-stream1-000001', 'test_index']

  - is_true: test_index.settings
  - is_true: \.ds-simple-data-stream1-000001.settings

  - do:
      indices.get_data_stream: {}
  - match: { data_streams.0.name: simple-data-stream1 }
  - match: { data_streams.0.timestamp_field.name: '@timestamp' }
  - match: { data_streams.0.generation: 1 }
  - length: { data_streams.0.indices: 1 }
  - match: { data_streams.0.indices.0.index_name: '.ds-simple-data-stream1-000001' }

  - do:
      indices.delete_data_stream:
        name: simple-data-stream1
  - is_true: acknowledged

  - do:
      catch: missing
      indices.get:
        index: ".ds-simple-data-stream1-000001"

---
"append-only writes to backing indices prohobited":
  - skip:
      version: " - 7.8.99"
      reason: "data streams only supported in 7.9+"
      features: allowed_warnings

  - do:
      allowed_warnings:
        - "index template [generic_logs_template] has index patterns [logs-*] matching patterns from existing older templates [global] with patterns (global => [*]); this template [generic_logs_template] will take precedence during new index creation"
      indices.put_index_template:
        name: generic_logs_template
        body:
          index_patterns: logs-*
          data_stream: {}


  - do:
      index:
        index:  logs-foobar
        body:   { '@timestamp': '2020-12-12' }
  - match: { _index: .ds-logs-foobar-000001 }

  - do:
      catch: bad_request
      index:
        index:  .ds-logs-foobar-000001
        body:   { '@timestamp': '2020-12-12' }

  - do:
      bulk:
        body:
          - create:
              _index: .ds-logs-foobar-000001
          - '@timestamp': '2020-12-12'
          - index:
              _index: .ds-logs-foobar-000001
          - '@timestamp': '2020-12-12'
          - create:
              _index: logs-foobar
          - '@timestamp': '2020-12-12'
  - match: { errors: true }
  - match: { items.0.create.status: 400 }
  - match: { items.0.create.error.type: illegal_argument_exception }
  - match: { items.0.create.error.reason: "index request with op_type=create targeting backing indices is disallowed, target corresponding data stream [logs-foobar] instead" }
  - match: { items.1.index.status: 400 }
  - match: { items.1.index.error.type: illegal_argument_exception }
  - match: { items.1.index.error.reason: "index request with op_type=index and no if_primary_term and if_seq_no set targeting backing indices is disallowed, target corresponding data stream [logs-foobar] instead" }
  - match: { items.2.create.result: created }
  - match: { items.2.create._index: .ds-logs-foobar-000001 }

  - do:
      indices.delete_data_stream:
        name: logs-foobar
  - is_true: acknowledged

---
"Indexing a document into a data stream without a timestamp field":
  - skip:
      version: " - 7.8.99"
      reason: "data streams only supported in 7.9+"
      features: allowed_warnings

  - do:
      allowed_warnings:
        - "index template [generic_logs_template] has index patterns [logs-*] matching patterns from existing older templates [global] with patterns (global => [*]); this template [generic_logs_template] will take precedence during new index creation"
      indices.put_index_template:
        name: generic_logs_template
        body:
          index_patterns: logs-*
          data_stream: {}

  - do:
      catch: bad_request
      index:
        index:  logs-foobar
        body:   { foo: bar }

  - do:
      bulk:
        body:
          - create:
              _index: logs-foobar
          - foo: bar
          - create:
              _index: logs-foobar
          - '@timestamp': '2020-12-12'
          - create:
              _index: logs-foobar
          - '@timestamp': ['2020-12-12', '2022-12-12']
  - match: { errors: true }
  - match: { items.0.create.status: 400 }
  - match: { items.0.create.error.caused_by.type: illegal_argument_exception }
  - match: { items.0.create.error.caused_by.reason: "data stream timestamp field [@timestamp] is missing" }
  - match: { items.1.create.result: created }
  - match: { items.1.create._index: .ds-logs-foobar-000001 }
  - match: { items.2.create.status: 400 }
  - match: { items.2.create.error.caused_by.type: illegal_argument_exception }
  - match: { items.2.create.error.caused_by.reason: "data stream timestamp field [@timestamp] encountered multiple values" }

  - do:
      indices.delete_data_stream:
        name: logs-foobar
  - is_true: acknowledged
