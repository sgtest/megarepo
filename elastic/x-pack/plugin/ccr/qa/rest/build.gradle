import org.elasticsearch.gradle.test.RestIntegTestTask

apply plugin: 'elasticsearch.standalone-test'

dependencies {
    testCompile project(path: xpackModule('core'), configuration: 'testArtifacts')
    testCompile project(path: xpackModule('ccr'), configuration: 'runtime')
}

task restTest(type: RestIntegTestTask) {
    mustRunAfter(precommit)
}

restTestCluster {
    distribution 'default'
    // Disable assertions in FollowingEngineAssertions, otherwise an AssertionError is thrown before
    // indexing a document directly in a follower index. In a rest test we like to test the exception
    // that is thrown in production when indexing a document directly in a follower index.
    environment 'ES_JAVA_OPTS', '-da:org.elasticsearch.xpack.ccr.index.engine.FollowingEngineAssertions'
    setting 'xpack.ml.enabled', 'false'
    setting 'xpack.monitoring.enabled', 'false'
    setting 'xpack.security.enabled', 'true'
    setting 'xpack.license.self_generated.type', 'trial'
    // TODO: reduce the need for superuser here
    setupCommand 'setup-ccr-user',
            'bin/elasticsearch-users', 'useradd', 'ccr-user', '-p', 'ccr-user-password', '-r', 'superuser'
    waitCondition = { node, ant ->
        File tmpFile = new File(node.cwd, 'wait.success')
        ant.get(src: "http://${node.httpUri()}/_cluster/health?wait_for_nodes=>=${numNodes}&wait_for_status=yellow",
                dest: tmpFile.toString(),
                username: 'ccr-user',
                password: 'ccr-user-password',
                ignoreerrors: true,
                retries: 10)
        return tmpFile.exists()
    }
}

check.dependsOn restTest
unitTest.enabled = false
