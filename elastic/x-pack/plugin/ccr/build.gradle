evaluationDependsOn(xpackModule('core'))

apply plugin: 'elasticsearch.esplugin'
apply plugin: 'elasticsearch.internal-cluster-test'
esplugin {
  name 'x-pack-ccr'
  description 'Elasticsearch Expanded Pack Plugin - CCR'
  classname 'org.elasticsearch.xpack.ccr.Ccr'
  hasNativeController false
  requiresKeystore true
  extendedPlugins = ['x-pack-core']
}
archivesBaseName = 'x-pack-ccr'

integTest.enabled = false

// Integration Test classes that cannot run with the security manager
String[] noSecurityManagerITClasses = ["**/CloseFollowerIndexIT.class"]

tasks.register('internalClusterTestNoSecurityManager', Test) {
  testClassesDirs = sourceSets.internalClusterTest.output.classesDirs
  classpath = sourceSets.internalClusterTest.runtimeClasspath
  include noSecurityManagerITClasses
  systemProperty 'tests.security.manager', 'false'
}
check.dependsOn 'internalClusterTestNoSecurityManager'

tasks.named('internalClusterTest').configure {
  exclude noSecurityManagerITClasses
}

// add all sub-projects of the qa sub-project
gradle.projectsEvaluated {
  project.subprojects
    .find { it.path == project.path + ":qa" }
    .subprojects
    .findAll { it.path.startsWith(project.path + ":qa") }
    .each { check.dependsOn it.check }
}

dependencies {
  compileOnly project(":server")

  compileOnly project(path: xpackModule('core'), configuration: 'default')
  testCompile project(path: xpackModule('core'), configuration: 'testArtifacts')
  testCompile project(path: xpackModule('monitoring'), configuration: 'testArtifacts')
}

dependencyLicenses {
  ignoreSha 'x-pack-core'
}

testingConventions.naming {
  IT {
    baseClass "org.elasticsearch.xpack.CcrIntegTestCase"
  }
}
