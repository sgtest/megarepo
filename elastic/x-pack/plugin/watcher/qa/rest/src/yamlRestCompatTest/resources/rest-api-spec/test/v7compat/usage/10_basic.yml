---
setup:
  - skip:
      features:
        - allowed_warnings
        - warnings
        - headers
  - do:
      cluster.health:
        wait_for_status: yellow

---
"Test watcher usage stats output":
  - do:
      headers:
        Accept: "application/vnd.elasticsearch+json;compatible-with=7"
        Content-Type: "application/vnd.elasticsearch+json;compatible-with=7"
      warnings:
        - "[DELETE /_xpack/watcher/watch/{id}] is deprecated! Use [DELETE /_watcher/watch/{id}] instead."
      xpack-watcher.delete_watch:
        id: "usage_stats_watch"
      catch: missing

  - do: {xpack.usage: {}}
  - set: { "watcher.count.active": watch_count_active }
  - set: { "watcher.count.total": watch_count_total }

  - do:
      headers:
        Accept: "application/vnd.elasticsearch+json;compatible-with=7"
        Content-Type: "application/vnd.elasticsearch+json;compatible-with=7"
      allowed_warnings:
        - "[POST /_xpack/watcher/watch/{id}] is deprecated! Use [POST /_watcher/watch/{id}] instead."
        - "[PUT /_xpack/watcher/watch/{id}] is deprecated! Use [PUT /_watcher/watch/{id}] instead."
      xpack-watcher.put_watch:
        id: "usage_stats_watch"
        body:  >
          {
            "trigger": {
              "schedule" : { "cron" : "0 0 0 1 * ? 2099" }
            },
            "input": {
              "search" : {
                "request" : {
                  "indices" : [ "my_test_index" ],
                  "body" :{
                    "query" : { "match_all": {} }
                  }
                }
              }
            },
            "condition" : {
              "compare" : {
                "ctx.payload.hits.total" : {
                  "gte" : 1
                }
              }
            },
            "actions": {
              "logging": {
                "logging": {
                  "text": "Successfully ran my_watch to test for search input"
                }
              }
            }
          }
  - match: { _id: "usage_stats_watch" }

  - do: {xpack.usage: {}}
  - gt: { "watcher.count.active": $watch_count_active }
  - gt: { "watcher.count.total": $watch_count_total }
  - gte: { "watcher.watch.action._all.active": 1 }
  - gte: { "watcher.watch.action.logging.active": 1 }
  - gte: { "watcher.watch.condition._all.active": 1 }
  - gte: { "watcher.watch.condition.compare.active": 1 }
  - gte: { "watcher.watch.input._all.active": 1 }
  - gte: { "watcher.watch.input.search.active": 1 }
  - gte: { "watcher.watch.trigger._all.active": 1 }
  - gte: { "watcher.watch.trigger.schedule.active": 1 }
  - gte: { "watcher.watch.trigger.schedule.cron.active": 1 }
  - gte: { "watcher.watch.trigger.schedule._all.active": 1 }

