---
setup:
  - skip:
      features: ["headers", "allowed_warnings"]
      version: " - 7.8.99"
      reason: "data streams available in 7.9+"

  - do:
      cluster.health:
        wait_for_status: yellow

  - do:
      security.put_role:
        name: "data_stream_role"
        body:  >
          {
            "indices": [
              { "names": ["simple*"], "privileges": ["read", "write", "create_index", "view_index_metadata", "delete_index"] }
            ]
          }

  - do:
      security.put_role:
        name: "data_stream_role2"
        body:  >
          {
            "indices": [
              { "names": ["matches_none"], "privileges": ["read", "write", "create_index", "view_index_metadata", "delete_index"] }
            ]
          }

  - do:
      security.put_user:
        username: "test_user"
        body:  >
          {
            "password" : "x-pack-test-password",
            "roles" : [ "data_stream_role" ],
            "full_name" : "user with privileges on some data streams"
          }

  - do:
      security.put_user:
        username: "no_authz_user"
        body:  >
          {
            "password" : "x-pack-test-password",
            "roles" : [ "data_stream_role2" ],
            "full_name" : "user with privileges on no data streams"
          }

  - do:
      allowed_warnings:
        - "index template [my-template1] has index patterns [s*] matching patterns from existing older templates [global] with patterns (global => [*]); this template [my-template1] will take precedence during new index creation"
      indices.put_index_template:
        name: my-template1
        body:
          index_patterns: [s*]
          template:
            mappings:
              properties:
                '@timestamp':
                  type: date
          data_stream: {}

---
teardown:
  - do:
      security.delete_user:
        username: "test_user"
        ignore: 404

  - do:
      security.delete_user:
        username: "test_user2"
        ignore: 404

  - do:
      security.delete_role:
        name: "data_stream_role"
        ignore: 404

  - do:
      security.delete_role:
        name: "data_stream_role2"
        ignore: 404

---
"Test backing indices inherit parent data stream privileges":
  - skip:
      version: " - 7.8.99"
      reason: "data streams available in 7.9+"
      features: ["headers"]

  - do: # superuser
      indices.create_data_stream:
        name: simple-data-stream1
  - is_true: acknowledged

  - do: # superuser
      index:
        index:  simple-data-stream1
        id:       1
        op_type:  create
        body:   { foo: bar, "@timestamp": "2020-12-12" }

  - set: { _seq_no: seqno }
  - set: { _primary_term: primary_term }

  - do: # superuser
      indices.refresh:
        index: simple-data-stream1

  # should succeed since the search request is on the data stream itself
  - do:
      headers: { Authorization: "Basic dGVzdF91c2VyOngtcGFjay10ZXN0LXBhc3N3b3Jk" } # test_user
      search:
        rest_total_hits_as_int: true
        index: simple-data-stream1

  - match: { hits.total: 1 }

  # should succeed since the backing index inherits the data stream's privileges
  - do:
      headers: { Authorization: "Basic dGVzdF91c2VyOngtcGFjay10ZXN0LXBhc3N3b3Jk" } # test_user
      search:
        rest_total_hits_as_int: true
        index: .ds-simple-data-stream1-000001

  - match: { hits.total: 1 }

  # should succeed since the backing index inherits the data stream's privileges
  - do:
      headers: { Authorization: "Basic dGVzdF91c2VyOngtcGFjay10ZXN0LXBhc3N3b3Jk" } # test_user
      index:
        index:  .ds-simple-data-stream1-000001
        id: 1
        if_seq_no: $seqno
        if_primary_term: $primary_term
        op_type:  index
        body:   { foo: bar2, "@timestamp": "2020-12-12" }

  - match: { _version: 2 }

  - do: # superuser
      indices.delete_data_stream:
        name: simple-data-stream1
  - is_true: acknowledged

---
"Test that requests not supporting data streams do not include data streams among authorized indices":
  - skip:
      version: " - 7.8.99"
      reason: "data streams available in 7.9+"
      features: ["headers"]

  - do: # superuser
      indices.create_data_stream:
        name: simple-data-stream1
  - is_true: acknowledged

  - do: # superuser
      indices.create:
        index: simple-index
        body:
          aliases:
            simple-alias: {}

  - do:
      headers: { Authorization: "Basic dGVzdF91c2VyOngtcGFjay10ZXN0LXBhc3N3b3Jk" } # test_user
      indices.get_alias:
        name: simple*

  - match: {simple-index.aliases.simple-alias: {}}
  - is_false: simple-data-stream1

  - do: # superuser
      indices.delete_data_stream:
        name: simple-data-stream1
  - is_true: acknowledged

---
"Test that create data stream is limited to authorized namespace":
  - skip:
      version: " - 7.8.99"
      reason: "data streams available in 7.9+"

  - do:
      headers: { Authorization: "Basic dGVzdF91c2VyOngtcGFjay10ZXN0LXBhc3N3b3Jk" } # test_user
      indices.create_data_stream:
        name: simple-data-stream1
  - is_true: acknowledged

  - do: # superuser
      indices.delete_data_stream:
        name: simple-data-stream1
  - is_true: acknowledged

  - do:
      catch: forbidden
      headers: { Authorization: "Basic dGVzdF91c2VyOngtcGFjay10ZXN0LXBhc3N3b3Jk" } # test_user
      indices.create_data_stream:
        name: outside_of_namespace

---
"Test that get data stream is limited to authorized namespace":
  - skip:
      version: " - 7.8.99"
      reason: "data streams available in 7.9+"

  - do: # superuser
      indices.create_data_stream:
        name: simple-data-stream1
  - is_true: acknowledged

  - do: # superuser
      indices.create_data_stream:
        name: s-outside-of-authed-namespace
  - is_true: acknowledged

  - do:
      headers: { Authorization: "Basic dGVzdF91c2VyOngtcGFjay10ZXN0LXBhc3N3b3Jk" } # test_user
      indices.get_data_stream:
        name: simple-data-stream1

  - length: { data_streams: 1 }
  - match: { data_streams.0.name: simple-data-stream1 }

  - do: # superuser
      indices.get_data_stream:
        name: "*"

  # superuser should be authorized for both data streams
  - length: { data_streams: 2 }
  - match: { data_streams.0.name: s-outside-of-authed-namespace }
  - match: { data_streams.1.name: simple-data-stream1 }

  - do:
      headers: { Authorization: "Basic dGVzdF91c2VyOngtcGFjay10ZXN0LXBhc3N3b3Jk" } # test_user
      indices.get_data_stream:
        name: "*"

  # test_user should be authorized for only one data stream
  - length: { data_streams: 1 }
  - match: { data_streams.0.name: simple-data-stream1 }

  - do:
      catch: forbidden
      headers: { Authorization: "Basic dGVzdF91c2VyOngtcGFjay10ZXN0LXBhc3N3b3Jk" } # test_user
      indices.get_data_stream:
        name: outside_of_namespace

  - do:
      headers: { Authorization: "Basic bm9fYXV0aHpfdXNlcjp4LXBhY2stdGVzdC1wYXNzd29yZA==" } # no_authz_user
      indices.get_data_stream: {}

  # no_authz_user should not be authorized for any data streams
  - length: { data_streams: 0 }

  - do: # superuser
      indices.delete_data_stream:
        name: simple-data-stream1
  - is_true: acknowledged

  - do: # superuser
      indices.delete_data_stream:
        name: s-outside-of-authed-namespace
  - is_true: acknowledged

---
"Test that delete data stream is limited to authorized namespace":
  - skip:
      version: " - 7.8.99"
      reason: "data streams available in 7.9+"

  - do: # superuser
      indices.create_data_stream:
        name: simple-data-stream1
  - is_true: acknowledged

  - do: # superuser
      indices.create_data_stream:
        name: s-outside-of-authed-namespace
  - is_true: acknowledged

  - do:
      headers: { Authorization: "Basic dGVzdF91c2VyOngtcGFjay10ZXN0LXBhc3N3b3Jk" } # test_user
      indices.delete_data_stream:
        name: simple-data-stream1
  - is_true: acknowledged

  - do:
      catch: forbidden
      headers: { Authorization: "Basic dGVzdF91c2VyOngtcGFjay10ZXN0LXBhc3N3b3Jk" } # test_user
      indices.delete_data_stream:
        name: s-outside-of-authed-namespace

  - do:
      catch: forbidden
      headers: { Authorization: "Basic bm9fYXV0aHpfdXNlcjp4LXBhY2stdGVzdC1wYXNzd29yZA==" } # no_authz_user
      indices.delete_data_stream:
        name: simple-data-stream1

  - do: # superuser
      indices.delete_data_stream:
        name: s-outside-of-authed-namespace
  - is_true: acknowledged

---
"auto_configure privilege permits auto-create of data streams":
  - skip:
      version: " - 7.8.99"
      reason: "data streams available in 7.9+"
      features: ["headers", "allowed_warnings"]

  - do:
      allowed_warnings:
        - "index template [my-template1] has index patterns [simple*] matching patterns from existing older templates [global] with patterns (global => [*]); this template [my-template1] will take precedence during new index creation"
      indices.put_index_template:
        name: my-template1
        body:
          index_patterns: [simple*]
          template:
            mappings:
              properties:
                '@timestamp':
                  type: date
          data_stream: {}

  - do:
      security.put_role:
        name: "data_stream_role"
        body:  >
          {
            "indices": [
              { "names": ["simple-allows-auto-configure"], "privileges": ["create_doc", "auto_configure"] },
              { "names": ["simple-data-stream1"], "privileges": ["create_doc"] }
            ]
          }

  - do:
      security.clear_cached_roles:
        name: "data_stream_role"

  # should succeed because test_user is authorized for auto_configure on simple-allows-auto-configure
  - do:
      headers: { Authorization: "Basic dGVzdF91c2VyOngtcGFjay10ZXN0LXBhc3N3b3Jk" } # test_user
      index:
        index:  simple-allows-auto-configure
        id:       1
        op_type:  create
        body:   { foo: bar, "@timestamp": "2020-12-12" }

  # should fail because test_user is not authorized for auto_configure on simple-data-stream1
  - do:
      catch: forbidden
      headers: { Authorization: "Basic dGVzdF91c2VyOngtcGFjay10ZXN0LXBhc3N3b3Jk" } # test_user
      index:
        index:  simple-data-stream1
        id:       1
        op_type:  create
        body:   { foo: bar, "@timestamp": "2020-12-12" }

  - do: # superuser
      indices.delete_data_stream:
        name: simple-allows-auto-configure
  - is_true: acknowledged
