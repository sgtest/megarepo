setup:
  - do:
      indices.create:
        index: airline-data
        body:
          mappings:
            properties:
              time:
                type: date
              airline:
                type: keyword
              responsetime:
                type: float
              event_rate:
                type: integer

---
"Test get all transforms when there are none":
  - do:
      data_frame.get_data_frame_transform:
        transform_id: "*"
  - match: { count: 0 }
  - match: { transforms: [] }

  - do:
      catch: missing
      data_frame.get_data_frame_transform:
        transform_id: "*"
        allow_no_match: false

---
"Test get transform when it does not exist":
  - do:
      catch: /Transform with id \[missing-transform-id\] could not be found/
      data_frame.get_data_frame_transform:
        transform_id: "missing-transform-id"

---
"Test delete transform when it does not exist":
  - do:
      catch: missing
      data_frame.delete_data_frame_transform:
        transform_id: "missing transform"

---
"Test put transform with invalid source index":
  - do:
      catch: /Source index \[missing-index\] does not exist/
      data_frame.put_data_frame_transform:
        transform_id: "missing-source-transform"
        body: >
          {
            "source": { "index": "missing-index" },
            "dest": { "index": "missing-source-dest" },
            "pivot": {
              "group_by": { "airline": {"terms": {"field": "airline"}}},
              "aggs": {"avg_response": {"avg": {"field": "responsetime"}}}
            }
          }
---
"Test basic transform crud":
  - do:
      data_frame.put_data_frame_transform:
        transform_id: "airline-transform"
        body: >
          {
            "source": { "index": "airline-data" },
            "dest": { "index": "airline-data-by-airline" },
            "pivot": {
              "group_by": { "airline": {"terms": {"field": "airline"}}},
              "aggs": {"avg_response": {"avg": {"field": "responsetime"}}}
            },
            "description": "yaml test transform on airline-data"
          }
  - match: { acknowledged: true }

  - do:
      data_frame.put_data_frame_transform:
        transform_id: "airline-transform-dos"
        body: >
          {
            "source": { "index": "airline-data" },
            "dest": { "index": "airline-data-by-airline-again", "pipeline": "airline-pipeline" },
            "pivot": {
              "group_by": { "airline": {"terms": {"field": "airline"}}},
              "aggs": {"avg_response": {"avg": {"field": "responsetime"}}}
            }
          }
  - match: { acknowledged: true }

  - do:
      data_frame.get_data_frame_transform:
        transform_id: "airline-transform"
  - match: { count: 1 }
  - match: { transforms.0.id: "airline-transform" }
  - match: { transforms.0.source.index.0: "airline-data" }
  - match: { transforms.0.dest.index: "airline-data-by-airline" }
  - is_true: transforms.0.source.query.match_all
  - is_true: transforms.0.create_time
  - is_true: transforms.0.version
  - match: { transforms.0.pivot.group_by.airline.terms.field: "airline" }
  - match: { transforms.0.pivot.aggregations.avg_response.avg.field: "responsetime" }
  - match: { transforms.0.description: "yaml test transform on airline-data" }

  - do:
      data_frame.get_data_frame_transform:
        transform_id: "*"
  - match: { count: 2 }
  - match: { transforms.0.id: "airline-transform" }
  - match: { transforms.1.id: "airline-transform-dos" }
  - is_false: transforms.1.description

  - do:
      data_frame.get_data_frame_transform:
        transform_id: "_all"
  - match: { count: 2 }
  - match: { transforms.0.id: "airline-transform" }
  - match: { transforms.1.id: "airline-transform-dos" }
  - do:
      data_frame.get_data_frame_transform:
        transform_id: "airline-transform,airline-transform-dos"
  - match: { count: 2 }
  - match: { transforms.0.id: "airline-transform" }
  - match: { transforms.1.id: "airline-transform-dos" }

  - do:
      data_frame.get_data_frame_transform:
        transform_id: "airline-transform*"
  - match: { count: 2 }
  - match: { transforms.0.id: "airline-transform" }
  - match: { transforms.1.id: "airline-transform-dos" }

  - do:
      data_frame.get_data_frame_transform:
        transform_id: "airline-transform*"
        from: 0
        size: 1
  - match: { count: 2 }
  - match: { transforms.0.id: "airline-transform" }

  - do:
      data_frame.get_data_frame_transform:
        transform_id: "airline-transform*"
        from: 1
        size: 1
  - match: { count: 2 }
  - match: { transforms.0.id: "airline-transform-dos" }

---
"Test transform with query and array of indices in source":
  - do:
      indices.create:
        index: airline-data-other
        body:
          mappings:
            properties:
              time:
                type: date
              airline:
                type: keyword
              responsetime:
                type: float
              event_rate:
                type: integer

  - do:
      data_frame.put_data_frame_transform:
        transform_id: "airline-transform"
        body: >
          {
            "source": {
              "index": ["airline-data", "airline-data-other"],
              "query": {"bool":{"filter":{"term":{"airline":"FOO"}}}}
            },
            "dest": { "index": "airline-data-by-airline" },
            "pivot": {
              "group_by": { "airline": {"terms": {"field": "airline"}}},
              "aggs": {"avg_response": {"avg": {"field": "responsetime"}}}
            }
          }
  - match: { acknowledged: true }
  - do:
      data_frame.get_data_frame_transform:
        transform_id: "airline-transform"
  - match: { count: 1 }
  - match: { transforms.0.id: "airline-transform" }
  - match: { transforms.0.source.index.0: "airline-data" }
  - match: { transforms.0.source.index.1: "airline-data-other" }
  - match: { transforms.0.source.query.bool.filter.term.airline: "FOO" }
  - match: { transforms.0.dest.index: "airline-data-by-airline" }
  - match: { transforms.0.pivot.group_by.airline.terms.field: "airline" }
  - match: { transforms.0.pivot.aggregations.avg_response.avg.field: "responsetime" }
---
"Test PUT continuous transform":
  - do:
      data_frame.put_data_frame_transform:
        transform_id: "airline-transform-continuous"
        body: >
          {
            "source": {
              "index": "airline-data"
            },
            "dest": { "index": "airline-data-by-airline-continuous" },
            "pivot": {
              "group_by": { "airline": {"terms": {"field": "airline"}}},
              "aggs": {"avg_response": {"avg": {"field": "responsetime"}}}
            },
            "sync": {
              "time": {
                "field": "time",
                "delay": "90m"
              }
            }
          }
  - match: { acknowledged: true }
  - do:
      data_frame.get_data_frame_transform:
        transform_id: "airline-transform-continuous"
  - match: { count: 1 }
  - match: { transforms.0.id: "airline-transform-continuous" }
  - match: { transforms.0.source.index.0: "airline-data" }
  - match: { transforms.0.dest.index: "airline-data-by-airline-continuous" }
  - match: { transforms.0.pivot.group_by.airline.terms.field: "airline" }
  - match: { transforms.0.pivot.aggregations.avg_response.avg.field: "responsetime" }
  - match: { transforms.0.sync.time.field: "time" }
  - match: { transforms.0.sync.time.delay: "90m" }
---
"Test transform with invalid page parameter":
  - do:
      catch: /Param \[size\] has a max acceptable value of \[1000\]/
      data_frame.get_data_frame_transform:
        transform_id: "_all"
        from: 0
        size: 10000
---
"Test transform where dest is included in source":
  - do:
      catch: /Destination index \[airline-data-by-airline\] is included in source expression \[airline-data/
      data_frame.put_data_frame_transform:
        transform_id: "airline-transform"
        body: >
          {
            "source": {
              "index": ["airline-data*"]
            },
            "dest": { "index": "airline-data-by-airline" },
            "pivot": {
              "group_by": { "airline": {"terms": {"field": "airline"}}},
              "aggs": {"avg_response": {"avg": {"field": "responsetime"}}}
            }
          }
---
"Test alias scenarios":
  - do:
      indices.create:
        index: created-destination-index
  - do:
      indices.create:
        index: second-created-destination-index
  - do:
      indices.put_alias:
        index: airline-data
        name: source-index
  - do:
      indices.put_alias:
        index: created-destination-index
        name: dest-index
  - do:
      data_frame.put_data_frame_transform:
        transform_id: "transform-from-aliases"
        body: >
          {
            "source": {
              "index": "source-index"
            },
            "dest": { "index": "dest-index" },
            "pivot": {
              "group_by": { "airline": {"terms": {"field": "airline"}}},
              "aggs": {"avg_response": {"avg": {"field": "responsetime"}}}
            }
          }
  - match: { acknowledged: true }

  - do:
      indices.put_alias:
        index: created-destination-index
        name: source-index

  - do:
      catch: /Destination index \[created-destination-index\] is included in source expression \[airline-data,created-destination-index\]/
      data_frame.put_data_frame_transform:
        transform_id: "transform-from-aliases-failures"
        body: >
          {
            "source": {
              "index": "source-index"
            },
            "dest": { "index": "dest-index" },
            "pivot": {
              "group_by": { "airline": {"terms": {"field": "airline"}}},
              "aggs": {"avg_response": {"avg": {"field": "responsetime"}}}
            }
          }

  - do:
      indices.delete_alias:
        index: created-destination-index
        name: source-index

  - do:
      indices.put_alias:
        index: second-created-destination-index
        name: dest-index

  - do:
      catch: /Destination index \[dest-index\] should refer to a single index/
      data_frame.put_data_frame_transform:
        transform_id: "airline-transform"
        body: >
          {
            "source": {
              "index": ["source-index"]
            },
            "dest": { "index": "dest-index" },
            "pivot": {
              "group_by": { "airline": {"terms": {"field": "airline"}}},
              "aggs": {"avg_response": {"avg": {"field": "responsetime"}}}
            }
          }
---
"Test put config with invalid pivot size":
  - do:
      catch: /pivot\.max_page_search_size \[5\] must be greater than 10 and less than 10,000/
      data_frame.put_data_frame_transform:
        transform_id: "airline-transform"
        body: >
          {
            "source": { "index": "airline-data" },
            "dest": { "index": "airline-dest-index" },
            "pivot": {
              "max_page_search_size": 5,
              "group_by": { "airline": {"terms": {"field": "airline"}}},
              "aggs": {"avg_response": {"avg": {"field": "responsetime"}}}
            }
          }
  - do:
      catch: /pivot\.max_page_search_size \[15000\] must be greater than 10 and less than 10,000/
      data_frame.put_data_frame_transform:
        transform_id: "airline-transform"
        body: >
          {
            "source": { "index": "airline-data" },
            "dest": { "index": "airline-dest-index" },
            "pivot": {
              "max_page_search_size": 15000,
              "group_by": { "airline": {"terms": {"field": "airline"}}},
              "aggs": {"avg_response": {"avg": {"field": "responsetime"}}}
            }
          }
---
"Test creation failures due to duplicate and conflicting field names":
  - do:
      catch: /duplicate field \[airline\] detected/
      data_frame.put_data_frame_transform:
        transform_id: "duplicate-field-transform"
        body: >
          {
            "source": {
              "index": "source-index"
            },
            "dest": { "index": "dest-index" },
            "pivot": {
              "group_by": { "airline": {"terms": {"field": "airline"}}},
              "aggs": {"airline": {"avg": {"field": "responsetime"}}}
            }
          }
  - do:
      catch: /field \[airline\] cannot be both an object and a field/
      data_frame.put_data_frame_transform:
        transform_id: "duplicate-field-transform"
        body: >
          {
            "source": {
              "index": "source-index"
            },
            "dest": { "index": "dest-index" },
            "pivot": {
              "group_by": { "airline": {"terms": {"field": "airline"}}},
              "aggs": {"airline.responsetime": {"avg": {"field": "responsetime"}}}
            }
          }
---
"Test invalid data frame id":
  - do:
      catch: /can contain lowercase alphanumeric \(a-z and 0-9\), hyphens or underscores; must start and end with alphanumeric/
      data_frame.put_data_frame_transform:
        transform_id: "!@#$%^&*(duplicate-field-transform"
        body: >
          {
            "source": {
              "index": "source-index"
            },
            "dest": { "index": "dest-index" },
            "pivot": {
              "group_by": { "airline.id": {"terms": {"field": "airline"}}},
              "aggs": {"airline.response": {"avg": {"field": "responsetime"}}}
            }
          }
  - do:
      catch: /The id cannot contain more than 64 character/
      data_frame.put_data_frame_transform:
        transform_id: "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
        body: >
          {
            "source": {
              "index": "source-index"
            },
            "dest": { "index": "dest-index" },
            "pivot": {
              "group_by": { "airline.id": {"terms": {"field": "airline"}}},
              "aggs": {"airline.response": {"avg": {"field": "responsetime"}}}
            }
          }
---
"Test invalid destination index name":
  - do:
      catch: /dest\.index \[DeStInAtIoN\] must be lowercase/
      data_frame.put_data_frame_transform:
        transform_id: "airline-transform"
        body: >
          {
            "source": {
              "index": "airline-data"
            },
            "dest": { "index": "DeStInAtIoN" },
            "pivot": {
              "group_by": { "airline": {"terms": {"field": "airline"}}},
              "aggs": {"avg_response": {"avg": {"field": "responsetime"}}}
            }
          }
  - do:
      catch: /Invalid index name \[destination#dest\], must not contain \'#\'/
      data_frame.put_data_frame_transform:
        transform_id: "airline-transform"
        body: >
          {
            "source": {
              "index": "airline-data"
            },
            "dest": { "index": "destination#dest" },
            "pivot": {
              "group_by": { "airline": {"terms": {"field": "airline"}}},
              "aggs": {"avg_response": {"avg": {"field": "responsetime"}}}
            }
          }
