setup:
  - do:
      headers:
        Authorization: "Basic eF9wYWNrX3Jlc3RfdXNlcjp4LXBhY2stdGVzdC1wYXNzd29yZA==" # run as x_pack_rest_user, i.e. the test setup superuser
      xpack.ml.put_job:
        job_id: force-delete-job
        body:  >
          {
            "analysis_config" : {
                "bucket_span": "1h",
                "detectors" :[{"function":"count"}]
            },
            "data_description" : {
            }
          }

---
"Test force delete a closed job":
  - do:
      xpack.ml.delete_job:
        force: true
        job_id: force-delete-job
  - match: { acknowledged: true }

  - do:
      xpack.ml.get_jobs:
        job_id: "_all"
  - match: { count: 0 }

---
"Test force delete an open job":

  - do:
      xpack.ml.open_job:
        job_id: force-delete-job

  - do:
      xpack.ml.delete_job:
        force: true
        job_id: force-delete-job
  - match: { acknowledged: true }

  - do:
      xpack.ml.get_jobs:
        job_id: "_all"
  - match: { count: 0 }

---
"Test cannot force delete a non-existent job":

  - do:
      catch: /resource_not_found_exception/
      xpack.ml.delete_job:
        force: true
        job_id: inexistent-job

---
"Test force delete job that is referred by a datafeed":

  - do:
      xpack.ml.put_datafeed:
        datafeed_id: force-delete-job-datafeed
        body:  >
          {
            "job_id":"force-delete-job",
            "indexes":["index-foo"],
            "types":["type-bar"]
          }
  - match: { datafeed_id: force-delete-job-datafeed }

  - do:
      catch: /Cannot delete job \[force-delete-job\] because datafeed \[force-delete-job-datafeed\] refers to it/
      xpack.ml.delete_job:
        job_id: force-delete-job
