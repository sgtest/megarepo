---
"Usage stats without runtime fields":
  - do:
      indices.create:
        index: sensor

  - do: {xpack.info: {}}
  - match: { features.runtime_fields.available: true }
  - match: { features.runtime_fields.enabled: true }

  - do: {xpack.usage: {}}
  - match: { runtime_fields.available: true }
  - match: { runtime_fields.enabled: true }
  - length: { runtime_fields.field_types: 0 }

---
"Usage stats with runtime fields":
  - do:
      indices.create:
        index: sensor
        body:
          mappings:
            runtime:
              message_from_source:
                type: keyword
              day_of_week:
                type: keyword
                script: |
                  emit(doc['timestamp'].value.dayOfWeekEnum.getDisplayName(TextStyle.FULL, Locale.ROOT));
              # Test fetching from _source
              day_of_week_from_source:
                type: keyword
                script: |
                  Instant instant = Instant.ofEpochMilli(params._source.timestamp);
                  ZonedDateTime dt = ZonedDateTime.ofInstant(instant, ZoneId.of("UTC"));
                  emit(dt.dayOfWeek.getDisplayName(TextStyle.FULL, Locale.ROOT));
              millis_ago:
                type: date
                script:
                  source: |
                    for (def dt : doc['timestamp']) {
                      emit(System.currentTimeMillis() - dt.toInstant().toEpochMilli());
                    }
              tomorrow:
                type: date
                script:
                  source: |
                    for (def dt : doc['timestamp']) {
                      emit(dt.plus(params.days, ChronoUnit.DAYS).toEpochMilli());
                    }
                  params:
                    days: 1
              voltage_times_ten:
                type: long
                script:
                  source: |
                    for (double v : doc['voltage']) {
                      emit((long)(v * params.multiplier));
                    }
                  params:
                    multiplier: 10
              voltage_percent_from_source:
                type: double
                script:
                  source: |
                    emit(params._source.voltage / params.max);
                  params:
                    max: 5.8
              over_v:
                type: boolean
                script:
                  source: |
                    for (def v : doc['voltage']) {
                      emit(v >= params.min_v);
                    }
                  params:
                    min_v: 5.0
              ip:
                type: ip
                script:
                  source: |
                    Matcher m = /([^ ]+) .+/.matcher(doc["message"].value);
                    if (m.matches()) {
                      emit(m.group(1));
                    }
              bad_map:
                type: double    # shadows the bad_map field in properties
              message.text:
                type: keyword   # shadows the message.text subfield in properties
              location_from_source:
                type: geo_point
                script:
                  source: |
                    emit(params._source.location.lat, params._source.location.lon);
            properties:
              timestamp:
                type: date
              message:
                type: keyword
                fields:
                  text:
                    type: text
              voltage:
                type: double
              location:
                type: geo_point
              bad_map:
                type: long

  - do: {xpack.info: {}}
  - match: { features.runtime_fields.available: true }
  - match: { features.runtime_fields.enabled: true }

  - do: {xpack.usage: {}}
  - match: { runtime_fields.available: true }
  - match: { runtime_fields.enabled: true }
  - length: { runtime_fields.field_types: 7 }
  - match: { runtime_fields.field_types.0.name: boolean }
  - match: { runtime_fields.field_types.0.lang: [painless] }
  - match: { runtime_fields.field_types.0.count: 1 }
  - match: { runtime_fields.field_types.0.index_count: 1 }
  - match: { runtime_fields.field_types.0.scriptless_count: 0 }
  - match: { runtime_fields.field_types.0.source_max: 0 }
  - match: { runtime_fields.field_types.0.source_total: 0 }
  - match: { runtime_fields.field_types.0.lines_max:  3 }
  - match: { runtime_fields.field_types.0.lines_total: 3 }
  - is_true: runtime_fields.field_types.0.chars_max
  - is_true: runtime_fields.field_types.0.chars_total
  - match: { runtime_fields.field_types.0.doc_max: 1 }
  - match: { runtime_fields.field_types.0.doc_total: 1 }

  - match: { runtime_fields.field_types.1.name: date }
  - match: { runtime_fields.field_types.1.lang: [painless] }
  - match: { runtime_fields.field_types.1.count: 2 }
  - match: { runtime_fields.field_types.1.index_count: 1 }
  - match: { runtime_fields.field_types.1.scriptless_count: 0 }
  - match: { runtime_fields.field_types.1.shadowed_count: 0 }
  - match: { runtime_fields.field_types.1.source_max: 0 }
  - match: { runtime_fields.field_types.1.source_total: 0 }
  - match: { runtime_fields.field_types.1.lines_max:  3 }
  - match: { runtime_fields.field_types.1.lines_total: 6 }
  - is_true: runtime_fields.field_types.1.chars_max
  - is_true: runtime_fields.field_types.1.chars_total
  - match: { runtime_fields.field_types.1.doc_max: 1 }
  - match: { runtime_fields.field_types.1.doc_total: 2 }

  - match: { runtime_fields.field_types.2.name: double }
  - match: { runtime_fields.field_types.2.lang: [painless] }
  - match: { runtime_fields.field_types.2.count: 2 }
  - match: { runtime_fields.field_types.2.index_count: 1 }
  - match: { runtime_fields.field_types.2.scriptless_count: 1 }
  - match: { runtime_fields.field_types.2.shadowed_count: 1 }
  - match: { runtime_fields.field_types.2.source_max: 1 }
  - match: { runtime_fields.field_types.2.source_total: 1 }
  - match: { runtime_fields.field_types.2.lines_max:  1 }
  - match: { runtime_fields.field_types.2.lines_total: 1 }
  - is_true: runtime_fields.field_types.2.chars_max
  - is_true: runtime_fields.field_types.2.chars_total
  - match: { runtime_fields.field_types.2.doc_max: 0 }
  - match: { runtime_fields.field_types.2.doc_total: 0 }

  - match: { runtime_fields.field_types.3.name: geo_point }
  - match: { runtime_fields.field_types.3.lang: [painless] }
  - match: { runtime_fields.field_types.3.count: 1 }
  - match: { runtime_fields.field_types.3.index_count: 1 }
  - match: { runtime_fields.field_types.3.scriptless_count: 0 }
  - match: { runtime_fields.field_types.3.source_max: 2 }
  - match: { runtime_fields.field_types.3.source_total: 2 }
  - match: { runtime_fields.field_types.3.lines_max:  1 }
  - match: { runtime_fields.field_types.3.lines_total: 1 }
  - is_true: runtime_fields.field_types.3.chars_max
  - is_true: runtime_fields.field_types.3.chars_total
  - match: { runtime_fields.field_types.3.doc_max: 0 }
  - match: { runtime_fields.field_types.3.doc_total: 0 }

  - match: { runtime_fields.field_types.4.name: ip }
  - match: { runtime_fields.field_types.4.lang: [painless] }
  - match: { runtime_fields.field_types.4.count: 1 }
  - match: { runtime_fields.field_types.4.index_count: 1 }
  - match: { runtime_fields.field_types.4.scriptless_count: 0 }
  - match: { runtime_fields.field_types.4.source_max: 0 }
  - match: { runtime_fields.field_types.4.source_total: 0 }
  - match: { runtime_fields.field_types.4.lines_max:  4 }
  - match: { runtime_fields.field_types.4.lines_total: 4 }
  - is_true: runtime_fields.field_types.4.chars_max
  - is_true: runtime_fields.field_types.4.chars_total
  - match: { runtime_fields.field_types.4.doc_max: 1 }
  - match: { runtime_fields.field_types.4.doc_total: 1 }

  - match: { runtime_fields.field_types.5.name: keyword }
  - match: { runtime_fields.field_types.5.lang: [painless] }
  - match: { runtime_fields.field_types.5.count: 4 }
  - match: { runtime_fields.field_types.5.index_count: 1 }
  - match: { runtime_fields.field_types.5.scriptless_count: 2 }
  - match: { runtime_fields.field_types.5.shadowed_count: 1 }
  - match: { runtime_fields.field_types.5.source_max: 1 }
  - match: { runtime_fields.field_types.5.source_total: 1 }
  - match: { runtime_fields.field_types.5.lines_max:  3 }
  - match: { runtime_fields.field_types.5.lines_total: 4 }
  - is_true: runtime_fields.field_types.5.chars_max
  - is_true: runtime_fields.field_types.5.chars_total
  - match: { runtime_fields.field_types.5.doc_max: 1 }
  - match: { runtime_fields.field_types.5.doc_total: 1 }

  - match: { runtime_fields.field_types.6.name: long }
  - match: { runtime_fields.field_types.6.lang: [painless] }
  - match: { runtime_fields.field_types.6.count: 1 }
  - match: { runtime_fields.field_types.6.index_count: 1 }
  - match: { runtime_fields.field_types.6.scriptless_count: 0 }
  - match: { runtime_fields.field_types.6.source_max: 0 }
  - match: { runtime_fields.field_types.6.source_total: 0 }
  - match: { runtime_fields.field_types.6.lines_max:  3 }
  - match: { runtime_fields.field_types.6.lines_total: 3 }
  - is_true: runtime_fields.field_types.6.chars_max
  - is_true: runtime_fields.field_types.6.chars_total
  - match: { runtime_fields.field_types.6.doc_max: 1 }
  - match: { runtime_fields.field_types.6.doc_total: 1 }
