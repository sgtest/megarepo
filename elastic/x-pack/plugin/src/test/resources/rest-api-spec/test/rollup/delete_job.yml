setup:
  - do:
      indices.create:
        index: foo
        body:
          mappings:
            _doc:
              properties:
                the_field:
                  type: date
                value_field:
                  type: integer

  - do:
      headers:
        Authorization: "Basic eF9wYWNrX3Jlc3RfdXNlcjp4LXBhY2stdGVzdC1wYXNzd29yZA==" # run as x_pack_rest_user, i.e. the test setup superuser
      xpack.rollup.put_job:
        id: foo
        body:  >
          {
            "index_pattern": "foo",
            "rollup_index": "foo_rollup",
            "cron": "*/30 * * * * ?",
            "page_size" :10,
            "groups" : {
              "date_histogram": {
                "field": "the_field",
                "interval": "1h"
              }
            },
            "metrics": [
              {
                "field": "value_field",
                "metrics": ["min", "max", "sum"]
              }
            ]
          }

---
"Test basic delete_job":

  - do:
      xpack.rollup.get_jobs:
        id: foo

  - match:
      jobs:
        - config:
            id: "foo"
            index_pattern: "foo"
            rollup_index: "foo_rollup"
            cron: "*/30 * * * * ?"
            page_size: 10
            groups :
              date_histogram:
                interval: "1h"
                field: "the_field"
                time_zone: "UTC"
            metrics:
              - field: "value_field"
                metrics:
                 - "min"
                 - "max"
                 - "sum"
            timeout: "20s"
          stats:
            pages_processed: 0
            documents_processed: 0
            rollups_indexed: 0
            trigger_count: 0
          status:
            job_state: "stopped"

  - do:
      xpack.rollup.delete_job:
        id: foo
  - is_true: acknowledged

  - do:
      xpack.rollup.get_jobs:
        id: foo
  - match:
      jobs: []

---
"Test delete job twice":

  - do:
      xpack.rollup.get_jobs:
        id: foo

  - match:
      jobs:
        - config:
            id: "foo"
            index_pattern: "foo"
            rollup_index: "foo_rollup"
            cron: "*/30 * * * * ?"
            page_size: 10
            groups :
              date_histogram:
                interval: "1h"
                field: "the_field"
                time_zone: "UTC"
            metrics:
              - field: "value_field"
                metrics:
                 - "min"
                 - "max"
                 - "sum"
            timeout: "20s"
          stats:
            pages_processed: 0
            documents_processed: 0
            rollups_indexed: 0
            trigger_count: 0
          status:
            job_state: "stopped"

  - do:
      xpack.rollup.delete_job:
        id: foo
  - is_true: acknowledged

  - do:
      xpack.rollup.get_jobs:
        id: foo
  - match:
      jobs: []

---
"Test delete running job":

  - do:
      xpack.rollup.get_jobs:
        id: foo

  - match:
      jobs:
        - config:
            id: "foo"
            index_pattern: "foo"
            rollup_index: "foo_rollup"
            cron: "*/30 * * * * ?"
            page_size: 10
            groups :
              date_histogram:
                interval: "1h"
                field: "the_field"
                time_zone: "UTC"
            metrics:
              - field: "value_field"
                metrics:
                 - "min"
                 - "max"
                 - "sum"
            timeout: "20s"
          stats:
            pages_processed: 0
            documents_processed: 0
            rollups_indexed: 0
            trigger_count: 0
          status:
            job_state: "stopped"

  - do:
      xpack.rollup.start_job:
        id: foo
  - is_true: started

  - do:
      xpack.rollup.delete_job:
        id: foo
  - is_true: acknowledged

---
"Test delete non-existant job":

  - do:
      catch: /the task with id does_not_exist doesn't exist/
      headers:
        Authorization: "Basic eF9wYWNrX3Jlc3RfdXNlcjp4LXBhY2stdGVzdC1wYXNzd29yZA==" # run as x_pack_rest_user, i.e. the test setup superuser
      xpack.rollup.delete_job:
        id: does_not_exist
