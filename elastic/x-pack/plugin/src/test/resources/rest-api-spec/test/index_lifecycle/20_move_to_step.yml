---
setup:
  - do:
      cluster.health:
          wait_for_status: yellow
  - do:
      acknowlege: true
      xpack.index_lifecycle.put_lifecycle:
        lifecycle: "my_moveable_timeseries_lifecycle"
        body: |
           {
             "policy": {
               "type": "timeseries",
               "phases": {
                 "warm": {
                   "after": "1000s",
                   "actions": {
                     "forcemerge": {
                       "max_num_segments": 10000
                     }
                   }
                 },
                 "hot": {
                   "after": "1000s",
                   "actions": { }
                 }
               }
             }
           }

  - do:
      acknowledge: true
      xpack.index_lifecycle.get_lifecycle:
        lifecycle: "my_moveable_timeseries_lifecycle"

  - do:
      indices.create:
        index: my_index
        body:
          settings:
            index.lifecycle.name: "my_moveable_timeseries_lifecycle"

  - do:
      indices.create:
        index: my_index_no_policy

---
teardown:

  - do:
      acknowledge: true
      indices.delete:
        index: my_index

  - do:
      acknowledge: true
      indices.delete:
        index: my_index_no_policy

  - do:
      acknowledge: true
      xpack.index_lifecycle.delete_lifecycle:
        lifecycle: "my_moveable_timeseries_lifecycle"

  - do:
      catch: missing
      xpack.index_lifecycle.get_lifecycle:
        lifecycle: "my_moveable_timeseries_lifecycle"

---
"Test Basic Move To Step":

  - do:
      acknowledge: true
      xpack.index_lifecycle.move_to_step:
        index: "my_index"
        body:
          current_step:
            phase: "hot"
            action: "pre-pre-readonly"
            name: "after"
          next_step:
            phase: "warm"
            action: "forcemerge"
            name: "forcemerge"

  - do:
      acknowledge: true
      indices.get:
        index: my_index
  - match: { my_index.settings.index.lifecycle.name: "my_moveable_timeseries_lifecycle" }
  - match: { my_index.settings.index.lifecycle.step: "forcemerge" }
  - match: { my_index.settings.index.lifecycle.action: "forcemerge" }
  - match: { my_index.settings.index.lifecycle.phase: "warm" }

---
"Test Invalid Move To Step With Incorrect Current Step":

  - do:
      catch: bad_request
      xpack.index_lifecycle.move_to_step:
        index: "my_index"
        body:
          current_step:
            phase: "warm"
            action: "forcemerge"
            name: "forcemerge"
          next_step:
            phase: "warm"
            action: "forcemerge"
            name: "forcemerge"
  - match: { error.root_cause.0.type: "illegal_argument_exception" }
  - match: { error.root_cause.0.reason: "index [my_index] is not on current step [{\"phase\":\"warm\",\"action\":\"forcemerge\",\"name\":\"forcemerge\"}]" }

  - do:
      acknowledge: true
      indices.get:
        index: my_index
  - match: { my_index.settings.index.lifecycle.name: "my_moveable_timeseries_lifecycle" }
  - match: { my_index.settings.index.lifecycle.step: "after" }
  - match: { my_index.settings.index.lifecycle.action: "pre-pre-readonly" }
  - match: { my_index.settings.index.lifecycle.phase: "hot" }

---
"Test Invalid Move To Step With Invalid Next Step":

  - do:
      catch: bad_request
      xpack.index_lifecycle.move_to_step:
        index: "my_index"
        body:
          current_step:
            phase: "hot"
            action: "pre-pre-readonly"
            name: "after"
          next_step:
            phase: "invalid"
            action: "invalid"
            name: "invalid"
  - match: { error.root_cause.0.type: "illegal_argument_exception" }
  - match: { error.root_cause.0.reason: "step [{\"phase\":\"invalid\",\"action\":\"invalid\",\"name\":\"invalid\"}] does not exist" }

  - do:
      acknowledge: true
      indices.get:
        index: my_index
  - match: { my_index.settings.index.lifecycle.name: "my_moveable_timeseries_lifecycle" }
  - match: { my_index.settings.index.lifecycle.step: "after" }
  - match: { my_index.settings.index.lifecycle.action: "pre-pre-readonly" }
  - match: { my_index.settings.index.lifecycle.phase: "hot" }

---
"Test Invalid Move To Step With Invalid Policy":

  - do:
      catch: bad_request
      xpack.index_lifecycle.move_to_step:
        index: "my_index_no_policy"
        body:
          current_step:
            phase: "hot"
            action: "pre-pre-readonly"
            name: "after"
          next_step:
            phase: "warm"
            action: "forcemerge"
            name: "forcemerge"
  - match: { error.root_cause.0.type: "illegal_argument_exception" }
  - match: { error.root_cause.0.reason: "index [my_index_no_policy] is not associated with an Index Lifecycle Policy" }

---
"Test Invalid Move To Step With Invalid Index":

  - do:
      catch: bad_request
      xpack.index_lifecycle.move_to_step:
        index: "does_not_exist"
        body:
          current_step:
            phase: "hot"
            action: "pre-pre-readonly"
            name: "after"
          next_step:
            phase: "warm"
            action: "forcemerge"
            name: "forcemerge"
  - match: { error.root_cause.0.type: "illegal_argument_exception" }
  - match: { error.root_cause.0.reason: "index [does_not_exist] does not exist" }
