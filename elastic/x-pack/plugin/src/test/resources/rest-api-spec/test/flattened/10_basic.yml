---
"Test exists query on flattened object field":
  - skip:
      version: " - 7.2.99"
      reason: "Flattened fields were implemented in 7.3."

  - do:
      indices.create:
        index:  flattened_test
        body:
          mappings:
            properties:
              flattened:
                type: flattened
  - do:
      index:
        index:  flattened_test
        id:     1
        body:
          flattened:
            key: some_value
        refresh: true

  - do:
      search:
        index: flattened_test
        body:
          query:
            exists:
              field: flattened

  - match: { hits.total.value: 1 }

  - do:
      search:
        index: flattened_test
        body:
          query:
            exists:
              field: flattened.key

  - match: { hits.total.value: 1 }

  - do:
      search:
        index: flattened_test
        body:
          query:
            exists:
              field: flattened.nonexistent_key

  - match: { hits.total.value: 0 }

---
"Test query string query on flattened object field":
  - skip:
      version: " - 7.2.99"
      reason: "Flattened fields were implemented in 7.3."

  - do:
      indices.create:
        index:  test
        body:
          mappings:
            properties:
              headers:
                type: flattened

  - do:
      index:
        index:  test
        id:     1
        body:
          headers:
            content-type: application/javascript
            origin: elastic.co
        refresh: true

  - do:
      index:
        index:  test
        id:     2
        body:
          headers:
            content-type: text/plain
            origin: elastic.co
        refresh: true

  - do:
      search:
        index: test
        body:
          query:
            query_string:
              query: "headers:text\\/plain"

  - match: { hits.total.value: 1 }
  - length: { hits.hits: 1 }
  - match: { hits.hits.0._id: "2" }

  - do:
      search:
        index: test
        body:
          query:
            query_string:
              query: "application\\/javascript AND headers.origin:elastic.co"

  - match: { hits.total.value: 1 }
  - length: { hits.hits: 1 }
  - match: { hits.hits.0._id: "1" }


---
"Test fields option on flattened object field":
  - skip:
      version: " - 7.9.99"
      reason: "Fields option on search request was added in 7.10"

  - do:
      indices.create:
        index:  test
        body:
          mappings:
            properties:
              flattened:
                type: flattened

  - do:
      index:
        index:  test
        id:     1
        body:
          flattened:
            some_field: some_value
        refresh: true

  - do:
      search:
        index: test
        body:
          fields: ["flattened"]

  - match:  { hits.total.value: 1 }
  - length: { hits.hits: 1 }
  - length: { hits.hits.0.fields: 1 }
  - match:  { hits.hits.0.fields.flattened: [ { "some_field": "some_value" } ] }

  - do:
      search:
        index: test
        body:
          fields: [ "flat*" ]

  - match:  { hits.total.value: 1 }
  - length: { hits.hits: 1 }
  - length: { hits.hits.0.fields: 1 }
  - match:  { hits.hits.0.fields.flattened: [ { "some_field": "some_value" } ] }

---
"Test fields option on flattened object field with include_unmapped":
  -  skip:
        version: ' - 7.10.99'
        reason: support was introduced in 7.11
  - do:
      indices.create:
        index:  test
        body:
          mappings:
            properties:
              flattened:
                type: flattened

  - do:
      index:
        index:  test
        id:     1
        body:
          flattened:
            some_field: some_value
        refresh: true

  - do:
      search:
        index: test
        body:
          fields: [ { "field" : "flat*", "include_unmapped" : true } ]

  - match:  { hits.total.value: 1 }
  - length: { hits.hits: 1 }
  - length: { hits.hits.0.fields: 1 }
  - match:  { hits.hits.0.fields.flattened: [ { "some_field": "some_value" } ] }
