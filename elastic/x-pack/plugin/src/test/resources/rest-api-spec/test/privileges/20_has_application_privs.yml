---
setup:
  - skip:
      features: headers

  - do:
      cluster.health:
        wait_for_status: yellow

  # Create some privileges
  - do:
      xpack.security.put_privileges:
        body: >
          {
            "myapp": {
              "user": {
                "application": "myapp",
                "name": "user",
                "actions": [ "action:login", "version:1.0.*" ]
              },
              "read": {
                "application": "myapp",
                "name": "read",
                "actions": [ "data:read/*" ]
              },
              "write": {
                "application": "myapp",
                "name": "write",
                "actions": [ "data:write/*" ]
              }
            }
          }

  # Store 2 test roles
  - do:
      xpack.security.put_role:
        name: "myapp_engineering_read"
        body:  >
            {
              "cluster": [],
              "indices": [
                {
                  "names": "engineering-*",
                  "privileges": ["read"]
                }
              ],
              "applications": [
                {
                  "application": "myapp",
                  "privileges": ["user"],
                  "resources": ["*"]
                },
                {
                  "application": "myapp",
                  "privileges": ["read"],
                  "resources": ["engineering/*"]
                }
              ]
            }

  - do:
      xpack.security.put_role:
        name: "myapp_engineering_write"
        body:  >
            {
              "cluster": [],
              "indices": [
                {
                  "names": "engineering-*",
                  "privileges": ["read"]
                }
              ],
              "applications": [
                {
                  "application": "myapp",
                  "privileges": ["user"],
                  "resources": ["*"]
                },
                {
                  "application": "myapp",
                  "privileges": ["read", "write"],
                  "resources": ["engineering/*"]
                }
              ]
            }

  # And a user for each role
  - do:
        xpack.security.put_user:
          username: "eng_read"
          body:  >
              {
                "password": "p@ssw0rd",
                "roles" : [ "myapp_engineering_read" ]
              }
  - do:
        xpack.security.put_user:
          username: "eng_write"
          body:  >
              {
                "password": "p@ssw0rd",
                "roles" : [ "myapp_engineering_write" ]
              }

---
teardown:
  - do:
      xpack.security.delete_privileges:
        application: myapp
        name: "user,read,write"
        ignore: 404

  - do:
      xpack.security.delete_user:
        username: "eng_read"
        ignore: 404

  - do:
      xpack.security.delete_user:
        username: "eng_write"
        ignore: 404

  - do:
      xpack.security.delete_role:
        name: "myapp_engineering_read"
        ignore: 404

  - do:
      xpack.security.delete_role:
        name: "myapp_engineering_write"
        ignore: 404
---
"Test has_privileges with application-privileges":
  - do:
      headers: { Authorization: "Basic ZW5nX3JlYWQ6cEBzc3cwcmQ=" } # eng_read
      xpack.security.has_privileges:
        user: null
        body: >
          {
            "index": [
              {
                "names" :[ "engineering-logs", "product-logs" ],
                "privileges" : [ "read", "index", "write" ]
              }
            ],
            "application": [
              {
                "application" : "myapp",
                "resources" : [ "*" ],
                "privileges" : [ "action:login", "version:1.0.3" ]
              },
              {
                "application" : "myapp",
                "resources" : [ "engineering/logs/*", "product/logs/*" ],
                "privileges" : [ "data:read/log/raw", "data:write/log/raw" ]
              }
            ]
          }

  - match: { "username" : "eng_read" }
  - match: { "has_all_requested" : false }
  - match: { "index" : {
      "engineering-logs" : {
        "read": true,
        "index": false,
        "write": false
      },
      "product-logs" : {
        "read": false,
        "index": false,
        "write": false
      }
    } }
  - match: { "application" : {
      "myapp" : {
        "*" : {
          "action:login" : true,
          "version:1.0.3" : true
        },
        "engineering/logs/*" : {
          "data:read/log/raw" : true,
          "data:write/log/raw" : false
        },
        "product/logs/*" : {
          "data:read/log/raw" : false,
          "data:write/log/raw" : false
        }
      }
    } }

