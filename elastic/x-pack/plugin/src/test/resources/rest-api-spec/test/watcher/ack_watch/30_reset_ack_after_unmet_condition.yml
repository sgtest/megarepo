---
setup:
  - do:
      cluster.health:
          wait_for_status: yellow

---
teardown:
  - do:
      xpack.watcher.delete_watch:
        id: "my_watch"
        ignore: 404

---
"Ensure that ack status is reset after unsuccessful execution":

  - do:
      xpack.watcher.put_watch:
        id: "my_watch"
        body: >
          {
            "trigger": {
              "schedule": {
                "interval": "1m"
              }
            },
            "input": {
              "simple" : { "match" : "true" }
            },
            "condition": {
              "compare": {
                "ctx.payload.match": {
                  "eq": "true"
                }
              }
            },
            "actions": {
              "indexme" : {
                "index" : {
                  "index" : "my_test_index",
                  "doc_type" : "my-type",
                  "doc_id": "my-id"
                }
              }
            }
          }

  - do:
      xpack.watcher.execute_watch:
        id: "my_watch"
        body: >
          {
            "record_execution" : true
          }
  - match: { watch_record.status.actions.indexme.ack.state: "ackable" }

  - do:
      xpack.watcher.ack_watch:
        watch_id: "my_watch"
  - match: { "status.actions.indexme.ack.state" : "acked" }

  - do:
      xpack.watcher.get_watch:
        id: "my_watch"
  - match: { "status.actions.indexme.ack.state" : "acked" }

  # having a false result will reset the ack state
  - do:
      xpack.watcher.execute_watch:
        id: "my_watch"
        body: >
          {
            "record_execution" : true,
            "alternative_input" : {
              "match" : "false"
            },
            "action_modes" : {
              "indexme" : "force_execute"
            }
          }
  - match: { watch_record.status.actions.indexme.ack.state: "awaits_successful_execution" }

  - do:
      xpack.watcher.get_watch:
        id: "my_watch"
  - match: { "status.actions.indexme.ack.state" : "awaits_successful_execution" }

  - do:
      xpack.watcher.execute_watch:
        id: "my_watch"
        body: >
          {
            "record_execution" : true,
            "action_modes" : {
              "indexme" : "force_execute"
            }
          }
  - match: { watch_record.status.actions.indexme.ack.state: "ackable" }

  - do:
      xpack.watcher.get_watch:
        id: "my_watch"
  - match: { "status.actions.indexme.ack.state" : "ackable" }

