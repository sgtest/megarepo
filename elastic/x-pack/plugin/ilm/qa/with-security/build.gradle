apply plugin: 'elasticsearch.standalone-rest-test'
apply plugin: 'elasticsearch.rest-test'

dependencies {
  testCompile project(path: xpackProject('plugin').path, configuration: 'testArtifacts')
}

// bring in ILM rest test suite
task copyILMRestTests(type: Copy) {
  into project.sourceSets.test.output.resourcesDir
  from xpackProject('plugin').sourceSets.test.resources.srcDirs
  include 'rest-api-spec/api/ilm.*'
  include 'rest-api-spec/test/ilm/**'
}

def clusterCredentials = [username: System.getProperty('tests.rest.cluster.username', 'test_user'),
                          password: System.getProperty('tests.rest.cluster.password', 'x-pack-test-password')]

integTestRunner {
  systemProperty 'tests.rest.cluster.username', clusterCredentials.username
  systemProperty 'tests.rest.cluster.password', clusterCredentials.password
}

integTestCluster {
  dependsOn copyILMRestTests
  setting 'xpack.ilm.enabled', 'true'
  setting 'xpack.security.enabled', 'true'
  setting 'xpack.watcher.enabled', 'false'
  setting 'xpack.monitoring.enabled', 'false'
  setting 'xpack.ml.enabled', 'false'
  setting 'xpack.license.self_generated.type', 'trial'
  setupCommand 'setupDummyUser',
               'bin/elasticsearch-users',
               'useradd', clusterCredentials.username,
               '-p', clusterCredentials.password,
               '-r', 'superuser'
  waitCondition = { node, ant ->
    File tmpFile = new File(node.cwd, 'wait.success')
    ant.get(src: "http://${node.httpUri()}/_cluster/health?wait_for_nodes=>=${numNodes}&wait_for_status=yellow",
            dest: tmpFile.toString(),
            username: clusterCredentials.username,
            password: clusterCredentials.password,
            ignoreerrors: true,
            retries: 10)
    return tmpFile.exists()
  }
}
