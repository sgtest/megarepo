import com.carrotsearch.gradle.junit4.RandomizedTestingTask
import org.elasticsearch.gradle.BuildPlugin

evaluationDependsOn(xpackModule('core'))

apply plugin: 'elasticsearch.esplugin'
esplugin {
    name 'x-pack-upgrade'
    description 'Elasticsearch Expanded Pack Plugin - Upgrade'
    classname 'org.elasticsearch.xpack.upgrade.Upgrade'
    extendedPlugins = ['x-pack-core']
}

archivesBaseName = 'x-pack-upgrade'

dependencies {
    compileOnly "org.elasticsearch.plugin:x-pack-core:${version}"
    testCompile project(path: xpackModule('core'), configuration: 'testArtifacts')
}

compileJava.options.compilerArgs << "-Xlint:-deprecation,-rawtypes,-serial,-try,-unchecked"
compileTestJava.options.compilerArgs << "-Xlint:-deprecation,-rawtypes,-serial,-try,-unchecked"

run {
    plugin xpackModule('core')
}

integTest.enabled = false

// Instead we create a separate task to run the
// tests based on ESIntegTestCase
task internalClusterTest(type: RandomizedTestingTask,
                         group: JavaBasePlugin.VERIFICATION_GROUP,
                         description: 'Multi-node tests',
                         dependsOn: test.dependsOn) {
  configure(BuildPlugin.commonTestConfig(project))
  classpath = project.test.classpath
  testClassesDirs = project.test.testClassesDirs
  include '**/*IT.class'
  systemProperty 'es.set.netty.runtime.available.processors', 'false'
}
check.dependsOn internalClusterTest 
internalClusterTest.mustRunAfter test

// also add an "alias" task to make typing on the command line easier
task icTest {
  dependsOn internalClusterTest
}
