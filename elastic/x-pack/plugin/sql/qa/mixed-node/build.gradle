apply plugin: 'elasticsearch.internal-testclusters'
apply plugin: 'elasticsearch.standalone-rest-test'
apply plugin: 'elasticsearch.bwc-test'
apply plugin: 'elasticsearch.rest-test'

import org.elasticsearch.gradle.Version
import org.elasticsearch.gradle.VersionProperties
import org.elasticsearch.gradle.internal.info.BuildParams
import org.elasticsearch.gradle.testclusters.StandaloneRestIntegTestTask

dependencies {
  testImplementation project(':x-pack:qa')
  testImplementation(project(xpackModule('ql:test-fixtures')))
  testImplementation project(xpackModule('sql'))
  testImplementation project(xpackModule('sql:qa:server'))
}

testClusters.configureEach {
  setting 'xpack.security.enabled', 'false'
}

tasks.named("integTest").configure{ enabled = false}

// A bug (https://github.com/elastic/elasticsearch/issues/68439) limits us to perform tests with versions from 7.10.3 onwards
for (Version bwcVersion : BuildParams.bwcVersions.wireCompatible.findAll { it.onOrAfter('7.10.0') }) {
  if (bwcVersion == VersionProperties.getElasticsearchVersion()) {
    // Not really a mixed cluster
    continue;
  }

  String bwcVersionString = bwcVersion.toString()
  String baseName = "v" + bwcVersion

  def baseCluster = testClusters.register(baseName) {
      versions = [bwcVersionString, project.version]
      numberOfNodes = 3
      testDistribution = 'DEFAULT'
      setting 'xpack.security.enabled', 'false'
      setting 'xpack.watcher.enabled', 'false'
      setting 'xpack.ml.enabled', 'false'
      setting 'xpack.license.self_generated.type', 'trial'
      // for debugging purposes
      // setting 'logger.org.elasticsearch.xpack.sql.plugin.TransportSqlQueryAction', 'TRACE'
  }

  tasks.register("${baseName}#mixedClusterTest", StandaloneRestIntegTestTask) {
    useCluster baseCluster
    mustRunAfter("precommit")
    doFirst {
      def cluster = baseCluster.get()
      // Getting the endpoints causes a wait for the cluster
      println "Endpoints are: ${-> cluster.allHttpSocketURI.join(",")}"
      println "Upgrading one node to create a mixed cluster"
      cluster.nextNodeToNextVersion()

      println "Upgrade complete, endpoints are: ${-> cluster.allHttpSocketURI.join(",")}"
      nonInputProperties.systemProperty('tests.rest.cluster', baseCluster.map(c->c.allHttpSocketURI.join(",")))
      nonInputProperties.systemProperty('tests.clustername', baseName)
    }
    onlyIf { project.bwc_tests_enabled }
  }

  tasks.register(bwcTaskName(bwcVersion)) {
    dependsOn "${baseName}#mixedClusterTest"
  }
}
