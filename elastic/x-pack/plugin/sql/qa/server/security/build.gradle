apply plugin: 'elasticsearch.internal-test-artifact'

dependencies {
  testImplementation project(':x-pack:plugin:core')
}

Project mainProject = project

// Tests are pushed down to subprojects and will be checked there.
tasks.named("testingConventions").configure { enabled = false }

subprojects {
  // Use tests from the root security qa project in subprojects
  configurations.create('testArtifacts').transitive(false)

  dependencies {
    testImplementation project(":x-pack:plugin:core")
    testArtifacts testArtifact(project(mainProject.path))
  }

  testClusters.matching { it.name == "integTest" }.configureEach {
    testDistribution = 'DEFAULT'
    // Setup auditing so we can use it in some tests
    setting 'xpack.security.audit.enabled', 'true'
    setting 'xpack.security.enabled', 'true'
    setting 'xpack.license.self_generated.type', 'trial'
    // Setup roles used by tests
    extraConfigFile 'roles.yml', mainProject.file('roles.yml')
    /* Setup the one admin user that we run the tests as.
     * Tests use "run as" to get different users. */
    user username: "test_admin", password: "x-pack-test-password"
    user username: "user1", password: 'x-pack-test-password', role: "user1"
    user username: "user2", password: 'x-pack-test-password', role: "user2"
    user username: "manage_user", password: 'x-pack-test-password', role: "manage_user"
  }

  File testArtifactsDir = project.file("$buildDir/testArtifacts")
  TaskProvider copyTestClasses = tasks.register("copyTestClasses", Copy) {
    dependsOn configurations.testArtifacts
    from { zipTree(configurations.testArtifacts.singleFile) }
    into testArtifactsDir
  }

  tasks.named("integTest").configure {
    dependsOn copyTestClasses
    testClassesDirs += project.files(testArtifactsDir)
    classpath += configurations.testArtifacts
    nonInputProperties.systemProperty 'tests.audit.logfile',
      "${-> testClusters.integTest.singleNode().getAuditLog()}"
    nonInputProperties.systemProperty 'tests.audit.yesterday.logfile',
      "${-> testClusters.integTest.singleNode().getAuditLog().getParentFile()}/integTest_audit-${new Date().format('yyyy-MM-dd')}.json"
  }

  tasks.named("testingConventions").configure { enabled = false }
}
