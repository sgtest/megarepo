
/*
 * This project is named sql-shared-client because it is in the
 * "org.elasticsearch.plugin" group and it'd be super confusing for it to just
 * be called "shared-client" there.
 */

apply plugin: 'elasticsearch.build'

description = 'Code shared between jdbc and cli'

dependencies {
    compile xpackProject('plugin:sql:sql-proto')
    compile "com.fasterxml.jackson.core:jackson-core:${versions.jackson}"
    testCompile "org.elasticsearch.test:framework:${version}"
}

dependencyLicenses {
    mapping from: /jackson-.*/, to: 'jackson'
    mapping from: /sql-proto.*/, to: 'elasticsearch'
    mapping from: /elasticsearch-cli.*/, to: 'elasticsearch'
    mapping from: /elasticsearch-core.*/, to: 'elasticsearch'
    mapping from: /lucene-.*/, to: 'lucene'
    ignoreSha 'sql-proto'
    ignoreSha 'elasticsearch'
    ignoreSha 'elasticsearch-core'
}

forbiddenApisMain {
    // does not depend on core, so only jdk and http signatures should be checked
    signaturesURLs = [this.class.getResource('/forbidden/jdk-signatures.txt')]
}

forbiddenApisTest {
    bundledSignatures -= 'jdk-non-portable'
    bundledSignatures += 'jdk-internal'
}

forbiddenPatterns {
    exclude '**/*.keystore'
}

// Allow for com.sun.net.httpserver.* usage for testing
eclipse {
    classpath.file {
        whenMerged { cp ->
        def con = entries.find { e ->
            e.kind == "con" && e.toString().contains("org.eclipse.jdt.launching.JRE_CONTAINER")
        }
        con.accessRules.add(new org.gradle.plugins.ide.eclipse.model.AccessRule(
            "accessible", "com/sun/net/httpserver/*"))
        }
    }
}
