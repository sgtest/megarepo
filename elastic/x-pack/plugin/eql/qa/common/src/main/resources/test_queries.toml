[[queries]]
name = "simpleQueryEqual"
query = 'process where serial_event_id == 1'
expected_event_ids  = [1]

[[queries]]
name = "simpleQueryLt"
query = 'process where serial_event_id < 4'
expected_event_ids  = [1, 2, 3]

[[queries]]
name = "simpleQueryHeadSix"
query = 'process where true | head 6'
expected_event_ids  = [1, 2, 3, 4, 5, 6]

[[queries]]
name = "processWhereFalse"
query = 'process where false'
expected_event_ids = []

[[queries]]
name = "missingField1"
expected_event_ids = []
query = 'process where missing_field != null'

[[queries]]
name = "equalsNullHead"
expected_event_ids  = [1, 2, 3, 4, 5]
query = 'process where bad_field == null | head 5'

[[queries]]
name = "processNameInexistent"
query = '''
process where process_name : "impossible name" or (serial_event_id < 4.5 and serial_event_id >= 3.1)
'''
expected_event_ids  = [4]

[[queries]]
name = "lteAndGtWithFilter"
tags = ["comparisons", "pipes"]
query = '''
process where serial_event_id <= 8 and serial_event_id > 7
| filter serial_event_id == 8
'''
expected_event_ids  = [8]

[[queries]]
name = "filtersLteAndGt"
query = '''
process where true
| filter serial_event_id <= 10
| filter serial_event_id > 6
'''
expected_event_ids  = [7, 8, 9, 10]

[[queries]]
name = "filterLteAndGtWithHead"
query = '''
process where true
| filter serial_event_id <= 10
| filter serial_event_id > 6
| head 2
'''
expected_event_ids  = [7, 8]

[[queries]]
name = "headWithFiltersAndTail"
query = '''
process where true
| head 1000
| filter serial_event_id <= 10
| filter serial_event_id > 6
| tail 2
'''
expected_event_ids  = [9, 10]

[[queries]]
name = "serialEventIdLteAndGt"
query = '''
process where serial_event_id<=8 and serial_event_id > 7
'''
expected_event_ids  = [8]

[[queries]]
name = "exitCodeGteZero"
note = "check that comparisons against null values return null"
expected_event_ids  = [58, 64, 69, 74, 80, 85, 90, 93, 94, 75303]
query = 'process where exit_code >= 0'

[[queries]]
name = "zeroLteExitCode"
note = "check that comparisons against null values return null"
expected_event_ids  = [58, 64, 69, 74, 80, 85, 90, 93, 94, 75303]
query = 'process where 0 <= exit_code'

[[queries]]
name = "exitCodeLteZero"
note = "check that comparisons against null values return null"
expected_event_ids  = [58, 64, 69, 74, 80, 85, 90, 93, 94, 75303]
query = 'process where exit_code <= 0'

[[queries]]
name = "exitCodeLtOne"
note = "check that comparisons against null values return null"
expected_event_ids  = [58, 64, 69, 74, 80, 85, 90, 93, 94, 75303]
query = 'process where exit_code < 1'

[[queries]]
name = "exitCodeGtMinusOne"
note = "check that comparisons against null values return null"
expected_event_ids  = [58, 64, 69, 74, 80, 85, 90, 93, 94, 75303]
query = 'process where exit_code > -1'

[[queries]]
name = "minusOneLtExitCode"
note = "check that comparisons against null values return null"
expected_event_ids  = [58, 64, 69, 74, 80, 85, 90, 93, 94, 75303]
query = 'process where -1 < exit_code'

[[queries]]
name = "nullEqualityAndInWithHead"
note = "check that comparisons against null values return null"
expected_event_ids = []
query = '''
process where null == (exit_code > -1)
  and serial_event_id in (58, 64, 69, 74, 80, 85, 90, 93, 94)
| head 10
'''

[[queries]]
name = "nullEqualityWithGtAndHead"
note = "check that comparisons against null values return null"
expected_event_ids  = [1, 2, 3, 4, 5, 6, 7]
query = 'process where null == (exit_code > -1) | head 7'

[[queries]]
name = "nullEqualityWithLtAndHead"
note = "check that comparisons against null values return null"
expected_event_ids  = [1, 2, 3, 4, 5, 6, 7]
query = 'process where null == (-1 < exit_code) | head 7'

[[queries]]
name = "exitCodeGtZero"
query = 'process where exit_code > 0'
expected_event_ids = []

[[queries]]
name = "exitCodeLtZero"
query = 'process where exit_code < 0'
expected_event_ids = []

[[queries]]
name = "zeroLtExitCode"
query = 'process where 0 < exit_code'
expected_event_ids = []

[[queries]]
name = "zeroGtExitCode"
query = 'process where 0 > exit_code'
expected_event_ids = []

[[queries]]
name = "processWithMultipleConditions1"
query = 'process where (serial_event_id<=8 and serial_event_id > 7) and (opcode==3 and opcode>2)'
expected_event_ids  = [8]

[[queries]]
name = "processWithMultipleConditions2"
query = 'process where (serial_event_id<9 and serial_event_id >= 7) or (opcode == pid)'
expected_event_ids  = [7, 8]

[[queries]]
name = "processWithStringComparison1"
query = 'process where process_name >= "System" and process_name <= "System Idle Process"'
expected_event_ids  = [1, 2]

[[queries]]
name = "compareTwoFields1"
# test that it works for comparing field <--> field
query = 'process where serial_event_id < 5 and process_name <= parent_process_name'
expected_event_ids  = [2, 3]

[[queries]]
name = "compareTwoFields2"
query = 'process where serial_event_id < 5 and process_name <= parent_process_name'
expected_event_ids  = [2]

[[queries]]
name = "processWithStringComparison2"
query = 'process where process_name >= "System" and process_name < "System Idle Process"'
expected_event_ids  = [2]

[[queries]]
name = "processWithStringComparison3"
query = 'process where process_name > "System" and process_name <= "System Idle Process"'
expected_event_ids  = [1]

[[queries]]
name = "processWithStringComparison4"
query = 'process where process_name > "System" and process_name < "System Idle Process"'
expected_event_ids  = []

[[queries]]
name = "processWithStringComparison5"
query = 'process where process_name >= "Syste" and process_name <= "Systez"'
expected_event_ids  = [1, 2]

[[queries]]
name = "processWithStringComparison6"
query = 'process where process_name > "System" and process_name < "Systez"'
expected_event_ids  = [1]

[[queries]]
name = "processWithStringComparison7"
query = 'process where process_name >= "System Idle Process" and process_name <= "System Idle Process"'
expected_event_ids  = [1]

[[queries]]
name = "processWithStringComparisonCaseSensitive1"
notes = "s == 0x73; S == 0x53"
query = 'process where process_name >= "system idle process" and process_name <= "System Idle Process"'
expected_event_ids  = []

[[queries]]
name = "processWithStringComparisonCaseInsensitive1"
query = 'process where process_name >= "system idle process" and process_name <= "System Idle Process"'
expected_event_ids  = [1]

[[queries]]
name = "processWithStringComparisonCaseInsensitive2"
query = 'process where process_name >= "SYSTE" and process_name < "systex"'
expected_event_ids  = [1, 2]

[[queries]]
name = "processWithStringComparisonCaseInsensitive3"
query = 'process where process_name >= "sysT" and process_name < "SYsTeZZZ"'
expected_event_ids  = [1, 2]

[[queries]]
name = "processWithStringComparisonCaseInsensitive4"
query = 'process where process_name >= "SYSTE" and process_name <= "systex"'
expected_event_ids  = [1, 2]


[[queries]]
name = "processWithStringEqualityCaseInsensitive1"
query = '''
process where process_name : "VMACTHLP.exe" and unique_pid == 12
| filter true
'''
expected_event_ids  = [12]

[[queries]]
name = "processNameIN"
query = '''
process where process_name in ("python.exe", "smss.exe", "explorer.exe")
| unique process_name
'''
expected_event_ids  = [3, 34, 48]

[[queries]]
name = "processNameINCaseInsensitive1"
query = '''
process where process_name in ("python.exe", "SMSS.exe", "explorer.exe")
| unique process_name
'''
expected_event_ids  = [3, 34, 48]

[[queries]]
name = "processNameINCaseInsensitive2"
query = '''
process where process_name in ("python.exe", "smss.exe", "Explorer.exe")
| unique length(process_name)
'''
expected_event_ids  = [3, 34, 48]

[[queries]]
name = "processNameINWithUnique1"
query = '''
process where process_name in ("python.exe", "smss.exe", "explorer.exe")
| unique length(process_name) == length("python.exe")
'''
expected_event_ids  = [3, 48]

[[queries]]
name = "processNameINWithUnique2"
query = '''
process where process_name in ("Python.exe", "smss.exe", "explorer.exe")
| unique process_name != "python.exe"
'''
expected_event_ids  = [3, 48]

[[queries]]
name = "processNameINWithUniqueHeadAndTail1"
query = '''
process where process_name in ("python.exe", "smss.exe", "explorer.exe")
| unique process_name
| head 2
| tail 1
'''
expected_event_ids  = [34]

[[queries]]
name = "processNameINWithUniqueHeadAndTail2"
query = '''
process where process_name in ("python.exe", "smss.exe", "explorer.exe")
| unique process_name
| tail 2
| head 1
'''
expected_event_ids  = [34]

[[queries]]
name = "processNameINWithUnique3"
query = '''
process where process_name in ("python.exe", "smss.exe")
| unique process_name parent_process_name
'''
expected_event_ids  = [3, 48, 50, 54, 78]

[[queries]]
name = "processNameINWithTwoUniqueFields1"
query = '''
process where process_name in ("python.exe", "smss.exe")
| unique process_name, parent_process_name
'''
expected_event_ids  = [3, 48, 50, 54, 78]

[[queries]]
name = "processNameINWithTwoUniqueFields2"
query = '''
process where process_name in ("python.exe", "smss.exe")
| head 5
| unique process_name parent_process_name
'''
expected_event_ids  = [3, 48, 50, 54]

[[queries]]
name = "lengthCaseInsensitive1"
expected_event_ids  = [57]
query = '''
registry where length(bytes_written_string_list) == 2 and bytes_written_string_list[1] : "EN"
'''

[[queries]]
name = "keyPathWildcard"
query = '''
registry where key_path : "*\\MACHINE\\SAM\\SAM\\*\\Account\\Us*ers\\00*03E9\\F"
'''
expected_event_ids  = [79]

[[queries]]
name = "processPathWildcardAndIN"
query = '''
process where process_path : "*\\red_ttp\\wininit.*" and opcode in (0,1,2,3,4)
'''
expected_event_ids  = [84, 85]

[[queries]]
name = "descendant1"
query = '''
file where file_name : "csrss.exe" and opcode==0
  and descendant of [process where opcode in (1,3) and process_name:"cmd.exe"]
'''
expected_event_ids  = [72]

[[queries]]
name = "descendant2"
query = '''
process where opcode==1 and process_name : "csrss.exe"
  and descendant of [file where file_name : "csrss.exe" and opcode==0]
'''
expected_event_ids  = [73]

[[queries]]
name = "descendant3"
query = '''
process where opcode==1 and process_name : "smss.exe"
  and descendant of [
    file where file_name : "csrss.exe" and opcode==0
      and descendant of [
        process where opcode in(1,3) and process_name:"cmd.exe"
      ]
  ]
'''
expected_event_ids  = [78]

[[queries]]
name = "wildcardAndMultipleConditions1"
query = '''
file where file_path:"*\\red_ttp\\winin*.*"
  and opcode in (0,1,2) and user_name:"vagrant"
'''
expected_event_ids  = [83, 86]

[[queries]]
name = "wildcardAndMultipleConditions2"
query = '''
file where file_path:"*\\red_ttp\\winin*.*"
  and opcode not in (0,1,2) and user_name:"vagrant"
'''
expected_event_ids  = []

[[queries]]
name = "wildcardAndMultipleConditions3"
query = '''
file where file_path:"*\\red_ttp\\winin*.*"
  and opcode not in (3, 4, 5, 6 ,7) and user_name:"vagrant"
'''
expected_event_ids  = [83, 86]


[[queries]]
name = "INWithCondition"
query = '''
file where file_name in ("wininit.exe", "lsass.exe") and opcode == 2
'''
expected_event_ids  = [65, 86]

[[queries]]
name = "simpleTail"
query = '''
file where true
| tail 3
'''
expected_event_ids  = [92, 95, 96]

[[queries]]
name = "twoINs"
query = '''
process where opcode in (1,3) and process_name in (parent_process_name, "System")
'''
expected_event_ids  = [2, 50, 51]

[[queries]]
name = "twoINsCaseInsensitive"
query = '''
process where opcode in (1,3) and process_name in (parent_process_name, "SYSTEM")
'''
expected_event_ids  = [2, 50, 51]

[[queries]]
name = "simpleTailWithSort"
expected_event_ids  = [92, 95, 96, 91]
query = '''
file where true
| tail 4
| sort file_path
'''

[[queries]]
name = "simpleHeadWithSort1"
expected_event_ids  = [2, 1, 4, 3, 5]
query = '''
process where true
| head 5
| sort md5 event_subtype_full process_name
'''

[[queries]]
name = "simpleHeadwithSort2"
expected_event_ids  = [2, 1, 4, 3, 5]
query = '''
process where true
| head 5
| sort md5 event_subtype_full null_field process_name
'''

[[queries]]
name = "simpleHeadwithSort3"
expected_event_ids  = [2, 1, 4, 3, 5]
query = '''
process where true
| head 5
| sort md5, event_subtype_full, null_field, process_name
'''

[[queries]]
name = "twoHeadsWithSort"
expected_event_ids  = [2, 1]
query = '''
process where true
| head 5
| sort md5 event_subtype_full null_field process_name
| head 2
'''

[[queries]]
name = "twoSortsWithHead"
expected_event_ids  = [1, 2, 3, 4, 5]
query = '''
process where true
| head 5
| sort md5 event_subtype_full null_field process_name
| sort serial_event_id
'''

[[queries]]
name = "sequenceOneOneMatch"
query = '''
sequence
  [process where serial_event_id == 1]
  [process where serial_event_id == 2]
'''
expected_event_ids  = [1, 2]

[[queries]]
name = "sequenceManyOneMatch"
query = '''
sequence
  [process where serial_event_id < 5]
  [process where serial_event_id == 5]
'''
expected_event_ids  = [4, 5]

[[queries]]
name = "sequenceOneOneOne"
query = '''
sequence
  [process where serial_event_id == 1]
  [process where serial_event_id == 2]
  [process where serial_event_id == 3]
'''
expected_event_ids  = [1, 2, 3]


[[queries]]
name = "sequenceOneManyMany"
query = '''
sequence
  [process where serial_event_id == 1]
  [process where true]
  [process where true]
'''
expected_event_ids  = [1, 2, 3]

[[queries]]
name = "sequenceConditionManyMany"
query = '''
sequence
  [process where serial_event_id <= 3]
  [process where true]
  [process where true]
'''
expected_event_ids = [1, 2, 3,
                      2, 3, 4,
                      3, 4, 5]
[[queries]]
name = "sequenceManyConditionMany"
query = '''
sequence
  [process where true]
  [process where serial_event_id <= 3]
  [process where true]
'''
expected_event_ids = [1, 2, 3,
                      2, 3, 4]
[[queries]]
name = "sequenceManyManyCondition"
query = '''
sequence
  [process where true]
  [process where true]
  [process where serial_event_id <= 3]
'''
expected_event_ids  = [1, 2, 3]

[[queries]]
name = "sequenceThreeManyCondition1"
query = '''
sequence
  [process where serial_event_id <= 4]
  [process where true]
  [process where true]
  [process where true]
'''
expected_event_ids  = [1, 2, 3, 4,
                       2, 3, 4, 5,
                       3, 4, 5, 6,
                       4, 5, 6, 7]

[[queries]]
name = "sequenceThreeManyCondition2"
query = '''
sequence
  [process where true]
  [process where serial_event_id <= 4]
  [process where true]
  [process where true]
'''
expected_event_ids  = [1, 2, 3, 4,
                       2, 3, 4, 5,
                       3, 4, 5, 6]

[[queries]]
name = "sequenceThreeManyCondition3"
query = '''
sequence
  [process where true]
  [process where true]
  [process where serial_event_id <= 4]
  [process where true]
'''
expected_event_ids  = [1, 2, 3, 4,
                       2, 3, 4, 5]

[[queries]]
name = "sequenceThreeManyCondition4"
query = '''
sequence
  [process where true]
  [process where true]
  [process where true]
  [process where serial_event_id <= 4]
'''
expected_event_ids  = [1, 2, 3, 4]

[[queries]]
name = "twoSequencesWithKeys"
query = '''
sequence
  [process where true]        by unique_pid
  [process where opcode == 1] by unique_ppid
'''
expected_event_ids  = [48, 53,
                       53, 54,
                       54, 56,
                       97, 98]

[[queries]]
name = "twoSequencesWithTwoKeys"
query = '''
sequence
  [process where true]        by unique_pid,  process_path
  [process where opcode == 1] by unique_ppid, parent_process_path
'''
expected_event_ids  = [48, 53,
                       53, 54,
                       54, 56,
                       97, 98]

[[queries]]
name = "fourSequencesByPidWithUntil1"
query = '''
sequence
  [process where opcode == 1] by unique_pid
  [file where opcode == 0]    by unique_pid
  [file where opcode == 0]    by unique_pid
  [file where opcode == 0]    by unique_pid
until
  [file where opcode == 2]    by unique_pid
'''
expected_event_ids  = []

[[queries]]
name = "fourSequencesByPidWithUntil2"
query = '''
sequence
  [process where opcode == 1] by unique_pid
  [file where opcode == 0]    by unique_pid
  [file where opcode == 0]    by unique_pid
  [file where opcode == 0]    by unique_pid
until
  [file where opcode == 200]  by unique_pid
'''
expected_event_ids  = [54, 55, 61, 67]

[[queries]]
name = "fourSequencesByPid"
query = '''
sequence
  [process where opcode == 1] by unique_pid
  [file where opcode == 0]    by unique_pid
  [file where opcode == 0]    by unique_pid
  [file where opcode == 0]    by unique_pid
'''
expected_event_ids  = [54, 55, 61, 67]


[[queries]]
name = "fourSequencesByPidAndProcessPath1"
query = '''
sequence
  [process where opcode == 1] by unique_pid,  process_path
  [file where opcode == 0]    by unique_pid,  process_path
  [file where opcode == 0]    by unique_pid,  process_path
  [file where opcode == 0]    by unique_pid,  process_path
'''
expected_event_ids  = [54, 55, 61, 67]


[[queries]]
name = "fourSequencesByPidAndProcessPathWithUntil"
query = '''
sequence
  [process where opcode == 1] by unique_pid,  process_path
  [file where opcode == 0]    by unique_pid,  process_path
  [file where opcode == 0]    by unique_pid,  process_path
  [file where opcode == 0]    by unique_pid,  process_path
until
  [file where opcode == 200]  by unique_pid,  process_path
'''
expected_event_ids  = [54, 55, 61, 67]

[[queries]]
name = "sequenceOneManyWithJoin"
query = '''
sequence
  [process where serial_event_id==1] by unique_pid
  [process where true] by unique_ppid
'''
expected_event_ids  = [1, 2]


[[queries]]
name = "sequenceManyManyWithJoin"
query = '''
sequence
  [process where serial_event_id<3] by unique_pid
  [process where true] by unique_ppid
'''
expected_event_ids  = [1, 2, 2, 3]


[[queries]]
name = "sequenceNonFieldBasedJoin"
query = '''
sequence
  [process where serial_event_id<3] by unique_pid * 2
  [process where true] by unique_ppid * 2
'''
expected_event_ids  = [1, 2,
                       2, 3]


[[queries]]
name = "sequenceMultipleNonFieldBasedJoins"
query = '''
sequence
  [process where serial_event_id<3] by unique_pid * 2, length(unique_pid), string(unique_pid)
  [process where true] by unique_ppid * 2, length(unique_ppid), string(unique_ppid)
'''
expected_event_ids  = [1, 2,
                       2, 3]


[[queries]]
name = "sequencesOnDifferentEventTypes1"
query = '''
sequence by unique_pid
  [process where opcode==1 and process_name : "MSBuild.exe"]
  [network where true]
'''
expected_event_ids  = [75273, 75304]
description = "test that process sequences are working correctly"


[[queries]]
name = "sequencesOnDifferentEventTypes2"
query = '''
sequence
  [file where event_subtype_full : "file_create_event"] by file_path
  [process where opcode == 1] by process_path
  [process where opcode == 2] by process_path
  [file where event_subtype_full : "file_delete_event"] by file_path
| head 4
| tail 2
'''
expected_event_ids  = [67, 68, 69, 70,
                       72, 73, 74, 75]

[[queries]]
name = "sequencesOnDifferentEventTypes3"
query = '''
sequence with maxspan=1d
  [file where event_subtype_full : "file_create_event"] by file_path
  [process where opcode == 1] by process_path
  [process where opcode == 2] by process_path
  [file where event_subtype_full : "file_delete_event"] by file_path
| head 4
| tail 2
'''
expected_event_ids  = [67, 68, 69, 70,
                       72, 73, 74, 75]

[[queries]]
name = "sequencesOnDifferentEventTypes4"
query = '''
sequence with maxspan=1h
  [file where event_subtype_full : "file_create_event"] by file_path
  [process where opcode == 1] by process_path
  [process where opcode == 2] by process_path
  [file where event_subtype_full : "file_delete_event"] by file_path
| head 4
| tail 2
'''
expected_event_ids  = [67, 68, 69, 70,
                       72, 73, 74, 75]

[[queries]]
name = "sequencesOnDifferentEventTypes5"
query = '''
sequence with maxspan=1m
  [file where event_subtype_full : "file_create_event"] by file_path
  [process where opcode == 1] by process_path
  [process where opcode == 2] by process_path
  [file where event_subtype_full : "file_delete_event"] by file_path
| head 4
| tail 2
'''
expected_event_ids  = [67, 68, 69, 70,
                       72, 73, 74, 75]

[[queries]]
name = "sequencesOnDifferentEventTypes6"
query = '''
sequence with maxspan=10s
   [file where event_subtype_full : "file_create_event"] by file_path
   [process where opcode == 1] by process_path
   [process where opcode == 2] by process_path
   [file where event_subtype_full : "file_delete_event"] by file_path
| head 4
| tail 2
'''
expected_event_ids  = [67, 68, 69, 70,
                       72, 73, 74, 75]

[[queries]]
name = "sequencesOnDifferentEventTypes7"
query = '''
sequence with maxspan=500ms
  [file where event_subtype_full : "file_create_event"] by file_path
  [process where opcode == 1] by process_path
  [process where opcode == 2] by process_path
  [file where event_subtype_full : "file_delete_event"] by file_path
| head 4
| tail 2
'''
expected_event_ids = []

[[queries]]
name = "doubleSameSequence"
query = '''
sequence
  [process where serial_event_id < 5]
  [process where serial_event_id < 5]
'''
expected_event_ids  = [1, 2,
                       2, 3,
                       3, 4]

[[queries]]
name = "sequencesOnDifferentEventTypesWithBy"
query = '''
sequence
  [file where opcode==0 and file_name:"svchost.exe"] by unique_pid
  [process where opcode == 1] by unique_ppid
'''
expected_event_ids  = [55, 56]

[[queries]]
name = "doubleSameSequenceWithBy"
query = '''
sequence
  [file where opcode==0] by unique_pid
  [file where opcode==0] by unique_pid
| head 1
'''
expected_event_ids  = [55, 61]

[[queries]]
name = "doubleSameSequenceWithByAndFilter"
query = '''
sequence
  [file where opcode==0] by unique_pid
  [file where opcode==0] by unique_pid
| filter events[1].serial_event_id == 92
'''
expected_event_ids  = [87, 92]

[[queries]]
name = "doubleSameSequenceWithByUntilAndHead1"
query = '''
sequence
  [file where opcode==0 and file_name:"*.exe"] by unique_pid
  [file where opcode==0 and file_name:"*.exe"] by unique_pid
until [process where opcode==5000] by unique_ppid
| head 1
'''
expected_event_ids  = [55, 61]

[[queries]]
name = "doubleSameSequenceWithByUntilAndHead2"
query = '''
sequence
  [file where opcode==0 and file_name:"*.exe"] by unique_pid
  [file where opcode==0 and file_name:"*.exe"] by unique_pid
until [process where opcode==1] by unique_ppid
| head 1
'''
expected_event_ids = []

[[queries]]
name = "doubleJoinWithByUntilAndHead"
query = '''
join
  [file where opcode==0 and file_name:"*.exe"] by unique_pid
  [file where opcode==2 and file_name:"*.exe"] by unique_pid
until [process where opcode==1] by unique_ppid
| head 1
'''
expected_event_ids  = [61, 59]

[[queries]]
name = "twoJoins1"
query = '''
join by user_name
  [process where opcode in (1,3) and process_name:"smss.exe"]
  [process where opcode in (1,3) and process_name : "python.exe"]
'''
expected_event_ids  = [78, 48]

[[queries]]
name = "threeJoins1"
query = '''
join by unique_pid
  [process where opcode==1]
  [file where opcode==0 and file_name:"svchost.exe"]
  [file where opcode == 0 and file_name : "lsass.exe"]
'''
expected_event_ids  = [54, 55, 61]

[[queries]]
name = "threeJoins2"
query = '''
join by string(unique_pid)
  [process where opcode==1]
  [file where opcode==0 and file_name:"svchost.exe"]
  [file where opcode == 0 and file_name : "lsass.exe"]
'''
expected_event_ids  = [54, 55, 61]

[[queries]]
name = "threeJoinsWithUntil1"
query = '''
join by unique_pid
  [process where opcode==1]
  [file where opcode==0 and file_name:"svchost.exe"]
  [file where opcode == 0 and file_name : "lsass.exe"]
until [file where opcode == 2]
'''
expected_event_ids = []

[[queries]]
name = "threeJoinsWithUntil2"
query = '''
join by string(unique_pid), unique_pid, unique_pid * 2
  [process where opcode==1]
  [file where opcode==0 and file_name:"svchost.exe"]
  [file where opcode == 0 and file_name : "lsass.exe"]
until [file where opcode == 2]
'''
expected_event_ids = []

[[queries]]
name = "twoJoins2"
query = '''
join
  [file where opcode==0 and file_name:"svchost.exe"] by unique_pid
  [process where opcode == 1] by unique_ppid
'''
expected_event_ids  = [55, 56]

[[queries]]
name = "twoJoins3"
query = '''
join by unique_pid
  [process where opcode in (1,3) and process_name:"python.exe"]
  [file where file_name : "*.exe"]
'''
expected_event_ids  = [54, 55]

[[queries]]
name = "twoJoins4"
query = '''
join by user_name
  [process where opcode in (1,3) and process_name:"python.exe"]
  [process where opcode in (1,3) and process_name : "smss.exe"]
'''
expected_event_ids  = [48, 78]

[[queries]]
name = "twoJoins5"
query = '''
join
  [process where opcode in (1,3) and process_name:"python.exe"]
  [process where opcode in (1,3) and process_name : "smss.exe"]
'''
expected_event_ids  = [48, 3, 50, 78]

[[queries]]
name = "fakeField"
expected_event_ids = []
query = '''
process where fake_field : "*"
'''

[[queries]]
name = "fakeFieldWithHead1"
query = '''
process where fake_field != "*"
| head 4
'''
# no longer valid, since this returns `null`, and `not null` is still null
# expected_event_ids  = [1, 2, 3, 4]
expected_event_ids = []


[[queries]]
name = "fakeFieldWithHead2"
query = '''
process where not (fake_field : "*")
| head 4
'''
# no longer valid, since this returns `null`, and `not null` is still null
# expected_event_ids  = [1, 2, 3, 4]
expected_event_ids = []

[[queries]]
name = "invalidFieldName"
expected_event_ids = []
query = '''
registry where invalid_field_name != null
'''

[[queries]]
name = "badFieldWithLength"
expected_event_ids = []
query = '''
registry where length(bad_field) > 0
'''

[[queries]]
name = "multipleConditions2"
query = '''
process where opcode == 1
  and process_name in ("net.exe", "net1.exe")
  and not (parent_process_name : "net.exe"
  and process_name : "net1.exe")
  and command_line : "*group *admin*" and command_line != "* /add*"
  '''
expected_event_ids  = [97]

[[queries]]
name = "anyWithUnique"
expected_event_ids  = [1, 55, 57, 63, 75304]
query = '''
any where true
| unique event_type_full
'''

[[queries]]
name = "multipleConditionsWithDescendant1"
query = '''
process where opcode==1 and process_name in ("services.exe", "smss.exe", "lsass.exe")
  and descendant of [process where process_name : "cmd.exe" ]
'''
expected_event_ids  = [62, 68, 78]

[[queries]]
name = "INWithDescendant"
query = '''
process where process_name in ("services.exe", "smss.exe", "lsass.exe")
  and descendant of [process where process_name : "cmd.exe" ]
  '''
expected_event_ids  = [62, 64, 68, 69, 78, 80]

[[queries]]
name = "multipleConditionsWithDescendant2"
query = '''
process where opcode==2 and process_name in ("services.exe", "smss.exe", "lsass.exe")
  and descendant of [process where process_name : "cmd.exe" ]
'''
expected_event_ids  = [64, 69, 80]

[[queries]]
name = "childOf1"
query = '''
process where process_name:"svchost.exe"
  and child of [file where file_name:"svchost.exe" and opcode==0]
'''
expected_event_ids  = [56, 58]

[[queries]]
name = "childOf2"
query = '''
process where process_name:"svchost.exe"
  and not child of [file where file_name:"svchost.exe" and opcode==0]
| head 3
'''
expected_event_ids  = [11, 13, 15]

[[queries]]
name = "nestedChildOf1"
query = '''
process where process_name:"lsass.exe"
  and child of [
    process where process_name:"python.exe"
    and child of [process where process_name:"cmd.exe"]
  ]
'''
expected_event_ids  = [62, 64]

[[queries]]
name = "nestedChildOf2"
query = '''
file where child of [
  process where child of [
      process where child of [process where process_name:"*wsmprovhost.exe"]
  ]
]
| tail 1
'''
expected_event_ids  = [91]

[[queries]]
name = "fileByUniquePid1"
query = '''
file where process_name : "python.exe"
| unique unique_pid
'''
expected_event_ids  = [55, 95]

[[queries]]
name = "fileByUniquePid2"
query = '''
file where event of [process where process_name : "python.exe" ]
| unique unique_pid
'''
expected_event_ids  = [55, 95]

[[queries]]
name = "simpleStringEquality"
query = '''
process where process_name : "python.exe"
'''
expected_event_ids  = [48, 50, 51, 54, 93]

[[queries]]
name = "eventOfProcess"
query = 'process where event of [process where process_name : "python.exe" ]'
expected_event_ids  = [48, 50, 51, 54, 93]

[[queries]]
name = "twoSequencesWithKeys2"
query = '''
sequence
  [file where file_name:"lsass.exe"] by file_path,process_path
  [process where true] by process_path,parent_process_path
'''
expected_event_ids  = [61, 62]

[[queries]]
name = "twoSequencesWithKeys3"
query = '''
sequence by user_name
  [file where file_name:"lsass.exe"] by file_path, process_path
  [process where true] by process_path, parent_process_path
'''
expected_event_ids  = [61, 62]

[[queries]]
name = "twoSequencesWithKeys4"
query = '''
sequence by pid
  [file where file_name:"lsass.exe"] by file_path,process_path
  [process where true] by process_path,parent_process_path
'''
expected_event_ids = []

[[queries]]
name = "fourSequencesByMixedFields"
query = '''
sequence by user_name
  [file where opcode==0] by file_path
  [process where opcode==1] by process_path
  [process where opcode==2] by process_path
  [file where opcode==2] by file_path
| tail 1
'''
expected_event_ids  = [88, 89, 90, 91]

[[queries]]
name = "twoSequencesWithTwoKeysAndUntil"
query = '''
sequence by user_name
  [file where opcode==0] by pid,file_path
  [file where opcode==2] by pid,file_path
until
  [process where opcode == 2] by ppid,process_path
'''
expected_event_ids = []

[[queries]]
name = "twoSequencesWithUntil"
query = '''
sequence by user_name
  [file where opcode==0] by pid,file_path
  [file where opcode==2] by pid,file_path
until
  [process where opcode == 5] by ppid,process_path
| head 2
'''
expected_event_ids  = [55, 59, 61, 65]

[[queries]]
name = "fourSequencesWithTail"
query = '''
sequence by pid
  [file where opcode==0] by file_path
  [process where opcode==1] by process_path
  [process where opcode==2] by process_path
  [file where opcode==2] by file_path
| tail 1
'''
expected_event_ids = []

[[queries]]
name = "twoSequencesWithHead"
query = '''
join by user_name
  [file where true] by pid,file_path
  [process where true] by ppid,process_path
| head 2
'''
expected_event_ids  = [55, 56, 59, 58]

[[queries]]
name = "threeSequencesWithHead"
query = '''
sequence
  [process where true] by unique_pid
  [file where true] fork=true by unique_pid
  [process where true] by unique_ppid
| head 4
'''
expected_event_ids  = [54, 55, 56, 54, 61, 62, 54, 67, 68, 54, 72, 73]

[[queries]]
name = "wildcard1"
query = '''
process where command_line : "*%*"
'''
expected_event_ids  = [4, 6, 28]

[[queries]]
name = "wildcard2"
query = '''
process where command_line : "*%*%*"
'''
expected_event_ids  = [4, 6, 28]

[[queries]]
name = "wildcard3"
query = '''
process where command_line : "%*%*"
'''
expected_event_ids  = [4, 6, 28]

[[queries]]
name = "uniqueCount1"
expected_event_ids  = [11, 60, 63]
query = '''
any where process_name : "svchost.exe"
| unique_count event_type_full process_name
'''

[[queries]]
name = "uniqueCount2"
expected_event_ids  = [63, 60, 11]
query = '''
any where process_name : "svchost.exe"
| sort event_type_full serial_event_id
| unique_count event_type_full process_name
'''

[[queries]]
name = "uniqueCount3"
expected_event_ids  = [60]
query = '''
any where process_name : "svchost.exe"
| unique_count event_type_full opcode
| filter count == 7
'''

[[queries]]
name = "uniqueCountAndFilter"
expected_event_ids  = [11]
query = '''
any where process_name : "svchost.exe"
| unique_count event_type_full opcode
| filter percent >= .5
'''


[[queries]]
name = "arrayContainsCaseInsensitive1"
expected_event_ids  = [57]
query = '''
registry where arrayContains(bytes_written_string_list, "En-uS")
'''

[[queries]]
name = "arrayContainsCaseInsensitive2"
expected_event_ids  = [57]
query = '''
registry where arrayContains(bytes_written_string_list, "En")
'''

[[queries]]
name = "lengthCaseInsensitive2"
expected_event_ids  = [57]
query = '''
registry where length(bytes_written_string_list) > 0 and bytes_written_string_list[0] : "EN-us"
'''

[[queries]]
name = "arrayCaseInsensitive1"
expected_event_ids  = [57]
query = '''
registry where bytes_written_string_list[0] : "EN-us"
'''

[[queries]]
name = "arrayCaseInsensitive2"
expected_event_ids  = [57]
query = '''
registry where bytes_written_string_list[1] : "EN"
'''


[[queries]]
name = "arrayContainsCaseInsensitive3"
expected_event_ids  = [57]
query = '''
registry where arrayContains(bytes_written_string_list, "en-US")
'''

[[queries]]
name = "arrayContainsCaseInsensitive4"
expected_event_ids  = [57]
query = '''
registry where arrayContains(bytes_written_string_list, "en")
'''

[[queries]]
name = "arrayCaseInsensitive3"
expected_event_ids  = [57]
query = '''
registry where length(bytes_written_string_list) > 0 and bytes_written_string_list[0] : "en-US"
'''

[[queries]]
name = "arrayEquality1"
expected_event_ids  = [57]
query = '''
registry where bytes_written_string_list[0] : "en-US"
'''

[[queries]]
name = "arrayEquality2"
expected_event_ids  = [57]
query = '''
registry where bytes_written_string_list[1] : "en"
'''

[[queries]]
name = "matchLite1"
query = '''
process where matchLite(command_line, """.*?net1\s+localgroup\s+.*?""")
'''
expected_event_ids  = [98]

[[queries]]
name = "matchLite2"
query = '''
process where matchLite(command_line, """.*?net1\s+\w+\s+.*?""")
'''
expected_event_ids  = [98]

[[queries]]
name = "matchLite3"
query = '''
process where matchLite(command_line, """.*?net1\s+\w{4,15}\s+.*?""")
'''
expected_event_ids  = [98]

[[queries]]
name = "match1"
expected_event_ids  = [98]
query = '''
process where match(command_line, """.*?net1\s+\w{4,15}\s+.*?""")
'''

[[queries]]
name = "matchLite4"
query = '''
process where matchLite(command_line, """.*?net1\s+[localgrup]{4,15}\s+.*?""")
'''
expected_event_ids  = [98]

[[queries]]
name = "stringEqualsCaseInsensitive1"
query = '''
process where "net.EXE" == original_file_name
| filter process_name:"net*.exe"
'''
expected_event_ids  = [97]
note = "check that case insensitive comparisons are performed even for lhs strings."

[[queries]]
name = "stringEqualsCaseInsensitive2"
query = '''
process where process_name == original_file_name and process_name:"net*.exe"
'''
expected_event_ids  = [97, 98]
note = "check that case insensitive comparisons are performed for fields."

[[queries]]
name = "fieldsComparisonCaseInsensitive"
query = '''
process where original_file_name == process_name and length(original_file_name) > 0
'''
expected_event_ids  = [97, 98, 75273, 75303]
description = "check that case insensitive comparisons are performed for fields."

[[queries]]
name = "startsWithCaseSensitive"
query = '''
file where opcode==0 and startsWith(file_name, "explorer.")
'''
expected_event_ids  = [88]
description = "check built-in string functions"

[[queries]]
name = "startsWithCaseInsensitive1"
query = '''
file where opcode==0 and startsWith~(file_name, "explorer.")
'''
expected_event_ids  = [88, 92]
description = "check built-in string functions"


[[queries]]
name = "startsWithCaseInsensitive2"
query = '''
file where opcode==0 and startsWith~(file_name, "exploRER.")
'''
expected_event_ids  = [88, 92]
description = "check built-in string functions"

[[queries]]
name = "startsWithCaseInsensitive3"
query = '''
file where opcode==0 and startsWith~(file_name, "expLORER.ExE")
'''
expected_event_ids  = [88, 92]
description = "check built-in string functions"

[[queries]]
name = "endsWith1"
query = '''
file where opcode==0 and endsWith(file_name, "lorer.exe")
'''
expected_event_ids  = [88]
description = "check built-in string functions"


[[queries]]
name = "endsWithCaseInsensitive"
query = '''
file where opcode==0 and endsWith~(file_name, "loREr.exe")
'''
expected_event_ids  = [88]
description = "check built-in string functions"

[[queries]]
name = "endsWith2"
query = '''
file where opcode==0 and startsWith("explorer.exeaaaaaaaa", file_name)
'''
expected_event_ids  = [88]
description = "check built-in string functions"

[[queries]]
name = "endsWithAndCondition"
query = '''
file where opcode==0 and serial_event_id == 88 and startsWith~("explorer.exeaAAAA", "EXPLORER.exe")
'''
expected_event_ids  = [88]
description = "check built-in string functions"

[[queries]]
name = "stringContains2"
query = '''
file where opcode==0 and stringContains("ABCDEFGHIexplorer.exeJKLMNOP", file_name)
'''
expected_event_ids  = [88]
description = "check built-in string functions"

[[queries]]
name = "indexOfCaseInsensitive"
query = '''
file where opcode==0 and indexOf~(file_name, "plore") == 2 and indexOf~(file_name, ".pf") == null
'''
expected_event_ids  = [88]
description = "check built-in string functions"

[[queries]]
name = "indexOf1"
query = '''
file where opcode==0 and indexOf(file_name, "explorer.") > 0 and indexOf(file_name, "plore", 100) > 0
'''
expected_event_ids = []
description = "check built-in string functions"

[[queries]]
name = "indexOf2"
query = '''
file where opcode==0 and indexOf(file_name, "plorer.", 0) == 2
'''
expected_event_ids  = [88]
description = "check built-in string functions"

[[queries]]
name = "indexOf3"
query = '''
file where opcode==0 and indexOf~(file_name, "plorer.", 0) == 2
'''
expected_event_ids  = [88, 92]
description = "check built-in string functions"

[[queries]]
name = "indexOf4"
query = '''
file where opcode==0 and indexOf(file_name, "plorer.", 2) != null
'''
expected_event_ids  = [88]
description = "check built-in string functions"

[[queries]]
name = "indexOf5"
query = '''
file where opcode==0 and indexOf~(file_name, "plorer.", 2) != null
'''
expected_event_ids  = [88, 92]
description = "check built-in string functions"

[[queries]]
name = "indexOf6"
query = '''
file where opcode==0 and indexOf(file_name, "plorer.", 4) != null
'''
expected_event_ids = []
description = "check built-in string functions"

[[queries]]
name = "indexOf7"
query = '''
file where opcode==0 and indexOf(file_name, "thing that never happened") != null
'''
expected_event_ids = []
description = "check built-in string functions"

[[queries]]
name = "indexOf8"
query = '''
file where opcode==0 and indexOf~(file_name, "pLOrer.", 2) == 2
'''
expected_event_ids  = [88, 92]
description = "check substring ranges"

[[queries]]
name = "indexOf9"
query = '''
file where opcode==0 and indexOf(file_name, "plorer.", 2) == 2
'''
expected_event_ids  = [88]
description = "check substring ranges"

[[queries]]
name = "indexOf10"
query = '''
file where opcode==0 and indexOf(file_name, "explorer.", 0) == 0
'''
expected_event_ids  = [88]
description = "check substring ranges"

[[queries]]
name = "indexOf11"
query = '''
file where opcode==0 and indexOf~(file_name, "explorer.", 0) == 0
'''
expected_event_ids  = [88, 92]
description = "check substring ranges"

[[queries]]
name = "substring1"
query = '''
file where serial_event_id==88 and substring(file_name, 0, 4) : "expl"
'''
expected_event_ids  = [88]
description = "check substring ranges"

[[queries]]
name = "substring2"
query = '''
file where substring(file_name, 1, 3) == "xp"
'''
expected_event_ids  = [88, 91]
description = "check substring ranges"

[[queries]]
name = "substring3"
query = '''
file where substring(file_name, 1, 3) : "xp"
'''
expected_event_ids  = [88, 91, 92]
description = "check substring ranges"

[[queries]]
name = "substring4"
query = '''
file where substring(file_name, -4) : ".exe"
'''
expected_event_ids  = [55, 59, 61, 65, 67, 70, 72, 75, 76, 81, 83, 86, 88, 91]
description = "check substring ranges"

[[queries]]
name = "substring5"
query = '''
file where substring(file_name, -4, -1) : ".ex"
'''
expected_event_ids  = [55, 59, 61, 65, 67, 70, 72, 75, 76, 81, 83, 86, 88, 91]
description = "check substring ranges"

[[queries]]
name = "twoAdds"
query = '''
process where add(serial_event_id, 0) == 1 and add(0, 1) == serial_event_id
'''
expected_event_ids  = [1]
description = "test built-in math functions"

[[queries]]
name = "subtract"
query = '''
process where subtract(serial_event_id, -5) == 6
'''
expected_event_ids  = [1]
description = "test built-in math functions"

[[queries]]
name = "multiplyAndDivide"
query = '''
process where multiply(6, serial_event_id) == 30 and divide(30, 4.0) == 7.5
'''
expected_event_ids  = [5]
description = "test built-in math functions"

[[queries]]
name = "moduloEquals"
query = '''
process where modulo(11, add(serial_event_id, 1)) == serial_event_id
'''
expected_event_ids  = [1, 2, 3, 5, 11]
description = "test built-in math functions"

[[queries]]
name = "stringNumberConversion1"
query = '''
process where serial_event_id == number("5")
'''
expected_event_ids  = [5]
description = "test string/number conversions"

[[queries]]
name = "stringNumberConversion2"
expected_event_ids  = [50]
description = "test string/number conversions"
query = '''
process where serial_event_id == number("0x32", 16)
'''

[[queries]]
name = "stringNumberConversion3"
expected_event_ids  = [50]
description = "test string/number conversions"
query = '''
process where serial_event_id == number("32", 16)
'''

[[queries]]
name = "concat1"
query = '''
process where concat(serial_event_id, ":", process_name, opcode) : "5:wininit.exe3"
'''
expected_event_ids  = [5]
description = "test string concatenation"

[[queries]]
name = "concatCaseInsensitive"
query = '''
process where concat(serial_event_id, ":", process_name, opcode) : "5:winINIT.exe3"
'''
expected_event_ids  = [5]
description = "test string concatenation"

[[queries]]
name = "fieldComparisonCaseInsensitive"
query = '''
process where process_name != original_file_name and length(original_file_name) > 0
'''
expected_event_ids = []
description = "check that case insensitive comparisons are performed for fields."


[[queries]]
name = "arraySearch1"
expected_event_ids  = [57]
description = "test arraySearch functionality for lists of strings, and lists of objects"
query = '''
registry where arraySearch(bytes_written_string_list, a, a : "en-US")
'''

[[queries]]
name = "arraySearchCaseSensitive"
expected_event_ids  = []
description = "test arraySearch functionality for lists of strings, and lists of objects"
query = '''
registry where arraySearch(bytes_written_string_list, a, a : "EN-US")
'''

[[queries]]
name = "arraySearchCaseInsensitive1"
expected_event_ids  = [57]
description = "test arraySearch functionality for lists of strings, and lists of objects"
query = '''
registry where arraySearch(bytes_written_string_list, a, a : "en-us")
'''

[[queries]]
name = "arraySearchCaseInsensitive2"
expected_event_ids  = [57]
description = "test arraySearch functionality for lists of strings, and lists of objects"
query = '''
registry where arraySearch(bytes_written_string_list, a, endsWith(a, "-us"))
'''

[[queries]]
name = "arraySearchWithMysteriousField1"
expected_event_ids  = [75305]
description = "test arraySearch - true"
query = '''
network where mysterious_field
  and arraySearch(mysterious_field.subarray, s, true)
'''

[[queries]]
name = "arraySearchWithMysteriousField2"
expected_event_ids = []
description = "test arraySearch - false"
query = '''
network where mysterious_field and arraySearch(mysterious_field.subarray, s, false)
'''

[[queries]]
name = "arraySearchWithMysteriousField3"
expected_event_ids  = [75305]
description = "test arraySearch - conditional"
query = '''
network where mysterious_field and arraySearch(mysterious_field.subarray, s, s.a : "s0-*")
'''

[[queries]]
name = "arraySearchWithMysteriousField4"
expected_event_ids  = [75305]
description = "test arraySearch - conditional"
query = '''
network where mysterious_field and arraySearch(mysterious_field.subarray, s, s.a != "s0-*")
'''

[[queries]]
name = "arraySearchWithMysteriousField5"
expected_event_ids  = [75305]
description = "test arraySearch - nested"
query = '''
network where mysterious_field
  and arraySearch(mysterious_field.subarray, sub1,
    arraySearch(sub1.c, nested, nested.x.y : "*"))
'''

[[queries]]
name = "arraySearchWithMysteriousField6"
expected_event_ids  = [75305]
description = "test arraySearch - nested with cross-check pass"
query = '''
network where mysterious_field
  and arraySearch(mysterious_field.subarray, sub1,
    sub1.a : "s0-a" and arraySearch(sub1.c, nested, nested.z : "s0-c1-x-z"))
'''

[[queries]]
name = "arraySearchWithMysteriousField7"
expected_event_ids  = [75305]
description = "test arraySearch - nested with cross-check pass"
query = '''
network where mysterious_field
  and arraySearch(mysterious_field.subarray, sub1,
    sub1.a : "s0-a" and arraySearch(sub1.c, nested, nested.z == sub1.cross_match))
'''

[[queries]]
name = "arraySearchWithMysteriousField8"
expected_event_ids  = [75305]
description = "test arraySearch - nested with cross-check pass"
query = '''
network where mysterious_field
  and arraySearch(mysterious_field.subarray, sub1,
    arraySearch(sub1.c, nested, nested.x.y == mysterious_field.outer_cross_match))
'''

[[queries]]
name = "safeWrapper"
expected_event_ids = []
description = "test 'safe()' wrapper for exception handling"
query = '''
network where safe(divide(process_name, process_name))
'''

[[queries]]
name = "nestedSetComparisons"
query = '''
file where serial_event_id == 82 and (true == (process_name in ("svchost.EXE", "bad.exe", "bad2.exe")))
'''
expected_event_ids  = [82]
description = "nested set comparisons"

[[queries]]
name = "arrayCount1"
expected_event_ids  = [57]
query = '''
registry where arrayCount(bytes_written_string_list, s, s : "*-us") == 1
'''

[[queries]]
name = "arrayCount2"
expected_event_ids  = [57]
query = '''
registry where arrayCount(bytes_written_string_list, s, s : "*en*") == 2
'''

[[queries]]
name = "arrayContainsCaseInsensitive5"
expected_event_ids  = [57]
query = '''
registry where arrayContains(bytes_written_string_list, "missing", "en-US")
'''

[[queries]]
name = "fieldMath1"
expected_event_ids = [82]
query = "file where serial_event_id - 1 == 81"

[[queries]]
name = "fieldMath2"
expected_event_ids = [82]
query = "file where serial_event_id + 1 == 83"

[[queries]]
name = "fieldMath3"
expected_event_ids = [82]
query = "file where serial_event_id * 2 == 164"

[[queries]]
name = "fieldMath4"
expected_event_ids = [82, 83]
query = "file where serial_event_id / 2 == 41"

[[queries]]
name = "fieldMath5"
expected_event_ids = [82]
query = "file where serial_event_id / 2.0 == 41"

[[queries]]
name = "fieldMath6"
expected_event_ids = [82]
query = "file where serial_event_id % 40 == 2"

[[queries]]
name = "betweenCaseInsensitive1"
expected_event_ids = [1, 2]
query = '''
process where between~(process_name, "s", "E") : "yst"
'''

[[queries]]
name = "betweenCaseInsensitive2"
expected_event_ids = [1, 2]
query = '''
process where between~(process_name, "s", "E", false) : "yst"
'''

[[queries]]
name = "betweenCaseSensitive"
expected_event_ids = [1, 2, 42]
query = '''
process where between(process_name, "s", "e", false) : "t"
'''

[[queries]]
name = "between1"
expected_event_ids = [1]
query = '''
process where between(process_name, "S", "e", true) : "ystem Idle Proc"
'''

[[queries]]
name = "betweenCaseInsensitive3"
expected_event_ids = [1]
query = '''
process where between~(process_name, "s", "e", true) : "ystem Idle Proc"
'''

[[queries]]
name = "between2"
expected_event_ids = [95]
query = '''
file where between(file_path, "dev", ".json", false) : "\\TestLogs\\something"
'''

[[queries]]
name = "between3"
expected_event_ids = [95]
query = '''
file where between(file_path, "dev", ".json", true) : "\\TestLogs\\something"
'''


[[queries]]
name = "cidrMatch1"
expected_event_ids = [75304, 75305]
query = '''
network where cidrMatch(source_address, "10.6.48.157/8")
'''

[[queries]]
name = "cidrMatch2"
expected_event_ids = []
query = '''
network where cidrMatch(source_address, "192.168.0.0/16")
'''

[[queries]]
name = "cidrMatch3"
expected_event_ids = [75304, 75305]
query = '''
network where cidrMatch(source_address, "192.168.0.0/16", "10.6.48.157/8")

'''
[[queries]]
name = "cidrMatch4"
expected_event_ids = [75304, 75305]
query = '''
network where cidrMatch(source_address, "0.0.0.0/0")
'''

[[queries]]
name = "lengthCaseSensitive"
expected_event_ids = [7, 14, 29, 44]
query = '''
process where length(between(process_name, "g", "e")) > 0
'''

[[queries]]
name = "lengthCaseInsensitiveAndBetween"
expected_event_ids = [7, 14, 22, 29, 44]
query = '''
process where length(between(process_name, "g", "e")) > 0
'''

[[queries]]
name = "length1"
expected_event_ids = []
query = '''
process where length(between(process_name, "g", "z")) > 0
'''
