// ANTLR GENERATED CODE: DO NOT EDIT
package org.elasticsearch.xpack.eql.parser;

import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({ "all", "warnings", "unchecked", "unused", "cast" })
class EqlBaseLexer extends Lexer {
    static {
        RuntimeMetaData.checkVersion("4.9.2", RuntimeMetaData.VERSION);
    }

    protected static final DFA[] _decisionToDFA;
    protected static final PredictionContextCache _sharedContextCache = new PredictionContextCache();
    public static final int AND = 1, ANY = 2, BY = 3, FALSE = 4, IN = 5, IN_INSENSITIVE = 6, JOIN = 7, LIKE = 8, LIKE_INSENSITIVE = 9,
        MAXSPAN = 10, NOT = 11, NULL = 12, OF = 13, OR = 14, REGEX = 15, REGEX_INSENSITIVE = 16, SAMPLE = 17, SEQUENCE = 18, TRUE = 19,
        UNTIL = 20, WHERE = 21, WITH = 22, SEQ = 23, ASGN = 24, EQ = 25, NEQ = 26, LT = 27, LTE = 28, GT = 29, GTE = 30, PLUS = 31, MINUS =
            32, ASTERISK = 33, SLASH = 34, PERCENT = 35, DOT = 36, COMMA = 37, LB = 38, RB = 39, LP = 40, RP = 41, PIPE = 42, OPTIONAL = 43,
        STRING = 44, INTEGER_VALUE = 45, DECIMAL_VALUE = 46, IDENTIFIER = 47, QUOTED_IDENTIFIER = 48, TILDE_IDENTIFIER = 49, LINE_COMMENT =
            50, BRACKETED_COMMENT = 51, WS = 52;
    public static String[] channelNames = { "DEFAULT_TOKEN_CHANNEL", "HIDDEN" };

    public static String[] modeNames = { "DEFAULT_MODE" };

    private static String[] makeRuleNames() {
        return new String[] {
            "AND",
            "ANY",
            "BY",
            "FALSE",
            "IN",
            "IN_INSENSITIVE",
            "JOIN",
            "LIKE",
            "LIKE_INSENSITIVE",
            "MAXSPAN",
            "NOT",
            "NULL",
            "OF",
            "OR",
            "REGEX",
            "REGEX_INSENSITIVE",
            "SAMPLE",
            "SEQUENCE",
            "TRUE",
            "UNTIL",
            "WHERE",
            "WITH",
            "SEQ",
            "ASGN",
            "EQ",
            "NEQ",
            "LT",
            "LTE",
            "GT",
            "GTE",
            "PLUS",
            "MINUS",
            "ASTERISK",
            "SLASH",
            "PERCENT",
            "DOT",
            "COMMA",
            "LB",
            "RB",
            "LP",
            "RP",
            "PIPE",
            "OPTIONAL",
            "STRING_ESCAPE",
            "HEX_DIGIT",
            "UNICODE_ESCAPE",
            "UNESCAPED_CHARS",
            "STRING",
            "INTEGER_VALUE",
            "DECIMAL_VALUE",
            "IDENTIFIER",
            "QUOTED_IDENTIFIER",
            "TILDE_IDENTIFIER",
            "EXPONENT",
            "DIGIT",
            "LETTER",
            "LINE_COMMENT",
            "BRACKETED_COMMENT",
            "WS" };
    }

    public static final String[] ruleNames = makeRuleNames();

    private static String[] makeLiteralNames() {
        return new String[] {
            null,
            "'and'",
            "'any'",
            "'by'",
            "'false'",
            "'in'",
            "'in~'",
            "'join'",
            "'like'",
            "'like~'",
            "'maxspan'",
            "'not'",
            "'null'",
            "'of'",
            "'or'",
            "'regex'",
            "'regex~'",
            "'sample'",
            "'sequence'",
            "'true'",
            "'until'",
            "'where'",
            "'with'",
            "':'",
            "'='",
            "'=='",
            "'!='",
            "'<'",
            "'<='",
            "'>'",
            "'>='",
            "'+'",
            "'-'",
            "'*'",
            "'/'",
            "'%'",
            "'.'",
            "','",
            "'['",
            "']'",
            "'('",
            "')'",
            "'|'",
            "'?'" };
    }

    private static final String[] _LITERAL_NAMES = makeLiteralNames();

    private static String[] makeSymbolicNames() {
        return new String[] {
            null,
            "AND",
            "ANY",
            "BY",
            "FALSE",
            "IN",
            "IN_INSENSITIVE",
            "JOIN",
            "LIKE",
            "LIKE_INSENSITIVE",
            "MAXSPAN",
            "NOT",
            "NULL",
            "OF",
            "OR",
            "REGEX",
            "REGEX_INSENSITIVE",
            "SAMPLE",
            "SEQUENCE",
            "TRUE",
            "UNTIL",
            "WHERE",
            "WITH",
            "SEQ",
            "ASGN",
            "EQ",
            "NEQ",
            "LT",
            "LTE",
            "GT",
            "GTE",
            "PLUS",
            "MINUS",
            "ASTERISK",
            "SLASH",
            "PERCENT",
            "DOT",
            "COMMA",
            "LB",
            "RB",
            "LP",
            "RP",
            "PIPE",
            "OPTIONAL",
            "STRING",
            "INTEGER_VALUE",
            "DECIMAL_VALUE",
            "IDENTIFIER",
            "QUOTED_IDENTIFIER",
            "TILDE_IDENTIFIER",
            "LINE_COMMENT",
            "BRACKETED_COMMENT",
            "WS" };
    }

    private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
    public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

    /**
     * @deprecated Use {@link #VOCABULARY} instead.
     */
    @Deprecated
    public static final String[] tokenNames;
    static {
        tokenNames = new String[_SYMBOLIC_NAMES.length];
        for (int i = 0; i < tokenNames.length; i++) {
            tokenNames[i] = VOCABULARY.getLiteralName(i);
            if (tokenNames[i] == null) {
                tokenNames[i] = VOCABULARY.getSymbolicName(i);
            }

            if (tokenNames[i] == null) {
                tokenNames[i] = "<INVALID>";
            }
        }
    }

    @Override
    @Deprecated
    public String[] getTokenNames() {
        return tokenNames;
    }

    @Override

    public Vocabulary getVocabulary() {
        return VOCABULARY;
    }

    public EqlBaseLexer(CharStream input) {
        super(input);
        _interp = new LexerATNSimulator(this, _ATN, _decisionToDFA, _sharedContextCache);
    }

    @Override
    public String getGrammarFileName() {
        return "EqlBase.g4";
    }

    @Override
    public String[] getRuleNames() {
        return ruleNames;
    }

    @Override
    public String getSerializedATN() {
        return _serializedATN;
    }

    @Override
    public String[] getChannelNames() {
        return channelNames;
    }

    @Override
    public String[] getModeNames() {
        return modeNames;
    }

    @Override
    public ATN getATN() {
        return _ATN;
    }

    public static final String _serializedATN = "\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\66\u01f4\b\1\4\2"
        + "\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"
        + "\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"
        + "\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"
        + "\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"
        + " \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"
        + "+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64"
        + "\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\3\2"
        + "\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3"
        + "\6\3\6\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\n\3\n"
        + "\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3"
        + "\f\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\17\3\17\3\17\3\20\3\20\3\20\3"
        + "\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3"
        + "\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3"
        + "\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3"
        + "\26\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\31\3\31\3\32\3\32\3\32\3\33\3"
        + "\33\3\33\3\34\3\34\3\35\3\35\3\35\3\36\3\36\3\37\3\37\3\37\3 \3 \3!\3"
        + "!\3\"\3\"\3#\3#\3$\3$\3%\3%\3&\3&\3\'\3\'\3(\3(\3)\3)\3*\3*\3+\3+\3,\3"
        + ",\3-\3-\3-\3.\3.\3/\3/\3/\3/\3/\6/\u0124\n/\r/\16/\u0125\3/\3/\3\60\3"
        + "\60\3\61\3\61\3\61\3\61\7\61\u0130\n\61\f\61\16\61\u0133\13\61\3\61\3"
        + "\61\3\61\3\61\3\61\3\61\7\61\u013b\n\61\f\61\16\61\u013e\13\61\3\61\3"
        + "\61\3\61\3\61\3\61\5\61\u0145\n\61\3\61\5\61\u0148\n\61\3\61\3\61\3\61"
        + "\3\61\7\61\u014e\n\61\f\61\16\61\u0151\13\61\3\61\3\61\3\61\3\61\3\61"
        + "\3\61\3\61\7\61\u015a\n\61\f\61\16\61\u015d\13\61\3\61\3\61\3\61\3\61"
        + "\3\61\3\61\3\61\7\61\u0166\n\61\f\61\16\61\u0169\13\61\3\61\5\61\u016c"
        + "\n\61\3\62\6\62\u016f\n\62\r\62\16\62\u0170\3\63\6\63\u0174\n\63\r\63"
        + "\16\63\u0175\3\63\3\63\7\63\u017a\n\63\f\63\16\63\u017d\13\63\3\63\3\63"
        + "\6\63\u0181\n\63\r\63\16\63\u0182\3\63\6\63\u0186\n\63\r\63\16\63\u0187"
        + "\3\63\3\63\7\63\u018c\n\63\f\63\16\63\u018f\13\63\5\63\u0191\n\63\3\63"
        + "\3\63\3\63\3\63\6\63\u0197\n\63\r\63\16\63\u0198\3\63\3\63\5\63\u019d"
        + "\n\63\3\64\3\64\5\64\u01a1\n\64\3\64\3\64\3\64\7\64\u01a6\n\64\f\64\16"
        + "\64\u01a9\13\64\3\65\3\65\3\65\3\65\7\65\u01af\n\65\f\65\16\65\u01b2\13"
        + "\65\3\65\3\65\3\66\3\66\3\66\3\66\7\66\u01ba\n\66\f\66\16\66\u01bd\13"
        + "\66\3\66\3\66\3\67\3\67\5\67\u01c3\n\67\3\67\6\67\u01c6\n\67\r\67\16\67"
        + "\u01c7\38\38\39\39\3:\3:\3:\3:\7:\u01d2\n:\f:\16:\u01d5\13:\3:\5:\u01d8"
        + "\n:\3:\5:\u01db\n:\3:\3:\3;\3;\3;\3;\3;\7;\u01e4\n;\f;\16;\u01e7\13;\3"
        + ";\3;\3;\3;\3;\3<\6<\u01ef\n<\r<\16<\u01f0\3<\3<\4\u013c\u01e5\2=\3\3\5"
        + "\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21"
        + "!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!"
        + "A\"C#E$G%I&K\'M(O)Q*S+U,W-Y\2[\2]\2_\2a.c/e\60g\61i\62k\63m\2o\2q\2s\64"
        + "u\65w\66\3\2\20\n\2$$))^^ddhhppttvv\5\2\62;CHch\6\2\f\f\17\17$$^^\4\2"
        + "\f\f\17\17\6\2\f\f\17\17))^^\5\2\f\f\17\17$$\5\2\f\f\17\17))\4\2BBaa\3"
        + "\2bb\4\2GGgg\4\2--//\3\2\62;\4\2C\\c|\5\2\13\f\17\17\"\"\2\u0219\2\3\3"
        + "\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2"
        + "\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3"
        + "\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2"
        + "%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61"
        + "\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2"
        + "\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I"
        + "\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2"
        + "\2\2\2W\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2"
        + "\2k\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\3y\3\2\2\2\5}\3\2\2\2\7\u0081"
        + "\3\2\2\2\t\u0084\3\2\2\2\13\u008a\3\2\2\2\r\u008d\3\2\2\2\17\u0091\3\2"
        + "\2\2\21\u0096\3\2\2\2\23\u009b\3\2\2\2\25\u00a1\3\2\2\2\27\u00a9\3\2\2"
        + "\2\31\u00ad\3\2\2\2\33\u00b2\3\2\2\2\35\u00b5\3\2\2\2\37\u00b8\3\2\2\2"
        + "!\u00be\3\2\2\2#\u00c5\3\2\2\2%\u00cc\3\2\2\2\'\u00d5\3\2\2\2)\u00da\3"
        + "\2\2\2+\u00e0\3\2\2\2-\u00e6\3\2\2\2/\u00eb\3\2\2\2\61\u00ed\3\2\2\2\63"
        + "\u00ef\3\2\2\2\65\u00f2\3\2\2\2\67\u00f5\3\2\2\29\u00f7\3\2\2\2;\u00fa"
        + "\3\2\2\2=\u00fc\3\2\2\2?\u00ff\3\2\2\2A\u0101\3\2\2\2C\u0103\3\2\2\2E"
        + "\u0105\3\2\2\2G\u0107\3\2\2\2I\u0109\3\2\2\2K\u010b\3\2\2\2M\u010d\3\2"
        + "\2\2O\u010f\3\2\2\2Q\u0111\3\2\2\2S\u0113\3\2\2\2U\u0115\3\2\2\2W\u0117"
        + "\3\2\2\2Y\u0119\3\2\2\2[\u011c\3\2\2\2]\u011e\3\2\2\2_\u0129\3\2\2\2a"
        + "\u016b\3\2\2\2c\u016e\3\2\2\2e\u019c\3\2\2\2g\u01a0\3\2\2\2i\u01aa\3\2"
        + "\2\2k\u01b5\3\2\2\2m\u01c0\3\2\2\2o\u01c9\3\2\2\2q\u01cb\3\2\2\2s\u01cd"
        + "\3\2\2\2u\u01de\3\2\2\2w\u01ee\3\2\2\2yz\7c\2\2z{\7p\2\2{|\7f\2\2|\4\3"
        + "\2\2\2}~\7c\2\2~\177\7p\2\2\177\u0080\7{\2\2\u0080\6\3\2\2\2\u0081\u0082"
        + "\7d\2\2\u0082\u0083\7{\2\2\u0083\b\3\2\2\2\u0084\u0085\7h\2\2\u0085\u0086"
        + "\7c\2\2\u0086\u0087\7n\2\2\u0087\u0088\7u\2\2\u0088\u0089\7g\2\2\u0089"
        + "\n\3\2\2\2\u008a\u008b\7k\2\2\u008b\u008c\7p\2\2\u008c\f\3\2\2\2\u008d"
        + "\u008e\7k\2\2\u008e\u008f\7p\2\2\u008f\u0090\7\u0080\2\2\u0090\16\3\2"
        + "\2\2\u0091\u0092\7l\2\2\u0092\u0093\7q\2\2\u0093\u0094\7k\2\2\u0094\u0095"
        + "\7p\2\2\u0095\20\3\2\2\2\u0096\u0097\7n\2\2\u0097\u0098\7k\2\2\u0098\u0099"
        + "\7m\2\2\u0099\u009a\7g\2\2\u009a\22\3\2\2\2\u009b\u009c\7n\2\2\u009c\u009d"
        + "\7k\2\2\u009d\u009e\7m\2\2\u009e\u009f\7g\2\2\u009f\u00a0\7\u0080\2\2"
        + "\u00a0\24\3\2\2\2\u00a1\u00a2\7o\2\2\u00a2\u00a3\7c\2\2\u00a3\u00a4\7"
        + "z\2\2\u00a4\u00a5\7u\2\2\u00a5\u00a6\7r\2\2\u00a6\u00a7\7c\2\2\u00a7\u00a8"
        + "\7p\2\2\u00a8\26\3\2\2\2\u00a9\u00aa\7p\2\2\u00aa\u00ab\7q\2\2\u00ab\u00ac"
        + "\7v\2\2\u00ac\30\3\2\2\2\u00ad\u00ae\7p\2\2\u00ae\u00af\7w\2\2\u00af\u00b0"
        + "\7n\2\2\u00b0\u00b1\7n\2\2\u00b1\32\3\2\2\2\u00b2\u00b3\7q\2\2\u00b3\u00b4"
        + "\7h\2\2\u00b4\34\3\2\2\2\u00b5\u00b6\7q\2\2\u00b6\u00b7\7t\2\2\u00b7\36"
        + "\3\2\2\2\u00b8\u00b9\7t\2\2\u00b9\u00ba\7g\2\2\u00ba\u00bb\7i\2\2\u00bb"
        + "\u00bc\7g\2\2\u00bc\u00bd\7z\2\2\u00bd \3\2\2\2\u00be\u00bf\7t\2\2\u00bf"
        + "\u00c0\7g\2\2\u00c0\u00c1\7i\2\2\u00c1\u00c2\7g\2\2\u00c2\u00c3\7z\2\2"
        + "\u00c3\u00c4\7\u0080\2\2\u00c4\"\3\2\2\2\u00c5\u00c6\7u\2\2\u00c6\u00c7"
        + "\7c\2\2\u00c7\u00c8\7o\2\2\u00c8\u00c9\7r\2\2\u00c9\u00ca\7n\2\2\u00ca"
        + "\u00cb\7g\2\2\u00cb$\3\2\2\2\u00cc\u00cd\7u\2\2\u00cd\u00ce\7g\2\2\u00ce"
        + "\u00cf\7s\2\2\u00cf\u00d0\7w\2\2\u00d0\u00d1\7g\2\2\u00d1\u00d2\7p\2\2"
        + "\u00d2\u00d3\7e\2\2\u00d3\u00d4\7g\2\2\u00d4&\3\2\2\2\u00d5\u00d6\7v\2"
        + "\2\u00d6\u00d7\7t\2\2\u00d7\u00d8\7w\2\2\u00d8\u00d9\7g\2\2\u00d9(\3\2"
        + "\2\2\u00da\u00db\7w\2\2\u00db\u00dc\7p\2\2\u00dc\u00dd\7v\2\2\u00dd\u00de"
        + "\7k\2\2\u00de\u00df\7n\2\2\u00df*\3\2\2\2\u00e0\u00e1\7y\2\2\u00e1\u00e2"
        + "\7j\2\2\u00e2\u00e3\7g\2\2\u00e3\u00e4\7t\2\2\u00e4\u00e5\7g\2\2\u00e5"
        + ",\3\2\2\2\u00e6\u00e7\7y\2\2\u00e7\u00e8\7k\2\2\u00e8\u00e9\7v\2\2\u00e9"
        + "\u00ea\7j\2\2\u00ea.\3\2\2\2\u00eb\u00ec\7<\2\2\u00ec\60\3\2\2\2\u00ed"
        + "\u00ee\7?\2\2\u00ee\62\3\2\2\2\u00ef\u00f0\7?\2\2\u00f0\u00f1\7?\2\2\u00f1"
        + "\64\3\2\2\2\u00f2\u00f3\7#\2\2\u00f3\u00f4\7?\2\2\u00f4\66\3\2\2\2\u00f5"
        + "\u00f6\7>\2\2\u00f68\3\2\2\2\u00f7\u00f8\7>\2\2\u00f8\u00f9\7?\2\2\u00f9"
        + ":\3\2\2\2\u00fa\u00fb\7@\2\2\u00fb<\3\2\2\2\u00fc\u00fd\7@\2\2\u00fd\u00fe"
        + "\7?\2\2\u00fe>\3\2\2\2\u00ff\u0100\7-\2\2\u0100@\3\2\2\2\u0101\u0102\7"
        + "/\2\2\u0102B\3\2\2\2\u0103\u0104\7,\2\2\u0104D\3\2\2\2\u0105\u0106\7\61"
        + "\2\2\u0106F\3\2\2\2\u0107\u0108\7\'\2\2\u0108H\3\2\2\2\u0109\u010a\7\60"
        + "\2\2\u010aJ\3\2\2\2\u010b\u010c\7.\2\2\u010cL\3\2\2\2\u010d\u010e\7]\2"
        + "\2\u010eN\3\2\2\2\u010f\u0110\7_\2\2\u0110P\3\2\2\2\u0111\u0112\7*\2\2"
        + "\u0112R\3\2\2\2\u0113\u0114\7+\2\2\u0114T\3\2\2\2\u0115\u0116\7~\2\2\u0116"
        + "V\3\2\2\2\u0117\u0118\7A\2\2\u0118X\3\2\2\2\u0119\u011a\7^\2\2\u011a\u011b"
        + "\t\2\2\2\u011bZ\3\2\2\2\u011c\u011d\t\3\2\2\u011d\\\3\2\2\2\u011e\u011f"
        + "\7^\2\2\u011f\u0120\7w\2\2\u0120\u0121\3\2\2\2\u0121\u0123\7}\2\2\u0122"
        + "\u0124\5[.\2\u0123\u0122\3\2\2\2\u0124\u0125\3\2\2\2\u0125\u0123\3\2\2"
        + "\2\u0125\u0126\3\2\2\2\u0126\u0127\3\2\2\2\u0127\u0128\7\177\2\2\u0128"
        + "^\3\2\2\2\u0129\u012a\n\4\2\2\u012a`\3\2\2\2\u012b\u0131\7$\2\2\u012c"
        + "\u0130\5Y-\2\u012d\u0130\5]/\2\u012e\u0130\5_\60\2\u012f\u012c\3\2\2\2"
        + "\u012f\u012d\3\2\2\2\u012f\u012e\3\2\2\2\u0130\u0133\3\2\2\2\u0131\u012f"
        + "\3\2\2\2\u0131\u0132\3\2\2\2\u0132\u0134\3\2\2\2\u0133\u0131\3\2\2\2\u0134"
        + "\u016c\7$\2\2\u0135\u0136\7$\2\2\u0136\u0137\7$\2\2\u0137\u0138\7$\2\2"
        + "\u0138\u013c\3\2\2\2\u0139\u013b\n\5\2\2\u013a\u0139\3\2\2\2\u013b\u013e"
        + "\3\2\2\2\u013c\u013d\3\2\2\2\u013c\u013a\3\2\2\2\u013d\u013f\3\2\2\2\u013e"
        + "\u013c\3\2\2\2\u013f\u0140\7$\2\2\u0140\u0141\7$\2\2\u0141\u0142\7$\2"
        + "\2\u0142\u0144\3\2\2\2\u0143\u0145\7$\2\2\u0144\u0143\3\2\2\2\u0144\u0145"
        + "\3\2\2\2\u0145\u0147\3\2\2\2\u0146\u0148\7$\2\2\u0147\u0146\3\2\2\2\u0147"
        + "\u0148\3\2\2\2\u0148\u016c\3\2\2\2\u0149\u014f\7)\2\2\u014a\u014b\7^\2"
        + "\2\u014b\u014e\t\2\2\2\u014c\u014e\n\6\2\2\u014d\u014a\3\2\2\2\u014d\u014c"
        + "\3\2\2\2\u014e\u0151\3\2\2\2\u014f\u014d\3\2\2\2\u014f\u0150\3\2\2\2\u0150"
        + "\u0152\3\2\2\2\u0151\u014f\3\2\2\2\u0152\u016c\7)\2\2\u0153\u0154\7A\2"
        + "\2\u0154\u0155\7$\2\2\u0155\u015b\3\2\2\2\u0156\u0157\7^\2\2\u0157\u015a"
        + "\7$\2\2\u0158\u015a\n\7\2\2\u0159\u0156\3\2\2\2\u0159\u0158\3\2\2\2\u015a"
        + "\u015d\3\2\2\2\u015b\u0159\3\2\2\2\u015b\u015c\3\2\2\2\u015c\u015e\3\2"
        + "\2\2\u015d\u015b\3\2\2\2\u015e\u016c\7$\2\2\u015f\u0160\7A\2\2\u0160\u0161"
        + "\7)\2\2\u0161\u0167\3\2\2\2\u0162\u0163\7^\2\2\u0163\u0166\7)\2\2\u0164"
        + "\u0166\n\b\2\2\u0165\u0162\3\2\2\2\u0165\u0164\3\2\2\2\u0166\u0169\3\2"
        + "\2\2\u0167\u0165\3\2\2\2\u0167\u0168\3\2\2\2\u0168\u016a\3\2\2\2\u0169"
        + "\u0167\3\2\2\2\u016a\u016c\7)\2\2\u016b\u012b\3\2\2\2\u016b\u0135\3\2"
        + "\2\2\u016b\u0149\3\2\2\2\u016b\u0153\3\2\2\2\u016b\u015f\3\2\2\2\u016c"
        + "b\3\2\2\2\u016d\u016f\5o8\2\u016e\u016d\3\2\2\2\u016f\u0170\3\2\2\2\u0170"
        + "\u016e\3\2\2\2\u0170\u0171\3\2\2\2\u0171d\3\2\2\2\u0172\u0174\5o8\2\u0173"
        + "\u0172\3\2\2\2\u0174\u0175\3\2\2\2\u0175\u0173\3\2\2\2\u0175\u0176\3\2"
        + "\2\2\u0176\u0177\3\2\2\2\u0177\u017b\5I%\2\u0178\u017a\5o8\2\u0179\u0178"
        + "\3\2\2\2\u017a\u017d\3\2\2\2\u017b\u0179\3\2\2\2\u017b\u017c\3\2\2\2\u017c"
        + "\u019d\3\2\2\2\u017d\u017b\3\2\2\2\u017e\u0180\5I%\2\u017f\u0181\5o8\2"
        + "\u0180\u017f\3\2\2\2\u0181\u0182\3\2\2\2\u0182\u0180\3\2\2\2\u0182\u0183"
        + "\3\2\2\2\u0183\u019d\3\2\2\2\u0184\u0186\5o8\2\u0185\u0184\3\2\2\2\u0186"
        + "\u0187\3\2\2\2\u0187\u0185\3\2\2\2\u0187\u0188\3\2\2\2\u0188\u0190\3\2"
        + "\2\2\u0189\u018d\5I%\2\u018a\u018c\5o8\2\u018b\u018a\3\2\2\2\u018c\u018f"
        + "\3\2\2\2\u018d\u018b\3\2\2\2\u018d\u018e\3\2\2\2\u018e\u0191\3\2\2\2\u018f"
        + "\u018d\3\2\2\2\u0190\u0189\3\2\2\2\u0190\u0191\3\2\2\2\u0191\u0192\3\2"
        + "\2\2\u0192\u0193\5m\67\2\u0193\u019d\3\2\2\2\u0194\u0196\5I%\2\u0195\u0197"
        + "\5o8\2\u0196\u0195\3\2\2\2\u0197\u0198\3\2\2\2\u0198\u0196\3\2\2\2\u0198"
        + "\u0199\3\2\2\2\u0199\u019a\3\2\2\2\u019a\u019b\5m\67\2\u019b\u019d\3\2"
        + "\2\2\u019c\u0173\3\2\2\2\u019c\u017e\3\2\2\2\u019c\u0185\3\2\2\2\u019c"
        + "\u0194\3\2\2\2\u019df\3\2\2\2\u019e\u01a1\5q9\2\u019f\u01a1\t\t\2\2\u01a0"
        + "\u019e\3\2\2\2\u01a0\u019f\3\2\2\2\u01a1\u01a7\3\2\2\2\u01a2\u01a6\5q"
        + "9\2\u01a3\u01a6\5o8\2\u01a4\u01a6\7a\2\2\u01a5\u01a2\3\2\2\2\u01a5\u01a3"
        + "\3\2\2\2\u01a5\u01a4\3\2\2\2\u01a6\u01a9\3\2\2\2\u01a7\u01a5\3\2\2\2\u01a7"
        + "\u01a8\3\2\2\2\u01a8h\3\2\2\2\u01a9\u01a7\3\2\2\2\u01aa\u01b0\7b\2\2\u01ab"
        + "\u01af\n\n\2\2\u01ac\u01ad\7b\2\2\u01ad\u01af\7b\2\2\u01ae\u01ab\3\2\2"
        + "\2\u01ae\u01ac\3\2\2\2\u01af\u01b2\3\2\2\2\u01b0\u01ae\3\2\2\2\u01b0\u01b1"
        + "\3\2\2\2\u01b1\u01b3\3\2\2\2\u01b2\u01b0\3\2\2\2\u01b3\u01b4\7b\2\2\u01b4"
        + "j\3\2\2\2\u01b5\u01bb\5q9\2\u01b6\u01ba\5q9\2\u01b7\u01ba\5o8\2\u01b8"
        + "\u01ba\7a\2\2\u01b9\u01b6\3\2\2\2\u01b9\u01b7\3\2\2\2\u01b9\u01b8\3\2"
        + "\2\2\u01ba\u01bd\3\2\2\2\u01bb\u01b9\3\2\2\2\u01bb\u01bc\3\2\2\2\u01bc"
        + "\u01be\3\2\2\2\u01bd\u01bb\3\2\2\2\u01be\u01bf\7\u0080\2\2\u01bfl\3\2"
        + "\2\2\u01c0\u01c2\t\13\2\2\u01c1\u01c3\t\f\2\2\u01c2\u01c1\3\2\2\2\u01c2"
        + "\u01c3\3\2\2\2\u01c3\u01c5\3\2\2\2\u01c4\u01c6\5o8\2\u01c5\u01c4\3\2\2"
        + "\2\u01c6\u01c7\3\2\2\2\u01c7\u01c5\3\2\2\2\u01c7\u01c8\3\2\2\2\u01c8n"
        + "\3\2\2\2\u01c9\u01ca\t\r\2\2\u01cap\3\2\2\2\u01cb\u01cc\t\16\2\2\u01cc"
        + "r\3\2\2\2\u01cd\u01ce\7\61\2\2\u01ce\u01cf\7\61\2\2\u01cf\u01d3\3\2\2"
        + "\2\u01d0\u01d2\n\5\2\2\u01d1\u01d0\3\2\2\2\u01d2\u01d5\3\2\2\2\u01d3\u01d1"
        + "\3\2\2\2\u01d3\u01d4\3\2\2\2\u01d4\u01d7\3\2\2\2\u01d5\u01d3\3\2\2\2\u01d6"
        + "\u01d8\7\17\2\2\u01d7\u01d6\3\2\2\2\u01d7\u01d8\3\2\2\2\u01d8\u01da\3"
        + "\2\2\2\u01d9\u01db\7\f\2\2\u01da\u01d9\3\2\2\2\u01da\u01db\3\2\2\2\u01db"
        + "\u01dc\3\2\2\2\u01dc\u01dd\b:\2\2\u01ddt\3\2\2\2\u01de\u01df\7\61\2\2"
        + "\u01df\u01e0\7,\2\2\u01e0\u01e5\3\2\2\2\u01e1\u01e4\5u;\2\u01e2\u01e4"
        + "\13\2\2\2\u01e3\u01e1\3\2\2\2\u01e3\u01e2\3\2\2\2\u01e4\u01e7\3\2\2\2"
        + "\u01e5\u01e6\3\2\2\2\u01e5\u01e3\3\2\2\2\u01e6\u01e8\3\2\2\2\u01e7\u01e5"
        + "\3\2\2\2\u01e8\u01e9\7,\2\2\u01e9\u01ea\7\61\2\2\u01ea\u01eb\3\2\2\2\u01eb"
        + "\u01ec\b;\2\2\u01ecv\3\2\2\2\u01ed\u01ef\t\17\2\2\u01ee\u01ed\3\2\2\2"
        + "\u01ef\u01f0\3\2\2\2\u01f0\u01ee\3\2\2\2\u01f0\u01f1\3\2\2\2\u01f1\u01f2"
        + "\3\2\2\2\u01f2\u01f3\b<\2\2\u01f3x\3\2\2\2(\2\u0125\u012f\u0131\u013c"
        + "\u0144\u0147\u014d\u014f\u0159\u015b\u0165\u0167\u016b\u0170\u0175\u017b"
        + "\u0182\u0187\u018d\u0190\u0198\u019c\u01a0\u01a5\u01a7\u01ae\u01b0\u01b9"
        + "\u01bb\u01c2\u01c7\u01d3\u01d7\u01da\u01e3\u01e5\u01f0\3\2\3\2";
    public static final ATN _ATN = new ATNDeserializer().deserialize(_serializedATN.toCharArray());
    static {
        _decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
        for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
            _decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
        }
    }
}
