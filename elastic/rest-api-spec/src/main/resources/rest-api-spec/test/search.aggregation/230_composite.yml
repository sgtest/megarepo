---
setup:
  - do:
        indices.create:
          index: test
          body:
              mappings:
                properties:
                  date:
                    type: date
                  keyword:
                    type: keyword
                  long:
                    type: long
                  nested:
                    type: nested
                    properties:
                      nested_long:
                        type: long

  - do:
        indices.create:
          index: other
          body:
            mappings:
              properties:
                date:
                  type: date
                long:
                  type: long
                nested:
                  type: nested
                  properties:
                    nested_long:
                      type: long

  - do:
      index:
        index: test
        id:    1
        body:  { "keyword": "foo", "long": [10, 20], "nested": [{"nested_long": 10}, {"nested_long": 20}] }

  - do:
      index:
        index: test
        id:    2
        body:  { "keyword": ["foo", "bar"] }

  - do:
      index:
        index: test
        id:    3
        body:  { "keyword": "bar", "long": [100, 0], "nested": [{"nested_long": 10}, {"nested_long": 0}] }

  - do:
      index:
        index: test
        id:    4
        body:  { "keyword": "bar", "long": [1000, 0], "nested": [{"nested_long": 1000}, {"nested_long": 20}] }

  - do:
      index:
        index: test
        id:    5
        body:  { "date": "2017-10-20T03:08:45" }

  - do:
      index:
        index: test
        id:    6
        body:  { "date": "2017-10-21T07:00:00" }

  - do:
      index:
        index: other
        id:    0
        body:  { "date": "2017-10-20T03:08:45" }

  - do:
      indices.refresh:
        index: [test, other]

---
"Simple Composite aggregation":
  - do:
      search:
        rest_total_hits_as_int: true
        index: test
        body:
          aggregations:
            test:
              composite:
                sources: [
                  "kw": {
                    "terms": {
                      "field": "keyword"
                    }
                  }
                ]

  - match: {hits.total: 6}
  - length: { aggregations.test.buckets: 2 }
  - match: { aggregations.test.buckets.0.key.kw: "bar" }
  - match: { aggregations.test.buckets.0.doc_count: 3 }
  - match: { aggregations.test.buckets.1.key.kw: "foo" }
  - match: { aggregations.test.buckets.1.doc_count: 2 }

---
"Nested Composite aggregation":
  - do:
      search:
        rest_total_hits_as_int: true
        index: test
        body:
          aggregations:
            test:
              composite:
                sources: [
                  {
                    "long": {
                      "terms": {
                        "field": "long"
                      }
                    }
                  },
                  {
                    "kw": {
                      "terms": {
                        "field": "keyword"
                      }
                    }
                  }
                ]

  - match: {hits.total: 6}
  - length: { aggregations.test.buckets: 5 }
  - match: { aggregations.test.buckets.0.key.long: 0}
  - match: { aggregations.test.buckets.0.key.kw: "bar" }
  - match: { aggregations.test.buckets.0.doc_count: 2 }
  - match: { aggregations.test.buckets.1.key.long: 10 }
  - match: { aggregations.test.buckets.1.key.kw: "foo"}
  - match: { aggregations.test.buckets.1.doc_count: 1 }
  - match: { aggregations.test.buckets.2.key.long: 20 }
  - match: { aggregations.test.buckets.2.key.kw: "foo" }
  - match: { aggregations.test.buckets.2.doc_count: 1 }
  - match: { aggregations.test.buckets.3.key.long: 100}
  - match: { aggregations.test.buckets.3.key.kw: "bar" }
  - match: { aggregations.test.buckets.3.doc_count: 1 }
  - match: { aggregations.test.buckets.4.key.long: 1000 }
  - match: { aggregations.test.buckets.4.key.kw: "bar" }
  - match: { aggregations.test.buckets.4.doc_count: 1 }

---
"Aggregate After":
  - do:
      search:
        rest_total_hits_as_int: true
        index: test
        body:
          aggregations:
            test:
              composite:
                sources: [
                  {
                    "long": {
                      "terms": {
                        "field": "long"
                      }
                    }
                  },
                  {
                    "kw": {
                      "terms": {
                        "field": "keyword"
                      }
                    }
                  }
                ]
                after: { "long": 20, "kw": "foo" }

  - match: {hits.total: 6}
  - length: { aggregations.test.buckets: 2 }
  - match: { aggregations.test.buckets.0.key.long: 100 }
  - match: { aggregations.test.buckets.0.key.kw: "bar" }
  - match: { aggregations.test.buckets.0.doc_count: 1 }
  - match: { aggregations.test.buckets.1.key.long: 1000 }
  - match: { aggregations.test.buckets.1.key.kw: "bar" }
  - match: { aggregations.test.buckets.1.doc_count: 1 }

---
"Aggregate After Missing":
  - do:
      search:
        rest_total_hits_as_int: true
        index: test
        body:
          aggregations:
            test:
              composite:
                sources: [
                  {
                    "kw": {
                      "terms": {
                        "field": "keyword"
                      }
                    }
                  }
                ]
                after: { "kw": "delta" }

  - match: {hits.total: 6}
  - length: { aggregations.test.buckets: 1 }
  - match: { aggregations.test.buckets.0.key.kw: "foo" }
  - match: { aggregations.test.buckets.0.doc_count: 2 }

---
"Invalid Composite aggregation":
  - do:
      catch:      /\[composite\] aggregation cannot be used with a parent aggregation/
      search:
        rest_total_hits_as_int: true
        index: test
        body:
          aggregations:
            test:
              terms:
                field: long
              aggs:
                nested:
                  composite:
                    sources: [
                      {
                        "kw": {
                          "terms": {
                            "field": "keyword"
                          }
                        }
                      }
                    ]

---
"Composite aggregation with format":
  - do:
      search:
        rest_total_hits_as_int: true
        index: test
        body:
          aggregations:
            test:
              composite:
                sources: [
                  {
                    "date": {
                      "date_histogram": {
                        "field": "date",
                        "interval": "1d",
                        "format": "yyyy-MM-dd"
                      }
                    }
                  }
                ]

  - match: {hits.total: 6}
  - length: { aggregations.test.buckets: 2 }
  - match: { aggregations.test.buckets.0.key.date: "2017-10-20" }
  - match: { aggregations.test.buckets.0.doc_count: 1 }
  - match: { aggregations.test.buckets.1.key.date: "2017-10-21" }
  - match: { aggregations.test.buckets.1.doc_count: 1 }

  - do:
        search:
          rest_total_hits_as_int: true
          index: test
          body:
            aggregations:
              test:
                composite:
                  after: {
                    date: "2017-10-20"
                  }
                  sources: [
                    {
                      "date": {
                        "date_histogram": {
                          "field": "date",
                          "interval": "1d",
                          "format": "yyyy-MM-dd"
                        }
                      }
                    }
                  ]

  - match: {hits.total: 6}
  - length: { aggregations.test.buckets: 1 }
  - match: { aggregations.test.buckets.0.key.date: "2017-10-21" }
  - match: { aggregations.test.buckets.0.doc_count: 1 }

---
"Composite aggregation with after_key in the response":
  - do:
        search:
          rest_total_hits_as_int: true
          index: test
          body:
            aggregations:
              test:
                composite:
                  sources: [
                    {
                      "keyword": {
                        "terms": {
                          "field": "keyword",
                        }
                      }
                    }
                  ]

  - match: {hits.total: 6}
  - length: { aggregations.test.buckets: 2 }
  - length: { aggregations.test.after_key: 1 }
  - match: { aggregations.test.after_key.keyword:  "foo" }

---
"Composite aggregation and array size":
  - do:
        catch: /.*Trying to create too many buckets.*/
        search:
          rest_total_hits_as_int: true
          index: test
          body:
            aggregations:
              test:
                composite:
                  size: 1000000000
                  sources: [
                    {
                      "keyword": {
                        "terms": {
                          "field": "keyword",
                        }
                      }
                    }
                  ]

---
"Composite aggregation with nested parent":
  - do:
        search:
          rest_total_hits_as_int: true
          index: test
          body:
            aggregations:
              1:
                nested:
                  path: nested
                aggs:
                  2:
                    composite:
                      sources: [
                        "nested": {
                          "terms": {
                            "field": "nested.nested_long"
                        }
                      }
                    ]

  - match: {hits.total: 6}
  - length: { aggregations.1.2.buckets: 4 }
  - match: { aggregations.1.2.buckets.0.key.nested: 0 }
  - match: { aggregations.1.2.buckets.0.doc_count:  1 }
  - match: { aggregations.1.2.buckets.1.key.nested: 10 }
  - match: { aggregations.1.2.buckets.1.doc_count:  2 }
  - match: { aggregations.1.2.buckets.2.key.nested: 20 }
  - match: { aggregations.1.2.buckets.2.doc_count:  2 }
  - match: { aggregations.1.2.buckets.3.key.nested: 1000 }
  - match: { aggregations.1.2.buckets.3.doc_count:  1 }

  - do:
      search:
        rest_total_hits_as_int: true
        index: test
        body:
          aggregations:
            1:
              nested:
                path: nested
              aggs:
                2:
                  composite:
                    after: { "nested": 10 }
                    sources: [
                      "nested": {
                        "terms": {
                          "field": "nested.nested_long"
                        }
                      }
                    ]

  - match: {hits.total: 6}
  - length: { aggregations.1.2.buckets: 2 }
  - match: { aggregations.1.2.buckets.0.key.nested: 20 }
  - match: { aggregations.1.2.buckets.0.doc_count:  2 }
  - match: { aggregations.1.2.buckets.1.key.nested: 1000 }
  - match: { aggregations.1.2.buckets.1.doc_count:  1 }

---
"Composite aggregation with unmapped field":
  - skip:
      version: " - 7.99.99"
      reason:  starting in 8.0 the composite aggregation handles unmapped fields as keywords

  - do:
      search:
        rest_total_hits_as_int: true
        index: [test, other]
        body:
          aggregations:
            test:
              composite:
                sources: [
                {
                  "long": {
                    "terms": {
                      "field": "long"
                    }
                  }
                },
                {
                  "kw": {
                    "terms": {
                      "field": "keyword"
                    }
                  }
                }
                ]

  - match: {hits.total: 7}
  - length: { aggregations.test.buckets: 5 }
  - match: { aggregations.test.buckets.0.key.long: 0}
  - match: { aggregations.test.buckets.0.key.kw: "bar" }
  - match: { aggregations.test.buckets.0.doc_count: 2 }
  - match: { aggregations.test.buckets.1.key.long: 10 }
  - match: { aggregations.test.buckets.1.key.kw: "foo"}
  - match: { aggregations.test.buckets.1.doc_count: 1 }
  - match: { aggregations.test.buckets.2.key.long: 20 }
  - match: { aggregations.test.buckets.2.key.kw: "foo" }
  - match: { aggregations.test.buckets.2.doc_count: 1 }
  - match: { aggregations.test.buckets.3.key.long: 100}
  - match: { aggregations.test.buckets.3.key.kw: "bar" }
  - match: { aggregations.test.buckets.3.doc_count: 1 }
  - match: { aggregations.test.buckets.4.key.long: 1000 }
  - match: { aggregations.test.buckets.4.key.kw: "bar" }
  - match: { aggregations.test.buckets.4.doc_count: 1 }

  - do:
      search:
        rest_total_hits_as_int: true
        index: [test, other]
        body:
          aggregations:
            test:
              composite:
                after: { "long": 100, "kw": "bar" }
                sources: [
                {
                  "long": {
                    "terms": {
                      "field": "long"
                    }
                  }
                },
                {
                  "kw": {
                    "terms": {
                      "field": "keyword"
                    }
                  }
                }
                ]

  - match: {hits.total: 7}
  - length: { aggregations.test.buckets: 1 }
  - match: { aggregations.test.buckets.0.key.long: 1000 }
  - match: { aggregations.test.buckets.0.key.kw: "bar" }
  - match: { aggregations.test.buckets.0.doc_count: 1 }

---
"Missing source":
  - skip:
      version: " - 7.0.99"
      reason:  null/empty sources disallowed in 7.1

  - do:
        catch: /Composite \[sources\] cannot be null or empty/
        search:
          rest_total_hits_as_int: true
          index: test
          body:
            aggregations:
              test:
                composite:
                  sources: []

  - do:
        catch: /Required \[sources\]/
        search:
          rest_total_hits_as_int: true
          index: test
          body:
            aggregations:
              test:
                composite:
                  size: 1


---
"Duplicate sources":
  - skip:
      version: " - 7.0.99"
      reason:  duplicate names disallowed in 7.1

  - do:
        catch: /Composite source names must be unique, found duplicates[:] \[keyword\]/
        search:
          rest_total_hits_as_int: true
          index: test
          body:
            aggregations:
              test:
                composite:
                  sources: [
                    {
                      "keyword": {
                        "terms": {
                          "field": "keyword",
                        }
                      }
                    },
                    {
                      "keyword": {
                        "terms": {
                          "field": "keyword",
                        }
                      }
                    }
                  ]

