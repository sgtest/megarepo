/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */

import org.elasticsearch.gradle.Version
import org.elasticsearch.gradle.VersionProperties
import org.elasticsearch.gradle.info.BuildParams
import org.elasticsearch.gradle.testclusters.StandaloneRestIntegTestTask

apply plugin: 'elasticsearch.testclusters'
apply plugin: 'elasticsearch.standalone-test'
apply from : "$rootDir/gradle/bwc-test.gradle"
apply plugin: 'elasticsearch.rest-resources'

restResources {
  restTests {
    includeCore '*'
  }
}

for (Version bwcVersion : BuildParams.bwcVersions.wireCompatible) {
  if (bwcVersion == VersionProperties.getElasticsearchVersion()) {
    // Not really a mixed cluster
    continue;
  }

  String baseName = "v${bwcVersion}"

  /* This project runs the core REST tests against a 4 node cluster where two of
     the nodes has a different minor.  */
  testClusters {
    "${baseName}" {
      versions = [bwcVersion.toString(), project.version]
      numberOfNodes = 4

      setting 'path.repo', "${buildDir}/cluster/shared/repo/${baseName}"
    }
  }

  tasks.register("${baseName}#mixedClusterTest", StandaloneRestIntegTestTask) {
    useCluster testClusters."${baseName}"
    mustRunAfter("precommit")
    doFirst {
      delete("${buildDir}/cluster/shared/repo/${baseName}")
      // Getting the endpoints causes a wait for the cluster
      println "Test cluster endpoints are: ${-> testClusters."${baseName}".allHttpSocketURI.join(",")}"
      println "Upgrading one node to create a mixed cluster"
      testClusters."${baseName}".nextNodeToNextVersion()
      // Getting the endpoints causes a wait for the cluster
      println "Upgrade complete, endpoints are: ${-> testClusters."${baseName}".allHttpSocketURI.join(",")}"
      println "Upgrading another node to create a mixed cluster"
      testClusters."${baseName}".nextNodeToNextVersion()

      nonInputProperties.systemProperty('tests.rest.cluster', "${-> testClusters."${baseName}".allHttpSocketURI.join(",")}")
      nonInputProperties.systemProperty('tests.clustername', "${-> testClusters."${baseName}".getName()}")
    }
    systemProperty 'tests.path.repo', "${buildDir}/cluster/shared/repo/${baseName}"
    onlyIf { project.bwc_tests_enabled }
  }

  tasks.register(bwcTaskName(bwcVersion)) {
    dependsOn "${baseName}#mixedClusterTest"
  }
}
