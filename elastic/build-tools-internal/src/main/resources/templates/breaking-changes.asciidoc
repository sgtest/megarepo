[[migrating-${majorDotMinor}]]
== Migrating to ${majorDotMinor}
++++
<titleabbrev>${majorDotMinor}</titleabbrev>
++++

This section discusses the changes that you need to be aware of when migrating
your application to {es} ${majorDotMinor}.

See also <<release-highlights>> and <<es-release-notes>>.
<% if (isElasticsearchSnapshot) { %>
coming::[${version}]
<% } %>
//NOTE: The notable-breaking-changes tagged regions are re-used in the
//Installation and Upgrade Guide
<% if (breakingIncludeList.isEmpty() == false) { %>
[discrete]
[[breaking-changes-${majorDotMinor}]]
=== Breaking changes

The following changes in {es} ${majorDotMinor} might affect your applications
and prevent them from operating normally.
Before upgrading to ${majorDotMinor} review these changes and take the described steps
to mitigate the impact.

NOTE: Breaking changes introduced in minor versions are
normally limited to security and bug fixes.
Significant changes in behavior are deprecated in a minor release and
the old behavior is supported until the next major release.
To find out if you are using any deprecated functionality,
enable <<deprecation-logging, deprecation logging>>.

<%
  for (include in breakingIncludeList) {
      print "include::migrate_${version.major}_${version.minor}/${include}.asciidoc[]\n";
  }

}

if (deprecationsByArea.empty == false) { %>

[discrete]
[[deprecated-${majorDotMinor}]]
=== Deprecations

The following functionality has been deprecated in {es} ${majorDotMinor}
and will be removed in ${nextMajor}.
While this won't have an immediate impact on your applications,
we strongly encourage you take the described steps to update your code
after upgrading to ${majorDotMinor}.

NOTE: Significant changes in behavior are deprecated in a minor release and
the old behavior is supported until the next major release.
To find out if you are using any deprecated functionality,
enable <<deprecation-logging, deprecation logging>>."

<%
deprecationsByArea.eachWithIndex { area, deprecations, i ->
    print "\n[discrete]\n"
    print "[[deprecations_${majorMinor}_${ area.toLowerCase().replaceAll("[^a-z0-9]+", "_") }]]"
    print "==== ${area} deprecations"

    for (deprecation in deprecations) { %>

[[${ deprecation.anchor }]]
.${deprecation.title}
[%collapsible]
====
*Details* +
${deprecation.body.trim()}
====
<%
}
}
} %>
