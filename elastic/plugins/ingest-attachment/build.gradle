import org.elasticsearch.gradle.info.BuildParams

/*
 * Licensed to Elasticsearch under one or more contributor
 * license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright
 * ownership. Elasticsearch licenses this file to you under
 * the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
apply plugin: 'elasticsearch.rest-resources'

esplugin {
  description 'Ingest processor that uses Apache Tika to extract contents'
  classname 'org.elasticsearch.ingest.attachment.IngestAttachmentPlugin'
}

versions << [
  'tika'  : '1.24',
  'pdfbox': '2.0.19',
  'poi'   : '4.1.2',
  'mime4j': '0.8.3'
]

dependencies {
  // mandatory for tika
  api "org.apache.tika:tika-core:${versions.tika}"
  // build against Jackson 2.9.5, but still works on our current version
  api "org.apache.tika:tika-parsers:${versions.tika}"
  api 'org.tukaani:xz:1.8'
  api 'commons-io:commons-io:2.6'
  api "org.slf4j:slf4j-api:${versions.slf4j}"

  // character set detection
  api 'com.googlecode.juniversalchardet:juniversalchardet:1.0.3'

  // external parser libraries
  // HTML
  api 'org.ccil.cowan.tagsoup:tagsoup:1.2.1'
  // Adobe PDF
  api "org.apache.pdfbox:pdfbox:${versions.pdfbox}"
  api "org.apache.pdfbox:fontbox:${versions.pdfbox}"
  api "org.apache.pdfbox:jempbox:1.8.16"
  api "commons-logging:commons-logging:${versions.commonslogging}"
  api "org.bouncycastle:bcmail-jdk15on:${versions.bouncycastle}"
  api "org.bouncycastle:bcprov-jdk15on:${versions.bouncycastle}"
  api "org.bouncycastle:bcpkix-jdk15on:${versions.bouncycastle}"
  // OpenOffice
  api "org.apache.poi:poi-ooxml:${versions.poi}"
  api "org.apache.poi:poi:${versions.poi}"
  api "org.apache.poi:poi-ooxml-schemas:${versions.poi}"
  api "commons-codec:commons-codec:${versions.commonscodec}"
  api 'org.apache.xmlbeans:xmlbeans:3.0.1'
  api 'org.apache.commons:commons-collections4:4.1'
  // MS Office
  api "org.apache.poi:poi-scratchpad:${versions.poi}"
  // Apple iWork
  api 'org.apache.commons:commons-compress:1.19'
  // Outlook documents
  api "org.apache.james:apache-mime4j-core:${versions.mime4j}"
  api "org.apache.james:apache-mime4j-dom:${versions.mime4j}"
  // EPUB books
  api 'org.apache.commons:commons-lang3:3.9'
  // Microsoft Word files with visio diagrams
  api 'org.apache.commons:commons-math3:3.6.1'
  // POIs dependency
  api 'com.zaxxer:SparseBitSet:1.2'
}

restResources {
  restApi {
    includeCore '_common', 'cluster', 'nodes', 'ingest', 'index', 'get'
  }
}

tasks.named("dependencyLicenses").configure {
  mapping from: /apache-mime4j-.*/, to: 'apache-mime4j'
}

forbiddenPatterns {
  exclude '**/*.doc'
  exclude '**/*.docx'
  exclude '**/*.pdf'
  exclude '**/*.epub'
  exclude '**/*.vsdx'
}

thirdPartyAudit {
  ignoreMissingClasses()
}

if (BuildParams.inFipsJvm) {
  // FIPS JVM includes many classes from bouncycastle which count as jar hell for the third party audit,
  // rather than provide a long list of exclusions, disable the check on FIPS.
  jarHell.enabled = false
  test.enabled = false
  integTest.enabled = false;
  testingConventions.enabled = false;
}
