/*
 * Licensed to Elasticsearch under one or more contributor
 * license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright
 * ownership. Elasticsearch licenses this file to you under
 * the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

apply plugin: 'nebula.optional-base'
apply plugin: 'elasticsearch.publish'

dependencies {
  // This dependency is used only by :libs:core for null-checking interop with other tools
  compileOnly "com.google.code.findbugs:jsr305:3.0.2"

  testCompile "com.carrotsearch.randomizedtesting:randomizedtesting-runner:${versions.randomizedrunner}"
  testCompile "junit:junit:${versions.junit}"
  testCompile "org.hamcrest:hamcrest:${versions.hamcrest}"

  testCompile(project(":test:framework")) {
    exclude group: 'org.elasticsearch', module: 'elasticsearch-core'
  }
}

tasks.named('forbiddenApisMain').configure {
  // :libs:elasticsearch-core does not depend on server
  // TODO: Need to decide how we want to handle for forbidden signatures with the changes to server
  replaceSignatureFiles 'jdk-signatures'
}

thirdPartyAudit.ignoreMissingClasses(
  // from log4j
  'org/osgi/framework/AdaptPermission',
  'org/osgi/framework/AdminPermission',
  'org/osgi/framework/Bundle',
  'org/osgi/framework/BundleActivator',
  'org/osgi/framework/BundleContext',
  'org/osgi/framework/BundleEvent',
  'org/osgi/framework/SynchronousBundleListener',
  'org/osgi/framework/wiring/BundleWire',
  'org/osgi/framework/wiring/BundleWiring'
)
