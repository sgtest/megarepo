{
  "comment" : "This is generated by ESQL's AbstractFunctionTestCase. Do no edit it. See ../README.md for how to regenerate it.",
  "type" : "eval",
  "name" : "st_within",
  "description" : "Returns whether the first geometry is within the second geometry.",
  "signatures" : [
    {
      "params" : [
        {
          "name" : "geomA",
          "type" : "cartesian_point",
          "optional" : false,
          "description" : "Geometry column name or variable of geometry type"
        },
        {
          "name" : "geomB",
          "type" : "cartesian_point",
          "optional" : false,
          "description" : "Geometry column name or variable of geometry type"
        }
      ],
      "variadic" : false,
      "returnType" : "boolean"
    },
    {
      "params" : [
        {
          "name" : "geomA",
          "type" : "cartesian_point",
          "optional" : false,
          "description" : "Geometry column name or variable of geometry type"
        },
        {
          "name" : "geomB",
          "type" : "cartesian_shape",
          "optional" : false,
          "description" : "Geometry column name or variable of geometry type"
        }
      ],
      "variadic" : false,
      "returnType" : "boolean"
    },
    {
      "params" : [
        {
          "name" : "geomA",
          "type" : "cartesian_shape",
          "optional" : false,
          "description" : "Geometry column name or variable of geometry type"
        },
        {
          "name" : "geomB",
          "type" : "cartesian_point",
          "optional" : false,
          "description" : "Geometry column name or variable of geometry type"
        }
      ],
      "variadic" : false,
      "returnType" : "boolean"
    },
    {
      "params" : [
        {
          "name" : "geomA",
          "type" : "cartesian_shape",
          "optional" : false,
          "description" : "Geometry column name or variable of geometry type"
        },
        {
          "name" : "geomB",
          "type" : "cartesian_shape",
          "optional" : false,
          "description" : "Geometry column name or variable of geometry type"
        }
      ],
      "variadic" : false,
      "returnType" : "boolean"
    },
    {
      "params" : [
        {
          "name" : "geomA",
          "type" : "geo_point",
          "optional" : false,
          "description" : "Geometry column name or variable of geometry type"
        },
        {
          "name" : "geomB",
          "type" : "geo_point",
          "optional" : false,
          "description" : "Geometry column name or variable of geometry type"
        }
      ],
      "variadic" : false,
      "returnType" : "boolean"
    },
    {
      "params" : [
        {
          "name" : "geomA",
          "type" : "geo_point",
          "optional" : false,
          "description" : "Geometry column name or variable of geometry type"
        },
        {
          "name" : "geomB",
          "type" : "geo_shape",
          "optional" : false,
          "description" : "Geometry column name or variable of geometry type"
        }
      ],
      "variadic" : false,
      "returnType" : "boolean"
    },
    {
      "params" : [
        {
          "name" : "geomA",
          "type" : "geo_shape",
          "optional" : false,
          "description" : "Geometry column name or variable of geometry type"
        },
        {
          "name" : "geomB",
          "type" : "geo_point",
          "optional" : false,
          "description" : "Geometry column name or variable of geometry type"
        }
      ],
      "variadic" : false,
      "returnType" : "boolean"
    },
    {
      "params" : [
        {
          "name" : "geomA",
          "type" : "geo_shape",
          "optional" : false,
          "description" : "Geometry column name or variable of geometry type"
        },
        {
          "name" : "geomB",
          "type" : "geo_shape",
          "optional" : false,
          "description" : "Geometry column name or variable of geometry type"
        }
      ],
      "variadic" : false,
      "returnType" : "boolean"
    }
  ],
  "examples" : [
    "FROM airport_city_boundaries\n| WHERE ST_WITHIN(city_boundary, TO_GEOSHAPE(\"POLYGON((109.1 18.15, 109.6 18.15, 109.6 18.65, 109.1 18.65, 109.1 18.15))\"))\n| KEEP abbrev, airport, region, city, city_location"
  ]
}
