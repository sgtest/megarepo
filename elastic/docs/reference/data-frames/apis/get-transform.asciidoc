[role="xpack"]
[testenv="basic"]
[[get-data-frame-transform]]
=== Get {dataframe-transforms} API
++++
<titleabbrev>Get {dataframe-transforms}</titleabbrev>
++++

Retrieves configuration information for {dataframe-transforms}.


==== Request

`GET _data_frame/transforms/<data_frame_transform_id>` +

`GET _data_frame/transforms/<data_frame_transform_id>,<data_frame_transform_id>` +

`GET _data_frame/transforms/` +

`GET _data_frame/transforms/_all` +

`GET _data_frame/transforms/*`

//===== Description

==== Path Parameters

`data_frame_transform_id`::
  (string) Identifier for the {dataframe-transform}. It can be a
  {dataframe-transform} identifier or a wildcard expression. If you do not
  specify one of these options, the API returns information for all
  {dataframe-transforms}.

////
==== Request Body

  `page`::
  `from`:::
      (integer) Skips the specified number of {dataframe-transforms}. The
      default value is `0`.

  `size`:::
      (integer) Specifies the maximum number of {dataframe-transforms} to obtain.
      The default value is `100`.
////

==== Results

The API returns the following information:

`transforms`::
  (array) An array of transform resources.

//==== Authorization

==== Examples

The following example gets configuration information for the
`ecommerce_transform` {dataframe-transform}:

[source,js]
--------------------------------------------------
GET _data_frame/transforms/ecommerce_transform
--------------------------------------------------
// CONSOLE
// TEST[skip:setup kibana sample data]

The API returns the following results:
[source,js]
----
{
  "count" : 1,
  "transforms" : [
    {
      "id" : "ecommerce_transform",
      "source" : "kibana_sample_data_ecommerce",
      "dest" : "kibana_sample_data_ecommerce_transform",
      "query" : {
        "match_all" : { }
      },
      "pivot" : {
        "group_by" : {
          "customer_id" : {
            "terms" : {
              "field" : "customer_id"
            }
          }
        },
        "aggregations" : {
          "max_price" : {
            "max" : {
              "field" : "taxful_total_price"
            }
          }
        }
      }
    }
  ]
}

----
// TESTRESPONSE
