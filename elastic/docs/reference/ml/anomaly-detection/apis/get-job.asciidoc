[role="xpack"]
[testenv="platinum"]
[[ml-get-job]]
=== Get jobs API
++++
<titleabbrev>Get jobs</titleabbrev>
++++

Retrieves configuration information for jobs.

[[ml-get-job-request]]
==== {api-request-title}

`GET _ml/anomaly_detectors/<job_id>` +

`GET _ml/anomaly_detectors/<job_id>,<job_id>` +

`GET _ml/anomaly_detectors/` +

`GET _ml/anomaly_detectors/_all`

[[ml-get-job-prereqs]]
==== {api-prereq-title}

* If the {es} {security-features} are enabled, you must have `monitor_ml`,
`monitor`, `manage_ml`, or `manage` cluster privileges to use this API. See
{stack-ov}/security-privileges.html[Security privileges].

[[ml-get-job-desc]]
==== {api-description-title}

You can get information for multiple jobs in a single API request by using a
group name, a comma-separated list of jobs, or a wildcard expression. You can
get information for all jobs by using `_all`, by specifying `*` as the
`<job_id>`, or by omitting the `<job_id>`.

IMPORTANT: This API returns a maximum of 10,000 jobs. 

[[ml-get-job-path-parms]]
==== {api-path-parms-title}

`<job_id>`::
  (Optional, string) Identifier for the job. It can be a job identifier, a group
  name, or a wildcard expression. If you do not specify one of these options,
  the API returns information for all jobs.

[[ml-get-job-results]]
==== {api-response-body-title}

The API returns the following information:

`jobs`::
  (array) An array of job resources.
  For more information, see <<ml-job-resource,Job Resources>>.

[[ml-get-job-example]]
==== {api-examples-title}

The following example gets configuration information for the `total-requests` job:

[source,js]
--------------------------------------------------
GET _ml/anomaly_detectors/total-requests
--------------------------------------------------
// CONSOLE
// TEST[skip:setup:server_metrics_job]

The API returns the following results:
[source,js]
----
{
  "count": 1,
  "jobs": [
    {
      "job_id": "total-requests",
      "job_type": "anomaly_detector",
      "job_version": "7.0.0-alpha1",
      "description": "Total sum of requests",
      "create_time": 1517011406091,
      "analysis_config": {
        "bucket_span": "10m",
        "detectors": [
          {
            "detector_description": "Sum of total",
            "function": "sum",
            "field_name": "total",
            "detector_index": 0
          }
        ],
        "influencers": [ ]
      },
      "analysis_limits": {
        "model_memory_limit": "1024mb",
        "categorization_examples_limit": 4
      },
      "data_description": {
        "time_field": "timestamp",
        "time_format": "epoch_ms"
      },
      "model_snapshot_retention_days": 1,
      "results_index_name": "shared"
    }
  ]
}
----
// TESTRESPONSE[s/"7.0.0-alpha1"/$body.$_path/]
// TESTRESPONSE[s/1517011406091/$body.$_path/]
