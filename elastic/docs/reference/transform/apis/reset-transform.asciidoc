[role="xpack"]
[testenv="basic"]
[[reset-transform]]
= Reset {transform} API

[subs="attributes"]
++++
<titleabbrev>Reset {transform}</titleabbrev>
++++

Resets an existing {transform}.

[[reset-transform-request]]
== {api-request-title}

`POST _transform/<transform_id>/_reset`

[[reset-transform-prereqs]]
== {api-prereq-title}

* Requires the `manage_transform` cluster privilege. This privilege is included
in the `transform_admin` built-in role.
* Before you can reset the {transform}, you must stop it; alternatively, use the `force` query parameter.

[[reset-transform-path-parms]]
== {api-path-parms-title}

`<transform_id>`::
(Required, string)
include::{es-repo-dir}/rest-api/common-parms.asciidoc[tag=transform-id]

[[reset-transform-query-parms]]
== {api-query-parms-title}

`force`::
(Optional, Boolean) When `true`, the {transform} is reset regardless of its
current state. The default value is `false`, meaning that the {transform} must be
`stopped` before it can be reset.

[[reset-transform-examples]]
== {api-examples-title}

[source,console]
--------------------------------------------------
POST _transform/ecommerce_transform/_reset
--------------------------------------------------
// TEST[skip:setup kibana sample data]

When the {transform} is reset, you receive the following results:

[source,console-result]
----
{
  "acknowledged" : true
}
----
