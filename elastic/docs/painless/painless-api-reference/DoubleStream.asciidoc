////
Automatically generated by PainlessDocGenerator. Do not edit.
Rebuild by running `gradle generatePainlessApi`.
////

[[painless-api-reference-DoubleStream]]++DoubleStream++::
* ++[[painless-api-reference-DoubleStream-builder-0]]static <<painless-api-reference-DoubleStream-Builder,DoubleStream.Builder>> link:{java8-javadoc}/java/util/stream/DoubleStream.html#builder%2D%2D[builder]()++ (link:{java9-javadoc}/java/util/stream/DoubleStream.html#builder%2D%2D[java 9])
* ++[[painless-api-reference-DoubleStream-concat-2]]static <<painless-api-reference-DoubleStream,DoubleStream>> link:{java8-javadoc}/java/util/stream/DoubleStream.html#concat%2Djava.util.stream.DoubleStream%2Djava.util.stream.DoubleStream%2D[concat](<<painless-api-reference-DoubleStream,DoubleStream>>, <<painless-api-reference-DoubleStream,DoubleStream>>)++ (link:{java9-javadoc}/java/util/stream/DoubleStream.html#concat%2Djava.util.stream.DoubleStream%2Djava.util.stream.DoubleStream%2D[java 9])
* ++[[painless-api-reference-DoubleStream-empty-0]]static <<painless-api-reference-DoubleStream,DoubleStream>> link:{java8-javadoc}/java/util/stream/DoubleStream.html#empty%2D%2D[empty]()++ (link:{java9-javadoc}/java/util/stream/DoubleStream.html#empty%2D%2D[java 9])
* ++[[painless-api-reference-DoubleStream-of-1]]static <<painless-api-reference-DoubleStream,DoubleStream>> link:{java8-javadoc}/java/util/stream/DoubleStream.html#of%2Ddouble:A%2D[of](double[])++ (link:{java9-javadoc}/java/util/stream/DoubleStream.html#of%2Ddouble:A%2D[java 9])
* ++[[painless-api-reference-DoubleStream-allMatch-1]]boolean link:{java8-javadoc}/java/util/stream/DoubleStream.html#allMatch%2Djava.util.function.DoublePredicate%2D[allMatch](<<painless-api-reference-DoublePredicate,DoublePredicate>>)++ (link:{java9-javadoc}/java/util/stream/DoubleStream.html#allMatch%2Djava.util.function.DoublePredicate%2D[java 9])
* ++[[painless-api-reference-DoubleStream-anyMatch-1]]boolean link:{java8-javadoc}/java/util/stream/DoubleStream.html#anyMatch%2Djava.util.function.DoublePredicate%2D[anyMatch](<<painless-api-reference-DoublePredicate,DoublePredicate>>)++ (link:{java9-javadoc}/java/util/stream/DoubleStream.html#anyMatch%2Djava.util.function.DoublePredicate%2D[java 9])
* ++[[painless-api-reference-DoubleStream-average-0]]<<painless-api-reference-OptionalDouble,OptionalDouble>> link:{java8-javadoc}/java/util/stream/DoubleStream.html#average%2D%2D[average]()++ (link:{java9-javadoc}/java/util/stream/DoubleStream.html#average%2D%2D[java 9])
* ++[[painless-api-reference-DoubleStream-boxed-0]]<<painless-api-reference-Stream,Stream>> link:{java8-javadoc}/java/util/stream/DoubleStream.html#boxed%2D%2D[boxed]()++ (link:{java9-javadoc}/java/util/stream/DoubleStream.html#boxed%2D%2D[java 9])
* ++[[painless-api-reference-DoubleStream-collect-3]]def link:{java8-javadoc}/java/util/stream/DoubleStream.html#collect%2Djava.util.function.Supplier%2Djava.util.function.ObjDoubleConsumer%2Djava.util.function.BiConsumer%2D[collect](<<painless-api-reference-Supplier,Supplier>>, <<painless-api-reference-ObjDoubleConsumer,ObjDoubleConsumer>>, <<painless-api-reference-BiConsumer,BiConsumer>>)++ (link:{java9-javadoc}/java/util/stream/DoubleStream.html#collect%2Djava.util.function.Supplier%2Djava.util.function.ObjDoubleConsumer%2Djava.util.function.BiConsumer%2D[java 9])
* ++[[painless-api-reference-DoubleStream-count-0]]long link:{java8-javadoc}/java/util/stream/DoubleStream.html#count%2D%2D[count]()++ (link:{java9-javadoc}/java/util/stream/DoubleStream.html#count%2D%2D[java 9])
* ++[[painless-api-reference-DoubleStream-distinct-0]]<<painless-api-reference-DoubleStream,DoubleStream>> link:{java8-javadoc}/java/util/stream/DoubleStream.html#distinct%2D%2D[distinct]()++ (link:{java9-javadoc}/java/util/stream/DoubleStream.html#distinct%2D%2D[java 9])
* ++[[painless-api-reference-DoubleStream-filter-1]]<<painless-api-reference-DoubleStream,DoubleStream>> link:{java8-javadoc}/java/util/stream/DoubleStream.html#filter%2Djava.util.function.DoublePredicate%2D[filter](<<painless-api-reference-DoublePredicate,DoublePredicate>>)++ (link:{java9-javadoc}/java/util/stream/DoubleStream.html#filter%2Djava.util.function.DoublePredicate%2D[java 9])
* ++[[painless-api-reference-DoubleStream-findAny-0]]<<painless-api-reference-OptionalDouble,OptionalDouble>> link:{java8-javadoc}/java/util/stream/DoubleStream.html#findAny%2D%2D[findAny]()++ (link:{java9-javadoc}/java/util/stream/DoubleStream.html#findAny%2D%2D[java 9])
* ++[[painless-api-reference-DoubleStream-findFirst-0]]<<painless-api-reference-OptionalDouble,OptionalDouble>> link:{java8-javadoc}/java/util/stream/DoubleStream.html#findFirst%2D%2D[findFirst]()++ (link:{java9-javadoc}/java/util/stream/DoubleStream.html#findFirst%2D%2D[java 9])
* ++[[painless-api-reference-DoubleStream-flatMap-1]]<<painless-api-reference-DoubleStream,DoubleStream>> link:{java8-javadoc}/java/util/stream/DoubleStream.html#flatMap%2Djava.util.function.DoubleFunction%2D[flatMap](<<painless-api-reference-DoubleFunction,DoubleFunction>>)++ (link:{java9-javadoc}/java/util/stream/DoubleStream.html#flatMap%2Djava.util.function.DoubleFunction%2D[java 9])
* ++[[painless-api-reference-DoubleStream-forEach-1]]void link:{java8-javadoc}/java/util/stream/DoubleStream.html#forEach%2Djava.util.function.DoubleConsumer%2D[forEach](<<painless-api-reference-DoubleConsumer,DoubleConsumer>>)++ (link:{java9-javadoc}/java/util/stream/DoubleStream.html#forEach%2Djava.util.function.DoubleConsumer%2D[java 9])
* ++[[painless-api-reference-DoubleStream-forEachOrdered-1]]void link:{java8-javadoc}/java/util/stream/DoubleStream.html#forEachOrdered%2Djava.util.function.DoubleConsumer%2D[forEachOrdered](<<painless-api-reference-DoubleConsumer,DoubleConsumer>>)++ (link:{java9-javadoc}/java/util/stream/DoubleStream.html#forEachOrdered%2Djava.util.function.DoubleConsumer%2D[java 9])
* ++[[painless-api-reference-DoubleStream-iterator-0]]<<painless-api-reference-PrimitiveIterator-OfDouble,PrimitiveIterator.OfDouble>> link:{java8-javadoc}/java/util/stream/DoubleStream.html#iterator%2D%2D[iterator]()++ (link:{java9-javadoc}/java/util/stream/DoubleStream.html#iterator%2D%2D[java 9])
* ++[[painless-api-reference-DoubleStream-limit-1]]<<painless-api-reference-DoubleStream,DoubleStream>> link:{java8-javadoc}/java/util/stream/DoubleStream.html#limit%2Dlong%2D[limit](long)++ (link:{java9-javadoc}/java/util/stream/DoubleStream.html#limit%2Dlong%2D[java 9])
* ++[[painless-api-reference-DoubleStream-map-1]]<<painless-api-reference-DoubleStream,DoubleStream>> link:{java8-javadoc}/java/util/stream/DoubleStream.html#map%2Djava.util.function.DoubleUnaryOperator%2D[map](<<painless-api-reference-DoubleUnaryOperator,DoubleUnaryOperator>>)++ (link:{java9-javadoc}/java/util/stream/DoubleStream.html#map%2Djava.util.function.DoubleUnaryOperator%2D[java 9])
* ++[[painless-api-reference-DoubleStream-mapToInt-1]]<<painless-api-reference-IntStream,IntStream>> link:{java8-javadoc}/java/util/stream/DoubleStream.html#mapToInt%2Djava.util.function.DoubleToIntFunction%2D[mapToInt](<<painless-api-reference-DoubleToIntFunction,DoubleToIntFunction>>)++ (link:{java9-javadoc}/java/util/stream/DoubleStream.html#mapToInt%2Djava.util.function.DoubleToIntFunction%2D[java 9])
* ++[[painless-api-reference-DoubleStream-mapToLong-1]]<<painless-api-reference-LongStream,LongStream>> link:{java8-javadoc}/java/util/stream/DoubleStream.html#mapToLong%2Djava.util.function.DoubleToLongFunction%2D[mapToLong](<<painless-api-reference-DoubleToLongFunction,DoubleToLongFunction>>)++ (link:{java9-javadoc}/java/util/stream/DoubleStream.html#mapToLong%2Djava.util.function.DoubleToLongFunction%2D[java 9])
* ++[[painless-api-reference-DoubleStream-mapToObj-1]]<<painless-api-reference-Stream,Stream>> link:{java8-javadoc}/java/util/stream/DoubleStream.html#mapToObj%2Djava.util.function.DoubleFunction%2D[mapToObj](<<painless-api-reference-DoubleFunction,DoubleFunction>>)++ (link:{java9-javadoc}/java/util/stream/DoubleStream.html#mapToObj%2Djava.util.function.DoubleFunction%2D[java 9])
* ++[[painless-api-reference-DoubleStream-max-0]]<<painless-api-reference-OptionalDouble,OptionalDouble>> link:{java8-javadoc}/java/util/stream/DoubleStream.html#max%2D%2D[max]()++ (link:{java9-javadoc}/java/util/stream/DoubleStream.html#max%2D%2D[java 9])
* ++[[painless-api-reference-DoubleStream-min-0]]<<painless-api-reference-OptionalDouble,OptionalDouble>> link:{java8-javadoc}/java/util/stream/DoubleStream.html#min%2D%2D[min]()++ (link:{java9-javadoc}/java/util/stream/DoubleStream.html#min%2D%2D[java 9])
* ++[[painless-api-reference-DoubleStream-noneMatch-1]]boolean link:{java8-javadoc}/java/util/stream/DoubleStream.html#noneMatch%2Djava.util.function.DoublePredicate%2D[noneMatch](<<painless-api-reference-DoublePredicate,DoublePredicate>>)++ (link:{java9-javadoc}/java/util/stream/DoubleStream.html#noneMatch%2Djava.util.function.DoublePredicate%2D[java 9])
* ++[[painless-api-reference-DoubleStream-peek-1]]<<painless-api-reference-DoubleStream,DoubleStream>> link:{java8-javadoc}/java/util/stream/DoubleStream.html#peek%2Djava.util.function.DoubleConsumer%2D[peek](<<painless-api-reference-DoubleConsumer,DoubleConsumer>>)++ (link:{java9-javadoc}/java/util/stream/DoubleStream.html#peek%2Djava.util.function.DoubleConsumer%2D[java 9])
* ++[[painless-api-reference-DoubleStream-reduce-1]]<<painless-api-reference-OptionalDouble,OptionalDouble>> link:{java8-javadoc}/java/util/stream/DoubleStream.html#reduce%2Djava.util.function.DoubleBinaryOperator%2D[reduce](<<painless-api-reference-DoubleBinaryOperator,DoubleBinaryOperator>>)++ (link:{java9-javadoc}/java/util/stream/DoubleStream.html#reduce%2Djava.util.function.DoubleBinaryOperator%2D[java 9])
* ++[[painless-api-reference-DoubleStream-reduce-2]]double link:{java8-javadoc}/java/util/stream/DoubleStream.html#reduce%2Ddouble%2Djava.util.function.DoubleBinaryOperator%2D[reduce](double, <<painless-api-reference-DoubleBinaryOperator,DoubleBinaryOperator>>)++ (link:{java9-javadoc}/java/util/stream/DoubleStream.html#reduce%2Ddouble%2Djava.util.function.DoubleBinaryOperator%2D[java 9])
* ++[[painless-api-reference-DoubleStream-sequential-0]]<<painless-api-reference-DoubleStream,DoubleStream>> link:{java8-javadoc}/java/util/stream/DoubleStream.html#sequential%2D%2D[sequential]()++ (link:{java9-javadoc}/java/util/stream/DoubleStream.html#sequential%2D%2D[java 9])
* ++[[painless-api-reference-DoubleStream-skip-1]]<<painless-api-reference-DoubleStream,DoubleStream>> link:{java8-javadoc}/java/util/stream/DoubleStream.html#skip%2Dlong%2D[skip](long)++ (link:{java9-javadoc}/java/util/stream/DoubleStream.html#skip%2Dlong%2D[java 9])
* ++[[painless-api-reference-DoubleStream-sorted-0]]<<painless-api-reference-DoubleStream,DoubleStream>> link:{java8-javadoc}/java/util/stream/DoubleStream.html#sorted%2D%2D[sorted]()++ (link:{java9-javadoc}/java/util/stream/DoubleStream.html#sorted%2D%2D[java 9])
* ++[[painless-api-reference-DoubleStream-spliterator-0]]<<painless-api-reference-Spliterator-OfDouble,Spliterator.OfDouble>> link:{java8-javadoc}/java/util/stream/DoubleStream.html#spliterator%2D%2D[spliterator]()++ (link:{java9-javadoc}/java/util/stream/DoubleStream.html#spliterator%2D%2D[java 9])
* ++[[painless-api-reference-DoubleStream-sum-0]]double link:{java8-javadoc}/java/util/stream/DoubleStream.html#sum%2D%2D[sum]()++ (link:{java9-javadoc}/java/util/stream/DoubleStream.html#sum%2D%2D[java 9])
* ++[[painless-api-reference-DoubleStream-summaryStatistics-0]]<<painless-api-reference-DoubleSummaryStatistics,DoubleSummaryStatistics>> link:{java8-javadoc}/java/util/stream/DoubleStream.html#summaryStatistics%2D%2D[summaryStatistics]()++ (link:{java9-javadoc}/java/util/stream/DoubleStream.html#summaryStatistics%2D%2D[java 9])
* ++[[painless-api-reference-DoubleStream-toArray-0]]double[] link:{java8-javadoc}/java/util/stream/DoubleStream.html#toArray%2D%2D[toArray]()++ (link:{java9-javadoc}/java/util/stream/DoubleStream.html#toArray%2D%2D[java 9])
* Inherits methods from ++<<painless-api-reference-BaseStream,BaseStream>>++, ++<<painless-api-reference-Object,Object>>++
