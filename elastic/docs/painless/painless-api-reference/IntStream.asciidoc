////
Automatically generated by PainlessDocGenerator. Do not edit.
Rebuild by running `gradle generatePainlessApi`.
////

[[painless-api-reference-IntStream]]++IntStream++::
* ++[[painless-api-reference-IntStream-builder-0]]static <<painless-api-reference-IntStream-Builder,IntStream.Builder>> link:{java8-javadoc}/java/util/stream/IntStream.html#builder%2D%2D[builder]()++ (link:{java9-javadoc}/java/util/stream/IntStream.html#builder%2D%2D[java 9])
* ++[[painless-api-reference-IntStream-concat-2]]static <<painless-api-reference-IntStream,IntStream>> link:{java8-javadoc}/java/util/stream/IntStream.html#concat%2Djava.util.stream.IntStream%2Djava.util.stream.IntStream%2D[concat](<<painless-api-reference-IntStream,IntStream>>, <<painless-api-reference-IntStream,IntStream>>)++ (link:{java9-javadoc}/java/util/stream/IntStream.html#concat%2Djava.util.stream.IntStream%2Djava.util.stream.IntStream%2D[java 9])
* ++[[painless-api-reference-IntStream-empty-0]]static <<painless-api-reference-IntStream,IntStream>> link:{java8-javadoc}/java/util/stream/IntStream.html#empty%2D%2D[empty]()++ (link:{java9-javadoc}/java/util/stream/IntStream.html#empty%2D%2D[java 9])
* ++[[painless-api-reference-IntStream-of-1]]static <<painless-api-reference-IntStream,IntStream>> link:{java8-javadoc}/java/util/stream/IntStream.html#of%2Dint:A%2D[of](int[])++ (link:{java9-javadoc}/java/util/stream/IntStream.html#of%2Dint:A%2D[java 9])
* ++[[painless-api-reference-IntStream-range-2]]static <<painless-api-reference-IntStream,IntStream>> link:{java8-javadoc}/java/util/stream/IntStream.html#range%2Dint%2Dint%2D[range](int, int)++ (link:{java9-javadoc}/java/util/stream/IntStream.html#range%2Dint%2Dint%2D[java 9])
* ++[[painless-api-reference-IntStream-rangeClosed-2]]static <<painless-api-reference-IntStream,IntStream>> link:{java8-javadoc}/java/util/stream/IntStream.html#rangeClosed%2Dint%2Dint%2D[rangeClosed](int, int)++ (link:{java9-javadoc}/java/util/stream/IntStream.html#rangeClosed%2Dint%2Dint%2D[java 9])
* ++[[painless-api-reference-IntStream-allMatch-1]]boolean link:{java8-javadoc}/java/util/stream/IntStream.html#allMatch%2Djava.util.function.IntPredicate%2D[allMatch](<<painless-api-reference-IntPredicate,IntPredicate>>)++ (link:{java9-javadoc}/java/util/stream/IntStream.html#allMatch%2Djava.util.function.IntPredicate%2D[java 9])
* ++[[painless-api-reference-IntStream-anyMatch-1]]boolean link:{java8-javadoc}/java/util/stream/IntStream.html#anyMatch%2Djava.util.function.IntPredicate%2D[anyMatch](<<painless-api-reference-IntPredicate,IntPredicate>>)++ (link:{java9-javadoc}/java/util/stream/IntStream.html#anyMatch%2Djava.util.function.IntPredicate%2D[java 9])
* ++[[painless-api-reference-IntStream-asDoubleStream-0]]<<painless-api-reference-DoubleStream,DoubleStream>> link:{java8-javadoc}/java/util/stream/IntStream.html#asDoubleStream%2D%2D[asDoubleStream]()++ (link:{java9-javadoc}/java/util/stream/IntStream.html#asDoubleStream%2D%2D[java 9])
* ++[[painless-api-reference-IntStream-asLongStream-0]]<<painless-api-reference-LongStream,LongStream>> link:{java8-javadoc}/java/util/stream/IntStream.html#asLongStream%2D%2D[asLongStream]()++ (link:{java9-javadoc}/java/util/stream/IntStream.html#asLongStream%2D%2D[java 9])
* ++[[painless-api-reference-IntStream-average-0]]<<painless-api-reference-OptionalDouble,OptionalDouble>> link:{java8-javadoc}/java/util/stream/IntStream.html#average%2D%2D[average]()++ (link:{java9-javadoc}/java/util/stream/IntStream.html#average%2D%2D[java 9])
* ++[[painless-api-reference-IntStream-boxed-0]]<<painless-api-reference-Stream,Stream>> link:{java8-javadoc}/java/util/stream/IntStream.html#boxed%2D%2D[boxed]()++ (link:{java9-javadoc}/java/util/stream/IntStream.html#boxed%2D%2D[java 9])
* ++[[painless-api-reference-IntStream-collect-3]]def link:{java8-javadoc}/java/util/stream/IntStream.html#collect%2Djava.util.function.Supplier%2Djava.util.function.ObjIntConsumer%2Djava.util.function.BiConsumer%2D[collect](<<painless-api-reference-Supplier,Supplier>>, <<painless-api-reference-ObjIntConsumer,ObjIntConsumer>>, <<painless-api-reference-BiConsumer,BiConsumer>>)++ (link:{java9-javadoc}/java/util/stream/IntStream.html#collect%2Djava.util.function.Supplier%2Djava.util.function.ObjIntConsumer%2Djava.util.function.BiConsumer%2D[java 9])
* ++[[painless-api-reference-IntStream-count-0]]long link:{java8-javadoc}/java/util/stream/IntStream.html#count%2D%2D[count]()++ (link:{java9-javadoc}/java/util/stream/IntStream.html#count%2D%2D[java 9])
* ++[[painless-api-reference-IntStream-distinct-0]]<<painless-api-reference-IntStream,IntStream>> link:{java8-javadoc}/java/util/stream/IntStream.html#distinct%2D%2D[distinct]()++ (link:{java9-javadoc}/java/util/stream/IntStream.html#distinct%2D%2D[java 9])
* ++[[painless-api-reference-IntStream-filter-1]]<<painless-api-reference-IntStream,IntStream>> link:{java8-javadoc}/java/util/stream/IntStream.html#filter%2Djava.util.function.IntPredicate%2D[filter](<<painless-api-reference-IntPredicate,IntPredicate>>)++ (link:{java9-javadoc}/java/util/stream/IntStream.html#filter%2Djava.util.function.IntPredicate%2D[java 9])
* ++[[painless-api-reference-IntStream-findAny-0]]<<painless-api-reference-OptionalInt,OptionalInt>> link:{java8-javadoc}/java/util/stream/IntStream.html#findAny%2D%2D[findAny]()++ (link:{java9-javadoc}/java/util/stream/IntStream.html#findAny%2D%2D[java 9])
* ++[[painless-api-reference-IntStream-findFirst-0]]<<painless-api-reference-OptionalInt,OptionalInt>> link:{java8-javadoc}/java/util/stream/IntStream.html#findFirst%2D%2D[findFirst]()++ (link:{java9-javadoc}/java/util/stream/IntStream.html#findFirst%2D%2D[java 9])
* ++[[painless-api-reference-IntStream-flatMap-1]]<<painless-api-reference-IntStream,IntStream>> link:{java8-javadoc}/java/util/stream/IntStream.html#flatMap%2Djava.util.function.IntFunction%2D[flatMap](<<painless-api-reference-IntFunction,IntFunction>>)++ (link:{java9-javadoc}/java/util/stream/IntStream.html#flatMap%2Djava.util.function.IntFunction%2D[java 9])
* ++[[painless-api-reference-IntStream-forEach-1]]void link:{java8-javadoc}/java/util/stream/IntStream.html#forEach%2Djava.util.function.IntConsumer%2D[forEach](<<painless-api-reference-IntConsumer,IntConsumer>>)++ (link:{java9-javadoc}/java/util/stream/IntStream.html#forEach%2Djava.util.function.IntConsumer%2D[java 9])
* ++[[painless-api-reference-IntStream-forEachOrdered-1]]void link:{java8-javadoc}/java/util/stream/IntStream.html#forEachOrdered%2Djava.util.function.IntConsumer%2D[forEachOrdered](<<painless-api-reference-IntConsumer,IntConsumer>>)++ (link:{java9-javadoc}/java/util/stream/IntStream.html#forEachOrdered%2Djava.util.function.IntConsumer%2D[java 9])
* ++[[painless-api-reference-IntStream-iterator-0]]<<painless-api-reference-PrimitiveIterator-OfInt,PrimitiveIterator.OfInt>> link:{java8-javadoc}/java/util/stream/IntStream.html#iterator%2D%2D[iterator]()++ (link:{java9-javadoc}/java/util/stream/IntStream.html#iterator%2D%2D[java 9])
* ++[[painless-api-reference-IntStream-limit-1]]<<painless-api-reference-IntStream,IntStream>> link:{java8-javadoc}/java/util/stream/IntStream.html#limit%2Dlong%2D[limit](long)++ (link:{java9-javadoc}/java/util/stream/IntStream.html#limit%2Dlong%2D[java 9])
* ++[[painless-api-reference-IntStream-map-1]]<<painless-api-reference-IntStream,IntStream>> link:{java8-javadoc}/java/util/stream/IntStream.html#map%2Djava.util.function.IntUnaryOperator%2D[map](<<painless-api-reference-IntUnaryOperator,IntUnaryOperator>>)++ (link:{java9-javadoc}/java/util/stream/IntStream.html#map%2Djava.util.function.IntUnaryOperator%2D[java 9])
* ++[[painless-api-reference-IntStream-mapToDouble-1]]<<painless-api-reference-DoubleStream,DoubleStream>> link:{java8-javadoc}/java/util/stream/IntStream.html#mapToDouble%2Djava.util.function.IntToDoubleFunction%2D[mapToDouble](<<painless-api-reference-IntToDoubleFunction,IntToDoubleFunction>>)++ (link:{java9-javadoc}/java/util/stream/IntStream.html#mapToDouble%2Djava.util.function.IntToDoubleFunction%2D[java 9])
* ++[[painless-api-reference-IntStream-mapToLong-1]]<<painless-api-reference-LongStream,LongStream>> link:{java8-javadoc}/java/util/stream/IntStream.html#mapToLong%2Djava.util.function.IntToLongFunction%2D[mapToLong](<<painless-api-reference-IntToLongFunction,IntToLongFunction>>)++ (link:{java9-javadoc}/java/util/stream/IntStream.html#mapToLong%2Djava.util.function.IntToLongFunction%2D[java 9])
* ++[[painless-api-reference-IntStream-mapToObj-1]]<<painless-api-reference-Stream,Stream>> link:{java8-javadoc}/java/util/stream/IntStream.html#mapToObj%2Djava.util.function.IntFunction%2D[mapToObj](<<painless-api-reference-IntFunction,IntFunction>>)++ (link:{java9-javadoc}/java/util/stream/IntStream.html#mapToObj%2Djava.util.function.IntFunction%2D[java 9])
* ++[[painless-api-reference-IntStream-max-0]]<<painless-api-reference-OptionalInt,OptionalInt>> link:{java8-javadoc}/java/util/stream/IntStream.html#max%2D%2D[max]()++ (link:{java9-javadoc}/java/util/stream/IntStream.html#max%2D%2D[java 9])
* ++[[painless-api-reference-IntStream-min-0]]<<painless-api-reference-OptionalInt,OptionalInt>> link:{java8-javadoc}/java/util/stream/IntStream.html#min%2D%2D[min]()++ (link:{java9-javadoc}/java/util/stream/IntStream.html#min%2D%2D[java 9])
* ++[[painless-api-reference-IntStream-noneMatch-1]]boolean link:{java8-javadoc}/java/util/stream/IntStream.html#noneMatch%2Djava.util.function.IntPredicate%2D[noneMatch](<<painless-api-reference-IntPredicate,IntPredicate>>)++ (link:{java9-javadoc}/java/util/stream/IntStream.html#noneMatch%2Djava.util.function.IntPredicate%2D[java 9])
* ++[[painless-api-reference-IntStream-peek-1]]<<painless-api-reference-IntStream,IntStream>> link:{java8-javadoc}/java/util/stream/IntStream.html#peek%2Djava.util.function.IntConsumer%2D[peek](<<painless-api-reference-IntConsumer,IntConsumer>>)++ (link:{java9-javadoc}/java/util/stream/IntStream.html#peek%2Djava.util.function.IntConsumer%2D[java 9])
* ++[[painless-api-reference-IntStream-reduce-1]]<<painless-api-reference-OptionalInt,OptionalInt>> link:{java8-javadoc}/java/util/stream/IntStream.html#reduce%2Djava.util.function.IntBinaryOperator%2D[reduce](<<painless-api-reference-IntBinaryOperator,IntBinaryOperator>>)++ (link:{java9-javadoc}/java/util/stream/IntStream.html#reduce%2Djava.util.function.IntBinaryOperator%2D[java 9])
* ++[[painless-api-reference-IntStream-reduce-2]]int link:{java8-javadoc}/java/util/stream/IntStream.html#reduce%2Dint%2Djava.util.function.IntBinaryOperator%2D[reduce](int, <<painless-api-reference-IntBinaryOperator,IntBinaryOperator>>)++ (link:{java9-javadoc}/java/util/stream/IntStream.html#reduce%2Dint%2Djava.util.function.IntBinaryOperator%2D[java 9])
* ++[[painless-api-reference-IntStream-sequential-0]]<<painless-api-reference-IntStream,IntStream>> link:{java8-javadoc}/java/util/stream/IntStream.html#sequential%2D%2D[sequential]()++ (link:{java9-javadoc}/java/util/stream/IntStream.html#sequential%2D%2D[java 9])
* ++[[painless-api-reference-IntStream-skip-1]]<<painless-api-reference-IntStream,IntStream>> link:{java8-javadoc}/java/util/stream/IntStream.html#skip%2Dlong%2D[skip](long)++ (link:{java9-javadoc}/java/util/stream/IntStream.html#skip%2Dlong%2D[java 9])
* ++[[painless-api-reference-IntStream-sorted-0]]<<painless-api-reference-IntStream,IntStream>> link:{java8-javadoc}/java/util/stream/IntStream.html#sorted%2D%2D[sorted]()++ (link:{java9-javadoc}/java/util/stream/IntStream.html#sorted%2D%2D[java 9])
* ++[[painless-api-reference-IntStream-spliterator-0]]<<painless-api-reference-Spliterator-OfInt,Spliterator.OfInt>> link:{java8-javadoc}/java/util/stream/IntStream.html#spliterator%2D%2D[spliterator]()++ (link:{java9-javadoc}/java/util/stream/IntStream.html#spliterator%2D%2D[java 9])
* ++[[painless-api-reference-IntStream-sum-0]]int link:{java8-javadoc}/java/util/stream/IntStream.html#sum%2D%2D[sum]()++ (link:{java9-javadoc}/java/util/stream/IntStream.html#sum%2D%2D[java 9])
* ++[[painless-api-reference-IntStream-summaryStatistics-0]]<<painless-api-reference-IntSummaryStatistics,IntSummaryStatistics>> link:{java8-javadoc}/java/util/stream/IntStream.html#summaryStatistics%2D%2D[summaryStatistics]()++ (link:{java9-javadoc}/java/util/stream/IntStream.html#summaryStatistics%2D%2D[java 9])
* ++[[painless-api-reference-IntStream-toArray-0]]int[] link:{java8-javadoc}/java/util/stream/IntStream.html#toArray%2D%2D[toArray]()++ (link:{java9-javadoc}/java/util/stream/IntStream.html#toArray%2D%2D[java 9])
* Inherits methods from ++<<painless-api-reference-BaseStream,BaseStream>>++, ++<<painless-api-reference-Object,Object>>++
