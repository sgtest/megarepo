/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */

gradle.settingsEvaluated { settings ->
  String buildCacheUrl = System.getProperty('org.elasticsearch.build.cache.url')
  boolean buildCachePush = Boolean.valueOf(System.getProperty('org.elasticsearch.build.cache.push', 'false'))

  if (buildCacheUrl) {
    settings.buildCache {
      local {
        // Disable the local build cache in CI since we use ephemeral workers and it incurs an IO penalty
        enabled = false
      }
      remote(HttpBuildCache) {
        url = buildCacheUrl
        push = buildCachePush
//        credentials {
//          username = buildCacheCredentials.get("username")
//          password = buildCacheCredentials.get("password")
//        }
      }
    }
  }

  // Update build configuration parameter with latest published build scan
  settings.pluginManager.withPlugin('com.gradle.enterprise') {
    settings.gradleEnterprise.buildScan.buildScanPublished { scan ->
      println "##teamcity[setParameter name='gradle.build.scan' value='${scan.buildScanUri}']"
    }
  }
}
