<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="2766" failures="1" errors="0" time="108.102">
  <testsuite name="getBundleSizeStats" errors="0" failures="1" skipped="0" timestamp="2023-08-29T07:21:57" time="1.168" tests="1">
    <testcase classname="getBundleSizeStats collects bundle stats based on bundlesize config" name="getBundleSizeStats collects bundle stats based on bundlesize config" time="0.02">
      <failure>Error: expect(received).toEqual(expected) // deep equality

- Expected  - 2
+ Received  + 2

@@ -5,21 +5,21 @@
      &quot;isCss&quot;: false,
      &quot;isDefaultVendors&quot;: false,
      &quot;isDynamicImport&quot;: false,
      &quot;isInitial&quot;: true,
      &quot;isJs&quot;: true,
-     &quot;raw&quot;: 15,
+     &quot;raw&quot;: 37777,
    },
    &quot;scripts/sg_home.js&quot;: Object {
      &quot;brotli&quot;: 4,
      &quot;gzip&quot;: 6,
      &quot;isCss&quot;: false,
      &quot;isDefaultVendors&quot;: false,
      &quot;isDynamicImport&quot;: true,
      &quot;isInitial&quot;: false,
      &quot;isJs&quot;: true,
-     &quot;raw&quot;: 15,
+     &quot;raw&quot;: 37777,
    },
    &quot;styles/app.123.bundle.css&quot;: Object {
      &quot;brotli&quot;: 4,
      &quot;gzip&quot;: 6,
      &quot;isCss&quot;: true,
    at Object.toEqual (/Users/muhawenimanajanvier/dev/gitstart-new/client-sourcegraph-front-end/client/observability-server/src/webBundleSize/getBundleSizeStats.test.ts:41:23)
    at Promise.then.completed (/Users/muhawenimanajanvier/dev/gitstart-new/client-sourcegraph-front-end/node_modules/.pnpm/jest-circus@28.1.3/node_modules/jest-circus/build/utils.js:333:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/Users/muhawenimanajanvier/dev/gitstart-new/client-sourcegraph-front-end/node_modules/.pnpm/jest-circus@28.1.3/node_modules/jest-circus/build/utils.js:259:10)
    at _callCircusTest (/Users/muhawenimanajanvier/dev/gitstart-new/client-sourcegraph-front-end/node_modules/.pnpm/jest-circus@28.1.3/node_modules/jest-circus/build/run.js:277:40)
    at processTicksAndRejections (node:internal/process/task_queues:96:5)
    at _runTest (/Users/muhawenimanajanvier/dev/gitstart-new/client-sourcegraph-front-end/node_modules/.pnpm/jest-circus@28.1.3/node_modules/jest-circus/build/run.js:209:3)
    at _runTestsForDescribeBlock (/Users/muhawenimanajanvier/dev/gitstart-new/client-sourcegraph-front-end/node_modules/.pnpm/jest-circus@28.1.3/node_modules/jest-circus/build/run.js:97:9)
    at _runTestsForDescribeBlock (/Users/muhawenimanajanvier/dev/gitstart-new/client-sourcegraph-front-end/node_modules/.pnpm/jest-circus@28.1.3/node_modules/jest-circus/build/run.js:91:9)
    at run (/Users/muhawenimanajanvier/dev/gitstart-new/client-sourcegraph-front-end/node_modules/.pnpm/jest-circus@28.1.3/node_modules/jest-circus/build/run.js:31:3)
    at runAndTransformResultsToJestFormat (/Users/muhawenimanajanvier/dev/gitstart-new/client-sourcegraph-front-end/node_modules/.pnpm/jest-circus@28.1.3/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:135:21)
    at jestAdapter (/Users/muhawenimanajanvier/dev/gitstart-new/client-sourcegraph-front-end/node_modules/.pnpm/jest-circus@28.1.3/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:92:19)
    at runTestInternal (/Users/muhawenimanajanvier/dev/gitstart-new/client-sourcegraph-front-end/node_modules/.pnpm/jest-runner@28.1.3/node_modules/jest-runner/build/runTest.js:411:16)
    at runTest (/Users/muhawenimanajanvier/dev/gitstart-new/client-sourcegraph-front-end/node_modules/.pnpm/jest-runner@28.1.3/node_modules/jest-runner/build/runTest.js:499:34)
    at Object.worker (/Users/muhawenimanajanvier/dev/gitstart-new/client-sourcegraph-front-end/node_modules/.pnpm/jest-runner@28.1.3/node_modules/jest-runner/build/testWorker.js:135:12)</failure>
    </testcase>
  </testsuite>
  <testsuite name="Bitbucket DOM functions" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:21:58" time="3.69" tests="38">
    <testcase classname="Bitbucket DOM functions diffDOMFunctions Split view line number 54 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="Bitbucket DOM functions diffDOMFunctions Split view line number 54 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.219">
    </testcase>
    <testcase classname="Bitbucket DOM functions diffDOMFunctions Split view line number 54 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="Bitbucket DOM functions diffDOMFunctions Split view line number 54 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.162">
    </testcase>
    <testcase classname="Bitbucket DOM functions diffDOMFunctions Split view line number 54 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="Bitbucket DOM functions diffDOMFunctions Split view line number 54 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.092">
    </testcase>
    <testcase classname="Bitbucket DOM functions diffDOMFunctions Split view line number 54 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="Bitbucket DOM functions diffDOMFunctions Split view line number 54 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.091">
    </testcase>
    <testcase classname="Bitbucket DOM functions diffDOMFunctions Split view line number 54 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="Bitbucket DOM functions diffDOMFunctions Split view line number 54 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.127">
    </testcase>
    <testcase classname="Bitbucket DOM functions diffDOMFunctions Split view line number 60 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="Bitbucket DOM functions diffDOMFunctions Split view line number 60 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.107">
    </testcase>
    <testcase classname="Bitbucket DOM functions diffDOMFunctions Split view line number 60 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="Bitbucket DOM functions diffDOMFunctions Split view line number 60 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.112">
    </testcase>
    <testcase classname="Bitbucket DOM functions diffDOMFunctions Split view line number 60 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="Bitbucket DOM functions diffDOMFunctions Split view line number 60 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.079">
    </testcase>
    <testcase classname="Bitbucket DOM functions diffDOMFunctions Split view line number 60 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="Bitbucket DOM functions diffDOMFunctions Split view line number 60 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.098">
    </testcase>
    <testcase classname="Bitbucket DOM functions diffDOMFunctions Split view line number 60 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="Bitbucket DOM functions diffDOMFunctions Split view line number 60 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.109">
    </testcase>
    <testcase classname="Bitbucket DOM functions diffDOMFunctions Split view line number 102 in base diff part getLineElementFromLineNumber() should return the right line element given the line number" name="Bitbucket DOM functions diffDOMFunctions Split view line number 102 in base diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.327">
    </testcase>
    <testcase classname="Bitbucket DOM functions diffDOMFunctions Split view line number 102 in base diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="Bitbucket DOM functions diffDOMFunctions Split view line number 102 in base diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.42">
    </testcase>
    <testcase classname="Bitbucket DOM functions diffDOMFunctions Split view line number 102 in base diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="Bitbucket DOM functions diffDOMFunctions Split view line number 102 in base diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.161">
    </testcase>
    <testcase classname="Bitbucket DOM functions diffDOMFunctions Split view line number 102 in base diff part getDiffCodePart() should return &quot;base&quot; when given the code element" name="Bitbucket DOM functions diffDOMFunctions Split view line number 102 in base diff part getDiffCodePart() should return &quot;base&quot; when given the code element" time="0.196">
    </testcase>
    <testcase classname="Bitbucket DOM functions diffDOMFunctions Split view line number 102 in base diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="Bitbucket DOM functions diffDOMFunctions Split view line number 102 in base diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.107">
    </testcase>
    <testcase classname="Bitbucket DOM functions diffDOMFunctions Unified view line number 54 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="Bitbucket DOM functions diffDOMFunctions Unified view line number 54 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.05">
    </testcase>
    <testcase classname="Bitbucket DOM functions diffDOMFunctions Unified view line number 54 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="Bitbucket DOM functions diffDOMFunctions Unified view line number 54 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.057">
    </testcase>
    <testcase classname="Bitbucket DOM functions diffDOMFunctions Unified view line number 54 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="Bitbucket DOM functions diffDOMFunctions Unified view line number 54 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.062">
    </testcase>
    <testcase classname="Bitbucket DOM functions diffDOMFunctions Unified view line number 54 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="Bitbucket DOM functions diffDOMFunctions Unified view line number 54 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.05">
    </testcase>
    <testcase classname="Bitbucket DOM functions diffDOMFunctions Unified view line number 54 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="Bitbucket DOM functions diffDOMFunctions Unified view line number 54 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.035">
    </testcase>
    <testcase classname="Bitbucket DOM functions diffDOMFunctions Unified view line number 60 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="Bitbucket DOM functions diffDOMFunctions Unified view line number 60 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.1">
    </testcase>
    <testcase classname="Bitbucket DOM functions diffDOMFunctions Unified view line number 60 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="Bitbucket DOM functions diffDOMFunctions Unified view line number 60 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.074">
    </testcase>
    <testcase classname="Bitbucket DOM functions diffDOMFunctions Unified view line number 60 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="Bitbucket DOM functions diffDOMFunctions Unified view line number 60 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.046">
    </testcase>
    <testcase classname="Bitbucket DOM functions diffDOMFunctions Unified view line number 60 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="Bitbucket DOM functions diffDOMFunctions Unified view line number 60 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.024">
    </testcase>
    <testcase classname="Bitbucket DOM functions diffDOMFunctions Unified view line number 60 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="Bitbucket DOM functions diffDOMFunctions Unified view line number 60 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.045">
    </testcase>
    <testcase classname="Bitbucket DOM functions diffDOMFunctions Unified view line number 102 in base diff part getLineElementFromLineNumber() should return the right line element given the line number" name="Bitbucket DOM functions diffDOMFunctions Unified view line number 102 in base diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.104">
    </testcase>
    <testcase classname="Bitbucket DOM functions diffDOMFunctions Unified view line number 102 in base diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="Bitbucket DOM functions diffDOMFunctions Unified view line number 102 in base diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.047">
    </testcase>
    <testcase classname="Bitbucket DOM functions diffDOMFunctions Unified view line number 102 in base diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="Bitbucket DOM functions diffDOMFunctions Unified view line number 102 in base diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.035">
    </testcase>
    <testcase classname="Bitbucket DOM functions diffDOMFunctions Unified view line number 102 in base diff part getDiffCodePart() should return &quot;base&quot; when given the code element" name="Bitbucket DOM functions diffDOMFunctions Unified view line number 102 in base diff part getDiffCodePart() should return &quot;base&quot; when given the code element" time="0.029">
    </testcase>
    <testcase classname="Bitbucket DOM functions diffDOMFunctions Unified view line number 102 in base diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="Bitbucket DOM functions diffDOMFunctions Unified view line number 102 in base diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.025">
    </testcase>
    <testcase classname="Bitbucket DOM functions singleFileDOMFunctions line number 1 getLineElementFromLineNumber() should return the right line element given the line number" name="Bitbucket DOM functions singleFileDOMFunctions line number 1 getLineElementFromLineNumber() should return the right line element given the line number" time="0.01">
    </testcase>
    <testcase classname="Bitbucket DOM functions singleFileDOMFunctions line number 1 getCodeElementFromLineNumber() should return the right code element given the line number" name="Bitbucket DOM functions singleFileDOMFunctions line number 1 getCodeElementFromLineNumber() should return the right code element given the line number" time="0.006">
    </testcase>
    <testcase classname="Bitbucket DOM functions singleFileDOMFunctions line number 1 getLineNumberFromCodeElement() should return the right line number given the code element" name="Bitbucket DOM functions singleFileDOMFunctions line number 1 getLineNumberFromCodeElement() should return the right line number given the code element" time="0.005">
    </testcase>
    <testcase classname="Bitbucket DOM functions singleFileDOMFunctions line number 1 isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="Bitbucket DOM functions singleFileDOMFunctions line number 1 isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.007">
    </testcase>
    <testcase classname="Bitbucket DOM functions singleFileDOMFunctions line number 18 getLineElementFromLineNumber() should return the right line element given the line number" name="Bitbucket DOM functions singleFileDOMFunctions line number 18 getLineElementFromLineNumber() should return the right line element given the line number" time="0.007">
    </testcase>
    <testcase classname="Bitbucket DOM functions singleFileDOMFunctions line number 18 getCodeElementFromLineNumber() should return the right code element given the line number" name="Bitbucket DOM functions singleFileDOMFunctions line number 18 getCodeElementFromLineNumber() should return the right code element given the line number" time="0.006">
    </testcase>
    <testcase classname="Bitbucket DOM functions singleFileDOMFunctions line number 18 getLineNumberFromCodeElement() should return the right line number given the code element" name="Bitbucket DOM functions singleFileDOMFunctions line number 18 getLineNumberFromCodeElement() should return the right line number given the code element" time="0.009">
    </testcase>
    <testcase classname="Bitbucket DOM functions singleFileDOMFunctions line number 18 isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="Bitbucket DOM functions singleFileDOMFunctions line number 18 isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="GitHub DOM functions" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:21:57" time="7.107" tests="292">
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Split view line number 80 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Split view line number 80 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.06">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Split view line number 80 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Split view line number 80 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.027">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Split view line number 80 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Split view line number 80 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.019">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Split view line number 80 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Split view line number 80 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.01">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Split view line number 80 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Split view line number 80 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.013">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Split view line number 82 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Split view line number 82 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.014">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Split view line number 82 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Split view line number 82 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.01">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Split view line number 82 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Split view line number 82 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.015">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Split view line number 82 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Split view line number 82 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.013">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Split view line number 82 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Split view line number 82 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.006">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Split view line number 82 in base diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Split view line number 82 in base diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.01">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Split view line number 82 in base diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Split view line number 82 in base diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.007">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Split view line number 82 in base diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Split view line number 82 in base diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.009">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Split view line number 82 in base diff part getDiffCodePart() should return &quot;base&quot; when given the code element" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Split view line number 82 in base diff part getDiffCodePart() should return &quot;base&quot; when given the code element" time="0.009">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Split view line number 82 in base diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Split view line number 82 in base diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.008">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Unified view line number 80 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Unified view line number 80 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.006">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Unified view line number 80 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Unified view line number 80 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.007">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Unified view line number 80 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Unified view line number 80 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.006">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Unified view line number 80 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Unified view line number 80 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.004">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Unified view line number 80 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Unified view line number 80 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.006">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Unified view line number 82 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Unified view line number 82 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.006">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Unified view line number 82 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Unified view line number 82 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.007">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Unified view line number 82 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Unified view line number 82 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.004">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Unified view line number 82 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Unified view line number 82 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.004">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Unified view line number 82 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Unified view line number 82 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.006">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Unified view line number 82 in base diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Unified view line number 82 in base diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.008">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Unified view line number 82 in base diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Unified view line number 82 in base diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.006">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Unified view line number 82 in base diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Unified view line number 82 in base diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.003">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Unified view line number 82 in base diff part getDiffCodePart() should return &quot;base&quot; when given the code element" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Unified view line number 82 in base diff part getDiffCodePart() should return &quot;base&quot; when given the code element" time="0.005">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Unified view line number 82 in base diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Vanilla Unified view line number 82 in base diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.006">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Split view line number 80 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Split view line number 80 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.008">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Split view line number 80 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Split view line number 80 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.023">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Split view line number 80 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Split view line number 80 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.008">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Split view line number 80 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Split view line number 80 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.005">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Split view line number 80 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Split view line number 80 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.005">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Split view line number 82 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Split view line number 82 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.008">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Split view line number 82 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Split view line number 82 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.007">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Split view line number 82 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Split view line number 82 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.005">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Split view line number 82 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Split view line number 82 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.007">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Split view line number 82 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Split view line number 82 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.007">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Split view line number 82 in base diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Split view line number 82 in base diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.005">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Split view line number 82 in base diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Split view line number 82 in base diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.01">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Split view line number 82 in base diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Split view line number 82 in base diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.005">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Split view line number 82 in base diff part getDiffCodePart() should return &quot;base&quot; when given the code element" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Split view line number 82 in base diff part getDiffCodePart() should return &quot;base&quot; when given the code element" time="0.006">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Split view line number 82 in base diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Split view line number 82 in base diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.01">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Unified view line number 80 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Unified view line number 80 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.004">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Unified view line number 80 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Unified view line number 80 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.005">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Unified view line number 80 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Unified view line number 80 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.009">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Unified view line number 80 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Unified view line number 80 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.008">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Unified view line number 80 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Unified view line number 80 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.003">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Unified view line number 82 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Unified view line number 82 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.005">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Unified view line number 82 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Unified view line number 82 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.01">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Unified view line number 82 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Unified view line number 82 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.005">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Unified view line number 82 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Unified view line number 82 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.006">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Unified view line number 82 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Unified view line number 82 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.006">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Unified view line number 82 in base diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Unified view line number 82 in base diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.008">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Unified view line number 82 in base diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Unified view line number 82 in base diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.004">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Unified view line number 82 in base diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Unified view line number 82 in base diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.003">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Unified view line number 82 in base diff part getDiffCodePart() should return &quot;base&quot; when given the code element" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Unified view line number 82 in base diff part getDiffCodePart() should return &quot;base&quot; when given the code element" time="0.005">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Unified view line number 82 in base diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Commit page Refined Github Unified view line number 82 in base diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.006">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Vanilla Split view line number 63 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Vanilla Split view line number 63 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.058">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Vanilla Split view line number 63 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Vanilla Split view line number 63 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.06">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Vanilla Split view line number 63 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Vanilla Split view line number 63 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.037">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Vanilla Split view line number 63 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Vanilla Split view line number 63 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.037">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Vanilla Split view line number 63 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Vanilla Split view line number 63 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.036">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Vanilla Split view line number 64 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Vanilla Split view line number 64 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.043">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Vanilla Split view line number 64 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Vanilla Split view line number 64 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.04">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Vanilla Split view line number 64 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Vanilla Split view line number 64 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.033">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Vanilla Split view line number 64 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Vanilla Split view line number 64 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.04">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Vanilla Split view line number 64 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Vanilla Split view line number 64 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.039">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Vanilla Unified view line number 63 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Vanilla Unified view line number 63 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.053">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Vanilla Unified view line number 63 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Vanilla Unified view line number 63 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.037">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Vanilla Unified view line number 63 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Vanilla Unified view line number 63 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.035">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Vanilla Unified view line number 63 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Vanilla Unified view line number 63 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.04">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Vanilla Unified view line number 63 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Vanilla Unified view line number 63 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.038">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Vanilla Unified view line number 64 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Vanilla Unified view line number 64 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.048">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Vanilla Unified view line number 64 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Vanilla Unified view line number 64 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.041">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Vanilla Unified view line number 64 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Vanilla Unified view line number 64 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.031">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Vanilla Unified view line number 64 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Vanilla Unified view line number 64 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.032">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Vanilla Unified view line number 64 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Vanilla Unified view line number 64 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.033">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Refined Github Split view line number 63 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Refined Github Split view line number 63 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.052">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Refined Github Split view line number 63 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Refined Github Split view line number 63 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.046">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Refined Github Split view line number 63 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Refined Github Split view line number 63 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.043">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Refined Github Split view line number 63 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Refined Github Split view line number 63 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.048">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Refined Github Split view line number 63 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Refined Github Split view line number 63 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.057">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Refined Github Split view line number 64 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Refined Github Split view line number 64 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.247">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Refined Github Split view line number 64 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Refined Github Split view line number 64 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.222">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Refined Github Split view line number 64 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Refined Github Split view line number 64 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.114">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Refined Github Split view line number 64 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Refined Github Split view line number 64 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.05">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Refined Github Split view line number 64 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Refined Github Split view line number 64 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.053">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Refined Github Unified view line number 63 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Refined Github Unified view line number 63 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.074">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Refined Github Unified view line number 63 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Refined Github Unified view line number 63 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.072">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Refined Github Unified view line number 63 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Refined Github Unified view line number 63 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.088">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Refined Github Unified view line number 63 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Refined Github Unified view line number 63 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.087">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Refined Github Unified view line number 63 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Refined Github Unified view line number 63 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.056">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Refined Github Unified view line number 64 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Refined Github Unified view line number 64 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.062">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Refined Github Unified view line number 64 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Refined Github Unified view line number 64 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.043">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Refined Github Unified view line number 64 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Refined Github Unified view line number 64 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.056">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Refined Github Unified view line number 64 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Refined Github Unified view line number 64 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.049">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Refined Github Unified view line number 64 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request page Refined Github Unified view line number 64 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.076">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request Discussion page Vanilla line number 64 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request Discussion page Vanilla line number 64 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.078">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request Discussion page Vanilla line number 64 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request Discussion page Vanilla line number 64 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.069">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request Discussion page Vanilla line number 64 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request Discussion page Vanilla line number 64 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.036">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request Discussion page Vanilla line number 64 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request Discussion page Vanilla line number 64 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.049">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request Discussion page Vanilla line number 64 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request Discussion page Vanilla line number 64 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.018">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request Discussion page Refined Github line number 64 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request Discussion page Refined Github line number 64 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.057">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request Discussion page Refined Github line number 64 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request Discussion page Refined Github line number 64 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.022">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request Discussion page Refined Github line number 64 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request Discussion page Refined Github line number 64 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.04">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request Discussion page Refined Github line number 64 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request Discussion page Refined Github line number 64 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.052">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request Discussion page Refined Github line number 64 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitHub DOM functions diffDomFunctions ghe-2.14.11 Pull Request Discussion page Refined Github line number 64 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.045">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Split view line number 41 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Split view line number 41 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.012">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Split view line number 41 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Split view line number 41 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.017">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Split view line number 41 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Split view line number 41 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.024">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Split view line number 41 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Split view line number 41 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.012">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Split view line number 41 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Split view line number 41 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.008">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Split view line number 42 in base diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Split view line number 42 in base diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.018">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Split view line number 42 in base diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Split view line number 42 in base diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.007">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Split view line number 42 in base diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Split view line number 42 in base diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.013">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Split view line number 42 in base diff part getDiffCodePart() should return &quot;base&quot; when given the code element" name="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Split view line number 42 in base diff part getDiffCodePart() should return &quot;base&quot; when given the code element" time="0.006">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Split view line number 42 in base diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Split view line number 42 in base diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.005">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Split view line number 42 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Split view line number 42 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.011">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Split view line number 42 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Split view line number 42 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.006">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Split view line number 42 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Split view line number 42 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.008">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Split view line number 42 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Split view line number 42 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.004">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Split view line number 42 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Split view line number 42 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.005">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Unified view line number 41 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Unified view line number 41 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.011">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Unified view line number 41 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Unified view line number 41 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.007">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Unified view line number 41 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Unified view line number 41 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.004">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Unified view line number 41 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Unified view line number 41 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.008">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Unified view line number 41 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Unified view line number 41 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.006">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Unified view line number 42 in base diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Unified view line number 42 in base diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.007">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Unified view line number 42 in base diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Unified view line number 42 in base diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.008">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Unified view line number 42 in base diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Unified view line number 42 in base diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.005">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Unified view line number 42 in base diff part getDiffCodePart() should return &quot;base&quot; when given the code element" name="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Unified view line number 42 in base diff part getDiffCodePart() should return &quot;base&quot; when given the code element" time="0.005">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Unified view line number 42 in base diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Unified view line number 42 in base diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.007">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Unified view line number 42 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Unified view line number 42 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.006">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Unified view line number 42 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Unified view line number 42 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.01">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Unified view line number 42 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Unified view line number 42 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.009">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Unified view line number 42 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Unified view line number 42 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.005">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Unified view line number 42 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitHub DOM functions diffDomFunctions github.com Commit page Vanilla Unified view line number 42 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.005">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Split view line number 41 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Split view line number 41 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.01">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Split view line number 41 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Split view line number 41 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.007">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Split view line number 41 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Split view line number 41 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.006">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Split view line number 41 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Split view line number 41 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.007">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Split view line number 41 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Split view line number 41 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.005">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Split view line number 42 in base diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Split view line number 42 in base diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.006">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Split view line number 42 in base diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Split view line number 42 in base diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.009">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Split view line number 42 in base diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Split view line number 42 in base diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.006">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Split view line number 42 in base diff part getDiffCodePart() should return &quot;base&quot; when given the code element" name="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Split view line number 42 in base diff part getDiffCodePart() should return &quot;base&quot; when given the code element" time="0.007">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Split view line number 42 in base diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Split view line number 42 in base diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.005">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Split view line number 42 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Split view line number 42 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.006">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Split view line number 42 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Split view line number 42 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.008">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Split view line number 42 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Split view line number 42 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.005">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Split view line number 42 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Split view line number 42 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.004">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Split view line number 42 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Split view line number 42 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.007">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Unified view line number 41 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Unified view line number 41 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.006">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Unified view line number 41 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Unified view line number 41 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.009">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Unified view line number 41 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Unified view line number 41 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.005">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Unified view line number 41 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Unified view line number 41 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.005">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Unified view line number 41 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Unified view line number 41 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.005">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Unified view line number 42 in base diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Unified view line number 42 in base diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.008">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Unified view line number 42 in base diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Unified view line number 42 in base diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.007">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Unified view line number 42 in base diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Unified view line number 42 in base diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.005">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Unified view line number 42 in base diff part getDiffCodePart() should return &quot;base&quot; when given the code element" name="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Unified view line number 42 in base diff part getDiffCodePart() should return &quot;base&quot; when given the code element" time="0.007">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Unified view line number 42 in base diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Unified view line number 42 in base diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.004">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Unified view line number 42 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Unified view line number 42 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.006">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Unified view line number 42 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Unified view line number 42 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.008">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Unified view line number 42 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Unified view line number 42 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.004">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Unified view line number 42 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Unified view line number 42 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.004">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Unified view line number 42 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitHub DOM functions diffDomFunctions github.com Commit page Refined Github Unified view line number 42 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.007">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Split view line number 570 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Split view line number 570 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.007">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Split view line number 570 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Split view line number 570 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.012">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Split view line number 570 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Split view line number 570 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.006">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Split view line number 570 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Split view line number 570 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.004">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Split view line number 570 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Split view line number 570 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.005">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Split view line number 572 in base diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Split view line number 572 in base diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.008">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Split view line number 572 in base diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Split view line number 572 in base diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.006">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Split view line number 572 in base diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Split view line number 572 in base diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.01">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Split view line number 572 in base diff part getDiffCodePart() should return &quot;base&quot; when given the code element" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Split view line number 572 in base diff part getDiffCodePart() should return &quot;base&quot; when given the code element" time="0.004">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Split view line number 572 in base diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Split view line number 572 in base diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.005">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Split view line number 572 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Split view line number 572 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.008">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Split view line number 572 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Split view line number 572 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.007">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Split view line number 572 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Split view line number 572 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.009">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Split view line number 572 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Split view line number 572 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.009">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Split view line number 572 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Split view line number 572 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.005">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Unified view line number 570 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Unified view line number 570 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.006">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Unified view line number 570 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Unified view line number 570 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.008">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Unified view line number 570 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Unified view line number 570 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.005">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Unified view line number 570 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Unified view line number 570 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.004">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Unified view line number 570 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Unified view line number 570 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.007">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Unified view line number 572 in base diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Unified view line number 572 in base diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.005">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Unified view line number 572 in base diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Unified view line number 572 in base diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.005">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Unified view line number 572 in base diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Unified view line number 572 in base diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.009">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Unified view line number 572 in base diff part getDiffCodePart() should return &quot;base&quot; when given the code element" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Unified view line number 572 in base diff part getDiffCodePart() should return &quot;base&quot; when given the code element" time="0.005">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Unified view line number 572 in base diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Unified view line number 572 in base diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.004">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Unified view line number 572 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Unified view line number 572 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.004">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Unified view line number 572 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Unified view line number 572 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.008">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Unified view line number 572 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Unified view line number 572 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.004">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Unified view line number 572 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Unified view line number 572 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.004">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Unified view line number 572 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Vanilla Unified view line number 572 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.004">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Split view line number 570 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Split view line number 570 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.008">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Split view line number 570 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Split view line number 570 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.006">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Split view line number 570 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Split view line number 570 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.007">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Split view line number 570 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Split view line number 570 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.005">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Split view line number 570 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Split view line number 570 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.004">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Split view line number 572 in base diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Split view line number 572 in base diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.007">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Split view line number 572 in base diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Split view line number 572 in base diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.005">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Split view line number 572 in base diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Split view line number 572 in base diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.007">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Split view line number 572 in base diff part getDiffCodePart() should return &quot;base&quot; when given the code element" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Split view line number 572 in base diff part getDiffCodePart() should return &quot;base&quot; when given the code element" time="0.005">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Split view line number 572 in base diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Split view line number 572 in base diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.004">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Split view line number 572 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Split view line number 572 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.007">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Split view line number 572 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Split view line number 572 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.005">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Split view line number 572 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Split view line number 572 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.008">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Split view line number 572 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Split view line number 572 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.004">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Split view line number 572 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Split view line number 572 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.005">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Unified view line number 570 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Unified view line number 570 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.007">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Unified view line number 570 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Unified view line number 570 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.005">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Unified view line number 570 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Unified view line number 570 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.003">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Unified view line number 570 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Unified view line number 570 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.003">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Unified view line number 570 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Unified view line number 570 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.006">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Unified view line number 572 in base diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Unified view line number 572 in base diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.004">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Unified view line number 572 in base diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Unified view line number 572 in base diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.004">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Unified view line number 572 in base diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Unified view line number 572 in base diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.006">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Unified view line number 572 in base diff part getDiffCodePart() should return &quot;base&quot; when given the code element" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Unified view line number 572 in base diff part getDiffCodePart() should return &quot;base&quot; when given the code element" time="0.003">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Unified view line number 572 in base diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Unified view line number 572 in base diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.004">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Unified view line number 572 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Unified view line number 572 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.004">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Unified view line number 572 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Unified view line number 572 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.008">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Unified view line number 572 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Unified view line number 572 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.004">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Unified view line number 572 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Unified view line number 572 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.004">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Unified view line number 572 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitHub DOM functions diffDomFunctions github.com Pull Request page Refined Github Unified view line number 572 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.004">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request Discussion page Vanilla line number 13 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitHub DOM functions diffDomFunctions github.com Pull Request Discussion page Vanilla line number 13 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.215">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request Discussion page Vanilla line number 13 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitHub DOM functions diffDomFunctions github.com Pull Request Discussion page Vanilla line number 13 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.049">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request Discussion page Vanilla line number 13 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitHub DOM functions diffDomFunctions github.com Pull Request Discussion page Vanilla line number 13 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.041">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request Discussion page Vanilla line number 13 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="GitHub DOM functions diffDomFunctions github.com Pull Request Discussion page Vanilla line number 13 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.044">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request Discussion page Vanilla line number 13 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitHub DOM functions diffDomFunctions github.com Pull Request Discussion page Vanilla line number 13 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.038">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request Discussion page Refined Github line number 13 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitHub DOM functions diffDomFunctions github.com Pull Request Discussion page Refined Github line number 13 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.185">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request Discussion page Refined Github line number 13 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitHub DOM functions diffDomFunctions github.com Pull Request Discussion page Refined Github line number 13 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.048">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request Discussion page Refined Github line number 13 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitHub DOM functions diffDomFunctions github.com Pull Request Discussion page Refined Github line number 13 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.057">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request Discussion page Refined Github line number 13 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="GitHub DOM functions diffDomFunctions github.com Pull Request Discussion page Refined Github line number 13 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.075">
    </testcase>
    <testcase classname="GitHub DOM functions diffDomFunctions github.com Pull Request Discussion page Refined Github line number 13 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitHub DOM functions diffDomFunctions github.com Pull Request Discussion page Refined Github line number 13 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.069">
    </testcase>
    <testcase classname="GitHub DOM functions singleFileDOMFunctions github.com Vanilla line number 1 getLineElementFromLineNumber() should return the right line element given the line number" name="GitHub DOM functions singleFileDOMFunctions github.com Vanilla line number 1 getLineElementFromLineNumber() should return the right line element given the line number" time="0.006">
    </testcase>
    <testcase classname="GitHub DOM functions singleFileDOMFunctions github.com Vanilla line number 1 getCodeElementFromLineNumber() should return the right code element given the line number" name="GitHub DOM functions singleFileDOMFunctions github.com Vanilla line number 1 getCodeElementFromLineNumber() should return the right code element given the line number" time="0.01">
    </testcase>
    <testcase classname="GitHub DOM functions singleFileDOMFunctions github.com Vanilla line number 1 getLineNumberFromCodeElement() should return the right line number given the code element" name="GitHub DOM functions singleFileDOMFunctions github.com Vanilla line number 1 getLineNumberFromCodeElement() should return the right line number given the code element" time="0.004">
    </testcase>
    <testcase classname="GitHub DOM functions singleFileDOMFunctions github.com Vanilla line number 1 isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitHub DOM functions singleFileDOMFunctions github.com Vanilla line number 1 isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.002">
    </testcase>
    <testcase classname="GitHub DOM functions singleFileDOMFunctions github.com Vanilla line number 2 getLineElementFromLineNumber() should return the right line element given the line number" name="GitHub DOM functions singleFileDOMFunctions github.com Vanilla line number 2 getLineElementFromLineNumber() should return the right line element given the line number" time="0.004">
    </testcase>
    <testcase classname="GitHub DOM functions singleFileDOMFunctions github.com Vanilla line number 2 getCodeElementFromLineNumber() should return the right code element given the line number" name="GitHub DOM functions singleFileDOMFunctions github.com Vanilla line number 2 getCodeElementFromLineNumber() should return the right code element given the line number" time="0.005">
    </testcase>
    <testcase classname="GitHub DOM functions singleFileDOMFunctions github.com Vanilla line number 2 getLineNumberFromCodeElement() should return the right line number given the code element" name="GitHub DOM functions singleFileDOMFunctions github.com Vanilla line number 2 getLineNumberFromCodeElement() should return the right line number given the code element" time="0.006">
    </testcase>
    <testcase classname="GitHub DOM functions singleFileDOMFunctions github.com Vanilla line number 2 isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitHub DOM functions singleFileDOMFunctions github.com Vanilla line number 2 isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.003">
    </testcase>
    <testcase classname="GitHub DOM functions singleFileDOMFunctions github.com Refined Github line number 1 getLineElementFromLineNumber() should return the right line element given the line number" name="GitHub DOM functions singleFileDOMFunctions github.com Refined Github line number 1 getLineElementFromLineNumber() should return the right line element given the line number" time="0.013">
    </testcase>
    <testcase classname="GitHub DOM functions singleFileDOMFunctions github.com Refined Github line number 1 getCodeElementFromLineNumber() should return the right code element given the line number" name="GitHub DOM functions singleFileDOMFunctions github.com Refined Github line number 1 getCodeElementFromLineNumber() should return the right code element given the line number" time="0.006">
    </testcase>
    <testcase classname="GitHub DOM functions singleFileDOMFunctions github.com Refined Github line number 1 getLineNumberFromCodeElement() should return the right line number given the code element" name="GitHub DOM functions singleFileDOMFunctions github.com Refined Github line number 1 getLineNumberFromCodeElement() should return the right line number given the code element" time="0.004">
    </testcase>
    <testcase classname="GitHub DOM functions singleFileDOMFunctions github.com Refined Github line number 1 isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitHub DOM functions singleFileDOMFunctions github.com Refined Github line number 1 isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.005">
    </testcase>
    <testcase classname="GitHub DOM functions singleFileDOMFunctions github.com Refined Github line number 2 getLineElementFromLineNumber() should return the right line element given the line number" name="GitHub DOM functions singleFileDOMFunctions github.com Refined Github line number 2 getLineElementFromLineNumber() should return the right line element given the line number" time="0.007">
    </testcase>
    <testcase classname="GitHub DOM functions singleFileDOMFunctions github.com Refined Github line number 2 getCodeElementFromLineNumber() should return the right code element given the line number" name="GitHub DOM functions singleFileDOMFunctions github.com Refined Github line number 2 getCodeElementFromLineNumber() should return the right code element given the line number" time="0.008">
    </testcase>
    <testcase classname="GitHub DOM functions singleFileDOMFunctions github.com Refined Github line number 2 getLineNumberFromCodeElement() should return the right line number given the code element" name="GitHub DOM functions singleFileDOMFunctions github.com Refined Github line number 2 getLineNumberFromCodeElement() should return the right line number given the code element" time="0.006">
    </testcase>
    <testcase classname="GitHub DOM functions singleFileDOMFunctions github.com Refined Github line number 2 isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitHub DOM functions singleFileDOMFunctions github.com Refined Github line number 2 isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.011">
    </testcase>
    <testcase classname="GitHub DOM functions singleFileDOMFunctions ghe-2.14.11 Vanilla line number 1 getLineElementFromLineNumber() should return the right line element given the line number" name="GitHub DOM functions singleFileDOMFunctions ghe-2.14.11 Vanilla line number 1 getLineElementFromLineNumber() should return the right line element given the line number" time="0.016">
    </testcase>
    <testcase classname="GitHub DOM functions singleFileDOMFunctions ghe-2.14.11 Vanilla line number 1 getCodeElementFromLineNumber() should return the right code element given the line number" name="GitHub DOM functions singleFileDOMFunctions ghe-2.14.11 Vanilla line number 1 getCodeElementFromLineNumber() should return the right code element given the line number" time="0.022">
    </testcase>
    <testcase classname="GitHub DOM functions singleFileDOMFunctions ghe-2.14.11 Vanilla line number 1 getLineNumberFromCodeElement() should return the right line number given the code element" name="GitHub DOM functions singleFileDOMFunctions ghe-2.14.11 Vanilla line number 1 getLineNumberFromCodeElement() should return the right line number given the code element" time="0.012">
    </testcase>
    <testcase classname="GitHub DOM functions singleFileDOMFunctions ghe-2.14.11 Vanilla line number 1 isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitHub DOM functions singleFileDOMFunctions ghe-2.14.11 Vanilla line number 1 isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.021">
    </testcase>
    <testcase classname="GitHub DOM functions singleFileDOMFunctions ghe-2.14.11 Vanilla line number 2 getLineElementFromLineNumber() should return the right line element given the line number" name="GitHub DOM functions singleFileDOMFunctions ghe-2.14.11 Vanilla line number 2 getLineElementFromLineNumber() should return the right line element given the line number" time="0.019">
    </testcase>
    <testcase classname="GitHub DOM functions singleFileDOMFunctions ghe-2.14.11 Vanilla line number 2 getCodeElementFromLineNumber() should return the right code element given the line number" name="GitHub DOM functions singleFileDOMFunctions ghe-2.14.11 Vanilla line number 2 getCodeElementFromLineNumber() should return the right code element given the line number" time="0.021">
    </testcase>
    <testcase classname="GitHub DOM functions singleFileDOMFunctions ghe-2.14.11 Vanilla line number 2 getLineNumberFromCodeElement() should return the right line number given the code element" name="GitHub DOM functions singleFileDOMFunctions ghe-2.14.11 Vanilla line number 2 getLineNumberFromCodeElement() should return the right line number given the code element" time="0.022">
    </testcase>
    <testcase classname="GitHub DOM functions singleFileDOMFunctions ghe-2.14.11 Vanilla line number 2 isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitHub DOM functions singleFileDOMFunctions ghe-2.14.11 Vanilla line number 2 isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.025">
    </testcase>
    <testcase classname="GitHub DOM functions singleFileDOMFunctions ghe-2.14.11 Refined Github line number 1 getLineElementFromLineNumber() should return the right line element given the line number" name="GitHub DOM functions singleFileDOMFunctions ghe-2.14.11 Refined Github line number 1 getLineElementFromLineNumber() should return the right line element given the line number" time="0.022">
    </testcase>
    <testcase classname="GitHub DOM functions singleFileDOMFunctions ghe-2.14.11 Refined Github line number 1 getCodeElementFromLineNumber() should return the right code element given the line number" name="GitHub DOM functions singleFileDOMFunctions ghe-2.14.11 Refined Github line number 1 getCodeElementFromLineNumber() should return the right code element given the line number" time="0.024">
    </testcase>
    <testcase classname="GitHub DOM functions singleFileDOMFunctions ghe-2.14.11 Refined Github line number 1 getLineNumberFromCodeElement() should return the right line number given the code element" name="GitHub DOM functions singleFileDOMFunctions ghe-2.14.11 Refined Github line number 1 getLineNumberFromCodeElement() should return the right line number given the code element" time="0.012">
    </testcase>
    <testcase classname="GitHub DOM functions singleFileDOMFunctions ghe-2.14.11 Refined Github line number 1 isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitHub DOM functions singleFileDOMFunctions ghe-2.14.11 Refined Github line number 1 isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.026">
    </testcase>
    <testcase classname="GitHub DOM functions singleFileDOMFunctions ghe-2.14.11 Refined Github line number 2 getLineElementFromLineNumber() should return the right line element given the line number" name="GitHub DOM functions singleFileDOMFunctions ghe-2.14.11 Refined Github line number 2 getLineElementFromLineNumber() should return the right line element given the line number" time="0.008">
    </testcase>
    <testcase classname="GitHub DOM functions singleFileDOMFunctions ghe-2.14.11 Refined Github line number 2 getCodeElementFromLineNumber() should return the right code element given the line number" name="GitHub DOM functions singleFileDOMFunctions ghe-2.14.11 Refined Github line number 2 getCodeElementFromLineNumber() should return the right code element given the line number" time="0.015">
    </testcase>
    <testcase classname="GitHub DOM functions singleFileDOMFunctions ghe-2.14.11 Refined Github line number 2 getLineNumberFromCodeElement() should return the right line number given the code element" name="GitHub DOM functions singleFileDOMFunctions ghe-2.14.11 Refined Github line number 2 getLineNumberFromCodeElement() should return the right line number given the code element" time="0.008">
    </testcase>
    <testcase classname="GitHub DOM functions singleFileDOMFunctions ghe-2.14.11 Refined Github line number 2 isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitHub DOM functions singleFileDOMFunctions ghe-2.14.11 Refined Github line number 2 isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.012">
    </testcase>
    <testcase classname="GitHub DOM functions isDomSplitDiff() Version github.com Pull Request page Vanilla should return true for split view" name="GitHub DOM functions isDomSplitDiff() Version github.com Pull Request page Vanilla should return true for split view" time="0.006">
    </testcase>
    <testcase classname="GitHub DOM functions isDomSplitDiff() Version github.com Pull Request page Vanilla should return false for unified view" name="GitHub DOM functions isDomSplitDiff() Version github.com Pull Request page Vanilla should return false for unified view" time="0.004">
    </testcase>
    <testcase classname="GitHub DOM functions isDomSplitDiff() Version github.com Pull Request page Refined Github should return true for split view" name="GitHub DOM functions isDomSplitDiff() Version github.com Pull Request page Refined Github should return true for split view" time="0.005">
    </testcase>
    <testcase classname="GitHub DOM functions isDomSplitDiff() Version github.com Pull Request page Refined Github should return false for unified view" name="GitHub DOM functions isDomSplitDiff() Version github.com Pull Request page Refined Github should return false for unified view" time="0.011">
    </testcase>
    <testcase classname="GitHub DOM functions isDomSplitDiff() Version github.com Commit page Vanilla should return true for split view" name="GitHub DOM functions isDomSplitDiff() Version github.com Commit page Vanilla should return true for split view" time="0.007">
    </testcase>
    <testcase classname="GitHub DOM functions isDomSplitDiff() Version github.com Commit page Vanilla should return false for unified view" name="GitHub DOM functions isDomSplitDiff() Version github.com Commit page Vanilla should return false for unified view" time="0.004">
    </testcase>
    <testcase classname="GitHub DOM functions isDomSplitDiff() Version github.com Commit page Refined Github should return true for split view" name="GitHub DOM functions isDomSplitDiff() Version github.com Commit page Refined Github should return true for split view" time="0.009">
    </testcase>
    <testcase classname="GitHub DOM functions isDomSplitDiff() Version github.com Commit page Refined Github should return false for unified view" name="GitHub DOM functions isDomSplitDiff() Version github.com Commit page Refined Github should return false for unified view" time="0.006">
    </testcase>
    <testcase classname="GitHub DOM functions isDomSplitDiff() Version github.com Pull Request Discussion page Vanilla should return false" name="GitHub DOM functions isDomSplitDiff() Version github.com Pull Request Discussion page Vanilla should return false" time="0.044">
    </testcase>
    <testcase classname="GitHub DOM functions isDomSplitDiff() Version github.com Pull Request Discussion page Refined Github should return false" name="GitHub DOM functions isDomSplitDiff() Version github.com Pull Request Discussion page Refined Github should return false" time="0.056">
    </testcase>
    <testcase classname="GitHub DOM functions isDomSplitDiff() Version ghe-2.14.11 Pull Request page Vanilla should return true for split view" name="GitHub DOM functions isDomSplitDiff() Version ghe-2.14.11 Pull Request page Vanilla should return true for split view" time="0.041">
    </testcase>
    <testcase classname="GitHub DOM functions isDomSplitDiff() Version ghe-2.14.11 Pull Request page Vanilla should return false for unified view" name="GitHub DOM functions isDomSplitDiff() Version ghe-2.14.11 Pull Request page Vanilla should return false for unified view" time="0.043">
    </testcase>
    <testcase classname="GitHub DOM functions isDomSplitDiff() Version ghe-2.14.11 Pull Request page Refined Github should return true for split view" name="GitHub DOM functions isDomSplitDiff() Version ghe-2.14.11 Pull Request page Refined Github should return true for split view" time="0.039">
    </testcase>
    <testcase classname="GitHub DOM functions isDomSplitDiff() Version ghe-2.14.11 Pull Request page Refined Github should return false for unified view" name="GitHub DOM functions isDomSplitDiff() Version ghe-2.14.11 Pull Request page Refined Github should return false for unified view" time="0.03">
    </testcase>
    <testcase classname="GitHub DOM functions isDomSplitDiff() Version ghe-2.14.11 Commit page Vanilla should return true for split view" name="GitHub DOM functions isDomSplitDiff() Version ghe-2.14.11 Commit page Vanilla should return true for split view" time="0.007">
    </testcase>
    <testcase classname="GitHub DOM functions isDomSplitDiff() Version ghe-2.14.11 Commit page Vanilla should return false for unified view" name="GitHub DOM functions isDomSplitDiff() Version ghe-2.14.11 Commit page Vanilla should return false for unified view" time="0.003">
    </testcase>
    <testcase classname="GitHub DOM functions isDomSplitDiff() Version ghe-2.14.11 Commit page Refined Github should return true for split view" name="GitHub DOM functions isDomSplitDiff() Version ghe-2.14.11 Commit page Refined Github should return true for split view" time="0.004">
    </testcase>
    <testcase classname="GitHub DOM functions isDomSplitDiff() Version ghe-2.14.11 Commit page Refined Github should return false for unified view" name="GitHub DOM functions isDomSplitDiff() Version ghe-2.14.11 Commit page Refined Github should return false for unified view" time="0.003">
    </testcase>
    <testcase classname="GitHub DOM functions isDomSplitDiff() Version ghe-2.14.11 Pull Request Discussion page Vanilla should return false" name="GitHub DOM functions isDomSplitDiff() Version ghe-2.14.11 Pull Request Discussion page Vanilla should return false" time="0.015">
    </testcase>
    <testcase classname="GitHub DOM functions isDomSplitDiff() Version ghe-2.14.11 Pull Request Discussion page Refined Github should return false" name="GitHub DOM functions isDomSplitDiff() Version ghe-2.14.11 Pull Request Discussion page Refined Github should return false" time="0.016">
    </testcase>
  </testsuite>
  <testsuite name="splitExtensionID" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:04" time="0.652" tests="2">
    <testcase classname="splitExtensionID splits extensionID with host" name="splitExtensionID splits extensionID with host" time="0.002">
    </testcase>
    <testcase classname="splitExtensionID splits extensionID without host" name="splitExtensionID splits extensionID without host" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Hoverifier" errors="0" failures="0" skipped="2" timestamp="2023-08-29T07:22:02" time="3.047" tests="10">
    <testcase classname="Hoverifier highlights token when hover is fetched (not before)" name="Hoverifier highlights token when hover is fetched (not before)" time="0.068">
    </testcase>
    <testcase classname="Hoverifier emits the currently hovered token" name="Hoverifier emits the currently hovered token" time="0.071">
    </testcase>
    <testcase classname="Hoverifier highlights document highlights" name="Hoverifier highlights document highlights" time="0.562">
    </testcase>
    <testcase classname="Hoverifier hides the hover overlay when the hovered token intersects with a scrollBoundary" name="Hoverifier hides the hover overlay when the hovered token intersects with a scrollBoundary" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Hoverifier debounces mousemove events before showing overlay" name="Hoverifier debounces mousemove events before showing overlay" time="0.178">
    </testcase>
    <testcase classname="Hoverifier keeps the overlay open when the mouse briefly moves over another token on the way to the overlay" name="Hoverifier keeps the overlay open when the mouse briefly moves over another token on the way to the overlay" time="0.1">
    </testcase>
    <testcase classname="Hoverifier dedupes mouseover and mousemove event on same token" name="Hoverifier dedupes mouseover and mousemove event on same token" time="0.132">
    </testcase>
    <testcase classname="Hoverifier PositionAdjuster gets called when expected" name="Hoverifier PositionAdjuster gets called when expected" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Hoverifier unhoverify hides the hover overlay when the code view is unhoverified" name="Hoverifier unhoverify hides the hover overlay when the code view is unhoverified" time="0.546">
    </testcase>
    <testcase classname="Hoverifier unhoverify does not hide the hover overlay when a different code view is unhoverified" name="Hoverifier unhoverify does not hide the hover overlay when a different code view is unhoverified" time="0.537">
    </testcase>
  </testsuite>
  <testsuite name="phabricator/codeHost" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:05" time="0.792" tests="12">
    <testcase classname="phabricator/codeHost diffCodeView getToolbarMount() creates and returns a new mount in the container" name="phabricator/codeHost diffCodeView getToolbarMount() creates and returns a new mount in the container" time="0.014">
    </testcase>
    <testcase classname="phabricator/codeHost diffCodeView getToolbarMount() is idempotent" name="phabricator/codeHost diffCodeView getToolbarMount() is idempotent" time="0.005">
    </testcase>
    <testcase classname="phabricator/codeHost diffCodeView getToolbarMount() throws an Error if given an unexpected code view" name="phabricator/codeHost diffCodeView getToolbarMount() throws an Error if given an unexpected code view" time="0.001">
    </testcase>
    <testcase classname="phabricator/codeHost diffCodeView getToolbarMount() creates and returns a new mount in the container" name="phabricator/codeHost diffCodeView getToolbarMount() creates and returns a new mount in the container" time="0.004">
    </testcase>
    <testcase classname="phabricator/codeHost diffCodeView getToolbarMount() is idempotent" name="phabricator/codeHost diffCodeView getToolbarMount() is idempotent" time="0.003">
    </testcase>
    <testcase classname="phabricator/codeHost diffCodeView getToolbarMount() throws an Error if given an unexpected code view" name="phabricator/codeHost diffCodeView getToolbarMount() throws an Error if given an unexpected code view" time="0.001">
    </testcase>
    <testcase classname="phabricator/codeHost commitCodeView getToolbarMount() creates and returns a new mount in the container" name="phabricator/codeHost commitCodeView getToolbarMount() creates and returns a new mount in the container" time="0.007">
    </testcase>
    <testcase classname="phabricator/codeHost commitCodeView getToolbarMount() is idempotent" name="phabricator/codeHost commitCodeView getToolbarMount() is idempotent" time="0.009">
    </testcase>
    <testcase classname="phabricator/codeHost commitCodeView getToolbarMount() throws an Error if given an unexpected code view" name="phabricator/codeHost commitCodeView getToolbarMount() throws an Error if given an unexpected code view" time="0.001">
    </testcase>
    <testcase classname="phabricator/codeHost commitCodeView getToolbarMount() creates and returns a new mount in the container" name="phabricator/codeHost commitCodeView getToolbarMount() creates and returns a new mount in the container" time="0.007">
    </testcase>
    <testcase classname="phabricator/codeHost commitCodeView getToolbarMount() is idempotent" name="phabricator/codeHost commitCodeView getToolbarMount() is idempotent" time="0.009">
    </testcase>
    <testcase classname="phabricator/codeHost commitCodeView getToolbarMount() throws an Error if given an unexpected code view" name="phabricator/codeHost commitCodeView getToolbarMount() throws an Error if given an unexpected code view" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Phabricator DOM functions" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:05" time="1.38" tests="88">
    <testcase classname="Phabricator DOM functions diffDOMFunctions Commit Page Split view, version 2017.09-r1 line number 3 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="Phabricator DOM functions diffDOMFunctions Commit Page Split view, version 2017.09-r1 line number 3 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.026">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Commit Page Split view, version 2017.09-r1 line number 3 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="Phabricator DOM functions diffDOMFunctions Commit Page Split view, version 2017.09-r1 line number 3 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.008">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Commit Page Split view, version 2017.09-r1 line number 3 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="Phabricator DOM functions diffDOMFunctions Commit Page Split view, version 2017.09-r1 line number 3 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.01">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Commit Page Split view, version 2017.09-r1 line number 3 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="Phabricator DOM functions diffDOMFunctions Commit Page Split view, version 2017.09-r1 line number 3 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.014">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Commit Page Split view, version 2017.09-r1 line number 3 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="Phabricator DOM functions diffDOMFunctions Commit Page Split view, version 2017.09-r1 line number 3 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.006">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Commit Page Split view, version 2017.09-r1 line number 7 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="Phabricator DOM functions diffDOMFunctions Commit Page Split view, version 2017.09-r1 line number 7 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.006">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Commit Page Split view, version 2017.09-r1 line number 7 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="Phabricator DOM functions diffDOMFunctions Commit Page Split view, version 2017.09-r1 line number 7 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.007">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Commit Page Split view, version 2017.09-r1 line number 7 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="Phabricator DOM functions diffDOMFunctions Commit Page Split view, version 2017.09-r1 line number 7 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.009">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Commit Page Split view, version 2017.09-r1 line number 7 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="Phabricator DOM functions diffDOMFunctions Commit Page Split view, version 2017.09-r1 line number 7 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.004">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Commit Page Split view, version 2017.09-r1 line number 7 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="Phabricator DOM functions diffDOMFunctions Commit Page Split view, version 2017.09-r1 line number 7 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.004">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Commit Page Split view, version 2017.09-r1 line number 10 in base diff part getLineElementFromLineNumber() should return the right line element given the line number" name="Phabricator DOM functions diffDOMFunctions Commit Page Split view, version 2017.09-r1 line number 10 in base diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.007">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Commit Page Split view, version 2017.09-r1 line number 10 in base diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="Phabricator DOM functions diffDOMFunctions Commit Page Split view, version 2017.09-r1 line number 10 in base diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.009">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Commit Page Split view, version 2017.09-r1 line number 10 in base diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="Phabricator DOM functions diffDOMFunctions Commit Page Split view, version 2017.09-r1 line number 10 in base diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.004">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Commit Page Split view, version 2017.09-r1 line number 10 in base diff part getDiffCodePart() should return &quot;base&quot; when given the code element" name="Phabricator DOM functions diffDOMFunctions Commit Page Split view, version 2017.09-r1 line number 10 in base diff part getDiffCodePart() should return &quot;base&quot; when given the code element" time="0.004">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Commit Page Split view, version 2017.09-r1 line number 10 in base diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="Phabricator DOM functions diffDOMFunctions Commit Page Split view, version 2017.09-r1 line number 10 in base diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.003">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Commit Page Unified view, version 2017.09-r1 line number 3 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="Phabricator DOM functions diffDOMFunctions Commit Page Unified view, version 2017.09-r1 line number 3 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.009">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Commit Page Unified view, version 2017.09-r1 line number 3 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="Phabricator DOM functions diffDOMFunctions Commit Page Unified view, version 2017.09-r1 line number 3 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.004">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Commit Page Unified view, version 2017.09-r1 line number 3 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="Phabricator DOM functions diffDOMFunctions Commit Page Unified view, version 2017.09-r1 line number 3 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.004">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Commit Page Unified view, version 2017.09-r1 line number 3 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="Phabricator DOM functions diffDOMFunctions Commit Page Unified view, version 2017.09-r1 line number 3 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.004">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Commit Page Unified view, version 2017.09-r1 line number 3 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="Phabricator DOM functions diffDOMFunctions Commit Page Unified view, version 2017.09-r1 line number 3 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.006">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Commit Page Unified view, version 2017.09-r1 line number 7 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="Phabricator DOM functions diffDOMFunctions Commit Page Unified view, version 2017.09-r1 line number 7 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.006">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Commit Page Unified view, version 2017.09-r1 line number 7 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="Phabricator DOM functions diffDOMFunctions Commit Page Unified view, version 2017.09-r1 line number 7 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.004">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Commit Page Unified view, version 2017.09-r1 line number 7 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="Phabricator DOM functions diffDOMFunctions Commit Page Unified view, version 2017.09-r1 line number 7 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.005">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Commit Page Unified view, version 2017.09-r1 line number 7 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="Phabricator DOM functions diffDOMFunctions Commit Page Unified view, version 2017.09-r1 line number 7 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.002">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Commit Page Unified view, version 2017.09-r1 line number 7 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="Phabricator DOM functions diffDOMFunctions Commit Page Unified view, version 2017.09-r1 line number 7 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.007">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Commit Page Unified view, version 2017.09-r1 line number 10 in base diff part getLineElementFromLineNumber() should return the right line element given the line number" name="Phabricator DOM functions diffDOMFunctions Commit Page Unified view, version 2017.09-r1 line number 10 in base diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.005">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Commit Page Unified view, version 2017.09-r1 line number 10 in base diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="Phabricator DOM functions diffDOMFunctions Commit Page Unified view, version 2017.09-r1 line number 10 in base diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.004">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Commit Page Unified view, version 2017.09-r1 line number 10 in base diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="Phabricator DOM functions diffDOMFunctions Commit Page Unified view, version 2017.09-r1 line number 10 in base diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.002">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Commit Page Unified view, version 2017.09-r1 line number 10 in base diff part getDiffCodePart() should return &quot;base&quot; when given the code element" name="Phabricator DOM functions diffDOMFunctions Commit Page Unified view, version 2017.09-r1 line number 10 in base diff part getDiffCodePart() should return &quot;base&quot; when given the code element" time="0.002">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Commit Page Unified view, version 2017.09-r1 line number 10 in base diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="Phabricator DOM functions diffDOMFunctions Commit Page Unified view, version 2017.09-r1 line number 10 in base diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.007">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Differential Page Split view, version 2017.09-r1 line number 9 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="Phabricator DOM functions diffDOMFunctions Differential Page Split view, version 2017.09-r1 line number 9 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.004">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Differential Page Split view, version 2017.09-r1 line number 9 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="Phabricator DOM functions diffDOMFunctions Differential Page Split view, version 2017.09-r1 line number 9 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.004">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Differential Page Split view, version 2017.09-r1 line number 9 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="Phabricator DOM functions diffDOMFunctions Differential Page Split view, version 2017.09-r1 line number 9 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.002">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Differential Page Split view, version 2017.09-r1 line number 9 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="Phabricator DOM functions diffDOMFunctions Differential Page Split view, version 2017.09-r1 line number 9 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.002">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Differential Page Split view, version 2017.09-r1 line number 9 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="Phabricator DOM functions diffDOMFunctions Differential Page Split view, version 2017.09-r1 line number 9 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.01">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Differential Page Split view, version 2017.09-r1 line number 10 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="Phabricator DOM functions diffDOMFunctions Differential Page Split view, version 2017.09-r1 line number 10 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.003">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Differential Page Split view, version 2017.09-r1 line number 10 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="Phabricator DOM functions diffDOMFunctions Differential Page Split view, version 2017.09-r1 line number 10 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.006">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Differential Page Split view, version 2017.09-r1 line number 10 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="Phabricator DOM functions diffDOMFunctions Differential Page Split view, version 2017.09-r1 line number 10 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.008">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Differential Page Split view, version 2017.09-r1 line number 10 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="Phabricator DOM functions diffDOMFunctions Differential Page Split view, version 2017.09-r1 line number 10 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.005">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Differential Page Split view, version 2017.09-r1 line number 10 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="Phabricator DOM functions diffDOMFunctions Differential Page Split view, version 2017.09-r1 line number 10 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.01">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Differential Page Unified view, version 2017.09-r1 line number 9 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="Phabricator DOM functions diffDOMFunctions Differential Page Unified view, version 2017.09-r1 line number 9 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.005">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Differential Page Unified view, version 2017.09-r1 line number 9 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="Phabricator DOM functions diffDOMFunctions Differential Page Unified view, version 2017.09-r1 line number 9 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.003">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Differential Page Unified view, version 2017.09-r1 line number 9 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="Phabricator DOM functions diffDOMFunctions Differential Page Unified view, version 2017.09-r1 line number 9 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.002">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Differential Page Unified view, version 2017.09-r1 line number 9 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="Phabricator DOM functions diffDOMFunctions Differential Page Unified view, version 2017.09-r1 line number 9 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.002">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Differential Page Unified view, version 2017.09-r1 line number 9 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="Phabricator DOM functions diffDOMFunctions Differential Page Unified view, version 2017.09-r1 line number 9 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.002">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Differential Page Unified view, version 2017.09-r1 line number 10 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="Phabricator DOM functions diffDOMFunctions Differential Page Unified view, version 2017.09-r1 line number 10 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.006">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Differential Page Unified view, version 2017.09-r1 line number 10 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="Phabricator DOM functions diffDOMFunctions Differential Page Unified view, version 2017.09-r1 line number 10 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.003">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Differential Page Unified view, version 2017.09-r1 line number 10 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="Phabricator DOM functions diffDOMFunctions Differential Page Unified view, version 2017.09-r1 line number 10 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.002">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Differential Page Unified view, version 2017.09-r1 line number 10 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="Phabricator DOM functions diffDOMFunctions Differential Page Unified view, version 2017.09-r1 line number 10 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.001">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Differential Page Unified view, version 2017.09-r1 line number 10 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="Phabricator DOM functions diffDOMFunctions Differential Page Unified view, version 2017.09-r1 line number 10 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.002">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Differential Page Split view, version 2019.21.0-r25 line number 29 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="Phabricator DOM functions diffDOMFunctions Differential Page Split view, version 2019.21.0-r25 line number 29 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.023">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Differential Page Split view, version 2019.21.0-r25 line number 29 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="Phabricator DOM functions diffDOMFunctions Differential Page Split view, version 2019.21.0-r25 line number 29 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.029">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Differential Page Split view, version 2019.21.0-r25 line number 29 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="Phabricator DOM functions diffDOMFunctions Differential Page Split view, version 2019.21.0-r25 line number 29 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.019">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Differential Page Split view, version 2019.21.0-r25 line number 29 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="Phabricator DOM functions diffDOMFunctions Differential Page Split view, version 2019.21.0-r25 line number 29 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.02">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Differential Page Split view, version 2019.21.0-r25 line number 29 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="Phabricator DOM functions diffDOMFunctions Differential Page Split view, version 2019.21.0-r25 line number 29 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.021">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Differential Page Split view, version 2019.21.0-r25 line number 64 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="Phabricator DOM functions diffDOMFunctions Differential Page Split view, version 2019.21.0-r25 line number 64 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.033">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Differential Page Split view, version 2019.21.0-r25 line number 64 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="Phabricator DOM functions diffDOMFunctions Differential Page Split view, version 2019.21.0-r25 line number 64 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.026">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Differential Page Split view, version 2019.21.0-r25 line number 64 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="Phabricator DOM functions diffDOMFunctions Differential Page Split view, version 2019.21.0-r25 line number 64 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.021">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Differential Page Split view, version 2019.21.0-r25 line number 64 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="Phabricator DOM functions diffDOMFunctions Differential Page Split view, version 2019.21.0-r25 line number 64 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.086">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Differential Page Split view, version 2019.21.0-r25 line number 64 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="Phabricator DOM functions diffDOMFunctions Differential Page Split view, version 2019.21.0-r25 line number 64 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.15">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Differential Page Split view, version 2019.21.0-r25 line number 34 in base diff part getLineElementFromLineNumber() should return the right line element given the line number" name="Phabricator DOM functions diffDOMFunctions Differential Page Split view, version 2019.21.0-r25 line number 34 in base diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.08">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Differential Page Split view, version 2019.21.0-r25 line number 34 in base diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="Phabricator DOM functions diffDOMFunctions Differential Page Split view, version 2019.21.0-r25 line number 34 in base diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.05">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Differential Page Split view, version 2019.21.0-r25 line number 34 in base diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="Phabricator DOM functions diffDOMFunctions Differential Page Split view, version 2019.21.0-r25 line number 34 in base diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.025">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Differential Page Split view, version 2019.21.0-r25 line number 34 in base diff part getDiffCodePart() should return &quot;base&quot; when given the code element" name="Phabricator DOM functions diffDOMFunctions Differential Page Split view, version 2019.21.0-r25 line number 34 in base diff part getDiffCodePart() should return &quot;base&quot; when given the code element" time="0.02">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Differential Page Split view, version 2019.21.0-r25 line number 34 in base diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="Phabricator DOM functions diffDOMFunctions Differential Page Split view, version 2019.21.0-r25 line number 34 in base diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.019">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Differential Page Unified view, version 2019.21.0-r25 line number 29 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="Phabricator DOM functions diffDOMFunctions Differential Page Unified view, version 2019.21.0-r25 line number 29 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.012">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Differential Page Unified view, version 2019.21.0-r25 line number 29 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="Phabricator DOM functions diffDOMFunctions Differential Page Unified view, version 2019.21.0-r25 line number 29 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.008">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Differential Page Unified view, version 2019.21.0-r25 line number 29 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="Phabricator DOM functions diffDOMFunctions Differential Page Unified view, version 2019.21.0-r25 line number 29 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.005">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Differential Page Unified view, version 2019.21.0-r25 line number 29 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="Phabricator DOM functions diffDOMFunctions Differential Page Unified view, version 2019.21.0-r25 line number 29 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.008">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Differential Page Unified view, version 2019.21.0-r25 line number 29 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="Phabricator DOM functions diffDOMFunctions Differential Page Unified view, version 2019.21.0-r25 line number 29 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.006">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Differential Page Unified view, version 2019.21.0-r25 line number 64 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="Phabricator DOM functions diffDOMFunctions Differential Page Unified view, version 2019.21.0-r25 line number 64 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.013">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Differential Page Unified view, version 2019.21.0-r25 line number 64 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="Phabricator DOM functions diffDOMFunctions Differential Page Unified view, version 2019.21.0-r25 line number 64 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.012">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Differential Page Unified view, version 2019.21.0-r25 line number 64 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="Phabricator DOM functions diffDOMFunctions Differential Page Unified view, version 2019.21.0-r25 line number 64 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.006">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Differential Page Unified view, version 2019.21.0-r25 line number 64 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="Phabricator DOM functions diffDOMFunctions Differential Page Unified view, version 2019.21.0-r25 line number 64 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.009">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Differential Page Unified view, version 2019.21.0-r25 line number 64 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="Phabricator DOM functions diffDOMFunctions Differential Page Unified view, version 2019.21.0-r25 line number 64 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.007">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Differential Page Unified view, version 2019.21.0-r25 line number 34 in base diff part getLineElementFromLineNumber() should return the right line element given the line number" name="Phabricator DOM functions diffDOMFunctions Differential Page Unified view, version 2019.21.0-r25 line number 34 in base diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.012">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Differential Page Unified view, version 2019.21.0-r25 line number 34 in base diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="Phabricator DOM functions diffDOMFunctions Differential Page Unified view, version 2019.21.0-r25 line number 34 in base diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.008">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Differential Page Unified view, version 2019.21.0-r25 line number 34 in base diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="Phabricator DOM functions diffDOMFunctions Differential Page Unified view, version 2019.21.0-r25 line number 34 in base diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.009">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Differential Page Unified view, version 2019.21.0-r25 line number 34 in base diff part getDiffCodePart() should return &quot;base&quot; when given the code element" name="Phabricator DOM functions diffDOMFunctions Differential Page Unified view, version 2019.21.0-r25 line number 34 in base diff part getDiffCodePart() should return &quot;base&quot; when given the code element" time="0.006">
    </testcase>
    <testcase classname="Phabricator DOM functions diffDOMFunctions Differential Page Unified view, version 2019.21.0-r25 line number 34 in base diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="Phabricator DOM functions diffDOMFunctions Differential Page Unified view, version 2019.21.0-r25 line number 34 in base diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.006">
    </testcase>
    <testcase classname="Phabricator DOM functions diffusionDOMFns line number 1 getLineElementFromLineNumber() should return the right line element given the line number" name="Phabricator DOM functions diffusionDOMFns line number 1 getLineElementFromLineNumber() should return the right line element given the line number" time="0.007">
    </testcase>
    <testcase classname="Phabricator DOM functions diffusionDOMFns line number 1 getCodeElementFromLineNumber() should return the right code element given the line number" name="Phabricator DOM functions diffusionDOMFns line number 1 getCodeElementFromLineNumber() should return the right code element given the line number" time="0.003">
    </testcase>
    <testcase classname="Phabricator DOM functions diffusionDOMFns line number 1 getLineNumberFromCodeElement() should return the right line number given the code element" name="Phabricator DOM functions diffusionDOMFns line number 1 getLineNumberFromCodeElement() should return the right line number given the code element" time="0.003">
    </testcase>
    <testcase classname="Phabricator DOM functions diffusionDOMFns line number 1 isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="Phabricator DOM functions diffusionDOMFns line number 1 isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.002">
    </testcase>
    <testcase classname="Phabricator DOM functions diffusionDOMFns line number 10 getLineElementFromLineNumber() should return the right line element given the line number" name="Phabricator DOM functions diffusionDOMFns line number 10 getLineElementFromLineNumber() should return the right line element given the line number" time="0.002">
    </testcase>
    <testcase classname="Phabricator DOM functions diffusionDOMFns line number 10 getCodeElementFromLineNumber() should return the right code element given the line number" name="Phabricator DOM functions diffusionDOMFns line number 10 getCodeElementFromLineNumber() should return the right code element given the line number" time="0.001">
    </testcase>
    <testcase classname="Phabricator DOM functions diffusionDOMFns line number 10 getLineNumberFromCodeElement() should return the right line number given the code element" name="Phabricator DOM functions diffusionDOMFns line number 10 getLineNumberFromCodeElement() should return the right line number given the code element" time="0.002">
    </testcase>
    <testcase classname="Phabricator DOM functions diffusionDOMFns line number 10 isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="Phabricator DOM functions diffusionDOMFns line number 10 isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="RevisionsPopover" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:21:57" time="10.773" tests="15">
    <testcase classname="RevisionsPopover Branches renders correct number of results" name="RevisionsPopover Branches renders correct number of results" time="0.677">
    </testcase>
    <testcase classname="RevisionsPopover Branches renders result nodes correctly" name="RevisionsPopover Branches renders result nodes correctly" time="0.484">
    </testcase>
    <testcase classname="RevisionsPopover Branches fetches remaining results correctly" name="RevisionsPopover Branches fetches remaining results correctly" time="0.634">
    </testcase>
    <testcase classname="RevisionsPopover Branches searches correctly" name="RevisionsPopover Branches searches correctly" time="0.541">
    </testcase>
    <testcase classname="RevisionsPopover Branches displays no results correctly" name="RevisionsPopover Branches displays no results correctly" time="0.578">
    </testcase>
    <testcase classname="RevisionsPopover Branches Speculative results displays results correctly by displaying a single speculative result" name="RevisionsPopover Branches Speculative results displays results correctly by displaying a single speculative result" time="0.815">
    </testcase>
    <testcase classname="RevisionsPopover Tags renders correct number of results" name="RevisionsPopover Tags renders correct number of results" time="0.297">
    </testcase>
    <testcase classname="RevisionsPopover Tags renders result nodes correctly" name="RevisionsPopover Tags renders result nodes correctly" time="0.178">
    </testcase>
    <testcase classname="RevisionsPopover Tags fetches remaining results correctly" name="RevisionsPopover Tags fetches remaining results correctly" time="0.612">
    </testcase>
    <testcase classname="RevisionsPopover Tags searches correctly" name="RevisionsPopover Tags searches correctly" time="0.567">
    </testcase>
    <testcase classname="RevisionsPopover Commits renders correct number of results" name="RevisionsPopover Commits renders correct number of results" time="0.225">
    </testcase>
    <testcase classname="RevisionsPopover Commits renders result nodes correctly" name="RevisionsPopover Commits renders result nodes correctly" time="0.182">
    </testcase>
    <testcase classname="RevisionsPopover Commits fetches remaining results correctly" name="RevisionsPopover Commits fetches remaining results correctly" time="0.563">
    </testcase>
    <testcase classname="RevisionsPopover Commits searches correctly" name="RevisionsPopover Commits searches correctly" time="0.516">
    </testcase>
    <testcase classname="RevisionsPopover Commits Against a speculative revision renders 0 results" name="RevisionsPopover Commits Against a speculative revision renders 0 results" time="0.332">
    </testcase>
  </testsuite>
  <testsuite name="parseProductReference" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:08" time="0.618" tests="3">
    <testcase classname="parseProductReference parses main branch tags correctly" name="parseProductReference parses main branch tags correctly" time="0.001">
    </testcase>
    <testcase classname="parseProductReference leaves tags untouched" name="parseProductReference leaves tags untouched" time="0.001">
    </testcase>
    <testcase classname="parseProductReference unknown versions fall back to main" name="parseProductReference unknown versions fall back to main" time="0">
    </testcase>
  </testsuite>
  <testsuite name="github/codeHost" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:21:57" time="12.209" tests="152">
    <testcase classname="github/codeHost github.com Blob page Vanilla githubCodeHost getViewContextOnSourcegraphMount creates and returns a new mount in the container" name="github/codeHost github.com Blob page Vanilla githubCodeHost getViewContextOnSourcegraphMount creates and returns a new mount in the container" time="0.104">
    </testcase>
    <testcase classname="github/codeHost github.com Blob page Vanilla githubCodeHost getViewContextOnSourcegraphMount is idempotent" name="github/codeHost github.com Blob page Vanilla githubCodeHost getViewContextOnSourcegraphMount is idempotent" time="0.096">
    </testcase>
    <testcase classname="github/codeHost github.com Blob page Vanilla githubCodeHost getViewContextOnSourcegraphMount returns null if the mount does not belong into the container" name="github/codeHost github.com Blob page Vanilla githubCodeHost getViewContextOnSourcegraphMount returns null if the mount does not belong into the container" time="0.002">
    </testcase>
    <testcase classname="github/codeHost github.com Blob page Vanilla createSingleFileToolbarMount() creates and returns a new mount in the container" name="github/codeHost github.com Blob page Vanilla createSingleFileToolbarMount() creates and returns a new mount in the container" time="0.009">
    </testcase>
    <testcase classname="github/codeHost github.com Blob page Vanilla createSingleFileToolbarMount() is idempotent" name="github/codeHost github.com Blob page Vanilla createSingleFileToolbarMount() is idempotent" time="0.006">
    </testcase>
    <testcase classname="github/codeHost github.com Blob page Vanilla createSingleFileToolbarMount() throws an Error if given an unexpected code view" name="github/codeHost github.com Blob page Vanilla createSingleFileToolbarMount() throws an Error if given an unexpected code view" time="0.001">
    </testcase>
    <testcase classname="github/codeHost github.com Blob page Refined Github githubCodeHost getViewContextOnSourcegraphMount creates and returns a new mount in the container" name="github/codeHost github.com Blob page Refined Github githubCodeHost getViewContextOnSourcegraphMount creates and returns a new mount in the container" time="0.165">
    </testcase>
    <testcase classname="github/codeHost github.com Blob page Refined Github githubCodeHost getViewContextOnSourcegraphMount is idempotent" name="github/codeHost github.com Blob page Refined Github githubCodeHost getViewContextOnSourcegraphMount is idempotent" time="0.141">
    </testcase>
    <testcase classname="github/codeHost github.com Blob page Refined Github githubCodeHost getViewContextOnSourcegraphMount returns null if the mount does not belong into the container" name="github/codeHost github.com Blob page Refined Github githubCodeHost getViewContextOnSourcegraphMount returns null if the mount does not belong into the container" time="0.001">
    </testcase>
    <testcase classname="github/codeHost github.com Blob page Refined Github createSingleFileToolbarMount() creates and returns a new mount in the container" name="github/codeHost github.com Blob page Refined Github createSingleFileToolbarMount() creates and returns a new mount in the container" time="0.029">
    </testcase>
    <testcase classname="github/codeHost github.com Blob page Refined Github createSingleFileToolbarMount() is idempotent" name="github/codeHost github.com Blob page Refined Github createSingleFileToolbarMount() is idempotent" time="0.003">
    </testcase>
    <testcase classname="github/codeHost github.com Blob page Refined Github createSingleFileToolbarMount() throws an Error if given an unexpected code view" name="github/codeHost github.com Blob page Refined Github createSingleFileToolbarMount() throws an Error if given an unexpected code view" time="0.001">
    </testcase>
    <testcase classname="github/codeHost github.com Commit page Vanilla Split view githubCodeHost getViewContextOnSourcegraphMount creates and returns a new mount in the container" name="github/codeHost github.com Commit page Vanilla Split view githubCodeHost getViewContextOnSourcegraphMount creates and returns a new mount in the container" time="0.326">
    </testcase>
    <testcase classname="github/codeHost github.com Commit page Vanilla Split view githubCodeHost getViewContextOnSourcegraphMount is idempotent" name="github/codeHost github.com Commit page Vanilla Split view githubCodeHost getViewContextOnSourcegraphMount is idempotent" time="0.138">
    </testcase>
    <testcase classname="github/codeHost github.com Commit page Vanilla Split view githubCodeHost getViewContextOnSourcegraphMount returns null if the mount does not belong into the container" name="github/codeHost github.com Commit page Vanilla Split view githubCodeHost getViewContextOnSourcegraphMount returns null if the mount does not belong into the container" time="0.008">
    </testcase>
    <testcase classname="github/codeHost github.com Commit page Vanilla Split view createFileActionsToolbarMount() createFileActionsToolbarMount() creates and returns a new mount in the container" name="github/codeHost github.com Commit page Vanilla Split view createFileActionsToolbarMount() createFileActionsToolbarMount() creates and returns a new mount in the container" time="0.022">
    </testcase>
    <testcase classname="github/codeHost github.com Commit page Vanilla Split view createFileActionsToolbarMount() createFileActionsToolbarMount() is idempotent" name="github/codeHost github.com Commit page Vanilla Split view createFileActionsToolbarMount() createFileActionsToolbarMount() is idempotent" time="0.029">
    </testcase>
    <testcase classname="github/codeHost github.com Commit page Vanilla Split view createFileActionsToolbarMount() createFileActionsToolbarMount() throws an Error if given an unexpected code view" name="github/codeHost github.com Commit page Vanilla Split view createFileActionsToolbarMount() createFileActionsToolbarMount() throws an Error if given an unexpected code view" time="0">
    </testcase>
    <testcase classname="github/codeHost github.com Commit page Vanilla Unified view githubCodeHost getViewContextOnSourcegraphMount creates and returns a new mount in the container" name="github/codeHost github.com Commit page Vanilla Unified view githubCodeHost getViewContextOnSourcegraphMount creates and returns a new mount in the container" time="0.153">
    </testcase>
    <testcase classname="github/codeHost github.com Commit page Vanilla Unified view githubCodeHost getViewContextOnSourcegraphMount is idempotent" name="github/codeHost github.com Commit page Vanilla Unified view githubCodeHost getViewContextOnSourcegraphMount is idempotent" time="0.128">
    </testcase>
    <testcase classname="github/codeHost github.com Commit page Vanilla Unified view githubCodeHost getViewContextOnSourcegraphMount returns null if the mount does not belong into the container" name="github/codeHost github.com Commit page Vanilla Unified view githubCodeHost getViewContextOnSourcegraphMount returns null if the mount does not belong into the container" time="0">
    </testcase>
    <testcase classname="github/codeHost github.com Commit page Vanilla Unified view createFileActionsToolbarMount() createFileActionsToolbarMount() creates and returns a new mount in the container" name="github/codeHost github.com Commit page Vanilla Unified view createFileActionsToolbarMount() createFileActionsToolbarMount() creates and returns a new mount in the container" time="0.02">
    </testcase>
    <testcase classname="github/codeHost github.com Commit page Vanilla Unified view createFileActionsToolbarMount() createFileActionsToolbarMount() is idempotent" name="github/codeHost github.com Commit page Vanilla Unified view createFileActionsToolbarMount() createFileActionsToolbarMount() is idempotent" time="0.007">
    </testcase>
    <testcase classname="github/codeHost github.com Commit page Vanilla Unified view createFileActionsToolbarMount() createFileActionsToolbarMount() throws an Error if given an unexpected code view" name="github/codeHost github.com Commit page Vanilla Unified view createFileActionsToolbarMount() createFileActionsToolbarMount() throws an Error if given an unexpected code view" time="0">
    </testcase>
    <testcase classname="github/codeHost github.com Commit page Refined Github Split view githubCodeHost getViewContextOnSourcegraphMount creates and returns a new mount in the container" name="github/codeHost github.com Commit page Refined Github Split view githubCodeHost getViewContextOnSourcegraphMount creates and returns a new mount in the container" time="0.125">
    </testcase>
    <testcase classname="github/codeHost github.com Commit page Refined Github Split view githubCodeHost getViewContextOnSourcegraphMount is idempotent" name="github/codeHost github.com Commit page Refined Github Split view githubCodeHost getViewContextOnSourcegraphMount is idempotent" time="0.255">
    </testcase>
    <testcase classname="github/codeHost github.com Commit page Refined Github Split view githubCodeHost getViewContextOnSourcegraphMount returns null if the mount does not belong into the container" name="github/codeHost github.com Commit page Refined Github Split view githubCodeHost getViewContextOnSourcegraphMount returns null if the mount does not belong into the container" time="0">
    </testcase>
    <testcase classname="github/codeHost github.com Commit page Refined Github Split view createFileActionsToolbarMount() createFileActionsToolbarMount() creates and returns a new mount in the container" name="github/codeHost github.com Commit page Refined Github Split view createFileActionsToolbarMount() createFileActionsToolbarMount() creates and returns a new mount in the container" time="0.012">
    </testcase>
    <testcase classname="github/codeHost github.com Commit page Refined Github Split view createFileActionsToolbarMount() createFileActionsToolbarMount() is idempotent" name="github/codeHost github.com Commit page Refined Github Split view createFileActionsToolbarMount() createFileActionsToolbarMount() is idempotent" time="0.007">
    </testcase>
    <testcase classname="github/codeHost github.com Commit page Refined Github Split view createFileActionsToolbarMount() createFileActionsToolbarMount() throws an Error if given an unexpected code view" name="github/codeHost github.com Commit page Refined Github Split view createFileActionsToolbarMount() createFileActionsToolbarMount() throws an Error if given an unexpected code view" time="0.001">
    </testcase>
    <testcase classname="github/codeHost github.com Commit page Refined Github Unified view githubCodeHost getViewContextOnSourcegraphMount creates and returns a new mount in the container" name="github/codeHost github.com Commit page Refined Github Unified view githubCodeHost getViewContextOnSourcegraphMount creates and returns a new mount in the container" time="0.1">
    </testcase>
    <testcase classname="github/codeHost github.com Commit page Refined Github Unified view githubCodeHost getViewContextOnSourcegraphMount is idempotent" name="github/codeHost github.com Commit page Refined Github Unified view githubCodeHost getViewContextOnSourcegraphMount is idempotent" time="0.172">
    </testcase>
    <testcase classname="github/codeHost github.com Commit page Refined Github Unified view githubCodeHost getViewContextOnSourcegraphMount returns null if the mount does not belong into the container" name="github/codeHost github.com Commit page Refined Github Unified view githubCodeHost getViewContextOnSourcegraphMount returns null if the mount does not belong into the container" time="0">
    </testcase>
    <testcase classname="github/codeHost github.com Commit page Refined Github Unified view createFileActionsToolbarMount() createFileActionsToolbarMount() creates and returns a new mount in the container" name="github/codeHost github.com Commit page Refined Github Unified view createFileActionsToolbarMount() createFileActionsToolbarMount() creates and returns a new mount in the container" time="0.016">
    </testcase>
    <testcase classname="github/codeHost github.com Commit page Refined Github Unified view createFileActionsToolbarMount() createFileActionsToolbarMount() is idempotent" name="github/codeHost github.com Commit page Refined Github Unified view createFileActionsToolbarMount() createFileActionsToolbarMount() is idempotent" time="0.007">
    </testcase>
    <testcase classname="github/codeHost github.com Commit page Refined Github Unified view createFileActionsToolbarMount() createFileActionsToolbarMount() throws an Error if given an unexpected code view" name="github/codeHost github.com Commit page Refined Github Unified view createFileActionsToolbarMount() createFileActionsToolbarMount() throws an Error if given an unexpected code view" time="0">
    </testcase>
    <testcase classname="github/codeHost github.com Pull Request page Vanilla Split view githubCodeHost getViewContextOnSourcegraphMount creates and returns a new mount in the container" name="github/codeHost github.com Pull Request page Vanilla Split view githubCodeHost getViewContextOnSourcegraphMount creates and returns a new mount in the container" time="0.207">
    </testcase>
    <testcase classname="github/codeHost github.com Pull Request page Vanilla Split view githubCodeHost getViewContextOnSourcegraphMount is idempotent" name="github/codeHost github.com Pull Request page Vanilla Split view githubCodeHost getViewContextOnSourcegraphMount is idempotent" time="0.145">
    </testcase>
    <testcase classname="github/codeHost github.com Pull Request page Vanilla Split view githubCodeHost getViewContextOnSourcegraphMount returns null if the mount does not belong into the container" name="github/codeHost github.com Pull Request page Vanilla Split view githubCodeHost getViewContextOnSourcegraphMount returns null if the mount does not belong into the container" time="0">
    </testcase>
    <testcase classname="github/codeHost github.com Pull Request page Vanilla Split view createFileActionsToolbarMount() createFileActionsToolbarMount() creates and returns a new mount in the container" name="github/codeHost github.com Pull Request page Vanilla Split view createFileActionsToolbarMount() createFileActionsToolbarMount() creates and returns a new mount in the container" time="0.01">
    </testcase>
    <testcase classname="github/codeHost github.com Pull Request page Vanilla Split view createFileActionsToolbarMount() createFileActionsToolbarMount() is idempotent" name="github/codeHost github.com Pull Request page Vanilla Split view createFileActionsToolbarMount() createFileActionsToolbarMount() is idempotent" time="0.009">
    </testcase>
    <testcase classname="github/codeHost github.com Pull Request page Vanilla Split view createFileActionsToolbarMount() createFileActionsToolbarMount() throws an Error if given an unexpected code view" name="github/codeHost github.com Pull Request page Vanilla Split view createFileActionsToolbarMount() createFileActionsToolbarMount() throws an Error if given an unexpected code view" time="0">
    </testcase>
    <testcase classname="github/codeHost github.com Pull Request page Vanilla Unified view githubCodeHost getViewContextOnSourcegraphMount creates and returns a new mount in the container" name="github/codeHost github.com Pull Request page Vanilla Unified view githubCodeHost getViewContextOnSourcegraphMount creates and returns a new mount in the container" time="0.117">
    </testcase>
    <testcase classname="github/codeHost github.com Pull Request page Vanilla Unified view githubCodeHost getViewContextOnSourcegraphMount is idempotent" name="github/codeHost github.com Pull Request page Vanilla Unified view githubCodeHost getViewContextOnSourcegraphMount is idempotent" time="0.177">
    </testcase>
    <testcase classname="github/codeHost github.com Pull Request page Vanilla Unified view githubCodeHost getViewContextOnSourcegraphMount returns null if the mount does not belong into the container" name="github/codeHost github.com Pull Request page Vanilla Unified view githubCodeHost getViewContextOnSourcegraphMount returns null if the mount does not belong into the container" time="0">
    </testcase>
    <testcase classname="github/codeHost github.com Pull Request page Vanilla Unified view createFileActionsToolbarMount() createFileActionsToolbarMount() creates and returns a new mount in the container" name="github/codeHost github.com Pull Request page Vanilla Unified view createFileActionsToolbarMount() createFileActionsToolbarMount() creates and returns a new mount in the container" time="0.005">
    </testcase>
    <testcase classname="github/codeHost github.com Pull Request page Vanilla Unified view createFileActionsToolbarMount() createFileActionsToolbarMount() is idempotent" name="github/codeHost github.com Pull Request page Vanilla Unified view createFileActionsToolbarMount() createFileActionsToolbarMount() is idempotent" time="0.005">
    </testcase>
    <testcase classname="github/codeHost github.com Pull Request page Vanilla Unified view createFileActionsToolbarMount() createFileActionsToolbarMount() throws an Error if given an unexpected code view" name="github/codeHost github.com Pull Request page Vanilla Unified view createFileActionsToolbarMount() createFileActionsToolbarMount() throws an Error if given an unexpected code view" time="0">
    </testcase>
    <testcase classname="github/codeHost github.com Pull Request page Refined Github Split view githubCodeHost getViewContextOnSourcegraphMount creates and returns a new mount in the container" name="github/codeHost github.com Pull Request page Refined Github Split view githubCodeHost getViewContextOnSourcegraphMount creates and returns a new mount in the container" time="0.137">
    </testcase>
    <testcase classname="github/codeHost github.com Pull Request page Refined Github Split view githubCodeHost getViewContextOnSourcegraphMount is idempotent" name="github/codeHost github.com Pull Request page Refined Github Split view githubCodeHost getViewContextOnSourcegraphMount is idempotent" time="0.128">
    </testcase>
    <testcase classname="github/codeHost github.com Pull Request page Refined Github Split view githubCodeHost getViewContextOnSourcegraphMount returns null if the mount does not belong into the container" name="github/codeHost github.com Pull Request page Refined Github Split view githubCodeHost getViewContextOnSourcegraphMount returns null if the mount does not belong into the container" time="0">
    </testcase>
    <testcase classname="github/codeHost github.com Pull Request page Refined Github Split view createFileActionsToolbarMount() createFileActionsToolbarMount() creates and returns a new mount in the container" name="github/codeHost github.com Pull Request page Refined Github Split view createFileActionsToolbarMount() createFileActionsToolbarMount() creates and returns a new mount in the container" time="0.005">
    </testcase>
    <testcase classname="github/codeHost github.com Pull Request page Refined Github Split view createFileActionsToolbarMount() createFileActionsToolbarMount() is idempotent" name="github/codeHost github.com Pull Request page Refined Github Split view createFileActionsToolbarMount() createFileActionsToolbarMount() is idempotent" time="0.008">
    </testcase>
    <testcase classname="github/codeHost github.com Pull Request page Refined Github Split view createFileActionsToolbarMount() createFileActionsToolbarMount() throws an Error if given an unexpected code view" name="github/codeHost github.com Pull Request page Refined Github Split view createFileActionsToolbarMount() createFileActionsToolbarMount() throws an Error if given an unexpected code view" time="0">
    </testcase>
    <testcase classname="github/codeHost github.com Pull Request page Refined Github Unified view githubCodeHost getViewContextOnSourcegraphMount creates and returns a new mount in the container" name="github/codeHost github.com Pull Request page Refined Github Unified view githubCodeHost getViewContextOnSourcegraphMount creates and returns a new mount in the container" time="0.108">
    </testcase>
    <testcase classname="github/codeHost github.com Pull Request page Refined Github Unified view githubCodeHost getViewContextOnSourcegraphMount is idempotent" name="github/codeHost github.com Pull Request page Refined Github Unified view githubCodeHost getViewContextOnSourcegraphMount is idempotent" time="0.119">
    </testcase>
    <testcase classname="github/codeHost github.com Pull Request page Refined Github Unified view githubCodeHost getViewContextOnSourcegraphMount returns null if the mount does not belong into the container" name="github/codeHost github.com Pull Request page Refined Github Unified view githubCodeHost getViewContextOnSourcegraphMount returns null if the mount does not belong into the container" time="0.001">
    </testcase>
    <testcase classname="github/codeHost github.com Pull Request page Refined Github Unified view createFileActionsToolbarMount() createFileActionsToolbarMount() creates and returns a new mount in the container" name="github/codeHost github.com Pull Request page Refined Github Unified view createFileActionsToolbarMount() createFileActionsToolbarMount() creates and returns a new mount in the container" time="0.004">
    </testcase>
    <testcase classname="github/codeHost github.com Pull Request page Refined Github Unified view createFileActionsToolbarMount() createFileActionsToolbarMount() is idempotent" name="github/codeHost github.com Pull Request page Refined Github Unified view createFileActionsToolbarMount() createFileActionsToolbarMount() is idempotent" time="0.006">
    </testcase>
    <testcase classname="github/codeHost github.com Pull Request page Refined Github Unified view createFileActionsToolbarMount() createFileActionsToolbarMount() throws an Error if given an unexpected code view" name="github/codeHost github.com Pull Request page Refined Github Unified view createFileActionsToolbarMount() createFileActionsToolbarMount() throws an Error if given an unexpected code view" time="0">
    </testcase>
    <testcase classname="github/codeHost github.com Pull Request Discussion page Vanilla githubCodeHost getViewContextOnSourcegraphMount creates and returns a new mount in the container" name="github/codeHost github.com Pull Request Discussion page Vanilla githubCodeHost getViewContextOnSourcegraphMount creates and returns a new mount in the container" time="0.213">
    </testcase>
    <testcase classname="github/codeHost github.com Pull Request Discussion page Vanilla githubCodeHost getViewContextOnSourcegraphMount is idempotent" name="github/codeHost github.com Pull Request Discussion page Vanilla githubCodeHost getViewContextOnSourcegraphMount is idempotent" time="0.365">
    </testcase>
    <testcase classname="github/codeHost github.com Pull Request Discussion page Vanilla githubCodeHost getViewContextOnSourcegraphMount returns null if the mount does not belong into the container" name="github/codeHost github.com Pull Request Discussion page Vanilla githubCodeHost getViewContextOnSourcegraphMount returns null if the mount does not belong into the container" time="0.001">
    </testcase>
    <testcase classname="github/codeHost github.com Pull Request Discussion page Refined Github githubCodeHost getViewContextOnSourcegraphMount creates and returns a new mount in the container" name="github/codeHost github.com Pull Request Discussion page Refined Github githubCodeHost getViewContextOnSourcegraphMount creates and returns a new mount in the container" time="0.299">
    </testcase>
    <testcase classname="github/codeHost github.com Pull Request Discussion page Refined Github githubCodeHost getViewContextOnSourcegraphMount is idempotent" name="github/codeHost github.com Pull Request Discussion page Refined Github githubCodeHost getViewContextOnSourcegraphMount is idempotent" time="0.225">
    </testcase>
    <testcase classname="github/codeHost github.com Pull Request Discussion page Refined Github githubCodeHost getViewContextOnSourcegraphMount returns null if the mount does not belong into the container" name="github/codeHost github.com Pull Request Discussion page Refined Github githubCodeHost getViewContextOnSourcegraphMount returns null if the mount does not belong into the container" time="0">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Blob page Vanilla githubCodeHost getViewContextOnSourcegraphMount creates and returns a new mount in the container" name="github/codeHost ghe-2.14.11 Blob page Vanilla githubCodeHost getViewContextOnSourcegraphMount creates and returns a new mount in the container" time="0.16">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Blob page Vanilla githubCodeHost getViewContextOnSourcegraphMount is idempotent" name="github/codeHost ghe-2.14.11 Blob page Vanilla githubCodeHost getViewContextOnSourcegraphMount is idempotent" time="0.189">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Blob page Vanilla githubCodeHost getViewContextOnSourcegraphMount returns null if the mount does not belong into the container" name="github/codeHost ghe-2.14.11 Blob page Vanilla githubCodeHost getViewContextOnSourcegraphMount returns null if the mount does not belong into the container" time="0">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Blob page Vanilla createSingleFileToolbarMount() creates and returns a new mount in the container" name="github/codeHost ghe-2.14.11 Blob page Vanilla createSingleFileToolbarMount() creates and returns a new mount in the container" time="0.009">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Blob page Vanilla createSingleFileToolbarMount() is idempotent" name="github/codeHost ghe-2.14.11 Blob page Vanilla createSingleFileToolbarMount() is idempotent" time="0.01">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Blob page Vanilla createSingleFileToolbarMount() throws an Error if given an unexpected code view" name="github/codeHost ghe-2.14.11 Blob page Vanilla createSingleFileToolbarMount() throws an Error if given an unexpected code view" time="0">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Blob page Refined Github githubCodeHost getViewContextOnSourcegraphMount creates and returns a new mount in the container" name="github/codeHost ghe-2.14.11 Blob page Refined Github githubCodeHost getViewContextOnSourcegraphMount creates and returns a new mount in the container" time="0.169">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Blob page Refined Github githubCodeHost getViewContextOnSourcegraphMount is idempotent" name="github/codeHost ghe-2.14.11 Blob page Refined Github githubCodeHost getViewContextOnSourcegraphMount is idempotent" time="0.167">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Blob page Refined Github githubCodeHost getViewContextOnSourcegraphMount returns null if the mount does not belong into the container" name="github/codeHost ghe-2.14.11 Blob page Refined Github githubCodeHost getViewContextOnSourcegraphMount returns null if the mount does not belong into the container" time="0">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Blob page Refined Github createSingleFileToolbarMount() creates and returns a new mount in the container" name="github/codeHost ghe-2.14.11 Blob page Refined Github createSingleFileToolbarMount() creates and returns a new mount in the container" time="0.011">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Blob page Refined Github createSingleFileToolbarMount() is idempotent" name="github/codeHost ghe-2.14.11 Blob page Refined Github createSingleFileToolbarMount() is idempotent" time="0.008">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Blob page Refined Github createSingleFileToolbarMount() throws an Error if given an unexpected code view" name="github/codeHost ghe-2.14.11 Blob page Refined Github createSingleFileToolbarMount() throws an Error if given an unexpected code view" time="0">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Commit page Vanilla Split view githubCodeHost getViewContextOnSourcegraphMount creates and returns a new mount in the container" name="github/codeHost ghe-2.14.11 Commit page Vanilla Split view githubCodeHost getViewContextOnSourcegraphMount creates and returns a new mount in the container" time="0.056">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Commit page Vanilla Split view githubCodeHost getViewContextOnSourcegraphMount is idempotent" name="github/codeHost ghe-2.14.11 Commit page Vanilla Split view githubCodeHost getViewContextOnSourcegraphMount is idempotent" time="0.139">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Commit page Vanilla Split view githubCodeHost getViewContextOnSourcegraphMount returns null if the mount does not belong into the container" name="github/codeHost ghe-2.14.11 Commit page Vanilla Split view githubCodeHost getViewContextOnSourcegraphMount returns null if the mount does not belong into the container" time="0.001">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Commit page Vanilla Split view createFileActionsToolbarMount() createFileActionsToolbarMount() creates and returns a new mount in the container" name="github/codeHost ghe-2.14.11 Commit page Vanilla Split view createFileActionsToolbarMount() createFileActionsToolbarMount() creates and returns a new mount in the container" time="0.007">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Commit page Vanilla Split view createFileActionsToolbarMount() createFileActionsToolbarMount() is idempotent" name="github/codeHost ghe-2.14.11 Commit page Vanilla Split view createFileActionsToolbarMount() createFileActionsToolbarMount() is idempotent" time="0.007">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Commit page Vanilla Split view createFileActionsToolbarMount() createFileActionsToolbarMount() throws an Error if given an unexpected code view" name="github/codeHost ghe-2.14.11 Commit page Vanilla Split view createFileActionsToolbarMount() createFileActionsToolbarMount() throws an Error if given an unexpected code view" time="0">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Commit page Vanilla Unified view githubCodeHost getViewContextOnSourcegraphMount creates and returns a new mount in the container" name="github/codeHost ghe-2.14.11 Commit page Vanilla Unified view githubCodeHost getViewContextOnSourcegraphMount creates and returns a new mount in the container" time="0.038">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Commit page Vanilla Unified view githubCodeHost getViewContextOnSourcegraphMount is idempotent" name="github/codeHost ghe-2.14.11 Commit page Vanilla Unified view githubCodeHost getViewContextOnSourcegraphMount is idempotent" time="0.038">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Commit page Vanilla Unified view githubCodeHost getViewContextOnSourcegraphMount returns null if the mount does not belong into the container" name="github/codeHost ghe-2.14.11 Commit page Vanilla Unified view githubCodeHost getViewContextOnSourcegraphMount returns null if the mount does not belong into the container" time="0">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Commit page Vanilla Unified view createFileActionsToolbarMount() createFileActionsToolbarMount() creates and returns a new mount in the container" name="github/codeHost ghe-2.14.11 Commit page Vanilla Unified view createFileActionsToolbarMount() createFileActionsToolbarMount() creates and returns a new mount in the container" time="0.004">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Commit page Vanilla Unified view createFileActionsToolbarMount() createFileActionsToolbarMount() is idempotent" name="github/codeHost ghe-2.14.11 Commit page Vanilla Unified view createFileActionsToolbarMount() createFileActionsToolbarMount() is idempotent" time="0.003">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Commit page Vanilla Unified view createFileActionsToolbarMount() createFileActionsToolbarMount() throws an Error if given an unexpected code view" name="github/codeHost ghe-2.14.11 Commit page Vanilla Unified view createFileActionsToolbarMount() createFileActionsToolbarMount() throws an Error if given an unexpected code view" time="0">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Commit page Refined Github Split view githubCodeHost getViewContextOnSourcegraphMount creates and returns a new mount in the container" name="github/codeHost ghe-2.14.11 Commit page Refined Github Split view githubCodeHost getViewContextOnSourcegraphMount creates and returns a new mount in the container" time="0.05">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Commit page Refined Github Split view githubCodeHost getViewContextOnSourcegraphMount is idempotent" name="github/codeHost ghe-2.14.11 Commit page Refined Github Split view githubCodeHost getViewContextOnSourcegraphMount is idempotent" time="0.052">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Commit page Refined Github Split view githubCodeHost getViewContextOnSourcegraphMount returns null if the mount does not belong into the container" name="github/codeHost ghe-2.14.11 Commit page Refined Github Split view githubCodeHost getViewContextOnSourcegraphMount returns null if the mount does not belong into the container" time="0.001">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Commit page Refined Github Split view createFileActionsToolbarMount() createFileActionsToolbarMount() creates and returns a new mount in the container" name="github/codeHost ghe-2.14.11 Commit page Refined Github Split view createFileActionsToolbarMount() createFileActionsToolbarMount() creates and returns a new mount in the container" time="0.004">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Commit page Refined Github Split view createFileActionsToolbarMount() createFileActionsToolbarMount() is idempotent" name="github/codeHost ghe-2.14.11 Commit page Refined Github Split view createFileActionsToolbarMount() createFileActionsToolbarMount() is idempotent" time="0.005">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Commit page Refined Github Split view createFileActionsToolbarMount() createFileActionsToolbarMount() throws an Error if given an unexpected code view" name="github/codeHost ghe-2.14.11 Commit page Refined Github Split view createFileActionsToolbarMount() createFileActionsToolbarMount() throws an Error if given an unexpected code view" time="0">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Commit page Refined Github Unified view githubCodeHost getViewContextOnSourcegraphMount creates and returns a new mount in the container" name="github/codeHost ghe-2.14.11 Commit page Refined Github Unified view githubCodeHost getViewContextOnSourcegraphMount creates and returns a new mount in the container" time="0.107">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Commit page Refined Github Unified view githubCodeHost getViewContextOnSourcegraphMount is idempotent" name="github/codeHost ghe-2.14.11 Commit page Refined Github Unified view githubCodeHost getViewContextOnSourcegraphMount is idempotent" time="0.047">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Commit page Refined Github Unified view githubCodeHost getViewContextOnSourcegraphMount returns null if the mount does not belong into the container" name="github/codeHost ghe-2.14.11 Commit page Refined Github Unified view githubCodeHost getViewContextOnSourcegraphMount returns null if the mount does not belong into the container" time="0">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Commit page Refined Github Unified view createFileActionsToolbarMount() createFileActionsToolbarMount() creates and returns a new mount in the container" name="github/codeHost ghe-2.14.11 Commit page Refined Github Unified view createFileActionsToolbarMount() createFileActionsToolbarMount() creates and returns a new mount in the container" time="0.006">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Commit page Refined Github Unified view createFileActionsToolbarMount() createFileActionsToolbarMount() is idempotent" name="github/codeHost ghe-2.14.11 Commit page Refined Github Unified view createFileActionsToolbarMount() createFileActionsToolbarMount() is idempotent" time="0.004">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Commit page Refined Github Unified view createFileActionsToolbarMount() createFileActionsToolbarMount() throws an Error if given an unexpected code view" name="github/codeHost ghe-2.14.11 Commit page Refined Github Unified view createFileActionsToolbarMount() createFileActionsToolbarMount() throws an Error if given an unexpected code view" time="0.001">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Pull Request page Vanilla Split view githubCodeHost getViewContextOnSourcegraphMount creates and returns a new mount in the container" name="github/codeHost ghe-2.14.11 Pull Request page Vanilla Split view githubCodeHost getViewContextOnSourcegraphMount creates and returns a new mount in the container" time="0.057">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Pull Request page Vanilla Split view githubCodeHost getViewContextOnSourcegraphMount is idempotent" name="github/codeHost ghe-2.14.11 Pull Request page Vanilla Split view githubCodeHost getViewContextOnSourcegraphMount is idempotent" time="0.057">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Pull Request page Vanilla Split view githubCodeHost getViewContextOnSourcegraphMount returns null if the mount does not belong into the container" name="github/codeHost ghe-2.14.11 Pull Request page Vanilla Split view githubCodeHost getViewContextOnSourcegraphMount returns null if the mount does not belong into the container" time="0.001">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Pull Request page Vanilla Split view createFileActionsToolbarMount() createFileActionsToolbarMount() creates and returns a new mount in the container" name="github/codeHost ghe-2.14.11 Pull Request page Vanilla Split view createFileActionsToolbarMount() createFileActionsToolbarMount() creates and returns a new mount in the container" time="0.04">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Pull Request page Vanilla Split view createFileActionsToolbarMount() createFileActionsToolbarMount() is idempotent" name="github/codeHost ghe-2.14.11 Pull Request page Vanilla Split view createFileActionsToolbarMount() createFileActionsToolbarMount() is idempotent" time="0.052">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Pull Request page Vanilla Split view createFileActionsToolbarMount() createFileActionsToolbarMount() throws an Error if given an unexpected code view" name="github/codeHost ghe-2.14.11 Pull Request page Vanilla Split view createFileActionsToolbarMount() createFileActionsToolbarMount() throws an Error if given an unexpected code view" time="0.002">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Pull Request page Vanilla Unified view githubCodeHost getViewContextOnSourcegraphMount creates and returns a new mount in the container" name="github/codeHost ghe-2.14.11 Pull Request page Vanilla Unified view githubCodeHost getViewContextOnSourcegraphMount creates and returns a new mount in the container" time="0.05">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Pull Request page Vanilla Unified view githubCodeHost getViewContextOnSourcegraphMount is idempotent" name="github/codeHost ghe-2.14.11 Pull Request page Vanilla Unified view githubCodeHost getViewContextOnSourcegraphMount is idempotent" time="0.041">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Pull Request page Vanilla Unified view githubCodeHost getViewContextOnSourcegraphMount returns null if the mount does not belong into the container" name="github/codeHost ghe-2.14.11 Pull Request page Vanilla Unified view githubCodeHost getViewContextOnSourcegraphMount returns null if the mount does not belong into the container" time="0">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Pull Request page Vanilla Unified view createFileActionsToolbarMount() createFileActionsToolbarMount() creates and returns a new mount in the container" name="github/codeHost ghe-2.14.11 Pull Request page Vanilla Unified view createFileActionsToolbarMount() createFileActionsToolbarMount() creates and returns a new mount in the container" time="0.035">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Pull Request page Vanilla Unified view createFileActionsToolbarMount() createFileActionsToolbarMount() is idempotent" name="github/codeHost ghe-2.14.11 Pull Request page Vanilla Unified view createFileActionsToolbarMount() createFileActionsToolbarMount() is idempotent" time="0.037">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Pull Request page Vanilla Unified view createFileActionsToolbarMount() createFileActionsToolbarMount() throws an Error if given an unexpected code view" name="github/codeHost ghe-2.14.11 Pull Request page Vanilla Unified view createFileActionsToolbarMount() createFileActionsToolbarMount() throws an Error if given an unexpected code view" time="0">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Pull Request page Refined Github Split view githubCodeHost getViewContextOnSourcegraphMount creates and returns a new mount in the container" name="github/codeHost ghe-2.14.11 Pull Request page Refined Github Split view githubCodeHost getViewContextOnSourcegraphMount creates and returns a new mount in the container" time="0.052">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Pull Request page Refined Github Split view githubCodeHost getViewContextOnSourcegraphMount is idempotent" name="github/codeHost ghe-2.14.11 Pull Request page Refined Github Split view githubCodeHost getViewContextOnSourcegraphMount is idempotent" time="0.062">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Pull Request page Refined Github Split view githubCodeHost getViewContextOnSourcegraphMount returns null if the mount does not belong into the container" name="github/codeHost ghe-2.14.11 Pull Request page Refined Github Split view githubCodeHost getViewContextOnSourcegraphMount returns null if the mount does not belong into the container" time="0">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Pull Request page Refined Github Split view createFileActionsToolbarMount() createFileActionsToolbarMount() creates and returns a new mount in the container" name="github/codeHost ghe-2.14.11 Pull Request page Refined Github Split view createFileActionsToolbarMount() createFileActionsToolbarMount() creates and returns a new mount in the container" time="0.059">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Pull Request page Refined Github Split view createFileActionsToolbarMount() createFileActionsToolbarMount() is idempotent" name="github/codeHost ghe-2.14.11 Pull Request page Refined Github Split view createFileActionsToolbarMount() createFileActionsToolbarMount() is idempotent" time="0.074">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Pull Request page Refined Github Split view createFileActionsToolbarMount() createFileActionsToolbarMount() throws an Error if given an unexpected code view" name="github/codeHost ghe-2.14.11 Pull Request page Refined Github Split view createFileActionsToolbarMount() createFileActionsToolbarMount() throws an Error if given an unexpected code view" time="0.001">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Pull Request page Refined Github Unified view githubCodeHost getViewContextOnSourcegraphMount creates and returns a new mount in the container" name="github/codeHost ghe-2.14.11 Pull Request page Refined Github Unified view githubCodeHost getViewContextOnSourcegraphMount creates and returns a new mount in the container" time="0.051">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Pull Request page Refined Github Unified view githubCodeHost getViewContextOnSourcegraphMount is idempotent" name="github/codeHost ghe-2.14.11 Pull Request page Refined Github Unified view githubCodeHost getViewContextOnSourcegraphMount is idempotent" time="0.045">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Pull Request page Refined Github Unified view githubCodeHost getViewContextOnSourcegraphMount returns null if the mount does not belong into the container" name="github/codeHost ghe-2.14.11 Pull Request page Refined Github Unified view githubCodeHost getViewContextOnSourcegraphMount returns null if the mount does not belong into the container" time="0">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Pull Request page Refined Github Unified view createFileActionsToolbarMount() createFileActionsToolbarMount() creates and returns a new mount in the container" name="github/codeHost ghe-2.14.11 Pull Request page Refined Github Unified view createFileActionsToolbarMount() createFileActionsToolbarMount() creates and returns a new mount in the container" time="0.034">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Pull Request page Refined Github Unified view createFileActionsToolbarMount() createFileActionsToolbarMount() is idempotent" name="github/codeHost ghe-2.14.11 Pull Request page Refined Github Unified view createFileActionsToolbarMount() createFileActionsToolbarMount() is idempotent" time="0.039">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Pull Request page Refined Github Unified view createFileActionsToolbarMount() createFileActionsToolbarMount() throws an Error if given an unexpected code view" name="github/codeHost ghe-2.14.11 Pull Request page Refined Github Unified view createFileActionsToolbarMount() createFileActionsToolbarMount() throws an Error if given an unexpected code view" time="0">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Pull Request Discussion page Vanilla githubCodeHost getViewContextOnSourcegraphMount creates and returns a new mount in the container" name="github/codeHost ghe-2.14.11 Pull Request Discussion page Vanilla githubCodeHost getViewContextOnSourcegraphMount creates and returns a new mount in the container" time="0.227">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Pull Request Discussion page Vanilla githubCodeHost getViewContextOnSourcegraphMount is idempotent" name="github/codeHost ghe-2.14.11 Pull Request Discussion page Vanilla githubCodeHost getViewContextOnSourcegraphMount is idempotent" time="0.455">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Pull Request Discussion page Vanilla githubCodeHost getViewContextOnSourcegraphMount returns null if the mount does not belong into the container" name="github/codeHost ghe-2.14.11 Pull Request Discussion page Vanilla githubCodeHost getViewContextOnSourcegraphMount returns null if the mount does not belong into the container" time="0.001">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Pull Request Discussion page Refined Github githubCodeHost getViewContextOnSourcegraphMount creates and returns a new mount in the container" name="github/codeHost ghe-2.14.11 Pull Request Discussion page Refined Github githubCodeHost getViewContextOnSourcegraphMount creates and returns a new mount in the container" time="0.274">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Pull Request Discussion page Refined Github githubCodeHost getViewContextOnSourcegraphMount is idempotent" name="github/codeHost ghe-2.14.11 Pull Request Discussion page Refined Github githubCodeHost getViewContextOnSourcegraphMount is idempotent" time="0.335">
    </testcase>
    <testcase classname="github/codeHost ghe-2.14.11 Pull Request Discussion page Refined Github githubCodeHost getViewContextOnSourcegraphMount returns null if the mount does not belong into the container" name="github/codeHost ghe-2.14.11 Pull Request Discussion page Refined Github githubCodeHost getViewContextOnSourcegraphMount returns null if the mount does not belong into the container" time="0">
    </testcase>
    <testcase classname="github/codeHost githubCodeHost.urlToFile() on blob page returns an URL to the Sourcegraph instance if the location has a viewState" name="github/codeHost githubCodeHost.urlToFile() on blob page returns an URL to the Sourcegraph instance if the location has a viewState" time="0.001">
    </testcase>
    <testcase classname="github/codeHost githubCodeHost.urlToFile() on blob page returns an absolute URL if the location is not on the same code host" name="github/codeHost githubCodeHost.urlToFile() on blob page returns an absolute URL if the location is not on the same code host" time="0">
    </testcase>
    <testcase classname="github/codeHost githubCodeHost.urlToFile() on blob page returns an URL to a blob on the same code host if possible" name="github/codeHost githubCodeHost.urlToFile() on blob page returns an URL to a blob on the same code host if possible" time="0">
    </testcase>
    <testcase classname="github/codeHost githubCodeHost.urlToFile() on pull request page returns a URL to the same PR if possible" name="github/codeHost githubCodeHost.urlToFile() on pull request page returns a URL to the same PR if possible" time="0.009">
    </testcase>
    <testcase classname="github/codeHost githubCodeHost.checkIsGithubDotCom() returns true with a github.com URL" name="github/codeHost githubCodeHost.checkIsGithubDotCom() returns true with a github.com URL" time="0.001">
    </testcase>
    <testcase classname="github/codeHost githubCodeHost.checkIsGithubDotCom() returns false on domains that impersonate github.com" name="github/codeHost githubCodeHost.checkIsGithubDotCom() returns false on domains that impersonate github.com" time="0">
    </testcase>
    <testcase classname="isPrivateRepository returns [private=true] if not on &quot;github.com&quot;" name="isPrivateRepository returns [private=true] if not on &quot;github.com&quot;" time="1.582">
    </testcase>
    <testcase classname="isPrivateRepository when on &quot;github.com&quot; returns [private=true] on unsuccessful request" name="isPrivateRepository when on &quot;github.com&quot; returns [private=true] on unsuccessful request" time="0.038">
    </testcase>
    <testcase classname="isPrivateRepository when on &quot;github.com&quot; fallbacks to DOM check on unsuccessful request" name="isPrivateRepository when on &quot;github.com&quot; fallbacks to DOM check on unsuccessful request" time="0.037">
    </testcase>
    <testcase classname="isPrivateRepository when on &quot;github.com&quot; returns correctly from API response" name="isPrivateRepository when on &quot;github.com&quot; returns correctly from API response" time="0.003">
    </testcase>
    <testcase classname="parseHash given &quot;#L143&quot; as argument returns {&quot;line&quot;:143}" name="parseHash given &quot;#L143&quot; as argument returns {&quot;line&quot;:143}" time="0">
    </testcase>
    <testcase classname="parseHash given &quot;#helloL143&quot; as argument returns {&quot;line&quot;:143}" name="parseHash given &quot;#helloL143&quot; as argument returns {&quot;line&quot;:143}" time="0">
    </testcase>
    <testcase classname="parseHash given &quot;#L143-L162&quot; as argument returns {&quot;line&quot;:143,&quot;endLine&quot;:162}" name="parseHash given &quot;#L143-L162&quot; as argument returns {&quot;line&quot;:143,&quot;endLine&quot;:162}" time="0">
    </testcase>
    <testcase classname="parseHash given &quot;#L143L162&quot; as argument returns {&quot;line&quot;:143,&quot;endLine&quot;:162}" name="parseHash given &quot;#L143L162&quot; as argument returns {&quot;line&quot;:143,&quot;endLine&quot;:162}" time="0">
    </testcase>
    <testcase classname="parseHash given &quot;#L143+L162&quot; as argument returns {&quot;line&quot;:143,&quot;endLine&quot;:162}" name="parseHash given &quot;#L143+L162&quot; as argument returns {&quot;line&quot;:143,&quot;endLine&quot;:162}" time="0">
    </testcase>
    <testcase classname="parseHash given &quot;#L143/L162&quot; as argument returns {&quot;line&quot;:143,&quot;endLine&quot;:162}" name="parseHash given &quot;#L143/L162&quot; as argument returns {&quot;line&quot;:143,&quot;endLine&quot;:162}" time="0">
    </testcase>
    <testcase classname="parseHash given &quot;#L143fooL162&quot; as argument returns {&quot;line&quot;:143,&quot;endLine&quot;:162}" name="parseHash given &quot;#L143fooL162&quot; as argument returns {&quot;line&quot;:143,&quot;endLine&quot;:162}" time="0">
    </testcase>
    <testcase classname="parseHash given &quot;#L143fooL162bar&quot; as argument returns {&quot;line&quot;:143,&quot;endLine&quot;:162}" name="parseHash given &quot;#L143fooL162bar&quot; as argument returns {&quot;line&quot;:143,&quot;endLine&quot;:162}" time="0">
    </testcase>
    <testcase classname="parseHash given &quot;#helloL143fooL162bar&quot; as argument returns {&quot;line&quot;:143,&quot;endLine&quot;:162}" name="parseHash given &quot;#helloL143fooL162bar&quot; as argument returns {&quot;line&quot;:143,&quot;endLine&quot;:162}" time="0">
    </testcase>
    <testcase classname="parseHash given &quot;#L143-L162-L172&quot; as argument returns {}" name="parseHash given &quot;#L143-L162-L172&quot; as argument returns {}" time="0">
    </testcase>
  </testsuite>
  <testsuite name="util" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:09" time="1.033" tests="31">
    <testcase classname="util parseURL() tree page" name="util parseURL() tree page" time="0.002">
    </testcase>
    <testcase classname="util parseURL() blob page" name="util parseURL() blob page" time="0.001">
    </testcase>
    <testcase classname="util parseURL() commit page" name="util parseURL() commit page" time="0">
    </testcase>
    <testcase classname="util parseURL() pull request page" name="util parseURL() pull request page" time="0.001">
    </testcase>
    <testcase classname="util parseURL() compare page" name="util parseURL() compare page" time="0">
    </testcase>
    <testcase classname="util parseURL() selections - single line" name="util parseURL() selections - single line" time="0">
    </testcase>
    <testcase classname="util parseURL() selections - range" name="util parseURL() selections - range" time="0">
    </testcase>
    <testcase classname="util parseURL() snippet permalink" name="util parseURL() snippet permalink" time="0.001">
    </testcase>
    <testcase classname="util parseURL() pull request list" name="util parseURL() pull request list" time="0">
    </testcase>
    <testcase classname="util parseURL() wiki page" name="util parseURL() wiki page" time="0">
    </testcase>
    <testcase classname="util parseURL() branch name with forward slashes" name="util parseURL() branch name with forward slashes" time="0.001">
    </testcase>
    <testcase classname="getDiffFileName() github.com Commit page Vanilla split extracts the filename" name="getDiffFileName() github.com Commit page Vanilla split extracts the filename" time="0.021">
    </testcase>
    <testcase classname="getDiffFileName() github.com Commit page Vanilla unified extracts the filename" name="getDiffFileName() github.com Commit page Vanilla unified extracts the filename" time="0.013">
    </testcase>
    <testcase classname="getDiffFileName() github.com Commit page Refined Github split extracts the filename" name="getDiffFileName() github.com Commit page Refined Github split extracts the filename" time="0.012">
    </testcase>
    <testcase classname="getDiffFileName() github.com Commit page Refined Github unified extracts the filename" name="getDiffFileName() github.com Commit page Refined Github unified extracts the filename" time="0.007">
    </testcase>
    <testcase classname="getDiffFileName() github.com Pull Request Discussion page Vanilla extracts the filename" name="getDiffFileName() github.com Pull Request Discussion page Vanilla extracts the filename" time="0.218">
    </testcase>
    <testcase classname="getDiffFileName() github.com Pull Request Discussion page Refined Github extracts the filename" name="getDiffFileName() github.com Pull Request Discussion page Refined Github extracts the filename" time="0.198">
    </testcase>
    <testcase classname="getDiffFileName() github.com Pull Request page Vanilla split extracts the filename" name="getDiffFileName() github.com Pull Request page Vanilla split extracts the filename" time="0.011">
    </testcase>
    <testcase classname="getDiffFileName() github.com Pull Request page Vanilla unified extracts the filename" name="getDiffFileName() github.com Pull Request page Vanilla unified extracts the filename" time="0.009">
    </testcase>
    <testcase classname="getDiffFileName() github.com Pull Request page Refined Github split extracts the filename" name="getDiffFileName() github.com Pull Request page Refined Github split extracts the filename" time="0.007">
    </testcase>
    <testcase classname="getDiffFileName() github.com Pull Request page Refined Github unified extracts the filename" name="getDiffFileName() github.com Pull Request page Refined Github unified extracts the filename" time="0.007">
    </testcase>
    <testcase classname="getDiffFileName() ghe-2.14.11 Commit page Vanilla split extracts the filename" name="getDiffFileName() ghe-2.14.11 Commit page Vanilla split extracts the filename" time="0.008">
    </testcase>
    <testcase classname="getDiffFileName() ghe-2.14.11 Commit page Vanilla unified extracts the filename" name="getDiffFileName() ghe-2.14.11 Commit page Vanilla unified extracts the filename" time="0.005">
    </testcase>
    <testcase classname="getDiffFileName() ghe-2.14.11 Commit page Refined Github split extracts the filename" name="getDiffFileName() ghe-2.14.11 Commit page Refined Github split extracts the filename" time="0.005">
    </testcase>
    <testcase classname="getDiffFileName() ghe-2.14.11 Commit page Refined Github unified extracts the filename" name="getDiffFileName() ghe-2.14.11 Commit page Refined Github unified extracts the filename" time="0.003">
    </testcase>
    <testcase classname="getDiffFileName() ghe-2.14.11 Pull Request page Vanilla split extracts the filename" name="getDiffFileName() ghe-2.14.11 Pull Request page Vanilla split extracts the filename" time="0.044">
    </testcase>
    <testcase classname="getDiffFileName() ghe-2.14.11 Pull Request page Vanilla unified extracts the filename" name="getDiffFileName() ghe-2.14.11 Pull Request page Vanilla unified extracts the filename" time="0.035">
    </testcase>
    <testcase classname="getDiffFileName() ghe-2.14.11 Pull Request page Refined Github split extracts the filename" name="getDiffFileName() ghe-2.14.11 Pull Request page Refined Github split extracts the filename" time="0.042">
    </testcase>
    <testcase classname="getDiffFileName() ghe-2.14.11 Pull Request page Refined Github unified extracts the filename" name="getDiffFileName() ghe-2.14.11 Pull Request page Refined Github unified extracts the filename" time="0.034">
    </testcase>
    <testcase classname="getDiffFileName() ghe-2.14.11 Pull Request Discussion page Vanilla extracts the filename" name="getDiffFileName() ghe-2.14.11 Pull Request Discussion page Vanilla extracts the filename" time="0.015">
    </testcase>
    <testcase classname="getDiffFileName() ghe-2.14.11 Pull Request Discussion page Refined Github extracts the filename" name="getDiffFileName() ghe-2.14.11 Pull Request Discussion page Refined Github extracts the filename" time="0.017">
    </testcase>
  </testsuite>
  <testsuite name="search/helpers" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:09" time="0.448" tests="2">
    <testcase classname="search/helpers submitSearch() should update history" name="search/helpers submitSearch() should update history" time="0.002">
    </testcase>
    <testcase classname="search/helpers submitSearch() should keep trace param when updating history" name="search/helpers submitSearch() should keep trace param when updating history" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="StreamingSearchResults" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:06" time="4.414" tests="10">
    <testcase classname="StreamingSearchResults should call streaming search API with the right parameters from URL" name="StreamingSearchResults should call streaming search API with the right parameters from URL" time="0.222">
    </testcase>
    <testcase classname="StreamingSearchResults should render progress with data from API" name="StreamingSearchResults should render progress with data from API" time="0.105">
    </testcase>
    <testcase classname="StreamingSearchResults should expand and collapse results when event from infobar is triggered" name="StreamingSearchResults should expand and collapse results when event from infobar is triggered" time="0.21">
    </testcase>
    <testcase classname="StreamingSearchResults should render correct components for file match and repository match" name="StreamingSearchResults should render correct components for file match and repository match" time="0.094">
    </testcase>
    <testcase classname="StreamingSearchResults should render correct components for file match using legacy line match format" name="StreamingSearchResults should render correct components for file match using legacy line match format" time="0.08">
    </testcase>
    <testcase classname="StreamingSearchResults should log view, query, and results fetched events" name="StreamingSearchResults should log view, query, and results fetched events" time="0.086">
    </testcase>
    <testcase classname="StreamingSearchResults should log events when clicking on search result" name="StreamingSearchResults should log events when clicking on search result" time="0.089">
    </testcase>
    <testcase classname="StreamingSearchResults should not show saved search modal on first load" name="StreamingSearchResults should not show saved search modal on first load" time="0.075">
    </testcase>
    <testcase classname="StreamingSearchResults should open and close saved search modal if events trigger" name="StreamingSearchResults should open and close saved search modal if events trigger" time="0.425">
    </testcase>
    <testcase classname="StreamingSearchResults should start a new search with added params when onSearchAgain event is triggered" name="StreamingSearchResults should start a new search with added params when onSearchAgain event is triggered" time="0.349">
    </testcase>
  </testsuite>
  <testsuite name="usePageSwitcherPagination" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:07" time="3.708" tests="9">
    <testcase classname="usePageSwitcherPagination renders the first page" name="usePageSwitcherPagination renders the first page" time="0.178">
    </testcase>
    <testcase classname="usePageSwitcherPagination supports forward pagination" name="usePageSwitcherPagination supports forward pagination" time="0.477">
    </testcase>
    <testcase classname="usePageSwitcherPagination supports restoration from forward pagination URL" name="usePageSwitcherPagination supports restoration from forward pagination URL" time="0.127">
    </testcase>
    <testcase classname="usePageSwitcherPagination supports jumping to the first page" name="usePageSwitcherPagination supports jumping to the first page" time="0.232">
    </testcase>
    <testcase classname="usePageSwitcherPagination supports jumping to the last page" name="usePageSwitcherPagination supports jumping to the last page" time="0.23">
    </testcase>
    <testcase classname="usePageSwitcherPagination supports restoration from last page URL" name="usePageSwitcherPagination supports restoration from last page URL" time="0.125">
    </testcase>
    <testcase classname="usePageSwitcherPagination supports backward pagination" name="usePageSwitcherPagination supports backward pagination" time="0.566">
    </testcase>
    <testcase classname="usePageSwitcherPagination supports restoration from backward pagination URL" name="usePageSwitcherPagination supports restoration from backward pagination URL" time="0.128">
    </testcase>
    <testcase classname="usePageSwitcherPagination does not change the URL when useURL is disabled" name="usePageSwitcherPagination does not change the URL when useURL is disabled" time="0.225">
    </testcase>
  </testsuite>
  <testsuite name="&lt;ButtonLink /&gt;" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:10" time="0.562" tests="5">
    <testcase classname="&lt;ButtonLink /&gt; renders correctly btn classes" name="&lt;ButtonLink /&gt; renders correctly btn classes" time="0.016">
    </testcase>
    <testcase classname="&lt;ButtonLink /&gt; renders correctly `disabled`" name="&lt;ButtonLink /&gt; renders correctly `disabled`" time="0.004">
    </testcase>
    <testcase classname="&lt;ButtonLink /&gt; renders correctly empty `to`" name="&lt;ButtonLink /&gt; renders correctly empty `to`" time="0.003">
    </testcase>
    <testcase classname="&lt;ButtonLink /&gt; renders correctly anchor attributes" name="&lt;ButtonLink /&gt; renders correctly anchor attributes" time="0.002">
    </testcase>
    <testcase classname="&lt;ButtonLink /&gt; Should trigger onSelect" name="&lt;ButtonLink /&gt; Should trigger onSelect" time="0.021">
    </testcase>
  </testsuite>
  <testsuite name="SurveyToast" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:10" time="0.946" tests="13">
    <testcase classname="SurveyToast toast has not been dismissed by the user before day 3 the user is not surveyed" name="SurveyToast toast has not been dismissed by the user before day 3 the user is not surveyed" time="0.014">
    </testcase>
    <testcase classname="SurveyToast toast has not been dismissed by the user on day 3 the user is surveyed" name="SurveyToast toast has not been dismissed by the user on day 3 the user is surveyed" time="0.02">
    </testcase>
    <testcase classname="SurveyToast toast has not been dismissed by the user on day 3 correctly handles dismissing the toast" name="SurveyToast toast has not been dismissed by the user on day 3 correctly handles dismissing the toast" time="0.018">
    </testcase>
    <testcase classname="SurveyToast toast has not been dismissed by the user on day 3 correctly handles dismissing the toast permanently" name="SurveyToast toast has not been dismissed by the user on day 3 correctly handles dismissing the toast permanently" time="0.019">
    </testcase>
    <testcase classname="SurveyToast toast has not been dismissed by the user on day 3 correctly proceed to use case form" name="SurveyToast toast has not been dismissed by the user on day 3 correctly proceed to use case form" time="0.035">
    </testcase>
    <testcase classname="SurveyToast toast has not been dismissed by the user on day 4 the user is not surveyed" name="SurveyToast toast has not been dismissed by the user on day 4 the user is not surveyed" time="0.003">
    </testcase>
    <testcase classname="SurveyToast toast has not been dismissed by the user on day 33 the user is surveyed as it has been 30 days since the last notification" name="SurveyToast toast has not been dismissed by the user on day 33 the user is surveyed as it has been 30 days since the last notification" time="0.009">
    </testcase>
    <testcase classname="SurveyToast toast has been temporarily dismissed by the user on day 3 the user is not surveyed" name="SurveyToast toast has been temporarily dismissed by the user on day 3 the user is not surveyed" time="0.055">
    </testcase>
    <testcase classname="SurveyToast toast has been temporarily dismissed by the user on day 30 the user is not surveyed but toast dismissal is set to false" name="SurveyToast toast has been temporarily dismissed by the user on day 30 the user is not surveyed but toast dismissal is set to false" time="0.024">
    </testcase>
    <testcase classname="SurveyToast toast has been permanently dismissed by the user on day 3 the user is not surveyed" name="SurveyToast toast has been permanently dismissed by the user on day 3 the user is not surveyed" time="0.002">
    </testcase>
    <testcase classname="SurveyToast toast has been permanently dismissed by the user on day 33 the user is still not surveyed" name="SurveyToast toast has been permanently dismissed by the user on day 33 the user is still not surveyed" time="0.002">
    </testcase>
    <testcase classname="SurveyToast user has submitted rating score Should render use case form correctly" name="SurveyToast user has submitted rating score Should render use case form correctly" time="0.036">
    </testcase>
    <testcase classname="SurveyToast user has submitted rating score Should show some gratitude after usecase submission" name="SurveyToast user has submitted rating score Should show some gratitude after usecase submission" time="0.047">
    </testcase>
  </testsuite>
  <testsuite name="PlainQueryInput" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:10" time="1.19" tests="2">
    <testcase classname="PlainQueryInput empty" name="PlainQueryInput empty" time="0.011">
    </testcase>
    <testcase classname="PlainQueryInput with query" name="PlainQueryInput with query" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="useShowMorePagination" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:10" time="2.523" tests="9">
    <testcase classname="useShowMorePagination Cursor based pagination does not fetch anything if skip is true" name="useShowMorePagination Cursor based pagination does not fetch anything if skip is true" time="0.122">
    </testcase>
    <testcase classname="useShowMorePagination Cursor based pagination renders correct result" name="useShowMorePagination Cursor based pagination renders correct result" time="0.121">
    </testcase>
    <testcase classname="useShowMorePagination Cursor based pagination fetches next page of results correctly" name="useShowMorePagination Cursor based pagination fetches next page of results correctly" time="0.231">
    </testcase>
    <testcase classname="useShowMorePagination Cursor based pagination fetches final page of results correctly" name="useShowMorePagination Cursor based pagination fetches final page of results correctly" time="0.431">
    </testcase>
    <testcase classname="useShowMorePagination Cursor based pagination fetches correct amount of results when navigating directly with a URL" name="useShowMorePagination Cursor based pagination fetches correct amount of results when navigating directly with a URL" time="0.225">
    </testcase>
    <testcase classname="useShowMorePagination Batch based pagination renders correct result" name="useShowMorePagination Batch based pagination renders correct result" time="0.109">
    </testcase>
    <testcase classname="useShowMorePagination Batch based pagination fetches next page of results correctly" name="useShowMorePagination Batch based pagination fetches next page of results correctly" time="0.216">
    </testcase>
    <testcase classname="useShowMorePagination Batch based pagination fetches final page of results correctly" name="useShowMorePagination Batch based pagination fetches final page of results correctly" time="0.32">
    </testcase>
    <testcase classname="useShowMorePagination Batch based pagination fetches correct amount of results when navigating directly with a URL" name="useShowMorePagination Batch based pagination fetches correct amount of results when navigating directly with a URL" time="0.223">
    </testcase>
  </testsuite>
  <testsuite name="withFeatureFlag" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:12" time="0.404" tests="4">
    <testcase classname="withFeatureFlag renders correctly when flagValue=true" name="withFeatureFlag renders correctly when flagValue=true" time="0.022">
    </testcase>
    <testcase classname="withFeatureFlag renders correctly when flagValue=false" name="withFeatureFlag renders correctly when flagValue=false" time="0.004">
    </testcase>
    <testcase classname="withFeatureFlag waits until flag value is resolved" name="withFeatureFlag waits until flag value is resolved" time="0.006">
    </testcase>
    <testcase classname="withFeatureFlag renders correctly when flagValue=false and FalseComponent omitted" name="withFeatureFlag renders correctly when flagValue=false and FalseComponent omitted" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="decodeSearchInsightUrl" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:12" time="0.979" tests="3">
    <testcase classname="decodeSearchInsightUrl should return null of non of insight relevant fields are presented in the URL query params" name="decodeSearchInsightUrl should return null of non of insight relevant fields are presented in the URL query params" time="0.001">
    </testcase>
    <testcase classname="decodeSearchInsightUrl should return a valid search insight initial values object" name="decodeSearchInsightUrl should return a valid search insight initial values object" time="0.001">
    </testcase>
    <testcase classname="encodeSearchInsightUrl should encode search insight values in a way that they could be decoded with decodeUrlSearchInsight" name="encodeSearchInsightUrl should encode search insight values in a way that they could be decoded with decodeUrlSearchInsight" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Notepad" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:10" time="2.543" tests="29">
    <testcase classname="Notepad closed state does not render anything if feature is disabled dand there are no notes" name="Notepad closed state does not render anything if feature is disabled dand there are no notes" time="0.017">
    </testcase>
    <testcase classname="Notepad closed state shows button to open notepad" name="Notepad closed state shows button to open notepad" time="0.026">
    </testcase>
    <testcase classname="Notepad restore previous session restores the previous session" name="Notepad restore previous session restores the previous session" time="0.049">
    </testcase>
    <testcase classname="Notepad with notes opens and closes" name="Notepad with notes opens and closes" time="0.038">
    </testcase>
    <testcase classname="Notepad with notes redirects to notes" name="Notepad with notes redirects to notes" time="0.023">
    </testcase>
    <testcase classname="Notepad with notes creates notebooks" name="Notepad with notes creates notebooks" time="0.075">
    </testcase>
    <testcase classname="Notepad with notes allows to delete entries" name="Notepad with notes allows to delete entries" time="0.046">
    </testcase>
    <testcase classname="Notepad with notes opens the text annotation input" name="Notepad with notes opens the text annotation input" time="0.052">
    </testcase>
    <testcase classname="Notepad with notes closes annotation input on Meta+Enter" name="Notepad with notes closes annotation input on Meta+Enter" time="0.055">
    </testcase>
    <testcase classname="Notepad selection selects an item on click or space" name="Notepad selection selects an item on click or space" time="0.042">
    </testcase>
    <testcase classname="Notepad selection selects multiple items on ctrl/meta+click/space" name="Notepad selection selects multiple items on ctrl/meta+click/space" time="0.041">
    </testcase>
    <testcase classname="Notepad selection selects a range of items on shift+click" name="Notepad selection selects a range of items on shift+click" time="0.042">
    </testcase>
    <testcase classname="Notepad selection extends the range of items on shift+click" name="Notepad selection extends the range of items on shift+click" time="0.042">
    </testcase>
    <testcase classname="Notepad selection selects a range of items on shift+space" name="Notepad selection selects a range of items on shift+space" time="0.033">
    </testcase>
    <testcase classname="Notepad selection extends the range of items on shift+space" name="Notepad selection extends the range of items on shift+space" time="0.039">
    </testcase>
    <testcase classname="Notepad selection selects all items on ctrl+a" name="Notepad selection selects all items on ctrl+a" time="0.031">
    </testcase>
    <testcase classname="Notepad selection selects the next item on arrow-down" name="Notepad selection selects the next item on arrow-down" time="0.039">
    </testcase>
    <testcase classname="Notepad selection selects the previous item on arrow-up" name="Notepad selection selects the previous item on arrow-up" time="0.033">
    </testcase>
    <testcase classname="Notepad selection extends/shrinks selection on shift+arrow-down/up" name="Notepad selection extends/shrinks selection on shift+arrow-down/up" time="0.037">
    </testcase>
    <testcase classname="Notepad selection skips over selected notes using shift+arrow-down" name="Notepad selection skips over selected notes using shift+arrow-down" time="0.036">
    </testcase>
    <testcase classname="Notepad selection skips over selected notes using shift+arrow-up" name="Notepad selection skips over selected notes using shift+arrow-up" time="0.041">
    </testcase>
    <testcase classname="Notepad selection extends/shrinks selection on shift+arrow-up/down" name="Notepad selection extends/shrinks selection on shift+arrow-up/down" time="0.037">
    </testcase>
    <testcase classname="Notepad selection maintains the right selected items when non-selected items get removed" name="Notepad selection maintains the right selected items when non-selected items get removed" time="0.032">
    </testcase>
    <testcase classname="Notepad selection selectes the newly added item" name="Notepad selection selectes the newly added item" time="0.034">
    </testcase>
    <testcase classname="Notepad selection deletes a single entry even if others are selected" name="Notepad selection deletes a single entry even if others are selected" time="0.058">
    </testcase>
    <testcase classname="Notepad selection deletes all selected notes when Delete is pressed" name="Notepad selection deletes all selected notes when Delete is pressed" time="0.029">
    </testcase>
    <testcase classname="Notepad selection clears selection on ESC" name="Notepad selection clears selection on ESC" time="0.028">
    </testcase>
    <testcase classname="Notepad selection does not select entry on toggle annotion click" name="Notepad selection does not select entry on toggle annotion click" time="0.047">
    </testcase>
    <testcase classname="Notepad selection does not select note on typing space into the annotation area" name="Notepad selection does not select note on typing space into the annotation area" time="0.049">
    </testcase>
  </testsuite>
  <testsuite name="positions" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:13" time="0.427" tests="5">
    <testcase classname="positions placeholder" name="positions placeholder" time="0">
    </testcase>
    <testcase classname="positions does not tokenize the DOM when tokenize: false" name="positions does not tokenize the DOM when tokenize: false" time="0.012">
    </testcase>
    <testcase classname="positions does not tokenize the DOM when tokenize: false" name="positions does not tokenize the DOM when tokenize: false" time="0.007">
    </testcase>
    <testcase classname="positions tokenizes the DOM when tokenize: true" name="positions tokenizes the DOM when tokenize: true" time="0.007">
    </testcase>
    <testcase classname="positions tokenizes the DOM when tokenize: true" name="positions tokenizes the DOM when tokenize: true" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="RevisionsPopover" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:11" time="2.194" tests="5">
    <testcase classname="RevisionsPopover renders correct number of results" name="RevisionsPopover renders correct number of results" time="0.165">
    </testcase>
    <testcase classname="RevisionsPopover renders result nodes correctly" name="RevisionsPopover renders result nodes correctly" time="0.115">
    </testcase>
    <testcase classname="RevisionsPopover fetches remaining results correctly" name="RevisionsPopover fetches remaining results correctly" time="0.247">
    </testcase>
    <testcase classname="RevisionsPopover searches correctly" name="RevisionsPopover searches correctly" time="0.422">
    </testcase>
    <testcase classname="RevisionsPopover displays no results correctly" name="RevisionsPopover displays no results correctly" time="0.419">
    </testcase>
  </testsuite>
  <testsuite name="RepoSettingsLogsPage" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:13" time="0.65" tests="2">
    <testcase classname="RepoSettingsLogsPage should render correctly when there are recorded commands" name="RepoSettingsLogsPage should render correctly when there are recorded commands" time="0.067">
    </testcase>
    <testcase classname="RepoSettingsLogsPage should render correctly when there are no recorded commands" name="RepoSettingsLogsPage should render correctly when there are no recorded commands" time="0.019">
    </testcase>
  </testsuite>
  <testsuite name="FilterLink" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:13" time="1.308" tests="8">
    <testcase classname="FilterLink should have correct links for repos" name="FilterLink should have correct links for repos" time="0.021">
    </testcase>
    <testcase classname="FilterLink should have show icons for repos on cloud" name="FilterLink should have show icons for repos on cloud" time="0.007">
    </testcase>
    <testcase classname="FilterLink should have no repo links if no repo filters present" name="FilterLink should have no repo links if no repo filters present" time="0">
    </testcase>
    <testcase classname="FilterLink should have correct links for dynamic filters" name="FilterLink should have correct links for dynamic filters" time="0.009">
    </testcase>
    <testcase classname="FilterLink should have no dynamic filters links if no dynamic filters present" name="FilterLink should have no dynamic filters links if no dynamic filters present" time="0">
    </testcase>
    <testcase classname="FilterLink should have correct links for scopes" name="FilterLink should have correct links for scopes" time="0.005">
    </testcase>
    <testcase classname="FilterLink should have no snippet links if no snippets present" name="FilterLink should have no snippet links if no snippets present" time="0">
    </testcase>
    <testcase classname="FilterLink should call correct callback when clicked" name="FilterLink should call correct callback when clicked" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="backend errors" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:14" time="0.289" tests="7">
    <testcase classname="backend errors isCloneInProgressErrorLike() returns true for CloneInProgressError" name="backend errors isCloneInProgressErrorLike() returns true for CloneInProgressError" time="0">
    </testcase>
    <testcase classname="backend errors isRevisionNotFoundErrorLike() returns true for RevisionNotFoundError" name="backend errors isRevisionNotFoundErrorLike() returns true for RevisionNotFoundError" time="0">
    </testcase>
    <testcase classname="backend errors isRepoNotFoundErrorLike() returns true for RepoNotFoundError" name="backend errors isRepoNotFoundErrorLike() returns true for RepoNotFoundError" time="0">
    </testcase>
    <testcase classname="backend errors isRepoSeeOtherErrorLike() returns the redirect URL for RepoSeeOtherErrors" name="backend errors isRepoSeeOtherErrorLike() returns the redirect URL for RepoSeeOtherErrors" time="0">
    </testcase>
    <testcase classname="backend errors isRepoSeeOtherErrorLike() returns the redirect URL for plain RepoSeeOtherErrors" name="backend errors isRepoSeeOtherErrorLike() returns the redirect URL for plain RepoSeeOtherErrors" time="0.001">
    </testcase>
    <testcase classname="backend errors isRepoSeeOtherErrorLike() returns false for other errors" name="backend errors isRepoSeeOtherErrorLike() returns false for other errors" time="0">
    </testcase>
    <testcase classname="backend errors isRepoSeeOtherErrorLike() returns false for other values" name="backend errors isRepoSeeOtherErrorLike() returns false for other values" time="0">
    </testcase>
  </testsuite>
  <testsuite name="HoverMerged" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:14" time="0.32" tests="6">
    <testcase classname="HoverMerged from 0 hovers" name="HoverMerged from 0 hovers" time="0.001">
    </testcase>
    <testcase classname="HoverMerged from empty hovers" name="HoverMerged from empty hovers" time="0">
    </testcase>
    <testcase classname="HoverMerged from empty string hovers" name="HoverMerged from empty string hovers" time="0">
    </testcase>
    <testcase classname="HoverMerged from 1 MarkupContent" name="HoverMerged from 1 MarkupContent" time="0.001">
    </testcase>
    <testcase classname="HoverMerged from 2 MarkupContents" name="HoverMerged from 2 MarkupContents" time="0">
    </testcase>
    <testcase classname="HoverMerged from Aggregated Badges" name="HoverMerged from Aggregated Badges" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="createLinkClickHandler" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:14" time="0.492" tests="2">
    <testcase classname="createLinkClickHandler handles clicks on links that stay inside the app" name="createLinkClickHandler handles clicks on links that stay inside the app" time="0.011">
    </testcase>
    <testcase classname="createLinkClickHandler ignores clicks on links that go outside the app" name="createLinkClickHandler ignores clicks on links that go outside the app" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Tour.tsx" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:14" time="0.9" tests="7">
    <testcase classname="Tour.tsx renders and triggers initial event log" name="Tour.tsx renders and triggers initial event log" time="0.022">
    </testcase>
    <testcase classname="Tour.tsx handles closing tour and triggers event log" name="Tour.tsx handles closing tour and triggers event log" time="0.015">
    </testcase>
    <testcase classname="Tour.tsx handles &quot;type=video&quot; step and triggers event log" name="Tour.tsx handles &quot;type=video&quot; step and triggers event log" time="0.076">
    </testcase>
    <testcase classname="Tour.tsx handles &quot;type=link&quot; step and triggers event log" name="Tour.tsx handles &quot;type=link&quot; step and triggers event log" time="0.009">
    </testcase>
    <testcase classname="Tour.tsx handles &quot;type=link&quot; language specific step and triggers event log" name="Tour.tsx handles &quot;type=link&quot; language specific step and triggers event log" time="0.012">
    </testcase>
    <testcase classname="Tour.tsx handles &quot;type=restart&quot; and triggers event log" name="Tour.tsx handles &quot;type=restart&quot; and triggers event log" time="0.008">
    </testcase>
    <testcase classname="Tour.tsx handles completing tour and triggers event log" name="Tour.tsx handles completing tour and triggers event log" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="ReferencesPanel" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:13" time="1.768" tests="3">
    <testcase classname="ReferencesPanel renders definitions correctly" name="ReferencesPanel renders definitions correctly" time="0.283">
    </testcase>
    <testcase classname="ReferencesPanel renders references correctly" name="ReferencesPanel renders references correctly" time="0.268">
    </testcase>
    <testcase classname="ReferencesPanel renders a code view when clicking on a location" name="ReferencesPanel renders a code view when clicking on a location" time="0.377">
    </testcase>
  </testsuite>
  <testsuite name="example helpers" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:15" time="0.562" tests="11">
    <testcase classname="example helpers createExampleFromString parses examples without placeholder" name="example helpers createExampleFromString parses examples without placeholder" time="0.002">
    </testcase>
    <testcase classname="example helpers createExampleFromString parses examples with placeholder" name="example helpers createExampleFromString parses examples with placeholder" time="0.001">
    </testcase>
    <testcase classname="example helpers updateQueryWithFilterExample repeatable filters appends placeholder filter and selects placeholder" name="example helpers updateQueryWithFilterExample repeatable filters appends placeholder filter and selects placeholder" time="0.002">
    </testcase>
    <testcase classname="example helpers updateQueryWithFilterExample repeatable filters appends filter with empty value" name="example helpers updateQueryWithFilterExample repeatable filters appends filter with empty value" time="0">
    </testcase>
    <testcase classname="example helpers updateQueryWithFilterExample repeatable filters appends negated filter" name="example helpers updateQueryWithFilterExample repeatable filters appends negated filter" time="0">
    </testcase>
    <testcase classname="example helpers updateQueryWithFilterExample unique filters appends placeholder filter and selects placeholder" name="example helpers updateQueryWithFilterExample unique filters appends placeholder filter and selects placeholder" time="0.004">
    </testcase>
    <testcase classname="example helpers updateQueryWithFilterExample unique filters selects value of existing placeholder" name="example helpers updateQueryWithFilterExample unique filters selects value of existing placeholder" time="0.001">
    </testcase>
    <testcase classname="example helpers updateQueryWithFilterExample unique filters updates existing filter with empty value" name="example helpers updateQueryWithFilterExample unique filters updates existing filter with empty value" time="0">
    </testcase>
    <testcase classname="example helpers updateQueryWithFilterExample unique filters updates existing empty filter with empty value" name="example helpers updateQueryWithFilterExample unique filters updates existing empty filter with empty value" time="0.001">
    </testcase>
    <testcase classname="example helpers updateQueryWithFilterExample unique filters selects value of existing negated filter" name="example helpers updateQueryWithFilterExample unique filters selects value of existing negated filter" time="0">
    </testcase>
    <testcase classname="example helpers updateQueryWithFilterExample unique filters updates existing negated filter with empty value" name="example helpers updateQueryWithFilterExample unique filters updates existing negated filter with empty value" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Bitbucket scrape.ts" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:14" time="1.061" tests="11">
    <testcase classname="Bitbucket scrape.ts getFileInfoFromSingleFileSourceCodeView() should get the FileInfo for a single file code view" name="Bitbucket scrape.ts getFileInfoFromSingleFileSourceCodeView() should get the FileInfo for a single file code view" time="0.135">
    </testcase>
    <testcase classname="Bitbucket scrape.ts getDiffFileInfoFromMultiFileDiffCodeView() should get the FileInfo for an added file" name="Bitbucket scrape.ts getDiffFileInfoFromMultiFileDiffCodeView() should get the FileInfo for an added file" time="0.036">
    </testcase>
    <testcase classname="Bitbucket scrape.ts getDiffFileInfoFromMultiFileDiffCodeView() should get the FileInfo for a modified file" name="Bitbucket scrape.ts getDiffFileInfoFromMultiFileDiffCodeView() should get the FileInfo for a modified file" time="0.205">
    </testcase>
    <testcase classname="Bitbucket scrape.ts getDiffFileInfoFromMultiFileDiffCodeView() should get the FileInfo for a deleted file" name="Bitbucket scrape.ts getDiffFileInfoFromMultiFileDiffCodeView() should get the FileInfo for a deleted file" time="0.038">
    </testcase>
    <testcase classname="Bitbucket scrape.ts getDiffFileInfoFromMultiFileDiffCodeView() should get the FileInfo for a copied file" name="Bitbucket scrape.ts getDiffFileInfoFromMultiFileDiffCodeView() should get the FileInfo for a copied file" time="0.097">
    </testcase>
    <testcase classname="Bitbucket scrape.ts getDiffFileInfoFromMultiFileDiffCodeView() should get the FileInfo for a renamed file" name="Bitbucket scrape.ts getDiffFileInfoFromMultiFileDiffCodeView() should get the FileInfo for a renamed file" time="0.069">
    </testcase>
    <testcase classname="Bitbucket scrape.ts getDiffFileInfoFromMultiFileDiffCodeView() should get the FileInfo for a moved file" name="Bitbucket scrape.ts getDiffFileInfoFromMultiFileDiffCodeView() should get the FileInfo for a moved file" time="0.119">
    </testcase>
    <testcase classname="Bitbucket scrape.ts isCommitView() detects a commit view when there is no context path" name="Bitbucket scrape.ts isCommitView() detects a commit view when there is no context path" time="0.001">
    </testcase>
    <testcase classname="Bitbucket scrape.ts isCommitView() detects a commit view when there is a context path" name="Bitbucket scrape.ts isCommitView() detects a commit view when there is a context path" time="0">
    </testcase>
    <testcase classname="Bitbucket scrape.ts isPullRequestView() detects a pull request view when there is no context path" name="Bitbucket scrape.ts isPullRequestView() detects a pull request view when there is no context path" time="0">
    </testcase>
    <testcase classname="Bitbucket scrape.ts isPullRequestView() detects a pull request view when there is a context path" name="Bitbucket scrape.ts isPullRequestView() detects a pull request view when there is a context path" time="0">
    </testcase>
  </testsuite>
  <testsuite name="PostSignUpPage" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:15" time="0.8" tests="3">
    <testcase classname="PostSignUpPage renders post signup page - with email verification" name="PostSignUpPage renders post signup page - with email verification" time="0.131">
    </testcase>
    <testcase classname="PostSignUpPage renders post signup page - with cody survey" name="PostSignUpPage renders post signup page - with cody survey" time="0.04">
    </testcase>
    <testcase classname="PostSignUpPage renders redirect when user has completed post signup flow" name="PostSignUpPage renders redirect when user has completed post signup flow" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="PersonLink" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:16" time="0.534" tests="3">
    <testcase classname="PersonLink no display name, only email" name="PersonLink no display name, only email" time="0.014">
    </testcase>
    <testcase classname="PersonLink no user account" name="PersonLink no user account" time="0.003">
    </testcase>
    <testcase classname="PersonLink with user account" name="PersonLink with user account" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="GitLab DOM functions" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:14" time="2.227" tests="68">
    <testcase classname="GitLab DOM functions diffDOMFunctions Legacy Split view line number 733 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitLab DOM functions diffDOMFunctions Legacy Split view line number 733 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.142">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Legacy Split view line number 733 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitLab DOM functions diffDOMFunctions Legacy Split view line number 733 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.198">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Legacy Split view line number 733 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitLab DOM functions diffDOMFunctions Legacy Split view line number 733 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.134">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Legacy Split view line number 733 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="GitLab DOM functions diffDOMFunctions Legacy Split view line number 733 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.027">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Legacy Split view line number 733 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitLab DOM functions diffDOMFunctions Legacy Split view line number 733 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.022">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Legacy Split view line number 740 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitLab DOM functions diffDOMFunctions Legacy Split view line number 740 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.029">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Legacy Split view line number 740 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitLab DOM functions diffDOMFunctions Legacy Split view line number 740 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.018">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Legacy Split view line number 740 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitLab DOM functions diffDOMFunctions Legacy Split view line number 740 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.017">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Legacy Split view line number 740 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="GitLab DOM functions diffDOMFunctions Legacy Split view line number 740 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.017">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Legacy Split view line number 740 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitLab DOM functions diffDOMFunctions Legacy Split view line number 740 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.015">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Legacy Split view line number 735 in base diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitLab DOM functions diffDOMFunctions Legacy Split view line number 735 in base diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.018">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Legacy Split view line number 735 in base diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitLab DOM functions diffDOMFunctions Legacy Split view line number 735 in base diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.019">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Legacy Split view line number 735 in base diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitLab DOM functions diffDOMFunctions Legacy Split view line number 735 in base diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.017">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Legacy Split view line number 735 in base diff part getDiffCodePart() should return &quot;base&quot; when given the code element" name="GitLab DOM functions diffDOMFunctions Legacy Split view line number 735 in base diff part getDiffCodePart() should return &quot;base&quot; when given the code element" time="0.016">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Legacy Split view line number 735 in base diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitLab DOM functions diffDOMFunctions Legacy Split view line number 735 in base diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.017">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Split view line number 733 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitLab DOM functions diffDOMFunctions Split view line number 733 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.03">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Split view line number 733 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitLab DOM functions diffDOMFunctions Split view line number 733 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.025">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Split view line number 733 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitLab DOM functions diffDOMFunctions Split view line number 733 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.015">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Split view line number 733 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="GitLab DOM functions diffDOMFunctions Split view line number 733 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.017">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Split view line number 733 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitLab DOM functions diffDOMFunctions Split view line number 733 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.065">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Split view line number 740 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitLab DOM functions diffDOMFunctions Split view line number 740 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.053">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Split view line number 740 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitLab DOM functions diffDOMFunctions Split view line number 740 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.08">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Split view line number 740 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitLab DOM functions diffDOMFunctions Split view line number 740 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.044">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Split view line number 740 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="GitLab DOM functions diffDOMFunctions Split view line number 740 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.036">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Split view line number 740 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitLab DOM functions diffDOMFunctions Split view line number 740 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.019">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Split view line number 735 in base diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitLab DOM functions diffDOMFunctions Split view line number 735 in base diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.024">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Split view line number 735 in base diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitLab DOM functions diffDOMFunctions Split view line number 735 in base diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.021">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Split view line number 735 in base diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitLab DOM functions diffDOMFunctions Split view line number 735 in base diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.017">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Split view line number 735 in base diff part getDiffCodePart() should return &quot;base&quot; when given the code element" name="GitLab DOM functions diffDOMFunctions Split view line number 735 in base diff part getDiffCodePart() should return &quot;base&quot; when given the code element" time="0.016">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Split view line number 735 in base diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitLab DOM functions diffDOMFunctions Split view line number 735 in base diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.015">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Legacy Unified view line number 733 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitLab DOM functions diffDOMFunctions Legacy Unified view line number 733 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.017">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Legacy Unified view line number 733 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitLab DOM functions diffDOMFunctions Legacy Unified view line number 733 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.015">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Legacy Unified view line number 733 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitLab DOM functions diffDOMFunctions Legacy Unified view line number 733 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.012">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Legacy Unified view line number 733 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="GitLab DOM functions diffDOMFunctions Legacy Unified view line number 733 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.014">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Legacy Unified view line number 733 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitLab DOM functions diffDOMFunctions Legacy Unified view line number 733 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.013">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Legacy Unified view line number 740 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitLab DOM functions diffDOMFunctions Legacy Unified view line number 740 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.015">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Legacy Unified view line number 740 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitLab DOM functions diffDOMFunctions Legacy Unified view line number 740 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.016">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Legacy Unified view line number 740 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitLab DOM functions diffDOMFunctions Legacy Unified view line number 740 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.013">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Legacy Unified view line number 740 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="GitLab DOM functions diffDOMFunctions Legacy Unified view line number 740 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.015">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Legacy Unified view line number 740 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitLab DOM functions diffDOMFunctions Legacy Unified view line number 740 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.014">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Legacy Unified view line number 735 in base diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitLab DOM functions diffDOMFunctions Legacy Unified view line number 735 in base diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.012">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Legacy Unified view line number 735 in base diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitLab DOM functions diffDOMFunctions Legacy Unified view line number 735 in base diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.018">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Legacy Unified view line number 735 in base diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitLab DOM functions diffDOMFunctions Legacy Unified view line number 735 in base diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.013">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Legacy Unified view line number 735 in base diff part getDiffCodePart() should return &quot;base&quot; when given the code element" name="GitLab DOM functions diffDOMFunctions Legacy Unified view line number 735 in base diff part getDiffCodePart() should return &quot;base&quot; when given the code element" time="0.013">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Legacy Unified view line number 735 in base diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitLab DOM functions diffDOMFunctions Legacy Unified view line number 735 in base diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.013">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Unified view line number 733 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitLab DOM functions diffDOMFunctions Unified view line number 733 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.021">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Unified view line number 733 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitLab DOM functions diffDOMFunctions Unified view line number 733 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.014">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Unified view line number 733 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitLab DOM functions diffDOMFunctions Unified view line number 733 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.013">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Unified view line number 733 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="GitLab DOM functions diffDOMFunctions Unified view line number 733 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.014">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Unified view line number 733 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitLab DOM functions diffDOMFunctions Unified view line number 733 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.013">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Unified view line number 740 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitLab DOM functions diffDOMFunctions Unified view line number 740 in head diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.015">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Unified view line number 740 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitLab DOM functions diffDOMFunctions Unified view line number 740 in head diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.017">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Unified view line number 740 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitLab DOM functions diffDOMFunctions Unified view line number 740 in head diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.011">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Unified view line number 740 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" name="GitLab DOM functions diffDOMFunctions Unified view line number 740 in head diff part getDiffCodePart() should return &quot;head&quot; when given the code element" time="0.016">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Unified view line number 740 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitLab DOM functions diffDOMFunctions Unified view line number 740 in head diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.013">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Unified view line number 735 in base diff part getLineElementFromLineNumber() should return the right line element given the line number" name="GitLab DOM functions diffDOMFunctions Unified view line number 735 in base diff part getLineElementFromLineNumber() should return the right line element given the line number" time="0.016">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Unified view line number 735 in base diff part getCodeElementFromLineNumber() should return the right code element given the line number" name="GitLab DOM functions diffDOMFunctions Unified view line number 735 in base diff part getCodeElementFromLineNumber() should return the right code element given the line number" time="0.015">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Unified view line number 735 in base diff part getLineNumberFromCodeElement() should return the right line number given the code element" name="GitLab DOM functions diffDOMFunctions Unified view line number 735 in base diff part getLineNumberFromCodeElement() should return the right line number given the code element" time="0.011">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Unified view line number 735 in base diff part getDiffCodePart() should return &quot;base&quot; when given the code element" name="GitLab DOM functions diffDOMFunctions Unified view line number 735 in base diff part getDiffCodePart() should return &quot;base&quot; when given the code element" time="0.014">
    </testcase>
    <testcase classname="GitLab DOM functions diffDOMFunctions Unified view line number 735 in base diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitLab DOM functions diffDOMFunctions Unified view line number 735 in base diff part isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.013">
    </testcase>
    <testcase classname="GitLab DOM functions singleFileDOMFunctions line number 1 getLineElementFromLineNumber() should return the right line element given the line number" name="GitLab DOM functions singleFileDOMFunctions line number 1 getLineElementFromLineNumber() should return the right line element given the line number" time="0.049">
    </testcase>
    <testcase classname="GitLab DOM functions singleFileDOMFunctions line number 1 getCodeElementFromLineNumber() should return the right code element given the line number" name="GitLab DOM functions singleFileDOMFunctions line number 1 getCodeElementFromLineNumber() should return the right code element given the line number" time="0.046">
    </testcase>
    <testcase classname="GitLab DOM functions singleFileDOMFunctions line number 1 getLineNumberFromCodeElement() should return the right line number given the code element" name="GitLab DOM functions singleFileDOMFunctions line number 1 getLineNumberFromCodeElement() should return the right line number given the code element" time="0.062">
    </testcase>
    <testcase classname="GitLab DOM functions singleFileDOMFunctions line number 1 isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitLab DOM functions singleFileDOMFunctions line number 1 isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.056">
    </testcase>
    <testcase classname="GitLab DOM functions singleFileDOMFunctions line number 22 getLineElementFromLineNumber() should return the right line element given the line number" name="GitLab DOM functions singleFileDOMFunctions line number 22 getLineElementFromLineNumber() should return the right line element given the line number" time="0.04">
    </testcase>
    <testcase classname="GitLab DOM functions singleFileDOMFunctions line number 22 getCodeElementFromLineNumber() should return the right code element given the line number" name="GitLab DOM functions singleFileDOMFunctions line number 22 getCodeElementFromLineNumber() should return the right code element given the line number" time="0.038">
    </testcase>
    <testcase classname="GitLab DOM functions singleFileDOMFunctions line number 22 getLineNumberFromCodeElement() should return the right line number given the code element" name="GitLab DOM functions singleFileDOMFunctions line number 22 getLineNumberFromCodeElement() should return the right line number given the code element" time="0.031">
    </testcase>
    <testcase classname="GitLab DOM functions singleFileDOMFunctions line number 22 isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" name="GitLab DOM functions singleFileDOMFunctions line number 22 isFirstCharacterDiffIndicator() should return correctly whether the first character is a diff indicator" time="0.031">
    </testcase>
  </testsuite>
  <testsuite name="FuzzyModal" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:15" time="1.343" tests="1">
    <testcase classname="FuzzyModal displays all, repos, symbols and files tabs with default experimentalFeatures" name="FuzzyModal displays all, repos, symbols and files tabs with default experimentalFeatures" time="0.46">
    </testcase>
  </testsuite>
  <testsuite name="selectorCompletion" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:16" time="0.464" tests="3">
    <testcase classname="selectorCompletion suggest depth 0 completions" name="selectorCompletion suggest depth 0 completions" time="0.002">
    </testcase>
    <testcase classname="selectorCompletion suggest depth 1 symbol completions" name="selectorCompletion suggest depth 1 symbol completions" time="0">
    </testcase>
    <testcase classname="selectorCompletion suggest depth 2 commit.diff completions" name="selectorCompletion suggest depth 2 commit.diff completions" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="getCompletionItems()" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:15" time="1.774" tests="13">
    <testcase classname="getCompletionItems() returns only static filter type completions when the token matches a known filter" name="getCompletionItems() returns only static filter type completions when the token matches a known filter" time="0.002">
    </testcase>
    <testcase classname="getCompletionItems() returns static filter type completions along with dynamically fetched completions when the token doesn&apos;t match a filter" name="getCompletionItems() returns static filter type completions along with dynamically fetched completions when the token doesn&apos;t match a filter" time="0.001">
    </testcase>
    <testcase classname="getCompletionItems() returns suggestions for an empty query" name="getCompletionItems() returns suggestions for an empty query" time="0.001">
    </testcase>
    <testcase classname="getCompletionItems() returns suggestions on whitespace" name="getCompletionItems() returns suggestions on whitespace" time="0">
    </testcase>
    <testcase classname="getCompletionItems() returns static filter type completions for case-insensitive query" name="getCompletionItems() returns static filter type completions for case-insensitive query" time="0.001">
    </testcase>
    <testcase classname="getCompletionItems() returns completions for filters with discrete values" name="getCompletionItems() returns completions for filters with discrete values" time="0">
    </testcase>
    <testcase classname="getCompletionItems() returns completions for filters with static suggestions" name="getCompletionItems() returns completions for filters with static suggestions" time="0.001">
    </testcase>
    <testcase classname="getCompletionItems() returns completions in order of discrete value definition, not alphabetically" name="getCompletionItems() returns completions in order of discrete value definition, not alphabetically" time="0">
    </testcase>
    <testcase classname="getCompletionItems() returns dynamically fetched completions" name="getCompletionItems() returns dynamically fetched completions" time="0.001">
    </testcase>
    <testcase classname="getCompletionItems() sets current filter value as filterText" name="getCompletionItems() sets current filter value as filterText" time="0">
    </testcase>
    <testcase classname="getCompletionItems() includes file path in insertText when completing filter value" name="getCompletionItems() includes file path in insertText when completing filter value" time="0.001">
    </testcase>
    <testcase classname="getCompletionItems() escapes spaces in repo value" name="getCompletionItems() escapes spaces in repo value" time="0.001">
    </testcase>
    <testcase classname="getCompletionItems() Sourcegraph.com GH repo completions" name="getCompletionItems() Sourcegraph.com GH repo completions" time="0">
    </testcase>
  </testsuite>
  <testsuite name="RepoLink" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:17" time="0.911" tests="9">
    <testcase classname="RepoLink renders a link when &quot;to&quot; is set" name="RepoLink renders a link when &quot;to&quot; is set" time="0.011">
    </testcase>
    <testcase classname="RepoLink renders a fragment when &quot;to&quot; is null" name="RepoLink renders a fragment when &quot;to&quot; is null" time="0.002">
    </testcase>
    <testcase classname="displayRepoName displays a/gabe/test for gerrit.sgdev.org/a/gabe/test" name="displayRepoName displays a/gabe/test for gerrit.sgdev.org/a/gabe/test" time="0">
    </testcase>
    <testcase classname="displayRepoName displays sourcegraph/sourcegraph for github.com/sourcegraph/sourcegraph" name="displayRepoName displays sourcegraph/sourcegraph for github.com/sourcegraph/sourcegraph" time="0.001">
    </testcase>
    <testcase classname="displayRepoName displays sourcegraph for gerrit.sgdev.org/sourcegraph" name="displayRepoName displays sourcegraph for gerrit.sgdev.org/sourcegraph" time="0">
    </testcase>
    <testcase classname="displayRepoName displays sourcegraph for sourcegraph" name="displayRepoName displays sourcegraph for sourcegraph" time="0">
    </testcase>
    <testcase classname="displayRepoName displays sourcegraph/sourcegraph for sourcegraph/sourcegraph" name="displayRepoName displays sourcegraph/sourcegraph for sourcegraph/sourcegraph" time="0">
    </testcase>
    <testcase classname="displayRepoName displays sourcegraph for sg.exe/sourcegraph" name="displayRepoName displays sourcegraph for sg.exe/sourcegraph" time="0">
    </testcase>
    <testcase classname="displayRepoName displays org.scala-sbt:collections_2.12 for org.scala-sbt:collections_2.12" name="displayRepoName displays org.scala-sbt:collections_2.12 for org.scala-sbt:collections_2.12" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Toggles" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:16" time="1.131" tests="8">
    <testcase classname="Toggles getFullQuery query without search context, case insensitive, literal" name="Toggles getFullQuery query without search context, case insensitive, literal" time="0.002">
    </testcase>
    <testcase classname="Toggles getFullQuery query without search context, case sensitive, literal" name="Toggles getFullQuery query without search context, case sensitive, literal" time="0">
    </testcase>
    <testcase classname="Toggles getFullQuery query without search context, case sensitive, regexp" name="Toggles getFullQuery query without search context, case sensitive, regexp" time="0.001">
    </testcase>
    <testcase classname="Toggles getFullQuery query with search context, case sensitive, regexp" name="Toggles getFullQuery query with search context, case sensitive, regexp" time="0">
    </testcase>
    <testcase classname="Toggles getFullQuery query with existing search context, case sensitive, regexp" name="Toggles getFullQuery query with existing search context, case sensitive, regexp" time="0.001">
    </testcase>
    <testcase classname="Toggles Query input toggle state case toggle for case subexpressions" name="Toggles Query input toggle state case toggle for case subexpressions" time="0.032">
    </testcase>
    <testcase classname="Toggles Query input toggle state case toggle for patterntype subexpressions" name="Toggles Query input toggle state case toggle for patterntype subexpressions" time="0.008">
    </testcase>
    <testcase classname="Toggles Query input toggle state regexp toggle for patterntype subexpressions" name="Toggles Query input toggle state regexp toggle for patterntype subexpressions" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="Search Sidebar &gt; Revisions" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:17" time="1.534" tests="4">
    <testcase classname="Search Sidebar &gt; Revisions Branches renders the correct number of results" name="Search Sidebar &gt; Revisions Branches renders the correct number of results" time="0.153">
    </testcase>
    <testcase classname="Search Sidebar &gt; Revisions Branches fetches remaining branches" name="Search Sidebar &gt; Revisions Branches fetches remaining branches" time="0.232">
    </testcase>
    <testcase classname="Search Sidebar &gt; Revisions Tags renders the correct number of results" name="Search Sidebar &gt; Revisions Tags renders the correct number of results" time="0.131">
    </testcase>
    <testcase classname="Search Sidebar &gt; Revisions Tags fetches remaining tags" name="Search Sidebar &gt; Revisions Tags fetches remaining tags" time="0.225">
    </testcase>
  </testsuite>
  <testsuite name="EmailAction" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:17" time="0.963" tests="8">
    <testcase classname="EmailAction open and submit" name="EmailAction open and submit" time="0.028">
    </testcase>
    <testcase classname="EmailAction enable include results" name="EmailAction enable include results" time="0.018">
    </testcase>
    <testcase classname="EmailAction open and delete" name="EmailAction open and delete" time="0.007">
    </testcase>
    <testcase classname="EmailAction enable and disable" name="EmailAction enable and disable" time="0.012">
    </testcase>
    <testcase classname="EmailAction open, edit, cancel, open again" name="EmailAction open, edit, cancel, open again" time="0.022">
    </testcase>
    <testcase classname="EmailAction Send test email disabled if no monitor name set" name="EmailAction Send test email disabled if no monitor name set" time="0.005">
    </testcase>
    <testcase classname="EmailAction Send test email send test email, success" name="EmailAction Send test email send test email, success" time="0.115">
    </testcase>
    <testcase classname="EmailAction Send test email send test email, error" name="EmailAction Send test email send test email, error" time="0.113">
    </testcase>
  </testsuite>
  <testsuite name="SlackWebhookAction" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:18" time="1.137" tests="9">
    <testcase classname="SlackWebhookAction open and submit" name="SlackWebhookAction open and submit" time="0.164">
    </testcase>
    <testcase classname="SlackWebhookAction open and edit" name="SlackWebhookAction open and edit" time="0.114">
    </testcase>
    <testcase classname="SlackWebhookAction open and delete" name="SlackWebhookAction open and delete" time="0.009">
    </testcase>
    <testcase classname="SlackWebhookAction enable and disable" name="SlackWebhookAction enable and disable" time="0.014">
    </testcase>
    <testcase classname="SlackWebhookAction open, edit, cancel, open again" name="SlackWebhookAction open, edit, cancel, open again" time="0.053">
    </testcase>
    <testcase classname="SlackWebhookAction Send test message disabled if no webhook url set" name="SlackWebhookAction Send test message disabled if no webhook url set" time="0.007">
    </testcase>
    <testcase classname="SlackWebhookAction Send test message disabled if no monitor name set" name="SlackWebhookAction Send test message disabled if no monitor name set" time="0.007">
    </testcase>
    <testcase classname="SlackWebhookAction Send test message send test message, success" name="SlackWebhookAction Send test message send test message, success" time="0.117">
    </testcase>
    <testcase classname="SlackWebhookAction Send test message send test message, error" name="SlackWebhookAction Send test message send test message, error" time="0.12">
    </testcase>
  </testsuite>
  <testsuite name="TreePage" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:18" time="1.209" tests="3">
    <testcase classname="TreePage repo page displays a page that is not a fork" name="TreePage repo page displays a page that is not a fork" time="0.028">
    </testcase>
    <testcase classname="TreePage repo page displays a page that is a fork" name="TreePage repo page displays a page that is a fork" time="0.006">
    </testcase>
    <testcase classname="TreePage repo page Should displays cody CTA" name="TreePage repo page Should displays cody CTA" time="0.025">
    </testcase>
  </testsuite>
  <testsuite name="getHoverResult()" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:18" time="0.664" tests="20">
    <testcase classname="getHoverResult() returns hover contents for filters" name="getHoverResult() returns hover contents for filters" time="0.012">
    </testcase>
    <testcase classname="getHoverResult() returns hover contents for fields and regexp values" name="getHoverResult() returns hover contents for fields and regexp values" time="0.002">
    </testcase>
    <testcase classname="getHoverResult() returns hover contents regexp patterns" name="getHoverResult() returns hover contents regexp patterns" time="0.003">
    </testcase>
    <testcase classname="getHoverResult() regexp group range encloses pattern" name="getHoverResult() regexp group range encloses pattern" time="0.005">
    </testcase>
    <testcase classname="getHoverResult() regexp escape characters" name="getHoverResult() regexp escape characters" time="0.002">
    </testcase>
    <testcase classname="getHoverResult() ordinary and negated character class" name="getHoverResult() ordinary and negated character class" time="0.002">
    </testcase>
    <testcase classname="getHoverResult() literal search interprets parentheses as patterns" name="getHoverResult() literal search interprets parentheses as patterns" time="0">
    </testcase>
    <testcase classname="getHoverResult() returns hover contents for revision syntax" name="getHoverResult() returns hover contents for revision syntax" time="0.003">
    </testcase>
    <testcase classname="getHoverResult() returns hover contents for structural syntax" name="getHoverResult() returns hover contents for structural syntax" time="0.001">
    </testcase>
    <testcase classname=" returns hover contents for select" name=" returns hover contents for select" time="0">
    </testcase>
    <testcase classname=" returns repo:contains.path hovers" name=" returns repo:contains.path hovers" time="0">
    </testcase>
    <testcase classname=" returns repo:has.path hovers" name=" returns repo:has.path hovers" time="0">
    </testcase>
    <testcase classname=" returns repo:contains.file hovers" name=" returns repo:contains.file hovers" time="0">
    </testcase>
    <testcase classname=" returns repo:has.topic hovers" name=" returns repo:has.topic hovers" time="0">
    </testcase>
    <testcase classname=" returns repo:has.file hovers" name=" returns repo:has.file hovers" time="0.001">
    </testcase>
    <testcase classname=" returns repo:has.content hovers" name=" returns repo:has.content hovers" time="0">
    </testcase>
    <testcase classname=" returns repo:has.commit.after hovers" name=" returns repo:has.commit.after hovers" time="0">
    </testcase>
    <testcase classname=" returns repo:has.tag hovers" name=" returns repo:has.tag hovers" time="0">
    </testcase>
    <testcase classname=" returns repo:has.meta hovers" name=" returns repo:has.meta hovers" time="0.001">
    </testcase>
    <testcase classname=" returns multiline hovers" name=" returns multiline hovers" time="0">
    </testcase>
  </testsuite>
  <testsuite name="recentSearches" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:19" time="0.723" tests="6">
    <testcase classname="recentSearches useRecentSearches().recentSearches recent searches is empty array if no data in temp settings or event logs" name="recentSearches useRecentSearches().recentSearches recent searches is empty array if no data in temp settings or event logs" time="0.033">
    </testcase>
    <testcase classname="recentSearches useRecentSearches().recentSearches recent searches is populated from event logs if no data in temp settings, with deduplication" name="recentSearches useRecentSearches().recentSearches recent searches is populated from event logs if no data in temp settings, with deduplication" time="0.039">
    </testcase>
    <testcase classname="recentSearches useRecentSearches().recentSearches recent searches is populated from temp settings" name="recentSearches useRecentSearches().recentSearches recent searches is populated from temp settings" time="0.009">
    </testcase>
    <testcase classname="recentSearches useRecentSearches().addRecentSearch adding item to recent searches puts it at the top" name="recentSearches useRecentSearches().addRecentSearch adding item to recent searches puts it at the top" time="0.026">
    </testcase>
    <testcase classname="recentSearches useRecentSearches().addRecentSearch adding an existing item to recent searches deduplicates it and puts it at the top" name="recentSearches useRecentSearches().addRecentSearch adding an existing item to recent searches deduplicates it and puts it at the top" time="0.017">
    </testcase>
    <testcase classname="recentSearches useRecentSearches().addRecentSearch adding an item beyond the limit of the list removes the last item" name="recentSearches useRecentSearches().addRecentSearch adding an item beyond the limit of the list removes the last item" time="0.03">
    </testcase>
  </testsuite>
  <testsuite name="FileContentSearchResult" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:19" time="0.69" tests="2">
    <testcase classname="FileContentSearchResult renders one result container" name="FileContentSearchResult renders one result container" time="0.032">
    </testcase>
    <testcase classname="FileContentSearchResult correctly shows number of context lines when search.contextLines setting is set" name="FileContentSearchResult correctly shows number of context lines when search.contextLines setting is set" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="codeHost" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:18" time="1.96" tests="9">
    <testcase classname="codeHost createOverlayMount() should create the overlay mount" name="codeHost createOverlayMount() should create the overlay mount" time="0.006">
    </testcase>
    <testcase classname="codeHost handleCodeHost() renders the hover overlay mount" name="codeHost handleCodeHost() renders the hover overlay mount" time="0.021">
    </testcase>
    <testcase classname="codeHost handleCodeHost() detects code views based on selectors" name="codeHost handleCodeHost() detects code views based on selectors" time="0.168">
    </testcase>
    <testcase classname="codeHost handleCodeHost() removes code views and models" name="codeHost handleCodeHost() removes code views and models" time="0.189">
    </testcase>
    <testcase classname="codeHost handleCodeHost() Hoverifies a view" name="codeHost handleCodeHost() Hoverifies a view" time="0.009">
    </testcase>
    <testcase classname="codeHost observeHoverOverlayMountLocation() emits document.body if the getMountLocationSelector() returns null" name="codeHost observeHoverOverlayMountLocation() emits document.body if the getMountLocationSelector() returns null" time="0.002">
    </testcase>
    <testcase classname="codeHost observeHoverOverlayMountLocation() emits a custom mount location if a node matching the selector is in addedNodes()" name="codeHost observeHoverOverlayMountLocation() emits a custom mount location if a node matching the selector is in addedNodes()" time="0.001">
    </testcase>
    <testcase classname="codeHost observeHoverOverlayMountLocation() emits a custom mount location if a node matching the selector is nested in an addedNode" name="codeHost observeHoverOverlayMountLocation() emits a custom mount location if a node matching the selector is nested in an addedNode" time="0.003">
    </testcase>
    <testcase classname="codeHost observeHoverOverlayMountLocation() emits document.body if a node matching the selector is removed" name="codeHost observeHoverOverlayMountLocation() emits document.body if a node matching the selector is removed" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="ExternalServiceForm" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:20" time="0.768" tests="3">
    <testcase classname="ExternalServiceForm create GitHub" name="ExternalServiceForm create GitHub" time="0.044">
    </testcase>
    <testcase classname="ExternalServiceForm edit GitHub" name="ExternalServiceForm edit GitHub" time="0.005">
    </testcase>
    <testcase classname="ExternalServiceForm edit GitHub, loading" name="ExternalServiceForm edit GitHub, loading" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="DashboardsContent" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:19" time="1.899" tests="8">
    <testcase classname="DashboardsContent renders a loading indicator" name="DashboardsContent renders a loading indicator" time="0.03">
    </testcase>
    <testcase classname="DashboardsContent renders dashboard not found" name="DashboardsContent renders dashboard not found" time="0.044">
    </testcase>
    <testcase classname="DashboardsContent renders a dashboard" name="DashboardsContent renders a dashboard" time="0.034">
    </testcase>
    <testcase classname="DashboardsContent redirect to new dashboard page on selection" name="DashboardsContent redirect to new dashboard page on selection" time="0.059">
    </testcase>
    <testcase classname="DashboardsContent redirects to dashboard edit page" name="DashboardsContent redirects to dashboard edit page" time="0.035">
    </testcase>
    <testcase classname="DashboardsContent opens add insight modal" name="DashboardsContent opens add insight modal" time="0.108">
    </testcase>
    <testcase classname="DashboardsContent opens delete dashboard modal" name="DashboardsContent opens delete dashboard modal" time="0.085">
    </testcase>
    <testcase classname="DashboardsContent copies dashboard url" name="DashboardsContent copies dashboard url" time="0.094">
    </testcase>
  </testsuite>
  <testsuite name="gitlab/codeHost" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:19" time="2.614" tests="17">
    <testcase classname="gitlab/codeHost getToolbarMount() creates and returns a new mount in the container" name="gitlab/codeHost getToolbarMount() creates and returns a new mount in the container" time="0.03">
    </testcase>
    <testcase classname="gitlab/codeHost getToolbarMount() is idempotent" name="gitlab/codeHost getToolbarMount() is idempotent" time="0.024">
    </testcase>
    <testcase classname="gitlab/codeHost getToolbarMount() throws an Error if given an unexpected code view" name="gitlab/codeHost getToolbarMount() throws an Error if given an unexpected code view" time="0.001">
    </testcase>
    <testcase classname="gitlab/codeHost urlToFile() returns an URL to the Sourcegraph instance if the location has a viewState" name="gitlab/codeHost urlToFile() returns an URL to the Sourcegraph instance if the location has a viewState" time="0.001">
    </testcase>
    <testcase classname="gitlab/codeHost urlToFile() returns an absolute URL if the location is not on the same code host" name="gitlab/codeHost urlToFile() returns an absolute URL if the location is not on the same code host" time="0">
    </testcase>
    <testcase classname="gitlab/codeHost urlToFile() returns an URL to a blob on the same code host if possible" name="gitlab/codeHost urlToFile() returns an URL to a blob on the same code host if possible" time="0.003">
    </testcase>
    <testcase classname="gitlab/codeHost urlToFile() returns an URL to the file on the same merge request if possible" name="gitlab/codeHost urlToFile() returns an URL to the file on the same merge request if possible" time="0.005">
    </testcase>
    <testcase classname="isPrivateRepository returns [private=true] if not on &quot;gitlab.com&quot;" name="isPrivateRepository returns [private=true] if not on &quot;gitlab.com&quot;" time="1.891">
    </testcase>
    <testcase classname="isPrivateRepository when on &quot;gitlab.com&quot; makes request without credentials" name="isPrivateRepository when on &quot;gitlab.com&quot; makes request without credentials" time="0.007">
    </testcase>
    <testcase classname="isPrivateRepository when on &quot;gitlab.com&quot; returns [private=true] on unsuccessful request" name="isPrivateRepository when on &quot;gitlab.com&quot; returns [private=true] on unsuccessful request" time="0.06">
    </testcase>
    <testcase classname="isPrivateRepository when on &quot;gitlab.com&quot; returns [private=true] if rate-limit exceeded" name="isPrivateRepository when on &quot;gitlab.com&quot; returns [private=true] if rate-limit exceeded" time="0.066">
    </testcase>
    <testcase classname="isPrivateRepository when on &quot;gitlab.com&quot; returns [private=true] when NOT 200 status response" name="isPrivateRepository when on &quot;gitlab.com&quot; returns [private=true] when NOT 200 status response" time="0">
    </testcase>
    <testcase classname="isPrivateRepository when on &quot;gitlab.com&quot; returns [private=false] when 200 status response" name="isPrivateRepository when on &quot;gitlab.com&quot; returns [private=false] when 200 status response" time="0.001">
    </testcase>
    <testcase classname="parseHash given &quot;#L1-32&quot; as argument returns {&quot;line&quot;:1,&quot;endLine&quot;:32}" name="parseHash given &quot;#L1-32&quot; as argument returns {&quot;line&quot;:1,&quot;endLine&quot;:32}" time="0">
    </testcase>
    <testcase classname="parseHash given &quot;#L1+32&quot; as argument returns {}" name="parseHash given &quot;#L1+32&quot; as argument returns {}" time="0.001">
    </testcase>
    <testcase classname="parseHash given &quot;#L1-32hello&quot; as argument returns {}" name="parseHash given &quot;#L1-32hello&quot; as argument returns {}" time="0">
    </testcase>
    <testcase classname="parseHash given &quot;#L14&quot; as argument returns {&quot;line&quot;:14}" name="parseHash given &quot;#L14&quot; as argument returns {&quot;line&quot;:14}" time="0">
    </testcase>
  </testsuite>
  <testsuite name="ActionItem" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:20" time="1.217" tests="1">
    <testcase classname="ActionItem Renders contributed action items" name="ActionItem Renders contributed action items" time="0.04">
    </testcase>
  </testsuite>
  <testsuite name="UserSettingsPermissionsPage" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:20" time="1.726" tests="2">
    <testcase classname="UserSettingsPermissionsPage empty state" name="UserSettingsPermissionsPage empty state" time="0.322">
    </testcase>
    <testcase classname="UserSettingsPermissionsPage user alice with permissions" name="UserSettingsPermissionsPage user alice with permissions" time="0.313">
    </testcase>
  </testsuite>
  <testsuite name="ProductResearchPage" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:22" time="0.761" tests="2">
    <testcase classname="ProductResearchPage Renders page correctly" name="ProductResearchPage Renders page correctly" time="0.046">
    </testcase>
    <testcase classname="ProductResearchPage renders sign up now link correctly" name="ProductResearchPage renders sign up now link correctly" time="0.016">
    </testcase>
  </testsuite>
  <testsuite name="FileMatchChildren" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:21" time="1.28" tests="1">
    <testcase classname="FileMatchChildren does not disable the highlighting timeout" name="FileMatchChildren does not disable the highlighting timeout" time="0.029">
    </testcase>
  </testsuite>
  <testsuite name="SetupWizard" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:22" time="1.164" tests="1">
    <testcase classname="SetupWizard should render correctly" name="SetupWizard should render correctly" time="0.108">
    </testcase>
  </testsuite>
  <testsuite name="codeViews" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:23" time="0.479" tests="2">
    <testcase classname="codeViews trackCodeViews() should detect added code views from specs" name="codeViews trackCodeViews() should detect added code views from specs" time="0.018">
    </testcase>
    <testcase classname="codeViews trackCodeViews() should detect added code views from resolver" name="codeViews trackCodeViews() should detect added code views from resolver" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="FormTriggerArea" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:22" time="1.626" tests="12">
    <testcase classname="FormTriggerArea Correct checkboxes checked for query &apos;&apos;" name="FormTriggerArea Correct checkboxes checked for query &apos;&apos;" time="0.056">
    </testcase>
    <testcase classname="FormTriggerArea Correct checkboxes checked for query &apos;test&apos;" name="FormTriggerArea Correct checkboxes checked for query &apos;test&apos;" time="0.082">
    </testcase>
    <testcase classname="FormTriggerArea Correct checkboxes checked for query &apos;test patternType:literal&apos;" name="FormTriggerArea Correct checkboxes checked for query &apos;test patternType:literal&apos;" time="0.046">
    </testcase>
    <testcase classname="FormTriggerArea Correct checkboxes checked for query &apos;test patternType:regexp&apos;" name="FormTriggerArea Correct checkboxes checked for query &apos;test patternType:regexp&apos;" time="0.048">
    </testcase>
    <testcase classname="FormTriggerArea Correct checkboxes checked for query &apos;test patternType:structural&apos;" name="FormTriggerArea Correct checkboxes checked for query &apos;test patternType:structural&apos;" time="0.036">
    </testcase>
    <testcase classname="FormTriggerArea Correct checkboxes checked for query &apos;test type:repo&apos;" name="FormTriggerArea Correct checkboxes checked for query &apos;test type:repo&apos;" time="0.033">
    </testcase>
    <testcase classname="FormTriggerArea Correct checkboxes checked for query &apos;test type:diff&apos;" name="FormTriggerArea Correct checkboxes checked for query &apos;test type:diff&apos;" time="0.042">
    </testcase>
    <testcase classname="FormTriggerArea Correct checkboxes checked for query &apos;test type:commit&apos;" name="FormTriggerArea Correct checkboxes checked for query &apos;test type:commit&apos;" time="0.035">
    </testcase>
    <testcase classname="FormTriggerArea Correct checkboxes checked for query &apos;test repo:test&apos;" name="FormTriggerArea Correct checkboxes checked for query &apos;test repo:test&apos;" time="0.04">
    </testcase>
    <testcase classname="FormTriggerArea Correct checkboxes checked for query &apos;test repo:test type:diff&apos;" name="FormTriggerArea Correct checkboxes checked for query &apos;test repo:test type:diff&apos;" time="0.038">
    </testcase>
    <testcase classname="FormTriggerArea Append patternType:literal if no patternType is present" name="FormTriggerArea Append patternType:literal if no patternType is present" time="0.04">
    </testcase>
    <testcase classname="FormTriggerArea Do not append patternType:literal if patternType is present" name="FormTriggerArea Do not append patternType:literal if patternType is present" time="0.03">
    </testcase>
  </testsuite>
  <testsuite name="LoaderButton" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:23" time="0.692" tests="2">
    <testcase classname="LoaderButton should render a loading spinner when loading prop is true" name="LoaderButton should render a loading spinner when loading prop is true" time="0.032">
    </testcase>
    <testcase classname="LoaderButton should not render a loading spinner when loading prop is false" name="LoaderButton should not render a loading spinner when loading prop is false" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="Phabricator file info" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:23" time="1.915" tests="9">
    <testcase classname="Phabricator file info resolveRevisionFileInfo() Commit view" name="Phabricator file info resolveRevisionFileInfo() Commit view" time="0.037">
    </testcase>
    <testcase classname="Phabricator file info resolveDiffusionFileInfo() Resolves file info for a Diffusion code view" name="Phabricator file info resolveDiffusionFileInfo() Resolves file info for a Diffusion code view" time="0.281">
    </testcase>
    <testcase classname="Phabricator file info resolveDiffusionFileInfo() Ignores disabled URIs" name="Phabricator file info resolveDiffusionFileInfo() Ignores disabled URIs" time="0.399">
    </testcase>
    <testcase classname="Phabricator file info resolveDiffusionFileInfo() Repository hosted on phabricator instance" name="Phabricator file info resolveDiffusionFileInfo() Repository hosted on phabricator instance" time="0.321">
    </testcase>
    <testcase classname="Phabricator file info resolveDiffFileInfo() Differential revision - no staging repo" name="Phabricator file info resolveDiffFileInfo() Differential revision - no staging repo" time="0.179">
    </testcase>
    <testcase classname="Phabricator file info resolveDiffFileInfo() Differential revision - staging repo not synced" name="Phabricator file info resolveDiffFileInfo() Differential revision - staging repo not synced" time="0.051">
    </testcase>
    <testcase classname="Phabricator file info resolveDiffFileInfo() Differential revision - staging repo synced" name="Phabricator file info resolveDiffFileInfo() Differential revision - staging repo synced" time="0.056">
    </testcase>
    <testcase classname="Phabricator file info resolveDiffFileInfo() Differential revision - comparing diffs - staging repo not synced" name="Phabricator file info resolveDiffFileInfo() Differential revision - comparing diffs - staging repo not synced" time="0.092">
    </testcase>
    <testcase classname="Phabricator file info resolveDiffFileInfo() Differential revision - comparing diffs - staging repo synced" name="Phabricator file info resolveDiffFileInfo() Differential revision - comparing diffs - staging repo synced" time="0.041">
    </testcase>
  </testsuite>
  <testsuite name="useParallelRequests" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:24" time="1.066" tests="6">
    <testcase classname="useParallelRequests with single request should executes immediately without queueing" name="useParallelRequests with single request should executes immediately without queueing" time="0.012">
    </testcase>
    <testcase classname="useParallelRequests with single request should handle error" name="useParallelRequests with single request should handle error" time="0.003">
    </testcase>
    <testcase classname="useParallelRequests with single request should cancel promise-like request on unmount" name="useParallelRequests with single request should cancel promise-like request on unmount" time="0.002">
    </testcase>
    <testcase classname="useParallelRequests with single request should cancel stream on unmount" name="useParallelRequests with single request should cancel stream on unmount" time="0.003">
    </testcase>
    <testcase classname="useParallelRequests with two requests should execute two requests one by one with queueing" name="useParallelRequests with two requests should execute two requests one by one with queueing" time="0.005">
    </testcase>
    <testcase classname="useParallelRequests with two requests should cancel second request if unmount happened" name="useParallelRequests with two requests should cancel second request if unmount happened" time="0.016">
    </testcase>
  </testsuite>
  <testsuite name="UserSubscriptionsProductSubscriptionPage" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:23" time="2.153" tests="1">
    <testcase classname="UserSubscriptionsProductSubscriptionPage renders" name="UserSubscriptionsProductSubscriptionPage renders" time="0.17">
    </testcase>
  </testsuite>
  <testsuite name="CreateCodeMonitorPage" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:23" time="2.207" tests="3">
    <testcase classname="CreateCodeMonitorPage createCodeMonitor is called on submit" name="CreateCodeMonitorPage createCodeMonitor is called on submit" time="0.188">
    </testcase>
    <testcase classname="CreateCodeMonitorPage createCodeMonitor is not called on submit when action is incomplete" name="CreateCodeMonitorPage createCodeMonitor is not called on submit when action is incomplete" time="0.201">
    </testcase>
    <testcase classname="CreateCodeMonitorPage Actions area button is disabled while trigger is incomplete" name="CreateCodeMonitorPage Actions area button is disabled while trigger is incomplete" time="0.017">
    </testcase>
  </testsuite>
  <testsuite name="ToggleRenderedFileMode" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:25" time="1.224" tests="3">
    <testcase classname="ToggleRenderedFileMode in rendered view renders link correctly" name="ToggleRenderedFileMode in rendered view renders link correctly" time="0.037">
    </testcase>
    <testcase classname="ToggleRenderedFileMode in code view renders link correctly" name="ToggleRenderedFileMode in code view renders link correctly" time="0.003">
    </testcase>
    <testcase classname="ToggleRenderedFileMode in code view still renders link correctly when a line has been selected" name="ToggleRenderedFileMode in code view still renders link correctly when a line has been selected" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="QuickLink" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:25" time="1.402" tests="2">
    <testcase classname="QuickLink should be empty if quicklinks not present" name="QuickLink should be empty if quicklinks not present" time="0.001">
    </testcase>
    <testcase classname="QuickLink should have correct links when quicklinks present" name="QuickLink should have correct links when quicklinks present" time="0.02">
    </testcase>
  </testsuite>
  <testsuite name="SiteAdminProductLicenseNode" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:26" time="0.908" tests="2">
    <testcase classname="SiteAdminProductLicenseNode active" name="SiteAdminProductLicenseNode active" time="0.076">
    </testcase>
    <testcase classname="SiteAdminProductLicenseNode inactive" name="SiteAdminProductLicenseNode inactive" time="0.017">
    </testcase>
  </testsuite>
  <testsuite name="SearchContextsList" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:25" time="1.522" tests="2">
    <testcase classname="SearchContextsList default context renders list with default context" name="SearchContextsList default context renders list with default context" time="0.184">
    </testcase>
    <testcase classname="SearchContextsList default context saves default context and updates list" name="SearchContextsList default context saves default context and updates list" time="0.212">
    </testcase>
  </testsuite>
  <testsuite name="GlobalNavbar" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:26" time="1.438" tests="1">
    <testcase classname="GlobalNavbar default" name="GlobalNavbar default" time="0.314">
    </testcase>
  </testsuite>
  <testsuite name="ManageCodeMonitorPage" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:26" time="1.51" tests="8">
    <testcase classname="ManageCodeMonitorPage Form is pre-loaded with code monitor data" name="ManageCodeMonitorPage Form is pre-loaded with code monitor data" time="0.048">
    </testcase>
    <testcase classname="ManageCodeMonitorPage Updating the form executes the update request" name="ManageCodeMonitorPage Updating the form executes the update request" time="0.093">
    </testcase>
    <testcase classname="ManageCodeMonitorPage Clicking Edit in the trigger area opens the query form" name="ManageCodeMonitorPage Clicking Edit in the trigger area opens the query form" time="0.03">
    </testcase>
    <testcase classname="ManageCodeMonitorPage Clicking Edit in the action area opens the action form" name="ManageCodeMonitorPage Clicking Edit in the action area opens the action form" time="0.019">
    </testcase>
    <testcase classname="ManageCodeMonitorPage Save button is disabled when no changes have been made, enabled when changes have been made" name="ManageCodeMonitorPage Save button is disabled when no changes have been made, enabled when changes have been made" time="0.075">
    </testcase>
    <testcase classname="ManageCodeMonitorPage Cancelling after changes have been made shows confirmation prompt" name="ManageCodeMonitorPage Cancelling after changes have been made shows confirmation prompt" time="0.075">
    </testcase>
    <testcase classname="ManageCodeMonitorPage Cancelling without any changes made does not show confirmation prompt" name="ManageCodeMonitorPage Cancelling without any changes made does not show confirmation prompt" time="0.015">
    </testcase>
    <testcase classname="ManageCodeMonitorPage Clicking delete code monitor opens deletion confirmation modal" name="ManageCodeMonitorPage Clicking delete code monitor opens deletion confirmation modal" time="0.089">
    </testcase>
  </testsuite>
  <testsuite name="UserSettingsProfilePage" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:27" time="0.8" tests="5">
    <testcase classname="UserSettingsProfilePage renders header correctly" name="UserSettingsProfilePage renders header correctly" time="0.037">
    </testcase>
    <testcase classname="UserSettingsProfilePage renders username field correctly" name="UserSettingsProfilePage renders username field correctly" time="0.021">
    </testcase>
    <testcase classname="UserSettingsProfilePage renders display name field correctly" name="UserSettingsProfilePage renders display name field correctly" time="0.014">
    </testcase>
    <testcase classname="UserSettingsProfilePage renders avatar URL field correctly" name="UserSettingsProfilePage renders avatar URL field correctly" time="0.017">
    </testcase>
    <testcase classname="UserSettingsProfilePage modifying values updates values correctly" name="UserSettingsProfilePage modifying values updates values correctly" time="0.031">
    </testcase>
  </testsuite>
  <testsuite name="CodeInsightsRootPage" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:27" time="1.104" tests="2">
    <testcase classname="CodeInsightsRootPage should render dashboard not found page when id is not found" name="CodeInsightsRootPage should render dashboard not found page when id is not found" time="0.041">
    </testcase>
    <testcase classname="CodeInsightsRootPage should log events" name="CodeInsightsRootPage should log events" time="0.02">
    </testcase>
  </testsuite>
  <testsuite name="StreamingProgressSkippedPopover" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:27" time="0.787" tests="6">
    <testcase classname="StreamingProgressSkippedPopover should render correctly" name="StreamingProgressSkippedPopover should render correctly" time="0.082">
    </testcase>
    <testcase classname="StreamingProgressSkippedPopover should not show Search Again section if no suggested searches are set" name="StreamingProgressSkippedPopover should not show Search Again section if no suggested searches are set" time="0.004">
    </testcase>
    <testcase classname="StreamingProgressSkippedPopover should have Search Again button disabled by default" name="StreamingProgressSkippedPopover should have Search Again button disabled by default" time="0.008">
    </testcase>
    <testcase classname="StreamingProgressSkippedPopover should enable Search Again button if at least one item is checked" name="StreamingProgressSkippedPopover should enable Search Again button if at least one item is checked" time="0.028">
    </testcase>
    <testcase classname="StreamingProgressSkippedPopover should disable Search Again button if unchecking all items" name="StreamingProgressSkippedPopover should disable Search Again button if unchecking all items" time="0.026">
    </testcase>
    <testcase classname="StreamingProgressSkippedPopover should call onSearchAgain with selected items when button is clicked" name="StreamingProgressSkippedPopover should call onSearchAgain with selected items when button is clicked" time="0.032">
    </testcase>
  </testsuite>
  <testsuite name="ErrorBoundary" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:28" time="0.926" tests="3">
    <testcase classname="ErrorBoundary passes through if non-error" name="ErrorBoundary passes through if non-error" time="0.126">
    </testcase>
    <testcase classname="ErrorBoundary renders error page if error" name="ErrorBoundary renders error page if error" time="0.004">
    </testcase>
    <testcase classname="ErrorBoundary renders reload page if chunk error" name="ErrorBoundary renders reload page if chunk error" time="0.035">
    </testcase>
  </testsuite>
  <testsuite name="Tooltip" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:28" time="1.204" tests="4">
    <testcase classname="Tooltip displays content when the trigger is hovered" name="Tooltip displays content when the trigger is hovered" time="0.245">
    </testcase>
    <testcase classname="Tooltip does not display a tooltip on hover for empty content" name="Tooltip does not display a tooltip on hover for empty content" time="0.208">
    </testcase>
    <testcase classname="Tooltip hides content when the ESC key is pressed" name="Tooltip hides content when the ESC key is pressed" time="0.123">
    </testcase>
    <testcase classname="Tooltip does not hide content when the trigger is clicked" name="Tooltip does not hide content when the trigger is clicked" time="0.109">
    </testcase>
  </testsuite>
  <testsuite name="FeedbackPrompt" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:28" time="1.406" tests="4">
    <testcase classname="FeedbackPrompt should render correctly" name="FeedbackPrompt should render correctly" time="0.028">
    </testcase>
    <testcase classname="FeedbackPrompt should enable/disable submit button correctly" name="FeedbackPrompt should enable/disable submit button correctly" time="0.076">
    </testcase>
    <testcase classname="FeedbackPrompt should render submit success correctly" name="FeedbackPrompt should render submit success correctly" time="0.02">
    </testcase>
    <testcase classname="FeedbackPrompt should render submit error correctly" name="FeedbackPrompt should render submit error correctly" time="0.032">
    </testcase>
  </testsuite>
  <testsuite name="WebhookAction" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:28" time="1.37" tests="9">
    <testcase classname="WebhookAction open and submit" name="WebhookAction open and submit" time="0.111">
    </testcase>
    <testcase classname="WebhookAction open and edit" name="WebhookAction open and edit" time="0.058">
    </testcase>
    <testcase classname="WebhookAction open and delete" name="WebhookAction open and delete" time="0.013">
    </testcase>
    <testcase classname="WebhookAction enable and disable" name="WebhookAction enable and disable" time="0.012">
    </testcase>
    <testcase classname="WebhookAction open, edit, cancel, open again" name="WebhookAction open, edit, cancel, open again" time="0.049">
    </testcase>
    <testcase classname="WebhookAction Send test message disabled if no webhook url set" name="WebhookAction Send test message disabled if no webhook url set" time="0.006">
    </testcase>
    <testcase classname="WebhookAction Send test message disabled if no monitor name set" name="WebhookAction Send test message disabled if no monitor name set" time="0.006">
    </testcase>
    <testcase classname="WebhookAction Send test message send test message, success" name="WebhookAction Send test message send test message, success" time="0.118">
    </testcase>
    <testcase classname="WebhookAction Send test message send test message, error" name="WebhookAction Send test message send test message, error" time="0.164">
    </testcase>
  </testsuite>
  <testsuite name="getInsightDataFromQuery" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:29" time="1.529" tests="6">
    <testcase classname="getInsightDataFromQuery should return null with empty query params" name="getInsightDataFromQuery should return null with empty query params" time="0.007">
    </testcase>
    <testcase classname="getInsightDataFromQuery should return correct insight values  removes context from the query" name="getInsightDataFromQuery should return correct insight values  removes context from the query" time="0.003">
    </testcase>
    <testcase classname="getInsightDataFromQuery should return correct insight values  with repo: and &quot;test&quot; pattern query" name="getInsightDataFromQuery should return correct insight values  with repo: and &quot;test&quot; pattern query" time="0.001">
    </testcase>
    <testcase classname="getInsightDataFromQuery should return correct insight values  with multiple repo: filters and &quot;test&quot; pattern query" name="getInsightDataFromQuery should return correct insight values  with multiple repo: filters and &quot;test&quot; pattern query" time="0.003">
    </testcase>
    <testcase classname="getInsightDataFromQuery should return correct insight values  with multiple repo: filters regexp literals and &quot;test&quot; pattern query" name="getInsightDataFromQuery should return correct insight values  with multiple repo: filters regexp literals and &quot;test&quot; pattern query" time="0.001">
    </testcase>
    <testcase classname="getInsightDataFromQuery should return correct insight values  with repo: filters and &quot;repo: &quot; pattern query" name="getInsightDataFromQuery should return correct insight values  with repo: filters and &quot;repo: &quot; pattern query" time="0.034">
    </testcase>
  </testsuite>
  <testsuite name="ExternalServiceGroup" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:29" time="1.232" tests="2">
    <testcase classname="ExternalServiceGroup should render correctly with enabled external services" name="ExternalServiceGroup should render correctly with enabled external services" time="0.049">
    </testcase>
    <testcase classname="ExternalServiceGroup should render correctly with disabled external services" name="ExternalServiceGroup should render correctly with disabled external services" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="UserProductSubscriptionStatus" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:29" time="1.343" tests="1">
    <testcase classname="UserProductSubscriptionStatus toggle" name="UserProductSubscriptionStatus toggle" time="0.172">
    </testcase>
  </testsuite>
  <testsuite name="SiteAdminGenerateProductLicenseForSubscriptionForm" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:29" time="1.875" tests="1">
    <testcase classname="SiteAdminGenerateProductLicenseForSubscriptionForm renders" name="SiteAdminGenerateProductLicenseForSubscriptionForm renders" time="0.21">
    </testcase>
  </testsuite>
  <testsuite name="getHoverActionsContext" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:30" time="1.062" tests="10">
    <testcase classname="getHoverActionsContext shows a loader for the definition if slow" name="getHoverActionsContext shows a loader for the definition if slow" time="0.008">
    </testcase>
    <testcase classname="getHoverActionsContext shows a loader when definition providers are registered after invocation and a find-references button after the result returned" name="getHoverActionsContext shows a loader when definition providers are registered after invocation and a find-references button after the result returned" time="0.007">
    </testcase>
    <testcase classname="getHoverActionsContext shows the find references button when reference providers are registered later" name="getHoverActionsContext shows the find references button when reference providers are registered later" time="0.004">
    </testcase>
    <testcase classname="getHoverActionsContext shows no loader for the definition if fast" name="getHoverActionsContext shows no loader for the definition if fast" time="0.002">
    </testcase>
    <testcase classname="getDefinitionURL emits null if the locations result is empty" name="getDefinitionURL emits null if the locations result is empty" time="0.001">
    </testcase>
    <testcase classname="getDefinitionURL if there is exactly 1 location result resolves the raw repo name and passes it to urlToFile()" name="getDefinitionURL if there is exactly 1 location result resolves the raw repo name and passes it to urlToFile()" time="0.002">
    </testcase>
    <testcase classname="getDefinitionURL if there is exactly 1 location result when the result is inside the current root emits the definition URL the user input revision (not commit SHA) of the root" name="getDefinitionURL if there is exactly 1 location result when the result is inside the current root emits the definition URL the user input revision (not commit SHA) of the root" time="0.001">
    </testcase>
    <testcase classname="getDefinitionURL if there is exactly 1 location result when the result is not inside the current root (different repo and/or commit) emits the definition URL with range" name="getDefinitionURL if there is exactly 1 location result when the result is not inside the current root (different repo and/or commit) emits the definition URL with range" time="0.001">
    </testcase>
    <testcase classname="getDefinitionURL if there is exactly 1 location result when the result is not inside the current root (different repo and/or commit) emits the definition URL without range" name="getDefinitionURL if there is exactly 1 location result when the result is not inside the current root (different repo and/or commit) emits the definition URL without range" time="0.001">
    </testcase>
    <testcase classname="getDefinitionURL emits the definition panel URL if there is more than 1 location result" name="getDefinitionURL emits the definition panel URL if there is more than 1 location result" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="buildGraphQLUrl" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:30" time="1.049" tests="7">
    <testcase classname="buildGraphQLUrl correctly constructs when &quot;baseUrl&quot; &amp; &quot;request&quot; are empty" name="buildGraphQLUrl correctly constructs when &quot;baseUrl&quot; &amp; &quot;request&quot; are empty" time="0.001">
    </testcase>
    <testcase classname="buildGraphQLUrl correctly constructs when &quot;request&quot; is empty" name="buildGraphQLUrl correctly constructs when &quot;request&quot; is empty" time="0">
    </testcase>
    <testcase classname="buildGraphQLUrl correctly constructs when &quot;baseUrl&quot; is empty &amp; &quot;request&quot; is mutation type" name="buildGraphQLUrl correctly constructs when &quot;baseUrl&quot; is empty &amp; &quot;request&quot; is mutation type" time="0.001">
    </testcase>
    <testcase classname="buildGraphQLUrl correctly constructs when &quot;baseUrl&quot; is empty &amp; &quot;request&quot; is query type" name="buildGraphQLUrl correctly constructs when &quot;baseUrl&quot; is empty &amp; &quot;request&quot; is query type" time="0">
    </testcase>
    <testcase classname="buildGraphQLUrl correctly constructs when &quot;baseUrl&quot; is a domain" name="buildGraphQLUrl correctly constructs when &quot;baseUrl&quot; is a domain" time="0">
    </testcase>
    <testcase classname="buildGraphQLUrl correctly constructs when &quot;baseUrl&quot; contains trailing /" name="buildGraphQLUrl correctly constructs when &quot;baseUrl&quot; contains trailing /" time="0">
    </testcase>
    <testcase classname="buildGraphQLUrl correctly constructs when &quot;baseUrl&quot; contains path" name="buildGraphQLUrl correctly constructs when &quot;baseUrl&quot; contains path" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="parseJSONCOrError" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:31" time="0.749" tests="4">
    <testcase classname="parseJSONCOrError parses valid JSON" name="parseJSONCOrError parses valid JSON" time="0.009">
    </testcase>
    <testcase classname="parseJSONCOrError parses valid JSONC" name="parseJSONCOrError parses valid JSONC" time="0.001">
    </testcase>
    <testcase classname="parseJSONCOrError returns an error value for invalid input" name="parseJSONCOrError returns an error value for invalid input" time="0.001">
    </testcase>
    <testcase classname="modify modify nested value" name="modify modify nested value" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="CodeMonitorForm" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:31" time="2.182" tests="3">
    <testcase classname="CodeMonitorForm Uses trigger query when present" name="CodeMonitorForm Uses trigger query when present" time="0.175">
    </testcase>
    <testcase classname="CodeMonitorForm Submit button disabled if no actions are present" name="CodeMonitorForm Submit button disabled if no actions are present" time="0.045">
    </testcase>
    <testcase classname="CodeMonitorForm Submit button enabled if one action is present" name="CodeMonitorForm Submit button enabled if one action is present" time="0.026">
    </testcase>
  </testsuite>
  <testsuite name="getListWindow" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:32" time="0.683" tests="4">
    <testcase classname="getListWindow should return unmodified list in case if list has less element than size" name="getListWindow should return unmodified list in case if list has less element than size" time="0.002">
    </testcase>
    <testcase classname="getListWindow should return correct window if list has enough items from both sides around pivot index" name="getListWindow should return correct window if list has enough items from both sides around pivot index" time="0">
    </testcase>
    <testcase classname="getListWindow should return correct window if list has enough items only at right side around pivot index" name="getListWindow should return correct window if list has enough items only at right side around pivot index" time="0">
    </testcase>
    <testcase classname="getListWindow should return correct window if list has enough items only at left side around pivot index" name="getListWindow should return correct window if list has enough items only at left side around pivot index" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;ViewOnSourcegraphButton /&gt;" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:31" time="1.741" tests="8">
    <testcase classname="&lt;ViewOnSourcegraphButton /&gt; repository exists on the instance renders a link to the repository on the Sourcegraph instance" name="&lt;ViewOnSourcegraphButton /&gt; repository exists on the instance renders a link to the repository on the Sourcegraph instance" time="0.03">
    </testcase>
    <testcase classname="&lt;ViewOnSourcegraphButton /&gt; repository exists on the instance renders nothing in minimal UI mode" name="&lt;ViewOnSourcegraphButton /&gt; repository exists on the instance renders nothing in minimal UI mode" time="0.002">
    </testcase>
    <testcase classname="&lt;ViewOnSourcegraphButton /&gt; repository exists on the instance renders a link with the revision when provided" name="&lt;ViewOnSourcegraphButton /&gt; repository exists on the instance renders a link with the revision when provided" time="0.006">
    </testcase>
    <testcase classname="&lt;ViewOnSourcegraphButton /&gt; repository does not exist on the instance renders &quot;Configure Sourcegraph&quot; button when pointing at sourcegraph.com" name="&lt;ViewOnSourcegraphButton /&gt; repository does not exist on the instance renders &quot;Configure Sourcegraph&quot; button when pointing at sourcegraph.com" time="0.012">
    </testcase>
    <testcase classname="&lt;ViewOnSourcegraphButton /&gt; repository does not exist on the instance renders a &quot;Repository not found&quot; button when not pointing at sourcegraph.com" name="&lt;ViewOnSourcegraphButton /&gt; repository does not exist on the instance renders a &quot;Repository not found&quot; button when not pointing at sourcegraph.com" time="0.005">
    </testcase>
    <testcase classname="&lt;ViewOnSourcegraphButton /&gt; existence could not be determined  because of an authentication failure minimalUI = true renders a sign in button if showSignInButton = true" name="&lt;ViewOnSourcegraphButton /&gt; existence could not be determined  because of an authentication failure minimalUI = true renders a sign in button if showSignInButton = true" time="0.01">
    </testcase>
    <testcase classname="&lt;ViewOnSourcegraphButton /&gt; existence could not be determined  because of an authentication failure minimalUI = false renders a sign in button if showSignInButton = true" name="&lt;ViewOnSourcegraphButton /&gt; existence could not be determined  because of an authentication failure minimalUI = false renders a sign in button if showSignInButton = true" time="0.004">
    </testcase>
    <testcase classname="&lt;ViewOnSourcegraphButton /&gt; existence could not be determined  because of an unknown error renders a button with an error label" name="&lt;ViewOnSourcegraphButton /&gt; existence could not be determined  because of an unknown error renders a button with an error label" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="SearchContextDropdown" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:31" time="2.256" tests="8">
    <testcase classname="SearchContextDropdown should start closed" name="SearchContextDropdown should start closed" time="0.058">
    </testcase>
    <testcase classname="SearchContextDropdown should open when toggle event happens" name="SearchContextDropdown should open when toggle event happens" time="0.063">
    </testcase>
    <testcase classname="SearchContextDropdown should close if toggle event happens again" name="SearchContextDropdown should close if toggle event happens again" time="0.021">
    </testcase>
    <testcase classname="SearchContextDropdown should be enabled if query is empty" name="SearchContextDropdown should be enabled if query is empty" time="0.005">
    </testcase>
    <testcase classname="SearchContextDropdown should be enabled if query does not contain context filter" name="SearchContextDropdown should be enabled if query does not contain context filter" time="0.016">
    </testcase>
    <testcase classname="SearchContextDropdown should be disabled if query contains context filter" name="SearchContextDropdown should be disabled if query contains context filter" time="0.003">
    </testcase>
    <testcase classname="SearchContextDropdown should submit search on item click" name="SearchContextDropdown should submit search on item click" time="0.158">
    </testcase>
    <testcase classname="SearchContextDropdown should close menu when pressing Escape button" name="SearchContextDropdown should close menu when pressing Escape button" time="0.067">
    </testcase>
  </testsuite>
  <testsuite name="github/fileInfo" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:33" time="1.517" tests="9">
    <testcase classname="github/fileInfo getFilePath() finds the file path in github.com/blob/vanilla/page.html" name="github/fileInfo getFilePath() finds the file path in github.com/blob/vanilla/page.html" time="0.079">
    </testcase>
    <testcase classname="github/fileInfo getFilePath() finds the file path in github.com/blob/refined-github/page.html" name="github/fileInfo getFilePath() finds the file path in github.com/blob/refined-github/page.html" time="0.14">
    </testcase>
    <testcase classname="github/fileInfo getFilePath() finds the file path in ghe-2.14.11/blob/vanilla/page.html" name="github/fileInfo getFilePath() finds the file path in ghe-2.14.11/blob/vanilla/page.html" time="0.433">
    </testcase>
    <testcase classname="github/fileInfo getFilePath() finds the file path in ghe-2.14.11/blob/refined-github/page.html" name="github/fileInfo getFilePath() finds the file path in ghe-2.14.11/blob/refined-github/page.html" time="0.291">
    </testcase>
    <testcase classname="github/fileInfo getFilePathFromURL() returns &quot;client/browser/src/browser-extension/browser-action-icon.ts&quot; for URL &quot;https://github.com/sourcegraph/sourcegraph/blob/4.4/client/browser/src/browser-extension/browser-action-icon.ts&quot; and revision &quot;4.4&quot;" name="github/fileInfo getFilePathFromURL() returns &quot;client/browser/src/browser-extension/browser-action-icon.ts&quot; for URL &quot;https://github.com/sourcegraph/sourcegraph/blob/4.4/client/browser/src/browser-extension/browser-action-icon.ts&quot; and revision &quot;4.4&quot;" time="0.001">
    </testcase>
    <testcase classname="github/fileInfo getFilePathFromURL() returns &quot;client/browser/src/browser-extension/browser-action-icon.ts&quot; for URL &quot;https://github.com/sourcegraph/sourcegraph/blob/bext/release/client/browser/src/browser-extension/browser-action-icon.ts&quot; and revision &quot;bext/release&quot;" name="github/fileInfo getFilePathFromURL() returns &quot;client/browser/src/browser-extension/browser-action-icon.ts&quot; for URL &quot;https://github.com/sourcegraph/sourcegraph/blob/bext/release/client/browser/src/browser-extension/browser-action-icon.ts&quot; and revision &quot;bext/release&quot;" time="0">
    </testcase>
    <testcase classname="github/fileInfo getFilePathFromURL() returns &quot;client/browser/src/browser-extension/browser-action-icon.ts&quot; for URL &quot;https://github.com/sourcegraph/sourcegraph/blob/sourcegraph/sourcegraph/client/browser/src/browser-extension/browser-action-icon.ts&quot; and revision &quot;sourcegraph/sourcegraph&quot;" name="github/fileInfo getFilePathFromURL() returns &quot;client/browser/src/browser-extension/browser-action-icon.ts&quot; for URL &quot;https://github.com/sourcegraph/sourcegraph/blob/sourcegraph/sourcegraph/client/browser/src/browser-extension/browser-action-icon.ts&quot; and revision &quot;sourcegraph/sourcegraph&quot;" time="0">
    </testcase>
    <testcase classname="github/fileInfo getFilePathFromURL() throws an error for URL &quot;https://github.com/sourcegraph/sourcegraph/blob/4.4&quot; and revision &quot;4.4&quot;, reason: &quot;no file in blob page URL&quot;" name="github/fileInfo getFilePathFromURL() throws an error for URL &quot;https://github.com/sourcegraph/sourcegraph/blob/4.4&quot; and revision &quot;4.4&quot;, reason: &quot;no file in blob page URL&quot;" time="0.012">
    </testcase>
    <testcase classname="github/fileInfo getFilePathFromURL() throws an error for URL &quot;https://github.com/sourcegraph/sourcegraph/blob/main/client/browser/src/browser-extension/browser-action-icon.ts&quot; and revision &quot;bext/release&quot;, reason: &quot;revision does not match&quot;" name="github/fileInfo getFilePathFromURL() throws an error for URL &quot;https://github.com/sourcegraph/sourcegraph/blob/main/client/browser/src/browser-extension/browser-action-icon.ts&quot; and revision &quot;bext/release&quot;, reason: &quot;revision does not match&quot;" time="0">
    </testcase>
  </testsuite>
  <testsuite name="repeatUntil()" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:34" time="0.764" tests="3">
    <testcase classname="repeatUntil() completes if the emitted value matches select" name="repeatUntil() completes if the emitted value matches select" time="0.004">
    </testcase>
    <testcase classname="repeatUntil() resubscribes until an emitted value matches select" name="repeatUntil() resubscribes until an emitted value matches select" time="0.001">
    </testcase>
    <testcase classname="repeatUntil() delays resubscription if delay is provided" name="repeatUntil() delays resubscription if delay is provided" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="UserAvatar" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:33" time="1.716" tests="2">
    <testcase classname="UserAvatar no avatar URL" name="UserAvatar no avatar URL" time="0.034">
    </testcase>
    <testcase classname="UserAvatar with avatar URL" name="UserAvatar with avatar URL" time="0.041">
    </testcase>
  </testsuite>
  <testsuite name="CodeExcerpt" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:33" time="2.537" tests="7">
    <testcase classname="CodeExcerpt renders correct number of rows" name="CodeExcerpt renders correct number of rows" time="0.074">
    </testcase>
    <testcase classname="CodeExcerpt renders the line number container on each row" name="CodeExcerpt renders the line number container on each row" time="0.006">
    </testcase>
    <testcase classname="CodeExcerpt renders the code portion of each row" name="CodeExcerpt renders the code portion of each row" time="0.062">
    </testcase>
    <testcase classname="CodeExcerpt highlights matches correctly" name="CodeExcerpt highlights matches correctly" time="0.009">
    </testcase>
    <testcase classname="CodeExcerpt highlights matches correctly in syntax highlighted code blocks" name="CodeExcerpt highlights matches correctly in syntax highlighted code blocks" time="0.014">
    </testcase>
    <testcase classname="CodeExcerpt displays the correct number of lines, with no highlight matches on the context lines" name="CodeExcerpt displays the correct number of lines, with no highlight matches on the context lines" time="0.019">
    </testcase>
    <testcase classname="CodeExcerpt displays the correct number of lines, with matches on the context line" name="CodeExcerpt displays the correct number of lines, with matches on the context line" time="0.03">
    </testcase>
  </testsuite>
  <testsuite name="format" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:35" time="1.215" tests="8">
    <testcase classname="format formatRate rate is a number" name="format formatRate rate is a number" time="0.001">
    </testcase>
    <testcase classname="format formatRate rate is zero changesets per seconds" name="format formatRate rate is zero changesets per seconds" time="0.006">
    </testcase>
    <testcase classname="format formatRate rate is 3 changesets per hour" name="format formatRate rate is 3 changesets per hour" time="0.001">
    </testcase>
    <testcase classname="format formatRate rate is 10 changesets per minute" name="format formatRate rate is 10 changesets per minute" time="0">
    </testcase>
    <testcase classname="format formatDays argument is undefined" name="format formatDays argument is undefined" time="0">
    </testcase>
    <testcase classname="format formatDays argument is empty array" name="format formatDays argument is empty array" time="0">
    </testcase>
    <testcase classname="format formatDays argument is single day" name="format formatDays argument is single day" time="0">
    </testcase>
    <testcase classname="format formatDays argument is multiple days" name="format formatDays argument is multiple days" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Tabs" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:35" time="1.094" tests="9">
    <testcase classname="Tabs Main component structure will render tabs children correctly" name="Tabs Main component structure will render tabs children correctly" time="0.033">
    </testcase>
    <testcase classname="Tabs Main component structure will render the right amount of &lt;Tab/&gt; components" name="Tabs Main component structure will render the right amount of &lt;Tab/&gt; components" time="0.008">
    </testcase>
    <testcase classname="Tabs Main component structure will render the right amount of &lt;TabPanel/&gt; components" name="Tabs Main component structure will render the right amount of &lt;TabPanel/&gt; components" time="0.005">
    </testcase>
    <testcase classname="Tabs Main component structure will not render actions prop as a component" name="Tabs Main component structure will not render actions prop as a component" time="0.01">
    </testcase>
    <testcase classname="Tabs with actions will render actions prop as a component" name="Tabs with actions will render actions prop as a component" time="0.005">
    </testcase>
    <testcase classname="Tabs Lazy = true Tabs with behavior = forceRender will render &lt;TabPanel/&gt; children each time associated &lt;Tab&gt;  is clicked" name="Tabs Lazy = true Tabs with behavior = forceRender will render &lt;TabPanel/&gt; children each time associated &lt;Tab&gt;  is clicked" time="0.011">
    </testcase>
    <testcase classname="Tabs Lazy = true Tabs with behavior = memoize will render and keep mounted &lt;TabPanel/&gt; children when &lt;Tab&gt; is clicked" name="Tabs Lazy = true Tabs with behavior = memoize will render and keep mounted &lt;TabPanel/&gt; children when &lt;Tab&gt; is clicked" time="0.008">
    </testcase>
    <testcase classname="Tabs Lazy = true Tabs with behavior = memoize will not render and keep unmounted &lt;TabPanel/&gt; children when &lt;Tab&gt; is not selected" name="Tabs Lazy = true Tabs with behavior = memoize will not render and keep unmounted &lt;TabPanel/&gt; children when &lt;Tab&gt; is not selected" time="0.005">
    </testcase>
    <testcase classname="Tabs Lazy = false will render all &lt;TabPanel/&gt; children" name="Tabs Lazy = false will render all &lt;TabPanel/&gt; children" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="Timestamp" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:34" time="1.73" tests="5">
    <testcase classname="Timestamp mocked current time" name="Timestamp mocked current time" time="0.018">
    </testcase>
    <testcase classname="Timestamp with time time" name="Timestamp with time time" time="0.004">
    </testcase>
    <testcase classname="Timestamp noAbout" name="Timestamp noAbout" time="0.002">
    </testcase>
    <testcase classname="Timestamp noAgo" name="Timestamp noAgo" time="0.002">
    </testcase>
    <testcase classname="Timestamp absolute time with formatting" name="Timestamp absolute time with formatting" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="FilteredConnection" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:36" time="0.796" tests="12">
    <testcase classname="FilteredConnection useURLQuery does not update the history if searchFragment didnt change" name="FilteredConnection useURLQuery does not update the history if searchFragment didnt change" time="0.048">
    </testcase>
    <testcase classname="ConnectionNodes has a &quot;Show more&quot; button and summary when *not* loading" name="ConnectionNodes has a &quot;Show more&quot; button and summary when *not* loading" time="0.01">
    </testcase>
    <testcase classname="ConnectionNodes *doesn&apos;t* have a &apos;Show more&apos; button or summary when loading" name="ConnectionNodes *doesn&apos;t* have a &apos;Show more&apos; button or summary when loading" time="0.003">
    </testcase>
    <testcase classname="ConnectionNodes doesn&apos;t have a &apos;Show more&apos; button when noShowMore is true" name="ConnectionNodes doesn&apos;t have a &apos;Show more&apos; button when noShowMore is true" time="0.008">
    </testcase>
    <testcase classname="ConnectionNodes doesn&apos;t have a &apos;Show more&apos; button or a summary if hasNextPage is false " name="ConnectionNodes doesn&apos;t have a &apos;Show more&apos; button or a summary if hasNextPage is false " time="0.002">
    </testcase>
    <testcase classname="ConnectionNodes calls the onShowMore callback" name="ConnectionNodes calls the onShowMore callback" time="0.005">
    </testcase>
    <testcase classname="ConnectionNodes doesn&apos;t show summary info if totalCount is null" name="ConnectionNodes doesn&apos;t show summary info if totalCount is null" time="0.001">
    </testcase>
    <testcase classname="ConnectionNodes shows a summary if noSummaryIfAllNodesVisible is false" name="ConnectionNodes shows a summary if noSummaryIfAllNodesVisible is false" time="0.003">
    </testcase>
    <testcase classname="ConnectionNodes shows a summary if nodes.length is 0" name="ConnectionNodes shows a summary if nodes.length is 0" time="0.004">
    </testcase>
    <testcase classname="ConnectionNodes shows &apos;No cats&apos; if totalCount is 0" name="ConnectionNodes shows &apos;No cats&apos; if totalCount is 0" time="0.005">
    </testcase>
    <testcase classname="ConnectionNodes shows the summary at the top if connectionQuery is specified" name="ConnectionNodes shows the summary at the top if connectionQuery is specified" time="0.002">
    </testcase>
    <testcase classname="ConnectionNodes shows the summary at the top if connectionQuery is specified" name="ConnectionNodes shows the summary at the top if connectionQuery is specified" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="PageSelector" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:36" time="1.075" tests="20">
    <testcase classname="PageSelector Invalid configuration will error when less than 1 max pages" name="PageSelector Invalid configuration will error when less than 1 max pages" time="0.068">
    </testcase>
    <testcase classname="PageSelector Invalid configuration will error when currentPage is less than 1" name="PageSelector Invalid configuration will error when currentPage is less than 1" time="0.024">
    </testcase>
    <testcase classname="PageSelector Invalid configuration will error when currentPage is greater than totalPages" name="PageSelector Invalid configuration will error when currentPage is greater than totalPages" time="0.013">
    </testcase>
    <testcase classname="PageSelector Typical pagination will render correct elipsis" name="PageSelector Typical pagination will render correct elipsis" time="0.021">
    </testcase>
    <testcase classname="PageSelector Typical pagination will render correct pages" name="PageSelector Typical pagination will render correct pages" time="0.095">
    </testcase>
    <testcase classname="PageSelector Typical pagination will render correct currently selected page" name="PageSelector Typical pagination will render correct currently selected page" time="0.019">
    </testcase>
    <testcase classname="PageSelector Typical pagination will render previous and next buttons" name="PageSelector Typical pagination will render previous and next buttons" time="0.004">
    </testcase>
    <testcase classname="PageSelector Typical pagination calls onPageChange correctly when page is individually selected" name="PageSelector Typical pagination calls onPageChange correctly when page is individually selected" time="0.017">
    </testcase>
    <testcase classname="PageSelector Typical pagination calls onPageChange correctly when previous button is selected" name="PageSelector Typical pagination calls onPageChange correctly when previous button is selected" time="0.003">
    </testcase>
    <testcase classname="PageSelector Typical pagination calls onPageChange correctly when next button is selected" name="PageSelector Typical pagination calls onPageChange correctly when next button is selected" time="0.004">
    </testcase>
    <testcase classname="PageSelector Typical pagination when currently selected near middle will render correct elipsis" name="PageSelector Typical pagination when currently selected near middle will render correct elipsis" time="0.003">
    </testcase>
    <testcase classname="PageSelector Typical pagination when currently selected near middle will render correct pages" name="PageSelector Typical pagination when currently selected near middle will render correct pages" time="0.063">
    </testcase>
    <testcase classname="PageSelector Typical pagination when currently selected near end will render correct elipsis" name="PageSelector Typical pagination when currently selected near end will render correct elipsis" time="0.003">
    </testcase>
    <testcase classname="PageSelector Typical pagination when currently selected near end will render correct pages" name="PageSelector Typical pagination when currently selected near end will render correct pages" time="0.067">
    </testcase>
    <testcase classname="PageSelector Small pagination will render no elipsis" name="PageSelector Small pagination will render no elipsis" time="0.003">
    </testcase>
    <testcase classname="PageSelector Small pagination will render correct pages" name="PageSelector Small pagination will render correct pages" time="0.028">
    </testcase>
    <testcase classname="PageSelector Small pagination will render correct currently selected page" name="PageSelector Small pagination will render correct currently selected page" time="0.01">
    </testcase>
    <testcase classname="PageSelector Large pagination will render correct elipsis" name="PageSelector Large pagination will render correct elipsis" time="0.003">
    </testcase>
    <testcase classname="PageSelector Large pagination will render correct pages" name="PageSelector Large pagination will render correct pages" time="0.086">
    </testcase>
    <testcase classname="PageSelector Large pagination will render correct currently selected page" name="PageSelector Large pagination will render correct currently selected page" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="StreamingProgressSkippedButton" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:36" time="0.947" tests="4">
    <testcase classname="StreamingProgressSkippedButton should be in info state with only info items" name="StreamingProgressSkippedButton should be in info state with only info items" time="0.026">
    </testcase>
    <testcase classname="StreamingProgressSkippedButton should be in warning state with at least one warning item" name="StreamingProgressSkippedButton should be in warning state with at least one warning item" time="0.01">
    </testcase>
    <testcase classname="StreamingProgressSkippedButton should open and close popover when button is clicked" name="StreamingProgressSkippedButton should open and close popover when button is clicked" time="0.045">
    </testcase>
    <testcase classname="StreamingProgressSkippedButton should close popup and call onSearchAgain callback when popover raises event" name="StreamingProgressSkippedButton should close popup and call onSearchAgain callback when popover raises event" time="0.022">
    </testcase>
  </testsuite>
  <testsuite name="getMinMaxBoundary" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:36" time="0.624" tests="2">
    <testcase classname="getMinMaxBoundary should calculate a valid boundary box" name="getMinMaxBoundary should calculate a valid boundary box" time="0.002">
    </testcase>
    <testcase classname="getMinMaxBoundary should calculate a valid boundary box with zeroYAxisMin setting" name="getMinMaxBoundary should calculate a valid boundary box with zeroYAxisMin setting" time="0">
    </testcase>
  </testsuite>
  <testsuite name="LinkOrSpan" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:37" time="0.429" tests="2">
    <testcase classname="LinkOrSpan render a link when &quot;to&quot; is set" name="LinkOrSpan render a link when &quot;to&quot; is set" time="0.011">
    </testcase>
    <testcase classname="LinkOrSpan render a span when &quot;to&quot; is undefined" name="LinkOrSpan render a span when &quot;to&quot; is undefined" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Input" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:37" time="1.712" tests="5">
    <testcase classname="Input renders an input correctly" name="Input renders an input correctly" time="0.019">
    </testcase>
    <testcase classname="Input renders an input with label correctly" name="Input renders an input with label correctly" time="0.004">
    </testcase>
    <testcase classname="Input Renders status &apos;loading&apos; correctly" name="Input Renders status &apos;loading&apos; correctly" time="0.002">
    </testcase>
    <testcase classname="Input Renders status &apos;error&apos; correctly" name="Input Renders status &apos;error&apos; correctly" time="0.001">
    </testcase>
    <testcase classname="Input Renders status &apos;valid&apos; correctly" name="Input Renders status &apos;valid&apos; correctly" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="search providers" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:37" time="1.687" tests="13">
    <testcase classname="search providers definition provider should correctly parse result" name="search providers definition provider should correctly parse result" time="0.008">
    </testcase>
    <testcase classname="search providers definition provider should correctly format repositories with spaces" name="search providers definition provider should correctly format repositories with spaces" time="0.002">
    </testcase>
    <testcase classname="search providers definition provider should fallback to remote definition" name="search providers definition provider should fallback to remote definition" time="0.002">
    </testcase>
    <testcase classname="search providers definition provider should apply definition filter" name="search providers definition provider should apply definition filter" time="0.003">
    </testcase>
    <testcase classname="search providers definition provider should fallback to index-only queries" name="search providers definition provider should fallback to index-only queries" time="0.106">
    </testcase>
    <testcase classname="search providers definition provider should fallback to index-only remote definition definition" name="search providers definition provider should fallback to index-only remote definition definition" time="0.107">
    </testcase>
    <testcase classname="search providers definition provider should search forks in same repo if repo is a fork" name="search providers definition provider should search forks in same repo if repo is a fork" time="0.042">
    </testcase>
    <testcase classname="search providers references provider should correctly parse result" name="search providers references provider should correctly parse result" time="0.059">
    </testcase>
    <testcase classname="search providers references provider should correctly format repositories with spaces" name="search providers references provider should correctly format repositories with spaces" time="0.085">
    </testcase>
    <testcase classname="search providers references provider should fallback to index-only queries" name="search providers references provider should fallback to index-only queries" time="0.111">
    </testcase>
    <testcase classname="search providers references provider should search forks in same repo if repo is a fork" name="search providers references provider should search forks in same repo if repo is a fork" time="0.139">
    </testcase>
    <testcase classname="search providers hover provider should correctly parse result" name="search providers hover provider should correctly parse result" time="0.129">
    </testcase>
    <testcase classname="search providers hover provider should fallback to index-only queries" name="search providers hover provider should fallback to index-only queries" time="0.233">
    </testcase>
  </testsuite>
  <testsuite name="getTracingUrl" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:37" time="1.815" tests="4">
    <testcase classname="getTracingUrl creates tracing URL with absolute endpoint with ending slash" name="getTracingUrl creates tracing URL with absolute endpoint with ending slash" time="0.003">
    </testcase>
    <testcase classname="getTracingUrl creates tracing URL with absolute endpoint without ending slash" name="getTracingUrl creates tracing URL with absolute endpoint without ending slash" time="0.001">
    </testcase>
    <testcase classname="getTracingUrl creates tracing URL with relative endpoint with ending slash" name="getTracingUrl creates tracing URL with relative endpoint with ending slash" time="0.003">
    </testcase>
    <testcase classname="getTracingUrl creates tracing URL with relative endpoint without ending slash" name="getTracingUrl creates tracing URL with relative endpoint without ending slash" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="overrideContextOnPaste" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:37" time="1.738" tests="6">
    <testcase classname="overrideContextOnPaste removes the existing global context: filter if it is considered &quot;empty&quot;" name="overrideContextOnPaste removes the existing global context: filter if it is considered &quot;empty&quot;" time="0.006">
    </testcase>
    <testcase classname="overrideContextOnPaste keeps the filter the query contains kewords" name="overrideContextOnPaste keeps the filter the query contains kewords" time="0.001">
    </testcase>
    <testcase classname="overrideContextOnPaste keeps the filter if the new value does not contain a context filter" name="overrideContextOnPaste keeps the filter if the new value does not contain a context filter" time="0.001">
    </testcase>
    <testcase classname="overrideContextOnPaste keeps the filter if the current value contains the word &quot;context&quot;" name="overrideContextOnPaste keeps the filter if the current value contains the word &quot;context&quot;" time="0">
    </testcase>
    <testcase classname="overrideContextOnPaste keeps the filter if the new value contains the word &quot;context&quot;" name="overrideContextOnPaste keeps the filter if the new value contains the word &quot;context&quot;" time="0.001">
    </testcase>
    <testcase classname="overrideContextOnPaste does not remove the filter if the new value somehow &quot;breaks&quot; the context filters" name="overrideContextOnPaste does not remove the filter if the new value somehow &quot;breaks&quot; the context filters" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="ShortcutManager" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:39" time="0.608" tests="15">
    <testcase classname="ShortcutManager calls the matching shortcut immediately if there are no other similar shortcuts" name="ShortcutManager calls the matching shortcut immediately if there are no other similar shortcuts" time="0.011">
    </testcase>
    <testcase classname="ShortcutManager calls multiple shortcuts" name="ShortcutManager calls multiple shortcuts" time="0.005">
    </testcase>
    <testcase classname="ShortcutManager matches the longest fully matched shortcut when there are conflicting shortcuts after a timeout" name="ShortcutManager matches the longest fully matched shortcut when there are conflicting shortcuts after a timeout" time="0.005">
    </testcase>
    <testcase classname="ShortcutManager does not call shortcuts that do not match the keys pressed" name="ShortcutManager does not call shortcuts that do not match the keys pressed" time="0.004">
    </testcase>
    <testcase classname="ShortcutManager does not call shortcuts that only partially match" name="ShortcutManager does not call shortcuts that only partially match" time="0.003">
    </testcase>
    <testcase classname="ShortcutManager only registers a unique shortcut once" name="ShortcutManager only registers a unique shortcut once" time="0.004">
    </testcase>
    <testcase classname="ShortcutManager unsubscribes keys when Shortcut unmounts" name="ShortcutManager unsubscribes keys when Shortcut unmounts" time="0.002">
    </testcase>
    <testcase classname="ShortcutManager resets keys when there are no matching shortcuts" name="ShortcutManager resets keys when there are no matching shortcuts" time="0.002">
    </testcase>
    <testcase classname="ShortcutManager allows default event to occur" name="ShortcutManager allows default event to occur" time="0.002">
    </testcase>
    <testcase classname="ShortcutManager prevents the default event by default" name="ShortcutManager prevents the default event by default" time="0.002">
    </testcase>
    <testcase classname="ShortcutManager modifier keys matches shortcut when all modifier keys are pressed" name="ShortcutManager modifier keys matches shortcut when all modifier keys are pressed" time="0.002">
    </testcase>
    <testcase classname="ShortcutManager modifier keys doesn’t match shortcut when all modifier keys not pressed" name="ShortcutManager modifier keys doesn’t match shortcut when all modifier keys not pressed" time="0.001">
    </testcase>
    <testcase classname="ShortcutManager modifier keys maps the special value &quot;Mod&quot; to &quot;Control&quot;" name="ShortcutManager modifier keys maps the special value &quot;Mod&quot; to &quot;Control&quot;" time="0.002">
    </testcase>
    <testcase classname="ShortcutManager modifier keys maps the special value &quot;Mod&quot; to &quot;Meta&quot; (Cmd) on macOS" name="ShortcutManager modifier keys maps the special value &quot;Mod&quot; to &quot;Meta&quot; (Cmd) on macOS" time="0.002">
    </testcase>
    <testcase classname="ShortcutManager modifier keys doesn&apos;t match shortcut when any modifier key is held, but no modifier key is defined for the shortcut" name="ShortcutManager modifier keys doesn&apos;t match shortcut when any modifier key is held, but no modifier key is defined for the shortcut" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="SiteInitPage" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:39" time="1.379" tests="3">
    <testcase classname="SiteInitPage site already initialized" name="SiteInitPage site already initialized" time="0.022">
    </testcase>
    <testcase classname="SiteInitPage unexpected authed user" name="SiteInitPage unexpected authed user" time="0.009">
    </testcase>
    <testcase classname="SiteInitPage normal" name="SiteInitPage normal" time="0.017">
    </testcase>
  </testsuite>
  <testsuite name="LoaderInput" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:39" time="1.32" tests="2">
    <testcase classname="LoaderInput should render a loading spinner when loading prop is true" name="LoaderInput should render a loading spinner when loading prop is true" time="0.015">
    </testcase>
    <testcase classname="LoaderInput should not render a loading spinner when loading prop is false" name="LoaderInput should not render a loading spinner when loading prop is false" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="CodeMonitoringListPage" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:39" time="1.253" tests="3">
    <testcase classname="CodeMonitoringListPage Clicking enabled toggle calls toggleCodeMonitorEnabled" name="CodeMonitoringListPage Clicking enabled toggle calls toggleCodeMonitorEnabled" time="0.059">
    </testcase>
    <testcase classname="CodeMonitoringListPage Switching tabs from getting started to empty list works" name="CodeMonitoringListPage Switching tabs from getting started to empty list works" time="0.04">
    </testcase>
    <testcase classname="CodeMonitoringListPage Switching tabs from list to getting started works" name="CodeMonitoringListPage Switching tabs from list to getting started works" time="0.027">
    </testcase>
  </testsuite>
  <testsuite name="RequestAccessPage" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:40" time="0.801" tests="6">
    <testcase classname="RequestAccessPage renders form if all conditions are met" name="RequestAccessPage renders form if all conditions are met" time="0.056">
    </testcase>
    <testcase classname="RequestAccessPage handles inputs" name="RequestAccessPage handles inputs" time="0.084">
    </testcase>
    <testcase classname="RequestAccessPage redirects if authenticatedUser" name="RequestAccessPage redirects if authenticatedUser" time="0.008">
    </testcase>
    <testcase classname="RequestAccessPage redirects if allowSignup=true" name="RequestAccessPage redirects if allowSignup=true" time="0.004">
    </testcase>
    <testcase classname="RequestAccessPage redirects if sourcegraphDotComMode=true" name="RequestAccessPage redirects if sourcegraphDotComMode=true" time="0.002">
    </testcase>
    <testcase classname="RequestAccessPage redirects if auth.accessRequest.enabled=false" name="RequestAccessPage redirects if auth.accessRequest.enabled=false" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="checkRequestAccessAllowed" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:41" time="0.437" tests="5">
    <testcase classname="checkRequestAccessAllowed should return false if dotcom mode" name="checkRequestAccessAllowed should return false if dotcom mode" time="0.001">
    </testcase>
    <testcase classname="checkRequestAccessAllowed should return false if builtin signup enabled" name="checkRequestAccessAllowed should return false if builtin signup enabled" time="0.001">
    </testcase>
    <testcase classname="checkRequestAccessAllowed should return false if explicitly set enabled=false" name="checkRequestAccessAllowed should return false if explicitly set enabled=false" time="0">
    </testcase>
    <testcase classname="checkRequestAccessAllowed should return true if all conditions are met" name="checkRequestAccessAllowed should return true if all conditions are met" time="0">
    </testcase>
    <testcase classname="checkRequestAccessAllowed should return true if explicitly set enabled=true" name="checkRequestAccessAllowed should return true if explicitly set enabled=true" time="0">
    </testcase>
  </testsuite>
  <testsuite name="RepoRevisionSidebarSymbols" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:40" time="1.384" tests="3">
    <testcase classname="RepoRevisionSidebarSymbols renders symbol correctly" name="RepoRevisionSidebarSymbols renders symbol correctly" time="0.191">
    </testcase>
    <testcase classname="RepoRevisionSidebarSymbols renders summary correctly" name="RepoRevisionSidebarSymbols renders summary correctly" time="0.118">
    </testcase>
    <testcase classname="RepoRevisionSidebarSymbols clicking symbol updates route" name="RepoRevisionSidebarSymbols clicking symbol updates route" time="0.197">
    </testcase>
  </testsuite>
  <testsuite name="UserNavItem" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:40" time="1.409" tests="2">
    <testcase classname="UserNavItem simple" name="UserNavItem simple" time="0.048">
    </testcase>
    <testcase classname="UserNavItem logout click triggers page refresh instead of performing client-side only navigation" name="UserNavItem logout click triggers page refresh instead of performing client-side only navigation" time="0.081">
    </testcase>
  </testsuite>
  <testsuite name="ActionItem" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:40" time="1.494" tests="12">
    <testcase classname="ActionItem non-actionItem variant" name="ActionItem non-actionItem variant" time="0.04">
    </testcase>
    <testcase classname="ActionItem actionItem variant" name="ActionItem actionItem variant" time="0.004">
    </testcase>
    <testcase classname="ActionItem noop command" name="ActionItem noop command" time="0.01">
    </testcase>
    <testcase classname="ActionItem pressed toggle actionItem" name="ActionItem pressed toggle actionItem" time="0.003">
    </testcase>
    <testcase classname="ActionItem non-pressed actionItem" name="ActionItem non-pressed actionItem" time="0.003">
    </testcase>
    <testcase classname="ActionItem title element" name="ActionItem title element" time="0.003">
    </testcase>
    <testcase classname="ActionItem run command" name="ActionItem run command" time="0.009">
    </testcase>
    <testcase classname="ActionItem run command with showLoadingSpinnerDuringExecution" name="ActionItem run command with showLoadingSpinnerDuringExecution" time="0.069">
    </testcase>
    <testcase classname="ActionItem run command with error" name="ActionItem run command with error" time="0.011">
    </testcase>
    <testcase classname="ActionItem &quot;open&quot; command renders as link" name="ActionItem &quot;open&quot; command renders as link" time="0.006">
    </testcase>
    <testcase classname="ActionItem &quot;open&quot; command renders as link with icon and opens a new tab for a different origin" name="ActionItem &quot;open&quot; command renders as link with icon and opens a new tab for a different origin" time="0.004">
    </testcase>
    <testcase classname="ActionItem &quot;open&quot; command renders as link that opens in a new tab, but without icon for a different origin as the alt action and a primary action defined" name="ActionItem &quot;open&quot; command renders as link that opens in a new tab, but without icon for a different origin as the alt action and a primary action defined" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="MainThreadAPI" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:41" time="0.529" tests="5">
    <testcase classname="MainThreadAPI graphQL PlatformContext#requestGraphQL is called with the correct arguments" name="MainThreadAPI graphQL PlatformContext#requestGraphQL is called with the correct arguments" time="0.003">
    </testcase>
    <testcase classname="MainThreadAPI graphQL extension host receives the value returned by PlatformContext#requestGraphQL" name="MainThreadAPI graphQL extension host receives the value returned by PlatformContext#requestGraphQL" time="0.002">
    </testcase>
    <testcase classname="MainThreadAPI configuration changeConfiguration goes to platform with the last settings subject" name="MainThreadAPI configuration changeConfiguration goes to platform with the last settings subject" time="0.001">
    </testcase>
    <testcase classname="MainThreadAPI configuration changes of settings from platform propagated to the ext host" name="MainThreadAPI configuration changes of settings from platform propagated to the ext host" time="0.001">
    </testcase>
    <testcase classname="MainThreadAPI configuration changes of settings are not passed to ext host after unsub" name="MainThreadAPI configuration changes of settings are not passed to ext host after unsub" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="BaseControlInput" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:41" time="0.797" tests="12">
    <testcase classname="BaseControlInput radio input renders correctly with a visible label" name="BaseControlInput radio input renders correctly with a visible label" time="0.016">
    </testcase>
    <testcase classname="BaseControlInput radio input renders correctly with a hidden label" name="BaseControlInput radio input renders correctly with a hidden label" time="0.002">
    </testcase>
    <testcase classname="BaseControlInput radio input renders correctly with an externally provided label" name="BaseControlInput radio input renders correctly with an externally provided label" time="0.042">
    </testcase>
    <testcase classname="BaseControlInput radio input renders with message correctly" name="BaseControlInput radio input renders with message correctly" time="0.009">
    </testcase>
    <testcase classname="BaseControlInput radio input renders with correct styles when invalid" name="BaseControlInput radio input renders with correct styles when invalid" time="0.017">
    </testcase>
    <testcase classname="BaseControlInput radio input renders with correct styles when valid" name="BaseControlInput radio input renders with correct styles when valid" time="0.009">
    </testcase>
    <testcase classname="BaseControlInput checkbox input renders correctly with a visible label" name="BaseControlInput checkbox input renders correctly with a visible label" time="0.002">
    </testcase>
    <testcase classname="BaseControlInput checkbox input renders correctly with a hidden label" name="BaseControlInput checkbox input renders correctly with a hidden label" time="0.003">
    </testcase>
    <testcase classname="BaseControlInput checkbox input renders correctly with an externally provided label" name="BaseControlInput checkbox input renders correctly with an externally provided label" time="0.01">
    </testcase>
    <testcase classname="BaseControlInput checkbox input renders with message correctly" name="BaseControlInput checkbox input renders with message correctly" time="0.005">
    </testcase>
    <testcase classname="BaseControlInput checkbox input renders with correct styles when invalid" name="BaseControlInput checkbox input renders with correct styles when invalid" time="0.004">
    </testcase>
    <testcase classname="BaseControlInput checkbox input renders with correct styles when valid" name="BaseControlInput checkbox input renders with correct styles when valid" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="SearchSidebarSection" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:41" time="1.29" tests="6">
    <testcase classname="SearchSidebarSection should render all items initially" name="SearchSidebarSection should render all items initially" time="0.176">
    </testcase>
    <testcase classname="SearchSidebarSection should filter items based on search" name="SearchSidebarSection should filter items based on search" time="0.03">
    </testcase>
    <testcase classname="SearchSidebarSection should clear search when items change" name="SearchSidebarSection should clear search when items change" time="0.05">
    </testcase>
    <testcase classname="SearchSidebarSection should not show search if only one item in list" name="SearchSidebarSection should not show search if only one item in list" time="0.005">
    </testcase>
    <testcase classname="SearchSidebarSection should not show search if showSearch is false" name="SearchSidebarSection should not show search if showSearch is false" time="0.011">
    </testcase>
    <testcase classname="SearchSidebarSection should not render based on minItems" name="SearchSidebarSection should not render based on minItems" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="useTemporarySetting" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:41" time="0.892" tests="8">
    <testcase classname="useTemporarySetting should get correct data from storage" name="useTemporarySetting should get correct data from storage" time="0.022">
    </testcase>
    <testcase classname="useTemporarySetting should get undefined if data does not exist in storage" name="useTemporarySetting should get undefined if data does not exist in storage" time="0.005">
    </testcase>
    <testcase classname="useTemporarySetting should save data and update value" name="useTemporarySetting should save data and update value" time="0.012">
    </testcase>
    <testcase classname="useTemporarySetting should support the updater callback pattern" name="useTemporarySetting should support the updater callback pattern" time="0.003">
    </testcase>
    <testcase classname="useTemporarySetting should update other hook values if changed in another hook" name="useTemporarySetting should update other hook values if changed in another hook" time="0.003">
    </testcase>
    <testcase classname="useTemporarySetting should update data if backend changed" name="useTemporarySetting should update data if backend changed" time="0.013">
    </testcase>
    <testcase classname="useTemporarySetting should not recreate the updater function" name="useTemporarySetting should not recreate the updater function" time="0.001">
    </testcase>
    <testcase classname="useTemporarySetting should always provides latest previousValue" name="useTemporarySetting should always provides latest previousValue" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="PageSwitcher" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:42" time="0.741" tests="8">
    <testcase classname="PageSwitcher renders the go to first page button" name="PageSwitcher renders the go to first page button" time="0.065">
    </testcase>
    <testcase classname="PageSwitcher renders the go to next page button" name="PageSwitcher renders the go to next page button" time="0.028">
    </testcase>
    <testcase classname="PageSwitcher renders the go to previous page button" name="PageSwitcher renders the go to previous page button" time="0.053">
    </testcase>
    <testcase classname="PageSwitcher renders the go to last page button" name="PageSwitcher renders the go to last page button" time="0.037">
    </testcase>
    <testcase classname="PageSwitcher disables the go to first page and go to previous page button when it has no previous page" name="PageSwitcher disables the go to first page and go to previous page button when it has no previous page" time="0.038">
    </testcase>
    <testcase classname="PageSwitcher disables the go to last page and go to next page button when it has no next page" name="PageSwitcher disables the go to last page and go to next page button when it has no next page" time="0.056">
    </testcase>
    <testcase classname="PageSwitcher renders label with total count" name="PageSwitcher renders label with total count" time="0.007">
    </testcase>
    <testcase classname="PageSwitcher doesn&apos;t render the label when it&apos;s not set" name="PageSwitcher doesn&apos;t render the label when it&apos;s not set" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="GitCommitNodeByline" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:42" time="1.21" tests="6">
    <testcase classname="GitCommitNodeByline author" name="GitCommitNodeByline author" time="0.042">
    </testcase>
    <testcase classname="GitCommitNodeByline different author and committer" name="GitCommitNodeByline different author and committer" time="0.018">
    </testcase>
    <testcase classname="GitCommitNodeByline author (compact)" name="GitCommitNodeByline author (compact)" time="0.005">
    </testcase>
    <testcase classname="GitCommitNodeByline different author and committer (compact)" name="GitCommitNodeByline different author and committer (compact)" time="0.005">
    </testcase>
    <testcase classname="GitCommitNodeByline same author and committer" name="GitCommitNodeByline same author and committer" time="0.003">
    </testcase>
    <testcase classname="GitCommitNodeByline omit GitHub committer" name="GitCommitNodeByline omit GitHub committer" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="CommitMessageWithLinks" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:42" time="1.173" tests="2">
    <testcase classname="CommitMessageWithLinks works with a commit link" name="CommitMessageWithLinks works with a commit link" time="0.037">
    </testcase>
    <testcase classname="CommitMessageWithLinks works with a repo link" name="CommitMessageWithLinks works with a repo link" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="SearchContextMenu" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:42" time="1.632" tests="5">
    <testcase classname="SearchContextMenu should select item when clicking on it" name="SearchContextMenu should select item when clicking on it" time="0.091">
    </testcase>
    <testcase classname="SearchContextMenu should filter list by spec when searching" name="SearchContextMenu should filter list by spec when searching" time="0.03">
    </testcase>
    <testcase classname="SearchContextMenu should show message if search does not find anything" name="SearchContextMenu should show message if search does not find anything" time="0.037">
    </testcase>
    <testcase classname="SearchContextMenu should not search by description" name="SearchContextMenu should not search by description" time="0.033">
    </testcase>
    <testcase classname="SearchContextMenu should show error on failed next page load" name="SearchContextMenu should show error on failed next page load" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="token_positions" errors="0" failures="0" skipped="1" timestamp="2023-08-29T07:22:43" time="1.238" tests="17">
    <testcase classname="token_positions covertNode() tokenizes text properly" name="token_positions covertNode() tokenizes text properly" time="0.006">
    </testcase>
    <testcase classname="token_positions covertNode() does not change the text" name="token_positions covertNode() does not change the text" time="0.001">
    </testcase>
    <testcase classname="token_positions findElementWithOffset() position finds the correct token (with tokenization)" name="token_positions findElementWithOffset() position finds the correct token (with tokenization)" time="0.015">
    </testcase>
    <testcase classname="token_positions findElementWithOffset() position finds the correct token (without tokenization)" name="token_positions findElementWithOffset() position finds the correct token (without tokenization)" time="0.007">
    </testcase>
    <testcase classname="token_positions findElementWithOffset() position returns undefined for invalid offsets" name="token_positions findElementWithOffset() position returns undefined for invalid offsets" time="0.001">
    </testcase>
    <testcase classname="token_positions findElementWithOffset() range finds the correct token (with tokenization" name="token_positions findElementWithOffset() range finds the correct token (with tokenization" time="0.018">
    </testcase>
    <testcase classname="token_positions findElementWithOffset() range finds the correct token (without tokenization)" name="token_positions findElementWithOffset() range finds the correct token (without tokenization)" time="0.009">
    </testcase>
    <testcase classname="token_positions findElementWithOffset() range returns undefined for invalid offsets" name="token_positions findElementWithOffset() range returns undefined for invalid offsets" time="0.001">
    </testcase>
    <testcase classname="token_positions getTokenAtPositionOrRange() position finds the correct tokens" name="token_positions getTokenAtPositionOrRange() position finds the correct tokens" time="0.082">
    </testcase>
    <testcase classname="token_positions getTokenAtPositionOrRange() position gets the full token, even when it crosses multiple elements" name="token_positions getTokenAtPositionOrRange() position gets the full token, even when it crosses multiple elements" time="0.007">
    </testcase>
    <testcase classname="token_positions getTokenAtPositionOrRange() position doesn&apos;t wrap tokens that span multiple elements more than once" name="token_positions getTokenAtPositionOrRange() position doesn&apos;t wrap tokens that span multiple elements more than once" time="0.011">
    </testcase>
    <testcase classname="token_positions getTokenAtPositionOrRange() range finds the correct elements" name="token_positions getTokenAtPositionOrRange() range finds the correct elements" time="0.172">
    </testcase>
    <testcase classname="token_positions locateTarget() finds the correct token for a target" name="token_positions locateTarget() finds the correct token for a target" time="0.108">
    </testcase>
    <testcase classname="token_positions locateTarget() returns only the line number when the code element itself is hovered" name="token_positions locateTarget() returns only the line number when the code element itself is hovered" time="0.029">
    </testcase>
    <testcase classname="token_positions locateTarget() returns undefined when the code view itself is hovered" name="token_positions locateTarget() returns undefined when the code view itself is hovered" time="0">
    </testcase>
    <testcase classname="token_positions getCodeElementsInRange() returns all code elements within a given range on a non-diff code view" name="token_positions getCodeElementsInRange() returns all code elements within a given range on a non-diff code view" time="0.002">
    </testcase>
    <testcase classname="token_positions getCodeElementsInRange() returns all code elements within a given range on a diff code view" name="token_positions getCodeElementsInRange() returns all code elements within a given range on a diff code view" time="0">
      <skipped/>
    </testcase>
  </testsuite>
  <testsuite name="parseFuzzyFileQuery" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:43" time="1.286" tests="5">
    <testcase classname="parseFuzzyFileQuery foo.ts" name="parseFuzzyFileQuery foo.ts" time="0.003">
    </testcase>
    <testcase classname="parseFuzzyFileQuery foo.ts:" name="parseFuzzyFileQuery foo.ts:" time="0.003">
    </testcase>
    <testcase classname="parseFuzzyFileQuery foo.ts:1:" name="parseFuzzyFileQuery foo.ts:1:" time="0.002">
    </testcase>
    <testcase classname="parseFuzzyFileQuery foo.ts:100" name="parseFuzzyFileQuery foo.ts:100" time="0.001">
    </testcase>
    <testcase classname="parseFuzzyFileQuery foo.ts:100:99" name="parseFuzzyFileQuery foo.ts:100:99" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Tree" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:44" time="1.194" tests="2">
    <testcase classname="Tree flattenTree creates a flat list of TreeNode[]" name="Tree flattenTree creates a flat list of TreeNode[]" time="0.005">
    </testcase>
    <testcase classname="Tree flattenTree passes through all properties of the node" name="Tree flattenTree passes through all properties of the node" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Card" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:44" time="1.19" tests="1">
    <testcase classname="Card renders card correctly" name="Card renders card correctly" time="0.032">
    </testcase>
  </testsuite>
  <testsuite name="search/index" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:45" time="0.691" tests="5">
    <testcase classname="search/index parseSearchURL" name="search/index parseSearchURL" time="0.005">
    </testcase>
    <testcase classname="search/index parseSearchURL with appendCaseFilter" name="search/index parseSearchURL with appendCaseFilter" time="0.007">
    </testcase>
    <testcase classname="search/index parseSearchURL preserves literal search compatibility" name="search/index parseSearchURL preserves literal search compatibility" time="0.001">
    </testcase>
    <testcase classname="repoFilterForRepoRevision escapes values with spaces escapes spaces in value" name="repoFilterForRepoRevision escapes values with spaces escapes spaces in value" time="0.001">
    </testcase>
    <testcase classname="updateQueryStateFromURL search context should extract the search context from the query" name="updateQueryStateFromURL search context should extract the search context from the query" time="0.018">
    </testcase>
  </testsuite>
  <testsuite name="gitHubAppConfig" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:45" time="1.056" tests="7">
    <testcase classname="gitHubAppConfig get config" name="gitHubAppConfig get config" time="0.001">
    </testcase>
    <testcase classname="gitHubAppConfig resolveExternalServiceCategory parses config from JSONC if parsed config is not given" name="gitHubAppConfig resolveExternalServiceCategory parses config from JSONC if parsed config is not given" time="0.002">
    </testcase>
    <testcase classname="gitHubAppConfig resolveExternalServiceCategory returns GITHUB_DOTCOM for github.com" name="gitHubAppConfig resolveExternalServiceCategory returns GITHUB_DOTCOM for github.com" time="0">
    </testcase>
    <testcase classname="gitHubAppConfig resolveExternalServiceCategory returns GHE if GITHUB kind and non-github.com URL" name="gitHubAppConfig resolveExternalServiceCategory returns GHE if GITHUB kind and non-github.com URL" time="0.001">
    </testcase>
    <testcase classname="gitHubAppConfig resolveExternalServiceCategory returns GitLab dotcom if GITLAB kind and gitlab.com URL" name="gitHubAppConfig resolveExternalServiceCategory returns GitLab dotcom if GITLAB kind and gitlab.com URL" time="0">
    </testcase>
    <testcase classname="gitHubAppConfig resolveExternalServiceCategory returns GitLab category if GITLAB kind and non-gitlab.com URL" name="gitHubAppConfig resolveExternalServiceCategory returns GitLab category if GITLAB kind and non-gitlab.com URL" time="0">
    </testcase>
    <testcase classname="gitHubAppConfig resolveExternalServiceCategory returns GitHub App category if config contains gitHubAppDetails" name="gitHubAppConfig resolveExternalServiceCategory returns GitHub App category if config contains gitHubAppDetails" time="0">
    </testcase>
  </testsuite>
  <testsuite name="useTour.ts" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:45" time="1.165" tests="5">
    <testcase classname="useTour.ts returns initial state from temporary settings" name="useTour.ts returns initial state from temporary settings" time="0.014">
    </testcase>
    <testcase classname="useTour.ts clears state when restart called" name="useTour.ts clears state when restart called" time="0.004">
    </testcase>
    <testcase classname="useTour.ts updates &quot;status&quot; when &quot;setStatus&quot; called" name="useTour.ts updates &quot;status&quot; when &quot;setStatus&quot; called" time="0.003">
    </testcase>
    <testcase classname="useTour.ts updates &quot;language&quot; when &quot;setLanguage&quot; called" name="useTour.ts updates &quot;language&quot; when &quot;setLanguage&quot; called" time="0.002">
    </testcase>
    <testcase classname="useTour.ts updates &quot;completedStepIds&quot; as unique array when &quot;setStepCompleted&quot; called" name="useTour.ts updates &quot;completedStepIds&quot; as unique array when &quot;setStepCompleted&quot; called" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="VALID_USERNAME_REGEX" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:45" time="0.272" tests="16">
    <testcase classname="VALID_USERNAME_REGEX should match &quot;fo&quot;" name="VALID_USERNAME_REGEX should match &quot;fo&quot;" time="0.001">
    </testcase>
    <testcase classname="VALID_USERNAME_REGEX should match &quot;foo&quot;" name="VALID_USERNAME_REGEX should match &quot;foo&quot;" time="0.001">
    </testcase>
    <testcase classname="VALID_USERNAME_REGEX should match &quot;FoO&quot;" name="VALID_USERNAME_REGEX should match &quot;FoO&quot;" time="0">
    </testcase>
    <testcase classname="VALID_USERNAME_REGEX should match &quot;FOO&quot;" name="VALID_USERNAME_REGEX should match &quot;FOO&quot;" time="0">
    </testcase>
    <testcase classname="VALID_USERNAME_REGEX should match &quot;1foo&quot;" name="VALID_USERNAME_REGEX should match &quot;1foo&quot;" time="0">
    </testcase>
    <testcase classname="VALID_USERNAME_REGEX should match &quot;foo1&quot;" name="VALID_USERNAME_REGEX should match &quot;foo1&quot;" time="0">
    </testcase>
    <testcase classname="VALID_USERNAME_REGEX should match &quot;Fo1o&quot;" name="VALID_USERNAME_REGEX should match &quot;Fo1o&quot;" time="0">
    </testcase>
    <testcase classname="VALID_USERNAME_REGEX should match &quot;foo-bar&quot;" name="VALID_USERNAME_REGEX should match &quot;foo-bar&quot;" time="0.006">
    </testcase>
    <testcase classname="VALID_USERNAME_REGEX should match &quot;foo.bar&quot;" name="VALID_USERNAME_REGEX should match &quot;foo.bar&quot;" time="0.001">
    </testcase>
    <testcase classname="VALID_USERNAME_REGEX should match &quot;foo-32&quot;" name="VALID_USERNAME_REGEX should match &quot;foo-32&quot;" time="0">
    </testcase>
    <testcase classname="VALID_USERNAME_REGEX should match &quot;32-foo&quot;" name="VALID_USERNAME_REGEX should match &quot;32-foo&quot;" time="0">
    </testcase>
    <testcase classname="VALID_USERNAME_REGEX should match &quot;foo-bar-&quot;" name="VALID_USERNAME_REGEX should match &quot;foo-bar-&quot;" time="0">
    </testcase>
    <testcase classname="VALID_USERNAME_REGEX should match &quot;42&quot;" name="VALID_USERNAME_REGEX should match &quot;42&quot;" time="0.001">
    </testcase>
    <testcase classname="VALID_USERNAME_REGEX should not match &quot;!foo&quot;" name="VALID_USERNAME_REGEX should not match &quot;!foo&quot;" time="0">
    </testcase>
    <testcase classname="VALID_USERNAME_REGEX should not match &quot;-foo&quot;" name="VALID_USERNAME_REGEX should not match &quot;-foo&quot;" time="0">
    </testcase>
    <testcase classname="VALID_USERNAME_REGEX should not match &quot;foo--bar&quot;" name="VALID_USERNAME_REGEX should not match &quot;foo--bar&quot;" time="0">
    </testcase>
  </testsuite>
  <testsuite name="decodeCaptureInsightURL" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:46" time="0.29" tests="2">
    <testcase classname="decodeCaptureInsightURL should return null of non of insight relevant fields are presented in the URL query params" name="decodeCaptureInsightURL should return null of non of insight relevant fields are presented in the URL query params" time="0.002">
    </testcase>
    <testcase classname="encodeSearchInsightUrl should encode search insight values in a way that they could be decoded with decodeUrlSearchInsight" name="encodeSearchInsightUrl should encode search insight values in a way that they could be decoded with decodeUrlSearchInsight" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="bitbucketServerCodeHost" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:45" time="0.995" tests="10">
    <testcase classname="bitbucketServerCodeHost getViewContextOnSourcegraphMount creates and returns a new mount in the container" name="bitbucketServerCodeHost getViewContextOnSourcegraphMount creates and returns a new mount in the container" time="0.044">
    </testcase>
    <testcase classname="bitbucketServerCodeHost getViewContextOnSourcegraphMount is idempotent" name="bitbucketServerCodeHost getViewContextOnSourcegraphMount is idempotent" time="0.039">
    </testcase>
    <testcase classname="bitbucketServerCodeHost getViewContextOnSourcegraphMount returns null if the mount does not belong into the container" name="bitbucketServerCodeHost getViewContextOnSourcegraphMount returns null if the mount does not belong into the container" time="0.001">
    </testcase>
    <testcase classname="bitbucketServerCodeHost getToolbarMount() creates and returns a new mount in the container" name="bitbucketServerCodeHost getToolbarMount() creates and returns a new mount in the container" time="0.169">
    </testcase>
    <testcase classname="bitbucketServerCodeHost getToolbarMount() is idempotent" name="bitbucketServerCodeHost getToolbarMount() is idempotent" time="0.135">
    </testcase>
    <testcase classname="bitbucketServerCodeHost getToolbarMount() throws an Error if given an unexpected code view" name="bitbucketServerCodeHost getToolbarMount() throws an Error if given an unexpected code view" time="0">
    </testcase>
    <testcase classname="parseHash given &quot;#1&quot; as argument returns {&quot;line&quot;:1}" name="parseHash given &quot;#1&quot; as argument returns {&quot;line&quot;:1}" time="0.001">
    </testcase>
    <testcase classname="parseHash given &quot;#1-5&quot; as argument returns {&quot;line&quot;:1,&quot;endLine&quot;:5}" name="parseHash given &quot;#1-5&quot; as argument returns {&quot;line&quot;:1,&quot;endLine&quot;:5}" time="0.001">
    </testcase>
    <testcase classname="parseHash given &quot;#1:5&quot; as argument returns {}" name="parseHash given &quot;#1:5&quot; as argument returns {}" time="0">
    </testcase>
    <testcase classname="parseHash given &quot;#1a&quot; as argument returns {}" name="parseHash given &quot;#1a&quot; as argument returns {}" time="0">
    </testcase>
  </testsuite>
  <testsuite name="H3" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:46" time="0.658" tests="2">
    <testcase classname="H3 should render correctly" name="H3 should render correctly" time="0.009">
    </testcase>
    <testcase classname="H3 should render correctly with `as`" name="H3 should render correctly with `as`" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="useKeyboardShortcut" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:46" time="0.701" tests="4">
    <testcase classname="useKeyboardShortcut when character key shortcuts are enabled should return character keyboard shortcuts" name="useKeyboardShortcut when character key shortcuts are enabled should return character keyboard shortcuts" time="0.014">
    </testcase>
    <testcase classname="useKeyboardShortcut when character key shortcuts are enabled should still return the keyboard shortcuts that contain modifiers" name="useKeyboardShortcut when character key shortcuts are enabled should still return the keyboard shortcuts that contain modifiers" time="0.002">
    </testcase>
    <testcase classname="useKeyboardShortcut when character key shortcuts are disabled should NOT return the character keyboard shortcut" name="useKeyboardShortcut when character key shortcuts are disabled should NOT return the character keyboard shortcut" time="0.002">
    </testcase>
    <testcase classname="useKeyboardShortcut when character key shortcuts are disabled should still return the keyboard shortcuts that contain modifiers" name="useKeyboardShortcut when character key shortcuts are disabled should still return the keyboard shortcuts that contain modifiers" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="input validation" errors="0" failures="0" skipped="1" timestamp="2023-08-29T07:22:46" time="0.607" tests="5">
    <testcase classname="input validation createValidationPipeline() works without initial value" name="input validation createValidationPipeline() works without initial value" time="0.004">
    </testcase>
    <testcase classname="input validation createValidationPipeline() works with initial value" name="input validation createValidationPipeline() works with initial value" time="0.001">
    </testcase>
    <testcase classname="input validation createValidationPipeline() works with async validators" name="input validation createValidationPipeline() works with async validators" time="0.001">
    </testcase>
    <testcase classname="input validation useInputValidation() hook does not validate until input element is rendered" name="input validation useInputValidation() hook does not validate until input element is rendered" time="0">
      <skipped/>
    </testcase>
    <testcase classname="input validation useInputValidation() hook works with the state override" name="input validation useInputValidation() hook works with the state override" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="H4" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:46" time="0.301" tests="2">
    <testcase classname="H4 should render correctly" name="H4 should render correctly" time="0.017">
    </testcase>
    <testcase classname="H4 should render correctly with `as`" name="H4 should render correctly with `as`" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="convertUpdateConfigurationCommandArgs" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:46" time="0.399" tests="3">
    <testcase classname="convertUpdateConfigurationCommandArgs converts with a non-JSON-encoded arg" name="convertUpdateConfigurationCommandArgs converts with a non-JSON-encoded arg" time="0.001">
    </testcase>
    <testcase classname="convertUpdateConfigurationCommandArgs converts with a JSON-encoded arg" name="convertUpdateConfigurationCommandArgs converts with a JSON-encoded arg" time="0">
    </testcase>
    <testcase classname="convertUpdateConfigurationCommandArgs throws if the arg is invalid" name="convertUpdateConfigurationCommandArgs throws if the arg is invalid" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="asObservable" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:47" time="0.327" tests="3">
    <testcase classname="asObservable accepts an Observable" name="asObservable accepts an Observable" time="0.001">
    </testcase>
    <testcase classname="asObservable accepts a sync value" name="asObservable accepts a sync value" time="0">
    </testcase>
    <testcase classname="asObservable catches errors" name="asObservable catches errors" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="ActionEditor" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:46" time="0.82" tests="7">
    <testcase classname="ActionEditor expand and collapse with cancel button" name="ActionEditor expand and collapse with cancel button" time="0.042">
    </testcase>
    <testcase classname="ActionEditor expand and collapse with cancel button, completed" name="ActionEditor expand and collapse with cancel button, completed" time="0.025">
    </testcase>
    <testcase classname="ActionEditor expand and collapse with submit button" name="ActionEditor expand and collapse with submit button" time="0.012">
    </testcase>
    <testcase classname="ActionEditor expand and collapse with delete button" name="ActionEditor expand and collapse with delete button" time="0.011">
    </testcase>
    <testcase classname="ActionEditor submit and delete disabled" name="ActionEditor submit and delete disabled" time="0.01">
    </testcase>
    <testcase classname="ActionEditor toggle disable when collapsed" name="ActionEditor toggle disable when collapsed" time="0.006">
    </testcase>
    <testcase classname="ActionEditor toggle disable when expanded" name="ActionEditor toggle disable when expanded" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="shouldErrorBeReported" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:47" time="0.418" tests="4">
    <testcase classname="shouldErrorBeReported should capture HttpStatusError except for Server response errors (5xx)" name="shouldErrorBeReported should capture HttpStatusError except for Server response errors (5xx)" time="0.001">
    </testcase>
    <testcase classname="shouldErrorBeReported should not capture AbortError" name="shouldErrorBeReported should not capture AbortError" time="0.001">
    </testcase>
    <testcase classname="shouldErrorBeReported should not capture ChunkLoadError" name="shouldErrorBeReported should not capture ChunkLoadError" time="0">
    </testcase>
    <testcase classname="shouldErrorBeReported should not capture not authenticated error" name="shouldErrorBeReported should not capture not authenticated error" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="DiffSplitHunk" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:47" time="0.729" tests="7">
    <testcase classname="DiffSplitHunk Split Lines Diff will show a DELETED on the left and the ADDED on the right" name="DiffSplitHunk Split Lines Diff will show a DELETED on the left and the ADDED on the right" time="0.036">
    </testcase>
    <testcase classname="DiffSplitHunk Split Lines Diff will show a single ADDED on the right and empty cell on the left" name="DiffSplitHunk Split Lines Diff will show a single ADDED on the right and empty cell on the left" time="0.006">
    </testcase>
    <testcase classname="DiffSplitHunk Split Lines Diff will show a single DELETED on the left and empty cell on the right" name="DiffSplitHunk Split Lines Diff will show a single DELETED on the left and empty cell on the right" time="0.006">
    </testcase>
    <testcase classname="DiffSplitHunk Split Lines Diff will show UNCHANGED lines on both sides" name="DiffSplitHunk Split Lines Diff will show UNCHANGED lines on both sides" time="0.005">
    </testcase>
    <testcase classname="DiffSplitHunk Split Lines Diff add active class when the anchor is clicked on UNCHANGED lines" name="DiffSplitHunk Split Lines Diff add active class when the anchor is clicked on UNCHANGED lines" time="0.013">
    </testcase>
    <testcase classname="DiffSplitHunk Split Lines Diff add active class when the anchor is clicked on ADDED lines" name="DiffSplitHunk Split Lines Diff add active class when the anchor is clicked on ADDED lines" time="0.012">
    </testcase>
    <testcase classname="DiffSplitHunk Split Lines Diff add active class when the anchor is clicked on DELETED lines" name="DiffSplitHunk Split Lines Diff add active class when the anchor is clicked on DELETED lines" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="useFeatureFlag" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:47" time="0.875" tests="5">
    <testcase classname="useFeatureFlag returns [false] value correctly" name="useFeatureFlag returns [false] value correctly" time="0.073">
    </testcase>
    <testcase classname="useFeatureFlag returns [true] value correctly" name="useFeatureFlag returns [true] value correctly" time="0.057">
    </testcase>
    <testcase classname="useFeatureFlag updates on value change" name="useFeatureFlag updates on value change" time="0.158">
    </testcase>
    <testcase classname="useFeatureFlag updates when feature flag prop changes" name="useFeatureFlag updates when feature flag prop changes" time="0.104">
    </testcase>
    <testcase classname="useFeatureFlag returns &quot;error&quot; when unhandled error" name="useFeatureFlag returns &quot;error&quot; when unhandled error" time="0.054">
    </testcase>
  </testsuite>
  <testsuite name="SurveyPage" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:47" time="0.766" tests="2">
    <testcase classname="SurveyPage Prior to submission renders and handles form fields correctly" name="SurveyPage Prior to submission renders and handles form fields correctly" time="0.12">
    </testcase>
    <testcase classname="SurveyPage After submission renders correct thank you message" name="SurveyPage After submission renders correct thank you message" time="0.02">
    </testcase>
  </testsuite>
  <testsuite name="useJsoncParser" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:47" time="1.633" tests="3">
    <testcase classname="useJsoncParser parses, updates &amp; resets correctly" name="useJsoncParser parses, updates &amp; resets correctly" time="0.034">
    </testcase>
    <testcase classname="useJsoncParser re-parses on originalRawJson change" name="useJsoncParser re-parses on originalRawJson change" time="0.014">
    </testcase>
    <testcase classname="useJsoncParser handles parse errors" name="useJsoncParser handles parse errors" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="Extension logging" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:48" time="1.707" tests="2">
    <testcase classname="Extension logging does not log when extension ID is absent from settings" name="Extension logging does not log when extension ID is absent from settings" time="0.038">
    </testcase>
    <testcase classname="Extension logging prefixes logs with extension ID" name="Extension logging prefixes logs with extension ID" time="0.384">
    </testcase>
  </testsuite>
  <testsuite name="resultToLocation" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:48" time="1.436" tests="3">
    <testcase classname="resultToLocation converts to a location" name="resultToLocation converts to a location" time="0">
    </testcase>
    <testcase classname="resultToLocation infers HEAD rev" name="resultToLocation infers HEAD rev" time="0">
    </testcase>
    <testcase classname="searchResultToResults converts to a result list" name="searchResultToResults converts to a result list" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="RepositoryReleasesTagsPage" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:48" time="2.352" tests="2">
    <testcase classname="RepositoryReleasesTagsPage renders" name="RepositoryReleasesTagsPage renders" time="0.117">
    </testcase>
    <testcase classname="RepositoryReleasesTagsPage renders for packages" name="RepositoryReleasesTagsPage renders for packages" time="0.023">
    </testcase>
  </testsuite>
  <testsuite name="Panel" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:49" time="1.259" tests="1">
    <testcase classname="Panel renders correctly positioned at page bottom" name="Panel renders correctly positioned at page bottom" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="gqlToCascade" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:50" time="0.757" tests="15">
    <testcase classname="gqlToCascade converts a value" name="gqlToCascade converts a value" time="0.003">
    </testcase>
    <testcase classname="gqlToCascade preserves errors" name="gqlToCascade preserves errors" time="0">
    </testcase>
    <testcase classname="mergeSettings handles an empty array" name="mergeSettings handles an empty array" time="0">
    </testcase>
    <testcase classname="mergeSettings merges multiple values" name="mergeSettings merges multiple values" time="0">
    </testcase>
    <testcase classname="mergeSettings deeply merges extensions property" name="mergeSettings deeply merges extensions property" time="0">
    </testcase>
    <testcase classname="mergeSettings merges experimentalFeatures property" name="mergeSettings merges experimentalFeatures property" time="0.001">
    </testcase>
    <testcase classname="mergeSettings merges search.scopes property" name="mergeSettings merges search.scopes property" time="0">
    </testcase>
    <testcase classname="mergeSettings merges quicklinks property" name="mergeSettings merges quicklinks property" time="0">
    </testcase>
    <testcase classname="mergeSettings merges notices property" name="mergeSettings merges notices property" time="0">
    </testcase>
    <testcase classname="mergeSettings merges search.savedQueries property" name="mergeSettings merges search.savedQueries property" time="0">
    </testcase>
    <testcase classname="merge merges with empty" name="merge merges with empty" time="0.001">
    </testcase>
    <testcase classname="merge merges top-level objects deeply" name="merge merges top-level objects deeply" time="0">
    </testcase>
    <testcase classname="merge does not merge nested objects deeply" name="merge does not merge nested objects deeply" time="0">
    </testcase>
    <testcase classname="merge overwrites arrays" name="merge overwrites arrays" time="0">
    </testcase>
    <testcase classname="merge uses custom merge functions" name="merge uses custom merge functions" time="0">
    </testcase>
  </testsuite>
  <testsuite name="LicenseExpirationAlert" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:49" time="1.337" tests="2">
    <testcase classname="LicenseExpirationAlert expiring soon" name="LicenseExpirationAlert expiring soon" time="0.022">
    </testcase>
    <testcase classname="LicenseExpirationAlert expired" name="LicenseExpirationAlert expired" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="toUTM" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:50" time="0.542" tests="3">
    <testcase classname="toUTM adds all UTM markers" name="toUTM adds all UTM markers" time="0.001">
    </testcase>
    <testcase classname="toUTM encodes UTM values" name="toUTM encodes UTM values" time="0">
    </testcase>
    <testcase classname="toUTM correctly handles existing query parameters and fragments" name="toUTM correctly handles existing query parameters and fragments" time="0">
    </testcase>
  </testsuite>
  <testsuite name="fromObservableQuery" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:51" time="0.489" tests="7">
    <testcase classname="fromObservableQuery converts `ObservableQuery` to `rxjs` observable" name="fromObservableQuery converts `ObservableQuery` to `rxjs` observable" time="0.001">
    </testcase>
    <testcase classname="fromObservableQuery subscribes to `ObservableQuery` data" name="fromObservableQuery subscribes to `ObservableQuery` data" time="0.001">
    </testcase>
    <testcase classname="fromObservableQuery exposes `ObservableQuery` unsubscribe method" name="fromObservableQuery exposes `ObservableQuery` unsubscribe method" time="0.001">
    </testcase>
    <testcase classname="fromObservableQueryPromise converts `Promise&lt;ObservableQuery&gt;` to `rxjs` observable" name="fromObservableQueryPromise converts `Promise&lt;ObservableQuery&gt;` to `rxjs` observable" time="0">
    </testcase>
    <testcase classname="fromObservableQueryPromise subscribes to `ObservableQuery` data" name="fromObservableQueryPromise subscribes to `ObservableQuery` data" time="0">
    </testcase>
    <testcase classname="fromObservableQueryPromise exposes `ObservableQuery` unsubscribe method" name="fromObservableQueryPromise exposes `ObservableQuery` unsubscribe method" time="0">
    </testcase>
    <testcase classname="fromObservableQueryPromise unsubscribes on Promise rejection" name="fromObservableQueryPromise unsubscribes on Promise rejection" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="LineChart" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:51" time="0.659" tests="3">
    <testcase classname="LineChart should render empty series" name="LineChart should render empty series" time="0.025">
    </testcase>
    <testcase classname="LineChart should render series with data" name="LineChart should render series with data" time="0.085">
    </testcase>
    <testcase classname="LineChart should handle clicks on a point" name="LineChart should handle clicks on a point" time="0.081">
    </testcase>
  </testsuite>
  <testsuite name="isComplete" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:51" time="0.798" tests="10">
    <testcase classname="isComplete should interpret -&gt;0% as incomplete" name="isComplete should interpret -&gt;0% as incomplete" time="0.001">
    </testcase>
    <testcase classname="isComplete should interpret -&gt;50% as incomplete" name="isComplete should interpret -&gt;50% as incomplete" time="0.001">
    </testcase>
    <testcase classname="isComplete should interpret -&gt;100% as complete" name="isComplete should interpret -&gt;100% as complete" time="0">
    </testcase>
    <testcase classname="isComplete should interpret &lt;-0% as complete" name="isComplete should interpret &lt;-0% as complete" time="0">
    </testcase>
    <testcase classname="isComplete should interpret &lt;-50% as incomplete" name="isComplete should interpret &lt;-50% as incomplete" time="0">
    </testcase>
    <testcase classname="isComplete should interpret &lt;-100% as incomplete" name="isComplete should interpret &lt;-100% as incomplete" time="0.001">
    </testcase>
    <testcase classname="isInvalidForVersion should mark incomplete migrations as invalid after upgrade" name="isInvalidForVersion should mark incomplete migrations as invalid after upgrade" time="0">
    </testcase>
    <testcase classname="isInvalidForVersion should not mark incomplete migrations as invalid without deprecation" name="isInvalidForVersion should not mark incomplete migrations as invalid without deprecation" time="0">
    </testcase>
    <testcase classname="isInvalidForVersion should mark incomplete migrations as invalid after downgrade" name="isInvalidForVersion should mark incomplete migrations as invalid after downgrade" time="0">
    </testcase>
    <testcase classname="isInvalidForVersion should not mark incomplete migrations as invalid after downgrade if non-destructive" name="isInvalidForVersion should not mark incomplete migrations as invalid after downgrade if non-destructive" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="TabbedPanel" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:51" time="0.59" tests="1">
    <testcase classname="TabbedPanel preserves `location.pathname` and `location.hash` on tab change" name="TabbedPanel preserves `location.pathname` and `location.hash` on tab change" time="0.06">
    </testcase>
  </testsuite>
  <testsuite name="components/FileMatchContext" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:51" time="0.264" tests="9">
    <testcase classname="components/FileMatchContext mergeContext handles empty input" name="components/FileMatchContext mergeContext handles empty input" time="0.001">
    </testcase>
    <testcase classname="components/FileMatchContext mergeContext does not merge context when there is only one line" name="components/FileMatchContext mergeContext does not merge context when there is only one line" time="0">
    </testcase>
    <testcase classname="components/FileMatchContext mergeContext merges overlapping context" name="components/FileMatchContext mergeContext merges overlapping context" time="0">
    </testcase>
    <testcase classname="components/FileMatchContext mergeContext merges adjacent context" name="components/FileMatchContext mergeContext merges adjacent context" time="0.001">
    </testcase>
    <testcase classname="components/FileMatchContext mergeContext does not merge context when far enough apart" name="components/FileMatchContext mergeContext does not merge context when far enough apart" time="0">
    </testcase>
    <testcase classname="components/FileMatchContext calculateMatchGroups simple" name="components/FileMatchContext calculateMatchGroups simple" time="0.001">
    </testcase>
    <testcase classname="components/FileMatchContext calculateMatchGroups no context" name="components/FileMatchContext calculateMatchGroups no context" time="0">
    </testcase>
    <testcase classname="components/FileMatchContext calculateMatchGroups complex grouping" name="components/FileMatchContext calculateMatchGroups complex grouping" time="0">
    </testcase>
    <testcase classname="components/FileMatchContext calculateMatchGroups no matches" name="components/FileMatchContext calculateMatchGroups no matches" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="FormActionArea" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:51" time="0.718" tests="1">
    <testcase classname="FormActionArea Error is shown if code monitor has empty description" name="FormActionArea Error is shown if code monitor has empty description" time="0.044">
    </testcase>
  </testsuite>
  <testsuite name="DiffStat" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:51" time="0.555" tests="4">
    <testcase classname="DiffStat standard" name="DiffStat standard" time="0.016">
    </testcase>
    <testcase classname="DiffStat expandedCounts" name="DiffStat expandedCounts" time="0.005">
    </testcase>
    <testcase classname=" DiffStatSquares" name=" DiffStatSquares" time="0.002">
    </testcase>
    <testcase classname=" DiffStatStack" name=" DiffStatStack" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="FeedbackBadge" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:52" time="0.347" tests="5">
    <testcase classname="FeedbackBadge renders a FeedbackBadge" name="FeedbackBadge renders a FeedbackBadge" time="0.015">
    </testcase>
    <testcase classname="FeedbackBadge Renders status &apos;experimental&apos; correctly" name="FeedbackBadge Renders status &apos;experimental&apos; correctly" time="0.003">
    </testcase>
    <testcase classname="FeedbackBadge Renders status &apos;beta&apos; correctly" name="FeedbackBadge Renders status &apos;beta&apos; correctly" time="0.003">
    </testcase>
    <testcase classname="FeedbackBadge Renders status &apos;wip&apos; correctly" name="FeedbackBadge Renders status &apos;wip&apos; correctly" time="0.002">
    </testcase>
    <testcase classname="FeedbackBadge Renders status &apos;new&apos; correctly" name="FeedbackBadge Renders status &apos;new&apos; correctly" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Notices" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:52" time="0.548" tests="2">
    <testcase classname="Notices shows notices for location" name="Notices shows notices for location" time="0.029">
    </testcase>
    <testcase classname="Notices no notices" name="Notices no notices" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="KeyboardShortcutsHelp" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:52" time="0.712" tests="1">
    <testcase classname="KeyboardShortcutsHelp is triggered correctly" name="KeyboardShortcutsHelp is triggered correctly" time="0.111">
    </testcase>
  </testsuite>
  <testsuite name="StatusMessagesNavItem" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:52" time="0.655" tests="2">
    <testcase classname="StatusMessagesNavItem no messages" name="StatusMessagesNavItem no messages" time="0.026">
    </testcase>
    <testcase classname="StatusMessagesNavItem all messages" name="StatusMessagesNavItem all messages" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="case sensitive fuzzy search" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:52" time="0.599" tests="33">
    <testcase classname="case sensitive fuzzy search splitting a filename into parts works as expected allFuzzyParts-basic" name="case sensitive fuzzy search splitting a filename into parts works as expected allFuzzyParts-basic" time="0.002">
    </testcase>
    <testcase classname="case sensitive fuzzy search splitting a filename into parts works as expected allFuzzyParts-snake_case" name="case sensitive fuzzy search splitting a filename into parts works as expected allFuzzyParts-snake_case" time="0.001">
    </testcase>
    <testcase classname="case sensitive fuzzy search splitting a filename into parts works as expected allFuzzyParts-camelCase" name="case sensitive fuzzy search splitting a filename into parts works as expected allFuzzyParts-camelCase" time="0">
    </testcase>
    <testcase classname="case sensitive fuzzy search splitting a filename into parts works as expected allFuzzyParts-CamelCase" name="case sensitive fuzzy search splitting a filename into parts works as expected allFuzzyParts-CamelCase" time="0">
    </testcase>
    <testcase classname="case sensitive fuzzy search splitting a filename into parts works as expected allFuzzyParts-kebab-case" name="case sensitive fuzzy search splitting a filename into parts works as expected allFuzzyParts-kebab-case" time="0">
    </testcase>
    <testcase classname="case sensitive fuzzy search splitting a filename into parts works as expected allFuzzyParts-kebab-case" name="case sensitive fuzzy search splitting a filename into parts works as expected allFuzzyParts-kebab-case" time="0">
    </testcase>
    <testcase classname="case sensitive fuzzy search splitting a filename into parts works as expected allFuzzyParts-dotfile" name="case sensitive fuzzy search splitting a filename into parts works as expected allFuzzyParts-dotfile" time="0">
    </testcase>
    <testcase classname="case sensitive fuzzy search fuzzy matching selects the correct substrings fuzzyMatchesQuery-dotfile" name="case sensitive fuzzy search fuzzy matching selects the correct substrings fuzzyMatchesQuery-dotfile" time="0">
    </testcase>
    <testcase classname="case sensitive fuzzy search fuzzy matching selects the correct substrings fuzzyMatchesQuery-basic" name="case sensitive fuzzy search fuzzy matching selects the correct substrings fuzzyMatchesQuery-basic" time="0">
    </testcase>
    <testcase classname="case sensitive fuzzy search fuzzy matching selects the correct substrings fuzzyMatchesQuery-all-lowercase" name="case sensitive fuzzy search fuzzy matching selects the correct substrings fuzzyMatchesQuery-all-lowercase" time="0">
    </testcase>
    <testcase classname="case sensitive fuzzy search fuzzy matching selects the correct substrings fuzzyMatchesQuery-all-lowercase2" name="case sensitive fuzzy search fuzzy matching selects the correct substrings fuzzyMatchesQuery-all-lowercase2" time="0.001">
    </testcase>
    <testcase classname="case sensitive fuzzy search fuzzy matching selects the correct substrings fuzzyMatchesQuery-digits" name="case sensitive fuzzy search fuzzy matching selects the correct substrings fuzzyMatchesQuery-digits" time="0">
    </testcase>
    <testcase classname="case sensitive fuzzy search fuzzy matching selects the correct substrings fuzzyMatchesQuery-consume-delimeter-negative" name="case sensitive fuzzy search fuzzy matching selects the correct substrings fuzzyMatchesQuery-consume-delimeter-negative" time="0">
    </testcase>
    <testcase classname="case sensitive fuzzy search fuzzy matching selects the correct substrings fuzzyMatchesQuery-consume-delimeter-positive" name="case sensitive fuzzy search fuzzy matching selects the correct substrings fuzzyMatchesQuery-consume-delimeter-positive" time="0">
    </testcase>
    <testcase classname="case sensitive fuzzy search fuzzy matching selects the correct substrings fuzzyMatchesQuery-consume-delimeter-end-of-word" name="case sensitive fuzzy search fuzzy matching selects the correct substrings fuzzyMatchesQuery-consume-delimeter-end-of-word" time="0.001">
    </testcase>
    <testcase classname="case sensitive fuzzy search fuzzy matching selects the correct substrings fuzzyMatchesQuery-consume-delimeter-start-of-word" name="case sensitive fuzzy search fuzzy matching selects the correct substrings fuzzyMatchesQuery-consume-delimeter-start-of-word" time="0">
    </testcase>
    <testcase classname="case sensitive fuzzy search fuzzy searching against the bloom filter returns the correct results search-h/bus" name="case sensitive fuzzy search fuzzy searching against the bloom filter returns the correct results search-h/bus" time="0">
    </testcase>
    <testcase classname="case sensitive fuzzy search fuzzy searching against the bloom filter returns the correct results search-moon" name="case sensitive fuzzy search fuzzy searching against the bloom filter returns the correct results search-moon" time="0.001">
    </testcase>
    <testcase classname="case sensitive fuzzy search fuzzy searching against the bloom filter returns the correct results search-t/moon" name="case sensitive fuzzy search fuzzy searching against the bloom filter returns the correct results search-t/moon" time="0.001">
    </testcase>
    <testcase classname="case sensitive fuzzy search fuzzy searching against the bloom filter returns the correct results search-t/t/moon" name="case sensitive fuzzy search fuzzy searching against the bloom filter returns the correct results search-t/t/moon" time="0">
    </testcase>
    <testcase classname="case sensitive fuzzy search fuzzy searching against the bloom filter returns the correct results search-t.t.moon" name="case sensitive fuzzy search fuzzy searching against the bloom filter returns the correct results search-t.t.moon" time="0.001">
    </testcase>
    <testcase classname="case sensitive fuzzy search fuzzy searching against the bloom filter returns the correct results search-t t moon" name="case sensitive fuzzy search fuzzy searching against the bloom filter returns the correct results search-t t moon" time="0">
    </testcase>
    <testcase classname="case sensitive fuzzy search fuzzy searching against the bloom filter returns the correct results search-jpg" name="case sensitive fuzzy search fuzzy searching against the bloom filter returns the correct results search-jpg" time="0">
    </testcase>
    <testcase classname="case sensitive fuzzy search fuzzy searching against the bloom filter returns the correct results search-t/mo" name="case sensitive fuzzy search fuzzy searching against the bloom filter returns the correct results search-t/mo" time="0.001">
    </testcase>
    <testcase classname="case sensitive fuzzy search fuzzy searching against the bloom filter returns the correct results search-mo" name="case sensitive fuzzy search fuzzy searching against the bloom filter returns the correct results search-mo" time="0">
    </testcase>
    <testcase classname="case sensitive fuzzy search fuzzy searching against the bloom filter returns the correct results search-t" name="case sensitive fuzzy search fuzzy searching against the bloom filter returns the correct results search-t" time="0.002">
    </testcase>
    <testcase classname="case sensitive fuzzy search fuzzy searching against the bloom filter returns the correct results search-readme" name="case sensitive fuzzy search fuzzy searching against the bloom filter returns the correct results search-readme" time="0.001">
    </testcase>
    <testcase classname="case sensitive fuzzy search fuzzy searching against the bloom filter returns the correct results search-README" name="case sensitive fuzzy search fuzzy searching against the bloom filter returns the correct results search-README" time="0">
    </testcase>
    <testcase classname="case sensitive fuzzy search fuzzy searching against the bloom filter returns the correct results search-Readme" name="case sensitive fuzzy search fuzzy searching against the bloom filter returns the correct results search-Readme" time="0">
    </testcase>
    <testcase classname="case sensitive fuzzy search fuzzy searching against the bloom filter returns the correct results search-WSProvider" name="case sensitive fuzzy search fuzzy searching against the bloom filter returns the correct results search-WSProvider" time="0">
    </testcase>
    <testcase classname="case sensitive fuzzy search fuzzy searching against the bloom filter returns the correct results search-t2" name="case sensitive fuzzy search fuzzy searching against the bloom filter returns the correct results search-t2" time="0.001">
    </testcase>
    <testcase classname="case sensitive fuzzy search caveat: validate the fuzzy finder is quite strict with capitalization search-sitecon" name="case sensitive fuzzy search caveat: validate the fuzzy finder is quite strict with capitalization search-sitecon" time="0">
    </testcase>
    <testcase classname="case sensitive fuzzy search caveat: validate the fuzzy finder is quite strict with capitalization fuzzyMatchesQuery-sitecon" name="case sensitive fuzzy search caveat: validate the fuzzy finder is quite strict with capitalization fuzzyMatchesQuery-sitecon" time="0">
    </testcase>
  </testsuite>
  <testsuite name="notepad store" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:52" time="0.648" tests="6">
    <testcase classname="notepad store adding entries adds a new entry" name="notepad store adding entries adds a new entry" time="0.002">
    </testcase>
    <testcase classname="notepad store adding entries adds a new entry as file" name="notepad store adding entries adds a new entry as file" time="0.001">
    </testcase>
    <testcase classname="notepad store adding entries adds a new entry as line range" name="notepad store adding entries adds a new entry as line range" time="0">
    </testcase>
    <testcase classname="notepad store restores previous session entries" name="notepad store restores previous session entries" time="0.001">
    </testcase>
    <testcase classname="notepad store removes individual entries" name="notepad store removes individual entries" time="0.001">
    </testcase>
    <testcase classname="notepad store removes all entries" name="notepad store removes all entries" time="0">
    </testcase>
  </testsuite>
  <testsuite name="ErrorAlert" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:52" time="0.492" tests="3">
    <testcase classname="ErrorAlert should render an Error object as an alert" name="ErrorAlert should render an Error object as an alert" time="0.026">
    </testcase>
    <testcase classname="ErrorAlert should add a prefix if given" name="ErrorAlert should add a prefix if given" time="0.009">
    </testcase>
    <testcase classname="ErrorAlert should render a Go multierror nicely" name="ErrorAlert should render a Go multierror nicely" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="combineLatestOrDefault" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:53" time="0.429" tests="9">
    <testcase classname="combineLatestOrDefault with 0 source observables emits an empty array and completes" name="combineLatestOrDefault with 0 source observables emits an empty array and completes" time="0.001">
    </testcase>
    <testcase classname="combineLatestOrDefault with 1 source observable waits to emit/complete until the source observable emits/completes" name="combineLatestOrDefault with 1 source observable waits to emit/complete until the source observable emits/completes" time="0.001">
    </testcase>
    <testcase classname="combineLatestOrDefault of() handles 1 of() source observable" name="combineLatestOrDefault of() handles 1 of() source observable" time="0">
    </testcase>
    <testcase classname="combineLatestOrDefault of() handles 2 of() source observables" name="combineLatestOrDefault of() handles 2 of() source observables" time="0">
    </testcase>
    <testcase classname="combineLatestOrDefault handles source observables with staggered emissions" name="combineLatestOrDefault handles source observables with staggered emissions" time="0.001">
    </testcase>
    <testcase classname="combineLatestOrDefault handles source observables with staggered completions" name="combineLatestOrDefault handles source observables with staggered completions" time="0">
    </testcase>
    <testcase classname="combineLatestOrDefault handles source observables with concurrent emissions" name="combineLatestOrDefault handles source observables with concurrent emissions" time="0.001">
    </testcase>
    <testcase classname="combineLatestOrDefault handles observables with staggered and concurrent emissions" name="combineLatestOrDefault handles observables with staggered and concurrent emissions" time="0.007">
    </testcase>
    <testcase classname="combineLatestOrDefault fills in the default value if provided" name="combineLatestOrDefault fills in the default value if provided" time="0">
    </testcase>
  </testsuite>
  <testsuite name="parseGitURI" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:53" time="0.293" tests="2">
    <testcase classname="parseGitURI returns components" name="parseGitURI returns components" time="0">
    </testcase>
    <testcase classname="parseGitURI decodes repos with spaces" name="parseGitURI decodes repos with spaces" time="0">
    </testcase>
  </testsuite>
  <testsuite name="TextArea" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:53" time="0.715" tests="1">
    <testcase classname="TextArea should render correctly" name="TextArea should render correctly" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="getContributedActionItems" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:53" time="0.292" tests="1">
    <testcase classname="getContributedActionItems gets action items" name="getContributedActionItems gets action items" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="SearchResultsInfoBar" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:53" time="0.972" tests="5">
    <testcase classname="SearchResultsInfoBar code monitoring feature flag disabled" name="SearchResultsInfoBar code monitoring feature flag disabled" time="0.035">
    </testcase>
    <testcase classname="SearchResultsInfoBar code monitoring feature flag enabled, cannot create monitor from query" name="SearchResultsInfoBar code monitoring feature flag enabled, cannot create monitor from query" time="0.007">
    </testcase>
    <testcase classname="SearchResultsInfoBar code monitoring feature flag enabled, can create monitor from query" name="SearchResultsInfoBar code monitoring feature flag enabled, can create monitor from query" time="0.006">
    </testcase>
    <testcase classname="SearchResultsInfoBar code monitoring feature flag enabled, can create monitor from query, user not logged in" name="SearchResultsInfoBar code monitoring feature flag enabled, can create monitor from query, user not logged in" time="0.005">
    </testcase>
    <testcase classname="SearchResultsInfoBar unauthenticated user" name="SearchResultsInfoBar unauthenticated user" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="createLinkUrl" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:54" time="0.257" tests="3">
    <testcase classname="createLinkUrl generates full URL" name="createLinkUrl generates full URL" time="0.001">
    </testcase>
    <testcase classname="createLinkUrl generates relative URL" name="createLinkUrl generates relative URL" time="0">
    </testcase>
    <testcase classname="createLinkUrl supports variations search and hash" name="createLinkUrl supports variations search and hash" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="SignUpPage" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:53" time="0.762" tests="3">
    <testcase classname="SignUpPage renders sign up page (server)" name="SignUpPage renders sign up page (server)" time="0.036">
    </testcase>
    <testcase classname="SignUpPage renders sign up page (cloud)" name="SignUpPage renders sign up page (cloud)" time="0.026">
    </testcase>
    <testcase classname="SignUpPage renders redirect when user is authenticated" name="SignUpPage renders redirect when user is authenticated" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="LegacyResultContainer" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:53" time="0.74" tests="6">
    <testcase classname="LegacyResultContainer displays only one result when collapsed, which is the equivalent of subsetMatches" name="LegacyResultContainer displays only one result when collapsed, which is the equivalent of subsetMatches" time="0.027">
    </testcase>
    <testcase classname="LegacyResultContainer expands to display all results when the expand button is clicked" name="LegacyResultContainer expands to display all results when the expand button is clicked" time="0.015">
    </testcase>
    <testcase classname="LegacyResultContainer displays the expand label when collapsed" name="LegacyResultContainer displays the expand label when collapsed" time="0.01">
    </testcase>
    <testcase classname="LegacyResultContainer displays the collapse label when expanded" name="LegacyResultContainer displays the collapse label when expanded" time="0.018">
    </testcase>
    <testcase classname="LegacyResultContainer displays all results by default, when allExpanded is true" name="LegacyResultContainer displays all results by default, when allExpanded is true" time="0.006">
    </testcase>
    <testcase classname="LegacyResultContainer collapses to show no results when the collapse is clicked, when allExpanded is true" name="LegacyResultContainer collapses to show no results when the collapse is clicked, when allExpanded is true" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="ExternalAccountConnectionDetails" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:54" time="0.639" tests="2">
    <testcase classname="ExternalAccountConnectionDetails renders correctly when display name isn&apos;t set" name="ExternalAccountConnectionDetails renders correctly when display name isn&apos;t set" time="0.037">
    </testcase>
    <testcase classname="ExternalAccountConnectionDetails renders correctly when display name is set" name="ExternalAccountConnectionDetails renders correctly when display name is set" time="0.015">
    </testcase>
  </testsuite>
  <testsuite name="Expression" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:54" time="0.564" tests="32">
    <testcase classname="Expression a" name="Expression a" time="0.012">
    </testcase>
    <testcase classname="Expression a + b" name="Expression a + b" time="0.002">
    </testcase>
    <testcase classname="Expression a == b" name="Expression a == b" time="0.001">
    </testcase>
    <testcase classname="Expression a != b" name="Expression a != b" time="0.001">
    </testcase>
    <testcase classname="Expression a + b == c" name="Expression a + b == c" time="0.002">
    </testcase>
    <testcase classname="Expression x" name="Expression x" time="0.001">
    </testcase>
    <testcase classname="Expression d === false" name="Expression d === false" time="0.001">
    </testcase>
    <testcase classname="Expression d !== false" name="Expression d !== false" time="0.001">
    </testcase>
    <testcase classname="Expression !a" name="Expression !a" time="0.001">
    </testcase>
    <testcase classname="Expression !!a" name="Expression !!a" time="0.001">
    </testcase>
    <testcase classname="Expression a &amp;&amp; c" name="Expression a &amp;&amp; c" time="0.001">
    </testcase>
    <testcase classname="Expression a || b" name="Expression a || b" time="0">
    </testcase>
    <testcase classname="Expression (a + b) * 2" name="Expression (a + b) * 2" time="0">
    </testcase>
    <testcase classname="Expression x == &quot;y&quot;" name="Expression x == &quot;y&quot;" time="0">
    </testcase>
    <testcase classname="Expression json(o)" name="Expression json(o)" time="0.002">
    </testcase>
    <testcase classname="Expression x == &quot;y&quot; &amp;&amp; x == &quot;z&quot;" name="Expression x == &quot;y&quot; &amp;&amp; x == &quot;z&quot;" time="0.001">
    </testcase>
    <testcase classname="Expression x == &quot;y&quot; &amp;&amp; x != &quot;z&quot;" name="Expression x == &quot;y&quot; &amp;&amp; x != &quot;z&quot;" time="0">
    </testcase>
    <testcase classname="Expression `a`" name="Expression `a`" time="0.002">
    </testcase>
    <testcase classname="Expression `${x}`" name="Expression `${x}`" time="0.001">
    </testcase>
    <testcase classname="Expression `a${x}b`" name="Expression `a${x}b`" time="0">
    </testcase>
    <testcase classname="Expression `_${x}_${a}_${a+b}`" name="Expression `_${x}_${a}_${a+b}`" time="0.001">
    </testcase>
    <testcase classname="Expression `_${`-${x}-`}_`" name="Expression `_${`-${x}-`}_`" time="0">
    </testcase>
    <testcase classname="Expression a || isnotdefined" name="Expression a || isnotdefined" time="0.001">
    </testcase>
    <testcase classname="Expression get(array, 0)" name="Expression get(array, 0)" time="0">
    </testcase>
    <testcase classname="Expression get(array, 1)" name="Expression get(array, 1)" time="0.001">
    </testcase>
    <testcase classname="Expression get(context, &quot;c&quot;)" name="Expression get(context, &quot;c&quot;)" time="0.001">
    </testcase>
    <testcase classname="TemplateExpression a" name="TemplateExpression a" time="0.001">
    </testcase>
    <testcase classname="TemplateExpression ${x}" name="TemplateExpression ${x}" time="0">
    </testcase>
    <testcase classname="TemplateExpression a${x}b" name="TemplateExpression a${x}b" time="0.001">
    </testcase>
    <testcase classname="TemplateExpression _${x}_${a}_${a+b}" name="TemplateExpression _${x}_${a}_${a+b}" time="0">
    </testcase>
    <testcase classname="TemplateExpression _${`-${x}-`}_" name="TemplateExpression _${`-${x}-`}_" time="0.001">
    </testcase>
    <testcase classname="TemplateExpression _${sub(get(context, &apos;panel.url&apos;), &apos;panelID&apos;, &apos;implementations&apos;)}_" name="TemplateExpression _${sub(get(context, &apos;panel.url&apos;), &apos;panelID&apos;, &apos;implementations&apos;)}_" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="SignInPage" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:54" time="0.78" tests="12">
    <testcase classname="SignInPage renders sign in page (server)" name="SignInPage renders sign in page (server)" time="0.054">
    </testcase>
    <testcase classname="SignInPage renders sign in page (server) with email form expanded" name="SignInPage renders sign in page (server) with email form expanded" time="0.018">
    </testcase>
    <testcase classname="SignInPage renders sign in page (server) with request access link" name="SignInPage renders sign in page (server) with request access link" time="0.006">
    </testcase>
    <testcase classname="SignInPage renders sign in page (server) with only builtin authProvider" name="SignInPage renders sign in page (server) with only builtin authProvider" time="0.014">
    </testcase>
    <testcase classname="SignInPage renders &quot;Other login methods&quot; if primary provider count is low enough" name="SignInPage renders &quot;Other login methods&quot; if primary provider count is low enough" time="0.005">
    </testcase>
    <testcase classname="SignInPage renders non-primary auth provider if primary provider count is low enough and showMore is in the query" name="SignInPage renders non-primary auth provider if primary provider count is low enough and showMore is in the query" time="0.004">
    </testcase>
    <testcase classname="SignInPage with Sourcegraph operator auth provider renders page with 2 providers" name="SignInPage with Sourcegraph operator auth provider renders page with 2 providers" time="0.005">
    </testcase>
    <testcase classname="SignInPage with Sourcegraph operator auth provider renders page with 3 providers (url-param present)" name="SignInPage with Sourcegraph operator auth provider renders page with 3 providers (url-param present)" time="0.005">
    </testcase>
    <testcase classname="SignInPage with Gerrit auth provider does not render the Gerrit provider" name="SignInPage with Gerrit auth provider does not render the Gerrit provider" time="0.006">
    </testcase>
    <testcase classname="SignInPage renders sign in page (dotcom)" name="SignInPage renders sign in page (dotcom)" time="0.005">
    </testcase>
    <testcase classname="SignInPage renders redirect when user is authenticated" name="SignInPage renders redirect when user is authenticated" time="0.006">
    </testcase>
    <testcase classname="SignInPage renders different prefix on provider buttons" name="SignInPage renders different prefix on provider buttons" time="0.015">
    </testcase>
  </testsuite>
  <testsuite name="validateFilter()" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:54" time="0.402" tests="11">
    <testcase classname="validateFilter() Valid repo filter" name="validateFilter() Valid repo filter" time="0.001">
    </testcase>
    <testcase classname="validateFilter() Valid repo filter - quoted value" name="validateFilter() Valid repo filter - quoted value" time="0">
    </testcase>
    <testcase classname="validateFilter() Valid repo filter - alias" name="validateFilter() Valid repo filter - alias" time="0">
    </testcase>
    <testcase classname="validateFilter() Invalid filter type" name="validateFilter() Invalid filter type" time="0">
    </testcase>
    <testcase classname="validateFilter() Valid case filter" name="validateFilter() Valid case filter" time="0.001">
    </testcase>
    <testcase classname="validateFilter() Valid quoted value for case filter" name="validateFilter() Valid quoted value for case filter" time="0">
    </testcase>
    <testcase classname="validateFilter() Invalid literal value for case filter" name="validateFilter() Invalid literal value for case filter" time="0">
    </testcase>
    <testcase classname="validateFilter() Valid case-insensitive repo filter" name="validateFilter() Valid case-insensitive repo filter" time="0">
    </testcase>
    <testcase classname="escapeSpaces escapes spaces in value" name="escapeSpaces escapes spaces in value" time="0.001">
    </testcase>
    <testcase classname="escapeSpaces skips escaped values" name="escapeSpaces skips escaped values" time="0.001">
    </testcase>
    <testcase classname="escapeSpaces terminates with \" name="escapeSpaces terminates with \" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Select" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:54" time="0.847" tests="8">
    <testcase classname="Select native variant renders correctly" name="Select native variant renders correctly" time="0.035">
    </testcase>
    <testcase classname="Select native variant renders with message correctly" name="Select native variant renders with message correctly" time="0.004">
    </testcase>
    <testcase classname="Select native variant renders with correct styles when invalid" name="Select native variant renders with correct styles when invalid" time="0.002">
    </testcase>
    <testcase classname="Select native variant renders with correct styles when valid" name="Select native variant renders with correct styles when valid" time="0.002">
    </testcase>
    <testcase classname="Select custom variant renders correctly" name="Select custom variant renders correctly" time="0.002">
    </testcase>
    <testcase classname="Select custom variant renders with message correctly" name="Select custom variant renders with message correctly" time="0.002">
    </testcase>
    <testcase classname="Select custom variant renders with correct styles when invalid" name="Select custom variant renders with correct styles when invalid" time="0.002">
    </testcase>
    <testcase classname="Select custom variant renders with correct styles when valid" name="Select custom variant renders with correct styles when valid" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="document-highlights" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:55" time="0.525" tests="3">
    <testcase classname="document-highlights documentHighlightsToRangeSet converts document highlights to a range set" name="document-highlights documentHighlightsToRangeSet converts document highlights to a range set" time="0.002">
    </testcase>
    <testcase classname="document-highlights documentHighlightsToRangeSet ignores highlights outside the document" name="document-highlights documentHighlightsToRangeSet ignores highlights outside the document" time="0">
    </testcase>
    <testcase classname="document-highlights documentHighlightsToRangeSet sorts highlights by start position" name="document-highlights documentHighlightsToRangeSet sorts highlights by start position" time="0">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:55" time="0.544" tests="5">
    <testcase classname=" util.test.ts" name=" util.test.ts" time="0.001">
    </testcase>
    <testcase classname="referencesForPosition should correctly parse result" name="referencesForPosition should correctly parse result" time="0.002">
    </testcase>
    <testcase classname="referencesForPosition should deal with empty payload" name="referencesForPosition should deal with empty payload" time="0">
    </testcase>
    <testcase classname="referencesForPosition should paginate results" name="referencesForPosition should paginate results" time="0.001">
    </testcase>
    <testcase classname="referencesForPosition should not page results indefinitely" name="referencesForPosition should not page results indefinitely" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="StreamingProgressCount" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:55" time="0.987" tests="6">
    <testcase classname="StreamingProgressCount should render correctly for 0 items in progress" name="StreamingProgressCount should render correctly for 0 items in progress" time="0.014">
    </testcase>
    <testcase classname="StreamingProgressCount should render correctly for 0 repositories" name="StreamingProgressCount should render correctly for 0 repositories" time="0.006">
    </testcase>
    <testcase classname="StreamingProgressCount should render correctly for 1 item complete" name="StreamingProgressCount should render correctly for 1 item complete" time="0.004">
    </testcase>
    <testcase classname="StreamingProgressCount should render correctly for 123 items complete" name="StreamingProgressCount should render correctly for 123 items complete" time="0.003">
    </testcase>
    <testcase classname="StreamingProgressCount should render correctly for big numbers complete" name="StreamingProgressCount should render correctly for big numbers complete" time="0.003">
    </testcase>
    <testcase classname="StreamingProgressCount should render correctly for limithit" name="StreamingProgressCount should render correctly for limithit" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="serialize" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:55" time="0.381" tests="11">
    <testcase classname="serialize should serialize empty markdown text" name="serialize should serialize empty markdown text" time="0.01">
    </testcase>
    <testcase classname="serialize should serialize markdown text" name="serialize should serialize markdown text" time="0">
    </testcase>
    <testcase classname="serialize should serialize empty query" name="serialize should serialize empty query" time="0">
    </testcase>
    <testcase classname="serialize should serialize a query" name="serialize should serialize a query" time="0">
    </testcase>
    <testcase classname="serialize should serialize a file without range" name="serialize should serialize a file without range" time="0">
    </testcase>
    <testcase classname="serialize should serialize a file with range" name="serialize should serialize a file with range" time="0.001">
    </testcase>
    <testcase classname="serialize should serialize a symbol block" name="serialize should serialize a symbol block" time="0">
    </testcase>
    <testcase classname="serialize should serialize single line range" name="serialize should serialize single line range" time="0">
    </testcase>
    <testcase classname="serialize should serialize multi line range" name="serialize should serialize multi line range" time="0.001">
    </testcase>
    <testcase classname="serialize should parse single line range" name="serialize should parse single line range" time="0">
    </testcase>
    <testcase classname="serialize should parse multi line range" name="serialize should parse multi line range" time="0">
    </testcase>
  </testsuite>
  <testsuite name="trackViews()" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:55" time="0.961" tests="13">
    <testcase classname="trackViews() detects all views on the page" name="trackViews() detects all views on the page" time="0.159">
    </testcase>
    <testcase classname="trackViews() detects a view if it is the added element itself" name="trackViews() detects a view if it is the added element itself" time="0.013">
    </testcase>
    <testcase classname="trackViews() detects a view if it is the added element itself" name="trackViews() detects a view if it is the added element itself" time="0.039">
    </testcase>
    <testcase classname="trackViews() emits the element returned by the resolver" name="trackViews() emits the element returned by the resolver" time="0.009">
    </testcase>
    <testcase classname="trackViews() doesn&apos;t emit duplicate views" name="trackViews() doesn&apos;t emit duplicate views" time="0.017">
    </testcase>
    <testcase classname="trackViews() detects views added later" name="trackViews() detects views added later" time="0.02">
    </testcase>
    <testcase classname="trackViews() detects nested views added later" name="trackViews() detects nested views added later" time="0.02">
    </testcase>
    <testcase classname="trackViews() removes views" name="trackViews() removes views" time="0.014">
    </testcase>
    <testcase classname="trackViews() removes all nested views" name="trackViews() removes all nested views" time="0.019">
    </testcase>
    <testcase classname="trackViews() removes a view without depending on its resolver" name="trackViews() removes a view without depending on its resolver" time="0.057">
    </testcase>
    <testcase classname="delayUntilIntersecting() delays emitting views until they intersect and stops observing views as soon as they intersect" name="delayUntilIntersecting() delays emitting views until they intersect and stops observing views as soon as they intersect" time="0.013">
    </testcase>
    <testcase classname="delayUntilIntersecting() disconnects from the intersection observer on unsubscription" name="delayUntilIntersecting() disconnects from the intersection observer on unsubscription" time="0.002">
    </testcase>
    <testcase classname="delayUntilIntersecting() stops observing a view when its subscriptions are unsubscribed from" name="delayUntilIntersecting() stops observing a view when its subscriptions are unsubscribed from" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="DiffHunk" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:55" time="0.775" tests="1">
    <testcase classname="DiffHunk renders a unified diff view for the given diff hunk" name="DiffHunk renders a unified diff view for the given diff hunk" time="0.03">
    </testcase>
  </testsuite>
  <testsuite name="HoverOverlay" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:56" time="0.913" tests="18">
    <testcase classname="HoverOverlay actions and hover undefined" name="HoverOverlay actions and hover undefined" time="0.035">
    </testcase>
    <testcase classname="HoverOverlay actions loading" name="HoverOverlay actions loading" time="0.015">
    </testcase>
    <testcase classname="HoverOverlay hover loading" name="HoverOverlay hover loading" time="0.005">
    </testcase>
    <testcase classname="HoverOverlay actions and hover loading" name="HoverOverlay actions and hover loading" time="0.003">
    </testcase>
    <testcase classname="HoverOverlay actions empty" name="HoverOverlay actions empty" time="0.005">
    </testcase>
    <testcase classname="HoverOverlay hover empty" name="HoverOverlay hover empty" time="0.001">
    </testcase>
    <testcase classname="HoverOverlay actions and hover empty" name="HoverOverlay actions and hover empty" time="0.003">
    </testcase>
    <testcase classname="HoverOverlay actions present" name="HoverOverlay actions present" time="0.015">
    </testcase>
    <testcase classname="HoverOverlay hover present" name="HoverOverlay hover present" time="0.013">
    </testcase>
    <testcase classname="HoverOverlay multiple hovers present" name="HoverOverlay multiple hovers present" time="0.007">
    </testcase>
    <testcase classname="HoverOverlay actions and hover present" name="HoverOverlay actions and hover present" time="0.004">
    </testcase>
    <testcase classname="HoverOverlay actions present, hover loading" name="HoverOverlay actions present, hover loading" time="0.002">
    </testcase>
    <testcase classname="HoverOverlay hover present, actions loading" name="HoverOverlay hover present, actions loading" time="0.003">
    </testcase>
    <testcase classname="HoverOverlay actions error" name="HoverOverlay actions error" time="0.001">
    </testcase>
    <testcase classname="HoverOverlay hover error" name="HoverOverlay hover error" time="0.001">
    </testcase>
    <testcase classname="HoverOverlay actions and hover error" name="HoverOverlay actions and hover error" time="0.001">
    </testcase>
    <testcase classname="HoverOverlay actions error, hover present" name="HoverOverlay actions error, hover present" time="0.002">
    </testcase>
    <testcase classname="HoverOverlay hover error, actions present" name="HoverOverlay hover error, actions present" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;NavMenu /&gt;" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:56" time="0.92" tests="1">
    <testcase classname="&lt;NavMenu /&gt; Should render Menu Items Correctly" name="&lt;NavMenu /&gt; Should render Menu Items Correctly" time="0.087">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:56" time="0.674" tests="3">
    <testcase classname=" spec.test.ts" name=" spec.test.ts" time="0.001">
    </testcase>
    <testcase classname="pythonSpec filters definitions" name="pythonSpec filters definitions" time="0.001">
    </testcase>
    <testcase classname="relativeImportPath converts relative import to path" name="relativeImportPath converts relative import to path" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Markdown" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:57" time="0.535" tests="1">
    <testcase classname="Markdown renders" name="Markdown renders" time="0.02">
    </testcase>
  </testsuite>
  <testsuite name="RepoFileLink" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:56" time="0.831" tests="1">
    <testcase classname="RepoFileLink renders" name="RepoFileLink renders" time="0.024">
    </testcase>
  </testsuite>
  <testsuite name="autoIndexToAutoIndexSchema" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:57" time="0.519" tests="3">
    <testcase classname="autoIndexToAutoIndexSchema should build form data as expected" name="autoIndexToAutoIndexSchema should build form data as expected" time="0.003">
    </testcase>
    <testcase classname="autoIndexToAutoIndexSchema should build schema data as expected" name="autoIndexToAutoIndexSchema should build schema data as expected" time="0.001">
    </testcase>
    <testcase classname="autoIndexToAutoIndexSchema should build valid schema data" name="autoIndexToAutoIndexSchema should build valid schema data" time="0.108">
    </testcase>
  </testsuite>
  <testsuite name="observableFromAsyncIterator" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:57" time="0.387" tests="5">
    <testcase classname="observableFromAsyncIterator converts iterator into an observable" name="observableFromAsyncIterator converts iterator into an observable" time="0.001">
    </testcase>
    <testcase classname="observableFromAsyncIterator throws iterator error" name="observableFromAsyncIterator throws iterator error" time="0.001">
    </testcase>
    <testcase classname="concat returns all previous values" name="concat returns all previous values" time="0">
    </testcase>
    <testcase classname="concat ignores nulls" name="concat ignores nulls" time="0">
    </testcase>
    <testcase classname="asyncGeneratorFromPromise yields mapped values" name="asyncGeneratorFromPromise yields mapped values" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="codmirror completions" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:57" time="0.559" tests="17">
    <testcase classname="codmirror completions returns static and dynamic filter type completions when the token matches a known filter" name="codmirror completions returns static and dynamic filter type completions when the token matches a known filter" time="0.003">
    </testcase>
    <testcase classname="codmirror completions returns suggestions for an empty query" name="codmirror completions returns suggestions for an empty query" time="0.001">
    </testcase>
    <testcase classname="codmirror completions returns suggestions on whitespace" name="codmirror completions returns suggestions on whitespace" time="0">
    </testcase>
    <testcase classname="codmirror completions returns static filter type completions for case-insensitive query" name="codmirror completions returns static filter type completions for case-insensitive query" time="0">
    </testcase>
    <testcase classname="codmirror completions returns completions for filters with discrete values" name="codmirror completions returns completions for filters with discrete values" time="0.001">
    </testcase>
    <testcase classname="codmirror completions returns completions for filters with static suggestions" name="codmirror completions returns completions for filters with static suggestions" time="0">
    </testcase>
    <testcase classname="codmirror completions returns completions in order of discrete value definition, not alphabetically" name="codmirror completions returns completions in order of discrete value definition, not alphabetically" time="0.001">
    </testcase>
    <testcase classname="codmirror completions returns dynamically fetched completions" name="codmirror completions returns dynamically fetched completions" time="0">
    </testcase>
    <testcase classname="codmirror completions includes file path in insertText when completing filter value" name="codmirror completions includes file path in insertText when completing filter value" time="0.001">
    </testcase>
    <testcase classname="codmirror completions escapes spaces in repo value" name="codmirror completions escapes spaces in repo value" time="0.001">
    </testcase>
    <testcase classname="codmirror completions inserts repo: prefix for global suggestions" name="codmirror completions inserts repo: prefix for global suggestions" time="0.001">
    </testcase>
    <testcase classname="codmirror completions inserts file: prefix for global suggestions" name="codmirror completions inserts file: prefix for global suggestions" time="0">
    </testcase>
    <testcase classname="codmirror completions suggests repos for global queries" name="codmirror completions suggests repos for global queries" time="0">
    </testcase>
    <testcase classname="codmirror completions suggests symbols for repo-scoped queries" name="codmirror completions suggests symbols for repo-scoped queries" time="0.001">
    </testcase>
    <testcase classname="codmirror completions suggests symbols for repo+file scoped queries" name="codmirror completions suggests symbols for repo+file scoped queries" time="0">
    </testcase>
    <testcase classname="codmirror completions suggests symbols for type:symbol queries" name="codmirror completions suggests symbols for type:symbol queries" time="0.001">
    </testcase>
    <testcase classname="codmirror completions suggests files for type:path queries" name="codmirror completions suggests files for type:path queries" time="0">
    </testcase>
  </testsuite>
  <testsuite name="tracking/util" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:57" time="0.485" tests="11">
    <testcase classname="tracking/util redactSensitiveInfoFromAppURL() removes search queries from URLs" name="tracking/util redactSensitiveInfoFromAppURL() removes search queries from URLs" time="0.001">
    </testcase>
    <testcase classname="tracking/util redactSensitiveInfoFromAppURL() removes search queries from URLs but maintains marketing query params" name="tracking/util redactSensitiveInfoFromAppURL() removes search queries from URLs but maintains marketing query params" time="0">
    </testcase>
    <testcase classname="tracking/util redactSensitiveInfoFromAppURL() removes all query params from URLs but maintains marketing query params" name="tracking/util redactSensitiveInfoFromAppURL() removes all query params from URLs but maintains marketing query params" time="0.001">
    </testcase>
    <testcase classname="tracking/util redactSensitiveInfoFromAppURL() removes repo information from URLs" name="tracking/util redactSensitiveInfoFromAppURL() removes repo information from URLs" time="0">
    </testcase>
    <testcase classname="tracking/util redactSensitiveInfoFromAppURL() removes repo and file information from URLs" name="tracking/util redactSensitiveInfoFromAppURL() removes repo and file information from URLs" time="0.001">
    </testcase>
    <testcase classname="tracking/util redactSensitiveInfoFromAppURL() does not redact pathnames from marketing site URLs" name="tracking/util redactSensitiveInfoFromAppURL() does not redact pathnames from marketing site URLs" time="0">
    </testcase>
    <testcase classname="tracking/util redactSensitiveInfoFromAppURL() does not redact pathnames from all non-sensitive app URLs" name="tracking/util redactSensitiveInfoFromAppURL() does not redact pathnames from all non-sensitive app URLs" time="0">
    </testcase>
    <testcase classname="tracking/util getPreviousMonday() gets the current day if it is a Monday" name="tracking/util getPreviousMonday() gets the current day if it is a Monday" time="0.001">
    </testcase>
    <testcase classname="tracking/util getPreviousMonday() gets the previous Monday if it is not a Monday" name="tracking/util getPreviousMonday() gets the previous Monday if it is not a Monday" time="0">
    </testcase>
    <testcase classname="tracking/util getPreviousMonday() gets the previous Monday if it is in a different month" name="tracking/util getPreviousMonday() gets the previous Monday if it is in a different month" time="0">
    </testcase>
    <testcase classname="tracking/util getPreviousMonday() gets the previous Monday if it is in a different year" name="tracking/util getPreviousMonday() gets the previous Monday if it is in a different year" time="0">
    </testcase>
  </testsuite>
  <testsuite name="buildRepoBaseNameAndPath tests" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:57" time="0.476" tests="31">
    <testcase classname="buildRepoBaseNameAndPath tests builds the correct string for &quot;repositoryPathPattern&quot;: &quot;{nameWithOwner}&quot; config" name="buildRepoBaseNameAndPath tests builds the correct string for &quot;repositoryPathPattern&quot;: &quot;{nameWithOwner}&quot; config" time="0.002">
    </testcase>
    <testcase classname="buildRepoBaseNameAndPath tests builds the correct string for GitHub URLs" name="buildRepoBaseNameAndPath tests builds the correct string for GitHub URLs" time="0.001">
    </testcase>
    <testcase classname="buildRepoBaseNameAndPath tests builds the correct string for GitHub Enterprise URLs" name="buildRepoBaseNameAndPath tests builds the correct string for GitHub Enterprise URLs" time="0.001">
    </testcase>
    <testcase classname="buildRepoBaseNameAndPath tests builds the correct string for GitLab URLs" name="buildRepoBaseNameAndPath tests builds the correct string for GitLab URLs" time="0.001">
    </testcase>
    <testcase classname="buildRepoBaseNameAndPath tests builds the correct string for self-hosted GitLab URLs" name="buildRepoBaseNameAndPath tests builds the correct string for self-hosted GitLab URLs" time="0">
    </testcase>
    <testcase classname="buildRepoBaseNameAndPath tests builds the correct string for Bitbucket Cloud URLs" name="buildRepoBaseNameAndPath tests builds the correct string for Bitbucket Cloud URLs" time="0">
    </testcase>
    <testcase classname="buildRepoBaseNameAndPath tests builds the correct string for Perforce URLs" name="buildRepoBaseNameAndPath tests builds the correct string for Perforce URLs" time="0.001">
    </testcase>
    <testcase classname="buildRepoBaseNameAndPath tests builds the correct string for other URLs" name="buildRepoBaseNameAndPath tests builds the correct string for other URLs" time="0.001">
    </testcase>
    <testcase classname="buildEditorUrl tests happy paths builds the correct URL for some basic settings and VS Code" name="buildEditorUrl tests happy paths builds the correct URL for some basic settings and VS Code" time="0.003">
    </testcase>
    <testcase classname="buildEditorUrl tests happy paths builds the correct URL for some basic settings and IDEA" name="buildEditorUrl tests happy paths builds the correct URL for some basic settings and IDEA" time="0.001">
    </testcase>
    <testcase classname="buildEditorUrl tests happy paths builds the correct URL for some basic settings and Atom" name="buildEditorUrl tests happy paths builds the correct URL for some basic settings and Atom" time="0.001">
    </testcase>
    <testcase classname="buildEditorUrl tests happy paths builds the correct URL for some basic settings and Sublime" name="buildEditorUrl tests happy paths builds the correct URL for some basic settings and Sublime" time="0.001">
    </testcase>
    <testcase classname="buildEditorUrl tests happy paths builds the correct URL for some basic settings and PyCharm" name="buildEditorUrl tests happy paths builds the correct URL for some basic settings and PyCharm" time="0">
    </testcase>
    <testcase classname="buildEditorUrl tests happy paths rewrites default project path with OS specific one" name="buildEditorUrl tests happy paths rewrites default project path with OS specific one" time="0.001">
    </testcase>
    <testcase classname="buildEditorUrl tests happy paths performs replacements" name="buildEditorUrl tests happy paths performs replacements" time="0">
    </testcase>
    <testcase classname="buildEditorUrl tests happy paths forces JetBrains built-in server" name="buildEditorUrl tests happy paths forces JetBrains built-in server" time="0.002">
    </testcase>
    <testcase classname="buildEditorUrl tests happy paths handles UNC paths for VS Code" name="buildEditorUrl tests happy paths handles UNC paths for VS Code" time="0">
    </testcase>
    <testcase classname="buildEditorUrl tests happy paths handles Windows paths for VS Code" name="buildEditorUrl tests happy paths handles Windows paths for VS Code" time="0.001">
    </testcase>
    <testcase classname="buildEditorUrl tests happy paths handles no range" name="buildEditorUrl tests happy paths handles no range" time="0">
    </testcase>
    <testcase classname="buildEditorUrl tests happy paths can use insiders build of VS Code" name="buildEditorUrl tests happy paths can use insiders build of VS Code" time="0.001">
    </testcase>
    <testcase classname="buildEditorUrl tests happy paths can use SSH with VS Code" name="buildEditorUrl tests happy paths can use SSH with VS Code" time="0">
    </testcase>
    <testcase classname="buildEditorUrl tests happy paths can use SSH with VS Code Insiders" name="buildEditorUrl tests happy paths can use SSH with VS Code Insiders" time="0">
    </testcase>
    <testcase classname="buildEditorUrl tests happy paths can use a custom URL pattern" name="buildEditorUrl tests happy paths can use a custom URL pattern" time="0">
    </testcase>
    <testcase classname="buildEditorUrl tests unhappy paths recognizes missing editor settings" name="buildEditorUrl tests unhappy paths recognizes missing editor settings" time="0.015">
    </testcase>
    <testcase classname="buildEditorUrl tests unhappy paths recognizes missing project path" name="buildEditorUrl tests unhappy paths recognizes missing project path" time="0.008">
    </testcase>
    <testcase classname="buildEditorUrl tests unhappy paths recognizes non-absolute project path" name="buildEditorUrl tests unhappy paths recognizes non-absolute project path" time="0.001">
    </testcase>
    <testcase classname="buildEditorUrl tests unhappy paths recognizes missing editor ID" name="buildEditorUrl tests unhappy paths recognizes missing editor ID" time="0">
    </testcase>
    <testcase classname="buildEditorUrl tests unhappy paths recognizes missing customUrlPattern in case of custom editor setting" name="buildEditorUrl tests unhappy paths recognizes missing customUrlPattern in case of custom editor setting" time="0">
    </testcase>
    <testcase classname="buildEditorUrl tests unhappy paths recognizes missing editor settings" name="buildEditorUrl tests unhappy paths recognizes missing editor settings" time="0">
    </testcase>
    <testcase classname="buildEditorUrl tests unhappy paths recognizes missing SSH remote setting if vscode SSH mode is enabled" name="buildEditorUrl tests unhappy paths recognizes missing SSH remote setting if vscode SSH mode is enabled" time="0.001">
    </testcase>
    <testcase classname="buildEditorUrl tests unhappy paths builds the right &quot;Learn more&quot; URL" name="buildEditorUrl tests unhappy paths builds the right &quot;Learn more&quot; URL" time="0">
    </testcase>
  </testsuite>
  <testsuite name="docstrings" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:57" time="0.295" tests="12">
    <testcase classname="docstrings finds nothing when no comment style is specified" name="docstrings finds nothing when no comment style is specified" time="0.001">
    </testcase>
    <testcase classname="docstrings finds one-line python doc block" name="docstrings finds one-line python doc block" time="0">
    </testcase>
    <testcase classname="docstrings finds multi-line python doc block" name="docstrings finds multi-line python doc block" time="0.001">
    </testcase>
    <testcase classname="docstrings finds multi-line python doc block 2" name="docstrings finds multi-line python doc block 2" time="0">
    </testcase>
    <testcase classname="docstrings finds multi-line python doc block 3" name="docstrings finds multi-line python doc block 3" time="0">
    </testcase>
    <testcase classname="docstrings finds single-line C doc" name="docstrings finds single-line C doc" time="0">
    </testcase>
    <testcase classname="docstrings finds multiline single-line C doc" name="docstrings finds multiline single-line C doc" time="0">
    </testcase>
    <testcase classname="docstrings finds block C doc 1" name="docstrings finds block C doc 1" time="0.001">
    </testcase>
    <testcase classname="docstrings finds block C doc 2" name="docstrings finds block C doc 2" time="0">
    </testcase>
    <testcase classname="docstrings finds block C doc 3" name="docstrings finds block C doc 3" time="0">
    </testcase>
    <testcase classname="docstrings ignores unrelated code between the docstring and definition line" name="docstrings ignores unrelated code between the docstring and definition line" time="0">
    </testcase>
    <testcase classname="docstrings searches multiple comment styles" name="docstrings searches multiple comment styles" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="parseHash" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:57" time="0.369" tests="2">
    <testcase classname="parseHash given &quot;#lines-1&quot; as argument returns {&quot;line&quot;:1}" name="parseHash given &quot;#lines-1&quot; as argument returns {&quot;line&quot;:1}" time="0.007">
    </testcase>
    <testcase classname="parseHash given &quot;#lines-1:5&quot; as argument returns {&quot;line&quot;:1,&quot;endLine&quot;:5}" name="parseHash given &quot;#lines-1:5&quot; as argument returns {&quot;line&quot;:1,&quot;endLine&quot;:5}" time="0">
    </testcase>
  </testsuite>
  <testsuite name="PageHeader" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:58" time="0.451" tests="3">
    <testcase classname="PageHeader renders correctly" name="PageHeader renders correctly" time="0.016">
    </testcase>
    <testcase classname="PageHeader renders links correctly" name="PageHeader renders links correctly" time="0.006">
    </testcase>
    <testcase classname="PageHeader renders current page correctly" name="PageHeader renders current page correctly" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="Batch spec yaml utils" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:58" time="0.368" tests="19">
    <testcase classname="Batch spec yaml utils excludeRepo should succeed and exclude the repo from the spec if it can" name="Batch spec yaml utils excludeRepo should succeed and exclude the repo from the spec if it can" time="0.008">
    </testcase>
    <testcase classname="Batch spec yaml utils excludeRepo should fail and return an error if it cannot parse the spec" name="Batch spec yaml utils excludeRepo should fail and return an error if it cannot parse the spec" time="0.015">
    </testcase>
    <testcase classname="Batch spec yaml utils haveMatchingWorkspaces should return the correct comparison result for a pair of batch specs" name="Batch spec yaml utils haveMatchingWorkspaces should return the correct comparison result for a pair of batch specs" time="0.008">
    </testcase>
    <testcase classname="Batch spec yaml utils insertFieldIntoLibraryItem should correctly overwrite the name in a given spec" name="Batch spec yaml utils insertFieldIntoLibraryItem should correctly overwrite the name in a given spec" time="0.001">
    </testcase>
    <testcase classname="Batch spec yaml utils insertFieldIntoLibraryItem should correctly quote special names" name="Batch spec yaml utils insertFieldIntoLibraryItem should correctly quote special names" time="0">
    </testcase>
    <testcase classname="Batch spec yaml utils insertFieldIntoLibraryItem should not quote edge-cases that do not need quoting" name="Batch spec yaml utils insertFieldIntoLibraryItem should not quote edge-cases that do not need quoting" time="0.001">
    </testcase>
    <testcase classname="Batch spec yaml utils insertFieldIntoLibraryItem should correctly overwrite the `on` field in a given spec" name="Batch spec yaml utils insertFieldIntoLibraryItem should correctly overwrite the `on` field in a given spec" time="0">
    </testcase>
    <testcase classname="Batch spec yaml utils insertFieldIntoLibraryItem should not quote value when quotable flag is false" name="Batch spec yaml utils insertFieldIntoLibraryItem should not quote value when quotable flag is false" time="0.001">
    </testcase>
    <testcase classname="Batch spec yaml utils insertQueryIntoLibraryItem should add simple query" name="Batch spec yaml utils insertQueryIntoLibraryItem should add simple query" time="0">
    </testcase>
    <testcase classname="Batch spec yaml utils insertQueryIntoLibraryItem should add quoted query" name="Batch spec yaml utils insertQueryIntoLibraryItem should add quoted query" time="0.001">
    </testcase>
    <testcase classname="Batch spec yaml utils insertQueryIntoLibraryItem should add unbalanced quoted query" name="Batch spec yaml utils insertQueryIntoLibraryItem should add unbalanced quoted query" time="0">
    </testcase>
    <testcase classname="Batch spec yaml utils insertQueryIntoLibraryItem should add query with colon" name="Batch spec yaml utils insertQueryIntoLibraryItem should add query with colon" time="0.001">
    </testcase>
    <testcase classname="Batch spec yaml utils insertQueryIntoLibraryItem should add query with colon and quotes" name="Batch spec yaml utils insertQueryIntoLibraryItem should add query with colon and quotes" time="0">
    </testcase>
    <testcase classname="Batch spec yaml utils insertQueryIntoLibraryItem should add query with colon and unbalanced quotes" name="Batch spec yaml utils insertQueryIntoLibraryItem should add query with colon and unbalanced quotes" time="0">
    </testcase>
    <testcase classname="Batch spec yaml utils insertQueryIntoLibraryItem should add query with colon and double unbalanced quotes" name="Batch spec yaml utils insertQueryIntoLibraryItem should add query with colon and double unbalanced quotes" time="0.001">
    </testcase>
    <testcase classname="Batch spec yaml utils insertQueryIntoLibraryItem should comment out existing query when commentExistingQuery is true" name="Batch spec yaml utils insertQueryIntoLibraryItem should comment out existing query when commentExistingQuery is true" time="0">
    </testcase>
    <testcase classname="Batch spec yaml utils quoteYAMLString should add double quote a numeric value" name="Batch spec yaml utils quoteYAMLString should add double quote a numeric value" time="0">
    </testcase>
    <testcase classname="Batch spec yaml utils quoteYAMLString should not quote a string without special characters" name="Batch spec yaml utils quoteYAMLString should not quote a string without special characters" time="0">
    </testcase>
    <testcase classname="Batch spec yaml utils quoteYAMLString should double quote and escape special characters if contained in the value" name="Batch spec yaml utils quoteYAMLString should double quote and escape special characters if contained in the value" time="0">
    </testcase>
  </testsuite>
  <testsuite name="useSeriesToggle" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:58" time="0.509" tests="6">
    <testcase classname="useSeriesToggle renders all series when none are selected" name="useSeriesToggle renders all series when none are selected" time="0.02">
    </testcase>
    <testcase classname="useSeriesToggle renders only foo series when foo is selected" name="useSeriesToggle renders only foo series when foo is selected" time="0.021">
    </testcase>
    <testcase classname="useSeriesToggle renders only foo &amp; bar series when foo &amp; bar are selected" name="useSeriesToggle renders only foo &amp; bar series when foo &amp; bar are selected" time="0.033">
    </testcase>
    <testcase classname="useSeriesToggle renders &quot;foo is hovered&quot;" name="useSeriesToggle renders &quot;foo is hovered&quot;" time="0.008">
    </testcase>
    <testcase classname="useSeriesToggle renders &quot;bar is hovered&quot;" name="useSeriesToggle renders &quot;bar is hovered&quot;" time="0.022">
    </testcase>
    <testcase classname="useSeriesToggle deslects all series after user selects every series available" name="useSeriesToggle deslects all series after user selects every series available" time="0.039">
    </testcase>
  </testsuite>
  <testsuite name="util/dom" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:58" time="0.615" tests="12">
    <testcase classname="util/dom highlightNode highlights no characters" name="util/dom highlightNode highlights no characters" time="0.008">
    </testcase>
    <testcase classname="util/dom highlightNode handles invalid start position" name="util/dom highlightNode handles invalid start position" time="0.006">
    </testcase>
    <testcase classname="util/dom highlightNode handles invalid length" name="util/dom highlightNode handles invalid length" time="0.003">
    </testcase>
    <testcase classname="util/dom highlightNode highlights a single node" name="util/dom highlightNode highlights a single node" time="0.004">
    </testcase>
    <testcase classname="util/dom highlightNode highlights multiple nodes" name="util/dom highlightNode highlights multiple nodes" time="0.006">
    </testcase>
    <testcase classname="util/dom highlightNode does not repeatedly highlight multiple nodes" name="util/dom highlightNode does not repeatedly highlight multiple nodes" time="0.004">
    </testcase>
    <testcase classname="util/dom highlightNode highlights after offset" name="util/dom highlightNode highlights after offset" time="0.004">
    </testcase>
    <testcase classname="util/dom highlightNode highlights entire cell" name="util/dom highlightNode highlights entire cell" time="0.007">
    </testcase>
    <testcase classname="util/dom highlightNode highlights deeply nested spans correctly" name="util/dom highlightNode highlights deeply nested spans correctly" time="0.016">
    </testcase>
    <testcase classname="util/dom highlightNode highlights range containing unicode character correctly" name="util/dom highlightNode highlights range containing unicode character correctly" time="0.004">
    </testcase>
    <testcase classname="util/dom highlightNode highlights ranges before unicode character correctly" name="util/dom highlightNode highlights ranges before unicode character correctly" time="0.003">
    </testcase>
    <testcase classname="util/dom highlightNode highlights range after unicode character correctly" name="util/dom highlightNode highlights range after unicode character correctly" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="formatDurationLong" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:58" time="0.382" tests="1">
    <testcase classname="formatDurationLong should format durations as per the spec" name="formatDurationLong should format durations as per the spec" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="findSearchToken" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:58" time="0.351" tests="12">
    <testcase classname="findSearchToken custom identCharPattern" name="findSearchToken custom identCharPattern" time="0.001">
    </testcase>
    <testcase classname="findSearchToken identifies comments after the token" name="findSearchToken identifies comments after the token" time="0">
    </testcase>
    <testcase classname="findSearchToken identifies comments before the token" name="findSearchToken identifies comments before the token" time="0">
    </testcase>
    <testcase classname="findSearchToken special-cases comment content that looks like a function call" name="findSearchToken special-cases comment content that looks like a function call" time="0">
    </testcase>
    <testcase classname="findSearchToken special-cases comment content that looks like a field projection" name="findSearchToken special-cases comment content that looks like a field projection" time="0">
    </testcase>
    <testcase classname="findSearchToken identifies disjoint block comments after the token" name="findSearchToken identifies disjoint block comments after the token" time="0">
    </testcase>
    <testcase classname="findSearchToken identifies disjoint block comments before the token" name="findSearchToken identifies disjoint block comments before the token" time="0.001">
    </testcase>
    <testcase classname="findSearchToken identifies block comments on same line" name="findSearchToken identifies block comments on same line" time="0">
    </testcase>
    <testcase classname="findSearchToken identifies disjoint block comments over multiple lines" name="findSearchToken identifies disjoint block comments over multiple lines" time="0">
    </testcase>
    <testcase classname="findSearchToken identifies block comments over multiple lines" name="findSearchToken identifies block comments over multiple lines" time="0.001">
    </testcase>
    <testcase classname="findSearchToken identifies strings around the token" name="findSearchToken identifies strings around the token" time="0">
    </testcase>
    <testcase classname="findSearchToken identifies strings contents" name="findSearchToken identifies strings contents" time="0">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:58" time="0.352" tests="2">
    <testcase classname=" spec.test.ts" name=" spec.test.ts" time="0">
    </testcase>
    <testcase classname="cppSpec filters definitions" name="cppSpec filters definitions" time="0">
    </testcase>
  </testsuite>
  <testsuite name="ExtensionHost: Configuration" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:58" time="0.66" tests="5">
    <testcase classname="ExtensionHost: Configuration get() returns the latest settings" name="ExtensionHost: Configuration get() returns the latest settings" time="0.003">
    </testcase>
    <testcase classname="ExtensionHost: Configuration changes emits immediately on subscription" name="ExtensionHost: Configuration changes emits immediately on subscription" time="0">
    </testcase>
    <testcase classname="ExtensionHost: Configuration changes emits when settings are updated" name="ExtensionHost: Configuration changes emits when settings are updated" time="0.001">
    </testcase>
    <testcase classname="ExtensionHost: Configuration changes config objects freezes in time??!?!" name="ExtensionHost: Configuration changes config objects freezes in time??!?!" time="0">
    </testcase>
    <testcase classname="ExtensionHost: Configuration talks to the client api talks to the client when an update is requested" name="ExtensionHost: Configuration talks to the client api talks to the client when an update is requested" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Toggle" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:58" time="0.538" tests="5">
    <testcase classname="Toggle value is false" name="Toggle value is false" time="0.013">
    </testcase>
    <testcase classname="Toggle value is true" name="Toggle value is true" time="0.003">
    </testcase>
    <testcase classname="Toggle disabled" name="Toggle disabled" time="0.011">
    </testcase>
    <testcase classname="Toggle className" name="Toggle className" time="0.001">
    </testcase>
    <testcase classname="Toggle aria" name="Toggle aria" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Text" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:59" time="0.472" tests="2">
    <testcase classname="Text should render correctly" name="Text should render correctly" time="0.018">
    </testcase>
    <testcase classname="Text should render correctly with `as`" name="Text should render correctly with `as`" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:59" time="0.529" tests="13">
    <testcase classname=" util.test.ts" name=" util.test.ts" time="0">
    </testcase>
    <testcase classname="findOverlappingWindows finds overlapping ranges" name="findOverlappingWindows finds overlapping ranges" time="0">
    </testcase>
    <testcase classname="findOverlappingWindows creates new window and inserts it correctly" name="findOverlappingWindows creates new window and inserts it correctly" time="0.003">
    </testcase>
    <testcase classname="findOverlappingWindows de-caches rejected promises" name="findOverlappingWindows de-caches rejected promises" time="0.001">
    </testcase>
    <testcase classname="calculateRangeWindow centers window around line" name="calculateRangeWindow centers window around line" time="0">
    </testcase>
    <testcase classname="calculateRangeWindow respects lower and upper bounds" name="calculateRangeWindow respects lower and upper bounds" time="0">
    </testcase>
    <testcase classname="calculateRangeWindow gives upper slack to start line" name="calculateRangeWindow gives upper slack to start line" time="0">
    </testcase>
    <testcase classname="calculateRangeWindow gives lower slack to end line" name="calculateRangeWindow gives lower slack to end line" time="0">
    </testcase>
    <testcase classname="findOverlappingCodeIntelligenceRange checks singe line overlap" name="findOverlappingCodeIntelligenceRange checks singe line overlap" time="0">
    </testcase>
    <testcase classname="findOverlappingCodeIntelligenceRange checks multi line overlap" name="findOverlappingCodeIntelligenceRange checks multi line overlap" time="0">
    </testcase>
    <testcase classname="findOverlappingCodeIntelligenceRange returns the inner-most range" name="findOverlappingCodeIntelligenceRange returns the inner-most range" time="0">
    </testcase>
    <testcase classname="rangesInRangeWindow should correctly parse result" name="rangesInRangeWindow should correctly parse result" time="0.001">
    </testcase>
    <testcase classname="rangesInRangeWindow should deal with empty payload" name="rangesInRangeWindow should deal with empty payload" time="0">
    </testcase>
  </testsuite>
  <testsuite name="utils/string" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:59" time="0.592" tests="1">
    <testcase classname="utils/string dedupeWhitespace() deduplicates whitespace" name="utils/string dedupeWhitespace() deduplicates whitespace" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="getDocumentHighlights from ExtensionHost API, it aims to have more e2e feel" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:59" time="0.717" tests="1">
    <testcase classname="getDocumentHighlights from ExtensionHost API, it aims to have more e2e feel restarts document highlights call if a provider was added or removed" name="getDocumentHighlights from ExtensionHost API, it aims to have more e2e feel restarts document highlights call if a provider was added or removed" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="RouterLink" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:59" time="0.672" tests="2">
    <testcase classname="RouterLink renders router link correctly" name="RouterLink renders router link correctly" time="0.018">
    </testcase>
    <testcase classname="RouterLink renders absolute URL correctly " name="RouterLink renders absolute URL correctly " time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="FeedbackText" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:00" time="0.698" tests="3">
    <testcase classname="FeedbackText render a FeedbackText" name="FeedbackText render a FeedbackText" time="0.02">
    </testcase>
    <testcase classname="FeedbackText render feedbackText with header" name="FeedbackText render feedbackText with header" time="0.003">
    </testcase>
    <testcase classname="FeedbackText render feedbackText with footer" name="FeedbackText render feedbackText with footer" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="tryCatchPromise" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:00" time="0.637" tests="14">
    <testcase classname="tryCatchPromise returns a resolved promise with the synchronous result" name="tryCatchPromise returns a resolved promise with the synchronous result" time="0">
    </testcase>
    <testcase classname="tryCatchPromise returns a resolved promise with the asynchronous result" name="tryCatchPromise returns a resolved promise with the asynchronous result" time="0">
    </testcase>
    <testcase classname="tryCatchPromise returns a rejected promise with the synchronous exception" name="tryCatchPromise returns a rejected promise with the synchronous exception" time="0">
    </testcase>
    <testcase classname="tryCatchPromise returns a rejected promise with the asynchronous error" name="tryCatchPromise returns a rejected promise with the asynchronous error" time="0.001">
    </testcase>
    <testcase classname="isPromise returns true for promises" name="isPromise returns true for promises" time="0">
    </testcase>
    <testcase classname="isPromise returns false for non-promises" name="isPromise returns false for non-promises" time="0">
    </testcase>
    <testcase classname="isSubscribable returns true for subscribables" name="isSubscribable returns true for subscribables" time="0">
    </testcase>
    <testcase classname="isSubscribable returns false for non-subscribables" name="isSubscribable returns false for non-subscribables" time="0.001">
    </testcase>
    <testcase classname="isAsyncIterable returns true for AsyncIterables" name="isAsyncIterable returns true for AsyncIterables" time="0">
    </testcase>
    <testcase classname="isAsyncIterable returns false for non-AsyncIterables" name="isAsyncIterable returns false for non-AsyncIterables" time="0">
    </testcase>
    <testcase classname="observableFromAsyncIterable result is a valid subscribable" name="observableFromAsyncIterable result is a valid subscribable" time="0">
    </testcase>
    <testcase classname="observableFromAsyncIterable returned observable emits yielded values and return value" name="observableFromAsyncIterable returned observable emits yielded values and return value" time="0.001">
    </testcase>
    <testcase classname="observableFromAsyncIterable stops emitting and throws AbortError on unsubscription" name="observableFromAsyncIterable stops emitting and throws AbortError on unsubscription" time="0.001">
    </testcase>
    <testcase classname="observableFromAsyncIterable throws iterator error" name="observableFromAsyncIterable throws iterator error" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="getWordAtText" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:22:59" time="1.272" tests="1">
    <testcase classname="getWordAtText finds words" name="getWordAtText finds words" time="0.02">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:00" time="0.682" tests="5">
    <testcase classname=" util.test.ts" name=" util.test.ts" time="0">
    </testcase>
    <testcase classname="definitionAndHoverForPosition should correctly parse result" name="definitionAndHoverForPosition should correctly parse result" time="0.002">
    </testcase>
    <testcase classname="definitionAndHoverForPosition should deal with empty definition payload" name="definitionAndHoverForPosition should deal with empty definition payload" time="0.001">
    </testcase>
    <testcase classname="definitionAndHoverForPosition should deal with empty hover payload" name="definitionAndHoverForPosition should deal with empty hover payload" time="0.001">
    </testcase>
    <testcase classname="definitionAndHoverForPosition should deal with empty payload" name="definitionAndHoverForPosition should deal with empty payload" time="0">
    </testcase>
  </testsuite>
  <testsuite name="callProviders()" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:01" time="0.597" tests="15">
    <testcase classname="callProviders() 1 provider returns empty non loading result with no providers" name="callProviders() 1 provider returns empty non loading result with no providers" time="0.003">
    </testcase>
    <testcase classname="callProviders() 1 provider returns a result from a provider synchronously with raw values" name="callProviders() 1 provider returns a result from a provider synchronously with raw values" time="0.003">
    </testcase>
    <testcase classname="callProviders() 1 provider returns a result from a provider with observables" name="callProviders() 1 provider returns a result from a provider with observables" time="0.001">
    </testcase>
    <testcase classname="callProviders() 2 providers returns a synchronous result from both providers, but doesn&apos;t wait for the second to yield" name="callProviders() 2 providers returns a synchronous result from both providers, but doesn&apos;t wait for the second to yield" time="0.001">
    </testcase>
    <testcase classname="callProviders() 2 providers returns LOADING result first if providers return observables" name="callProviders() 2 providers returns LOADING result first if providers return observables" time="0.001">
    </testcase>
    <testcase classname="callProviders() 2 providers replaces errors from a provider with nulls" name="callProviders() 2 providers replaces errors from a provider with nulls" time="0.001">
    </testcase>
    <testcase classname="callProviders() filtering it can filter out providers" name="callProviders() filtering it can filter out providers" time="0.001">
    </testcase>
    <testcase classname="callProviders() providers change over time requeries providers if they changed" name="callProviders() providers change over time requeries providers if they changed" time="0.002">
    </testcase>
    <testcase classname="mergeProviderResults() document highlight results merges non DocumentHighlight values into empty arrays" name="mergeProviderResults() document highlight results merges non DocumentHighlight values into empty arrays" time="0.001">
    </testcase>
    <testcase classname="mergeProviderResults() document highlight results merges a DocumentHighlight into result" name="mergeProviderResults() document highlight results merges a DocumentHighlight into result" time="0">
    </testcase>
    <testcase classname="mergeProviderResults() document highlight results omits non DocumentHighlight values from document highlight result" name="mergeProviderResults() document highlight results omits non DocumentHighlight values from document highlight result" time="0">
    </testcase>
    <testcase classname="mergeProviderResults() hover results merges non Hover values into nulls" name="mergeProviderResults() hover results merges non Hover values into nulls" time="0.001">
    </testcase>
    <testcase classname="mergeProviderResults() hover results merges a Hover into result" name="mergeProviderResults() hover results merges a Hover into result" time="0.001">
    </testcase>
    <testcase classname="mergeProviderResults() hover results omits non Hover values from hovers result" name="mergeProviderResults() hover results omits non Hover values from hovers result" time="0">
    </testcase>
    <testcase classname="mergeProviderResults() hover results merges Hovers with ranges" name="mergeProviderResults() hover results merges Hovers with ranges" time="0">
    </testcase>
  </testsuite>
  <testsuite name="nodeToLocation" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:00" time="1.168" tests="2">
    <testcase classname="nodeToLocation converts to a location" name="nodeToLocation converts to a location" time="0">
    </testcase>
    <testcase classname="nodeToLocation falls back to current document" name="nodeToLocation falls back to current document" time="0">
    </testcase>
  </testsuite>
  <testsuite name="groupLocations" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:01" time="0.567" tests="6">
    <testcase classname="groupLocations groups 1 levels" name="groupLocations groups 1 levels" time="0.001">
    </testcase>
    <testcase classname="groupLocations groups 2 levels" name="groupLocations groups 2 levels" time="0">
    </testcase>
    <testcase classname="groupLocations supports initial selectedGroups" name="groupLocations supports initial selectedGroups" time="0.002">
    </testcase>
    <testcase classname="groupLocations handles selectedGroups element that does not exist" name="groupLocations handles selectedGroups element that does not exist" time="0.001">
    </testcase>
    <testcase classname="groupLocations resolves selectedGroups undefined element" name="groupLocations resolves selectedGroups undefined element" time="0.001">
    </testcase>
    <testcase classname="groupLocations dedupes locations" name="groupLocations dedupes locations" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="Alert" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:01" time="0.506" tests="11">
    <testcase classname="Alert renders a simple Alert correctly" name="Alert renders a simple Alert correctly" time="0.014">
    </testcase>
    <testcase classname="Alert renders variant &apos;primary&apos; correctly" name="Alert renders variant &apos;primary&apos; correctly" time="0.003">
    </testcase>
    <testcase classname="Alert renders variant &apos;secondary&apos; correctly" name="Alert renders variant &apos;secondary&apos; correctly" time="0.002">
    </testcase>
    <testcase classname="Alert renders variant &apos;success&apos; correctly" name="Alert renders variant &apos;success&apos; correctly" time="0.002">
    </testcase>
    <testcase classname="Alert renders variant &apos;danger&apos; correctly" name="Alert renders variant &apos;danger&apos; correctly" time="0.002">
    </testcase>
    <testcase classname="Alert renders variant &apos;warning&apos; correctly" name="Alert renders variant &apos;warning&apos; correctly" time="0.001">
    </testcase>
    <testcase classname="Alert renders variant &apos;waiting&apos; correctly" name="Alert renders variant &apos;waiting&apos; correctly" time="0.001">
    </testcase>
    <testcase classname="Alert renders variant &apos;info&apos; correctly" name="Alert renders variant &apos;info&apos; correctly" time="0.002">
    </testcase>
    <testcase classname="Alert renders variant &apos;merged&apos; correctly" name="Alert renders variant &apos;merged&apos; correctly" time="0.002">
    </testcase>
    <testcase classname="Alert renders variant &apos;note&apos; correctly" name="Alert renders variant &apos;note&apos; correctly" time="0.003">
    </testcase>
    <testcase classname="Alert renders Alert content correctly" name="Alert renders Alert content correctly" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="renderMarkdown" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:01" time="0.555" tests="12">
    <testcase classname="renderMarkdown renders code blocks, with syntax highlighting" name="renderMarkdown renders code blocks, with syntax highlighting" time="0.041">
    </testcase>
    <testcase classname="renderMarkdown renders to plain text with plainText: true" name="renderMarkdown renders to plain text with plainText: true" time="0.002">
    </testcase>
    <testcase classname="renderMarkdown sanitizes script tags" name="renderMarkdown sanitizes script tags" time="0.001">
    </testcase>
    <testcase classname="renderMarkdown sanitizes event handlers" name="renderMarkdown sanitizes event handlers" time="0.001">
    </testcase>
    <testcase classname="renderMarkdown does not allow arbitrary &lt;object&gt; tags" name="renderMarkdown does not allow arbitrary &lt;object&gt; tags" time="0.001">
    </testcase>
    <testcase classname="renderMarkdown drops SVG &lt;object&gt; tags" name="renderMarkdown drops SVG &lt;object&gt; tags" time="0">
    </testcase>
    <testcase classname="renderMarkdown forbids &lt;svg&gt; tags" name="renderMarkdown forbids &lt;svg&gt; tags" time="0.002">
    </testcase>
    <testcase classname="renderMarkdown forbids rel and style attributes" name="renderMarkdown forbids rel and style attributes" time="0.002">
    </testcase>
    <testcase classname="renderMarkdown forbids target attribute on links" name="renderMarkdown forbids target attribute on links" time="0">
    </testcase>
    <testcase classname="renderMarkdown adds target=&quot;_blank&quot; attribute on links with addTargetBlankToAllLinks: true" name="renderMarkdown adds target=&quot;_blank&quot; attribute on links with addTargetBlankToAllLinks: true" time="0.001">
    </testcase>
    <testcase classname="renderMarkdown forbids data URI links" name="renderMarkdown forbids data URI links" time="0.011">
    </testcase>
    <testcase classname="escapeMarkdown handles complicated document" name="escapeMarkdown handles complicated document" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="AnchorLink" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:01" time="0.529" tests="1">
    <testcase classname="AnchorLink renders anchor link correctly" name="AnchorLink renders anchor link correctly" time="0.017">
    </testcase>
  </testsuite>
  <testsuite name="search requests" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:01" time="0.482" tests="2">
    <testcase classname="search requests makes correct search requests for goto definition" name="search requests makes correct search requests for goto definition" time="0.002">
    </testcase>
    <testcase classname="search requests makes correct search requests for references" name="search requests makes correct search requests for references" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="getSeriesData" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:02" time="0.41" tests="2">
    <testcase classname="getSeriesData should generate series with standard (non-stacked) datum list for each series" name="getSeriesData should generate series with standard (non-stacked) datum list for each series" time="0.002">
    </testcase>
    <testcase classname="getSeriesData should generate series with stacked datum list for each stacked series" name="getSeriesData should generate series with stacked datum list for each stacked series" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="getByteUnitLabel" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:02" time="0.355" tests="2">
    <testcase classname="getByteUnitLabel should determine the correct label from the number of bytes" name="getByteUnitLabel should determine the correct label from the number of bytes" time="0.002">
    </testcase>
    <testcase classname="getByteUnitValue should change unit of measurement based on amount" name="getByteUnitValue should change unit of measurement based on amount" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="toTreeURL" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:02" time="0.596" tests="16">
    <testcase classname="toTreeURL formats url" name="toTreeURL formats url" time="0.001">
    </testcase>
    <testcase classname="parseBrowserRepoURL should parse github repo" name="parseBrowserRepoURL should parse github repo" time="0.002">
    </testcase>
    <testcase classname="parseBrowserRepoURL should parse repo" name="parseBrowserRepoURL should parse repo" time="0.001">
    </testcase>
    <testcase classname="parseBrowserRepoURL should parse github repo with revision" name="parseBrowserRepoURL should parse github repo with revision" time="0">
    </testcase>
    <testcase classname="parseBrowserRepoURL should parse repo with revision" name="parseBrowserRepoURL should parse repo with revision" time="0.001">
    </testcase>
    <testcase classname="parseBrowserRepoURL should parse github repo with multi-path-part revision" name="parseBrowserRepoURL should parse github repo with multi-path-part revision" time="0">
    </testcase>
    <testcase classname="parseBrowserRepoURL should parse repo with multi-path-part revision" name="parseBrowserRepoURL should parse repo with multi-path-part revision" time="0.001">
    </testcase>
    <testcase classname="parseBrowserRepoURL should parse github repo with commitID" name="parseBrowserRepoURL should parse github repo with commitID" time="0.001">
    </testcase>
    <testcase classname="parseBrowserRepoURL should parse repo with commitID" name="parseBrowserRepoURL should parse repo with commitID" time="0.001">
    </testcase>
    <testcase classname="parseBrowserRepoURL should parse github repo with revision and file" name="parseBrowserRepoURL should parse github repo with revision and file" time="0.002">
    </testcase>
    <testcase classname="parseBrowserRepoURL should parse repo with revision and file" name="parseBrowserRepoURL should parse repo with revision and file" time="0">
    </testcase>
    <testcase classname="parseBrowserRepoURL should parse github repo with revision and file and line" name="parseBrowserRepoURL should parse github repo with revision and file and line" time="0.001">
    </testcase>
    <testcase classname="parseBrowserRepoURL should parse repo with revision and file and line" name="parseBrowserRepoURL should parse repo with revision and file and line" time="0">
    </testcase>
    <testcase classname="parseBrowserRepoURL should parse github repo with revision and file and position" name="parseBrowserRepoURL should parse github repo with revision and file and position" time="0">
    </testcase>
    <testcase classname="parseBrowserRepoURL should parse repo with revision and file and position" name="parseBrowserRepoURL should parse repo with revision and file and position" time="0">
    </testcase>
    <testcase classname="parseBrowserRepoURL should parse repo with revisions containing @" name="parseBrowserRepoURL should parse repo with revisions containing @" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Extension activation" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:02" time="0.681" tests="1">
    <testcase classname="Extension activation activateExtensions() logs events for activated extensions" name="Extension activation activateExtensions() logs events for activated extensions" time="0.08">
    </testcase>
  </testsuite>
  <testsuite name="createDefinitionProvider" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:02" time="1.152" tests="14">
    <testcase classname="createDefinitionProvider uses precise definitions as source of truth" name="createDefinitionProvider uses precise definitions as source of truth" time="0.003">
    </testcase>
    <testcase classname="createDefinitionProvider falls back to search when precise results are not found" name="createDefinitionProvider falls back to search when precise results are not found" time="0.001">
    </testcase>
    <testcase classname="createReferencesProvider uses precise definitions as source of truth" name="createReferencesProvider uses precise definitions as source of truth" time="0.002">
    </testcase>
    <testcase classname="createReferencesProvider supplements precise results with search results" name="createReferencesProvider supplements precise results with search results" time="0.001">
    </testcase>
    <testcase classname="createReferencesProvider supplements precise results with non-overlapping search results" name="createReferencesProvider supplements precise results with non-overlapping search results" time="0">
    </testcase>
    <testcase classname="createReferencesProvider supplements precise results with search results (disabled)" name="createReferencesProvider supplements precise results with search results (disabled)" time="0">
    </testcase>
    <testcase classname="createReferencesProvider supplements precise results with search results (toggled)" name="createReferencesProvider supplements precise results with search results (toggled)" time="0.002">
    </testcase>
    <testcase classname="createHoverProvider uses precise definitions as source of truth" name="createHoverProvider uses precise definitions as source of truth" time="0.001">
    </testcase>
    <testcase classname="createHoverProvider tags partially precise results" name="createHoverProvider tags partially precise results" time="0.001">
    </testcase>
    <testcase classname="createHoverProvider does not tag partially precise results without search definition" name="createHoverProvider does not tag partially precise results without search definition" time="0">
    </testcase>
    <testcase classname="createHoverProvider falls back to search when precise results are not found" name="createHoverProvider falls back to search when precise results are not found" time="0.001">
    </testcase>
    <testcase classname="createHoverProvider alerts search results correctly with experimental LSIF support" name="createHoverProvider alerts search results correctly with experimental LSIF support" time="0.001">
    </testcase>
    <testcase classname="createHoverProvider alerts search results correctly with robust LSIF support" name="createHoverProvider alerts search results correctly with robust LSIF support" time="0.001">
    </testcase>
    <testcase classname="createDocumentHighlightProvider uses precise document highlights" name="createDocumentHighlightProvider uses precise document highlights" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="can create dom elements from generated code tables" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:02" time="0.946" tests="1">
    <testcase classname="can create dom elements from generated code tables can create the code view test cases and their helper function work" name="can create dom elements from generated code tables can create the code view test cases and their helper function work" time="0.309">
    </testcase>
  </testsuite>
  <testsuite name="Markdown" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:03" time="0.549" tests="15">
    <testcase classname="Markdown render" name="Markdown render" time="0.016">
    </testcase>
    <testcase classname="fuzzyMatches matches &quot;&quot; in &quot;&quot;" name="fuzzyMatches matches &quot;&quot; in &quot;&quot;" time="0">
    </testcase>
    <testcase classname="fuzzyMatches matches &quot;&quot; in &quot;a&quot;" name="fuzzyMatches matches &quot;&quot; in &quot;a&quot;" time="0">
    </testcase>
    <testcase classname="fuzzyMatches matches &quot;a&quot; in &quot;&quot;" name="fuzzyMatches matches &quot;a&quot; in &quot;&quot;" time="0">
    </testcase>
    <testcase classname="fuzzyMatches matches &quot;a&quot; in &quot;a&quot;" name="fuzzyMatches matches &quot;a&quot; in &quot;a&quot;" time="0">
    </testcase>
    <testcase classname="fuzzyMatches matches &quot;b&quot; in &quot;a&quot;" name="fuzzyMatches matches &quot;b&quot; in &quot;a&quot;" time="0.001">
    </testcase>
    <testcase classname="fuzzyMatches matches &quot;a&quot; in &quot;aa&quot;" name="fuzzyMatches matches &quot;a&quot; in &quot;aa&quot;" time="0">
    </testcase>
    <testcase classname="fuzzyMatches matches &quot;a&quot; in &quot;aba&quot;" name="fuzzyMatches matches &quot;a&quot; in &quot;aba&quot;" time="0">
    </testcase>
    <testcase classname="fuzzyMatches matches &quot;a&quot; in &quot;abaa&quot;" name="fuzzyMatches matches &quot;a&quot; in &quot;abaa&quot;" time="0">
    </testcase>
    <testcase classname="fuzzyMatches matches &quot;aa&quot; in &quot;a&quot;" name="fuzzyMatches matches &quot;aa&quot; in &quot;a&quot;" time="0.001">
    </testcase>
    <testcase classname="fuzzyMatches matches &quot;aa&quot; in &quot;aa&quot;" name="fuzzyMatches matches &quot;aa&quot; in &quot;aa&quot;" time="0.001">
    </testcase>
    <testcase classname="fuzzyMatches matches &quot;aa&quot; in &quot;aaa&quot;" name="fuzzyMatches matches &quot;aa&quot; in &quot;aaa&quot;" time="0">
    </testcase>
    <testcase classname="fuzzyMatches matches &quot;aa&quot; in &quot;abaa&quot;" name="fuzzyMatches matches &quot;aa&quot; in &quot;abaa&quot;" time="0">
    </testcase>
    <testcase classname="fuzzyMatches matches &quot;aaa&quot; in &quot;abaaba&quot;" name="fuzzyMatches matches &quot;aaa&quot; in &quot;abaaba&quot;" time="0">
    </testcase>
    <testcase classname="fuzzyMatches matches &quot;abc&quot; in &quot;xaxcxbxca&quot;" name="fuzzyMatches matches &quot;abc&quot; in &quot;xaxcxbxca&quot;" time="0">
    </testcase>
  </testsuite>
  <testsuite name="navbar query state" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:03" time="1.243" tests="13">
    <testcase classname="navbar query state set state from settings sets default search pattern" name="navbar query state set state from settings sets default search pattern" time="0.004">
    </testcase>
    <testcase classname="navbar query state set state from settings sets default case sensitivity" name="navbar query state set state from settings sets default case sensitivity" time="0.001">
    </testcase>
    <testcase classname="navbar query state set state from URL sets the query from URL" name="navbar query state set state from URL sets the query from URL" time="0.004">
    </testcase>
    <testcase classname="navbar query state set state from URL prefers query parameter over parsed query" name="navbar query state set state from URL prefers query parameter over parsed query" time="0.001">
    </testcase>
    <testcase classname="navbar query state set state from URL sets the search pattern from URL parameter" name="navbar query state set state from URL sets the search pattern from URL parameter" time="0.002">
    </testcase>
    <testcase classname="navbar query state set state from URL sets the search pattern from filter" name="navbar query state set state from URL sets the search pattern from filter" time="0.002">
    </testcase>
    <testcase classname="navbar query state set state from URL should not set patternType if query is empty" name="navbar query state set state from URL should not set patternType if query is empty" time="0.001">
    </testcase>
    <testcase classname="navbar query state set state from URL sets case sensitivity from filter" name="navbar query state set state from URL sets case sensitivity from filter" time="0.001">
    </testcase>
    <testcase classname="navbar query state set state from URL sets case sensitivity from URL parameter" name="navbar query state set state from URL sets case sensitivity from URL parameter" time="0.003">
    </testcase>
    <testcase classname="navbar query state set state from URL should not update caseSensitive from filter if query is empty" name="navbar query state set state from URL should not update caseSensitive from filter if query is empty" time="0.002">
    </testcase>
    <testcase classname="navbar query state state initialization precedence prefers settings from URL over user settings" name="navbar query state state initialization precedence prefers settings from URL over user settings" time="0.001">
    </testcase>
    <testcase classname="navbar query state state initialization precedence prefers user settings over settings from empty URL" name="navbar query state state initialization precedence prefers user settings over settings from empty URL" time="0.001">
    </testcase>
    <testcase classname="navbar query state state initialization precedence does not prefer user settings over settings from URL" name="navbar query state state initialization precedence does not prefer user settings over settings from URL" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="stringHuman" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:04" time="1.621" tests="2">
    <testcase classname="stringHuman complex query" name="stringHuman complex query" time="0.005">
    </testcase>
    <testcase classname="stringHuman render delimited syntax" name="stringHuman render delimited syntax" time="0.142">
    </testcase>
  </testsuite>
  <testsuite name="useObservable()" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:03" time="3.675" tests="7">
    <testcase classname="useObservable() should return the latest value of the given Observable" name="useObservable() should return the latest value of the given Observable" time="0.211">
    </testcase>
    <testcase classname="useObservable() should return undefined if the Observable did not emit anything yet" name="useObservable() should return undefined if the Observable did not emit anything yet" time="0.102">
    </testcase>
    <testcase classname="useObservable() should throw if the Observable errored" name="useObservable() should throw if the Observable errored" time="0.657">
    </testcase>
    <testcase classname="useObservable() should subscribe if component rerenders and observable changed" name="useObservable() should subscribe if component rerenders and observable changed" time="0.006">
    </testcase>
    <testcase classname="useObservable() should not subscribe if component rerenders and observable did not change" name="useObservable() should not subscribe if component rerenders and observable did not change" time="0.005">
    </testcase>
    <testcase classname="useObservable() should unsubscribe when the component unmounts" name="useObservable() should unsubscribe when the component unmounts" time="0.039">
    </testcase>
    <testcase classname="useEventObservable() should emit on the transform function whenever an event was triggered" name="useEventObservable() should emit on the transform function whenever an event was triggered" time="0.015">
    </testcase>
  </testsuite>
  <testsuite name="ToggleBig" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:05" time="3.597" tests="4">
    <testcase classname="ToggleBig value is false" name="ToggleBig value is false" time="0.089">
    </testcase>
    <testcase classname="ToggleBig value is true" name="ToggleBig value is true" time="0.012">
    </testcase>
    <testcase classname="ToggleBig disabled" name="ToggleBig disabled" time="0.09">
    </testcase>
    <testcase classname="ToggleBig className" name="ToggleBig className" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="fetchCache" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:07" time="0.965" tests="6">
    <testcase classname="fetchCache makes single request for similar [...args]" name="fetchCache makes single request for similar [...args]" time="0.002">
    </testcase>
    <testcase classname="fetchCache makes multiple requests for different [...args]" name="fetchCache makes multiple requests for different [...args]" time="0.001">
    </testcase>
    <testcase classname="fetchCache makes multiple requests in case of fetch error" name="fetchCache makes multiple requests in case of fetch error" time="0.003">
    </testcase>
    <testcase classname="fetchCache makes multiple requests in case of cache expiration" name="fetchCache makes multiple requests in case of cache expiration" time="0.004">
    </testcase>
    <testcase classname="fetchCache makes multiple requests if [cacheMaxAge=0]" name="fetchCache makes multiple requests if [cacheMaxAge=0]" time="0">
    </testcase>
    <testcase classname="fetchCache makes multiple requests when caching is disabled" name="fetchCache makes multiple requests when caching is disabled" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:04" time="4.811" tests="1">
    <testcase classname=" util.test.ts" name=" util.test.ts" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:08" time="0.334" tests="2">
    <testcase classname=" spec.test.ts" name=" spec.test.ts" time="0.001">
    </testcase>
    <testcase classname="typescriptSpec filters definitions" name="typescriptSpec filters definitions" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Collapse" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:06" time="2.674" tests="3">
    <testcase classname="Collapse should render opened when `openByDefault` is true" name="Collapse should render opened when `openByDefault` is true" time="0.026">
    </testcase>
    <testcase classname="Collapse should toggle when clicking on header" name="Collapse should toggle when clicking on header" time="0.026">
    </testcase>
    <testcase classname="Collapse should dispatch `onOpenChange` on controlled mode" name="Collapse should dispatch `onOpenChange` on controlled mode" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="getDiagnostics()" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:09" time="0.375" tests="17">
    <testcase classname="getDiagnostics() empty and invalid filter values do not raise invalid filter type" name="getDiagnostics() empty and invalid filter values do not raise invalid filter type" time="0.003">
    </testcase>
    <testcase classname="getDiagnostics() empty and invalid filter values invalid filter value" name="getDiagnostics() empty and invalid filter values invalid filter value" time="0.001">
    </testcase>
    <testcase classname="getDiagnostics() empty and invalid filter values search query containing colon, literal pattern type, do not raise error" name="getDiagnostics() empty and invalid filter values search query containing colon, literal pattern type, do not raise error" time="0.001">
    </testcase>
    <testcase classname="getDiagnostics() empty and invalid filter values search query containing quoted token, regexp pattern type" name="getDiagnostics() empty and invalid filter values search query containing quoted token, regexp pattern type" time="0">
    </testcase>
    <testcase classname="getDiagnostics() empty and invalid filter values search query containing parenthesized parameterss" name="getDiagnostics() empty and invalid filter values search query containing parenthesized parameterss" time="0.001">
    </testcase>
    <testcase classname="getDiagnostics() empty and invalid filter values search query with empty filter diagnostic" name="getDiagnostics() empty and invalid filter values search query with empty filter diagnostic" time="0">
    </testcase>
    <testcase classname="getDiagnostics() empty and invalid filter values search query with both invalid filter and empty filter returns only one diagnostic for the first issue" name="getDiagnostics() empty and invalid filter values search query with both invalid filter and empty filter returns only one diagnostic for the first issue" time="0.001">
    </testcase>
    <testcase classname="getDiagnostics() diff and commit only filters detects invalid author/before/after/message filters" name="getDiagnostics() diff and commit only filters detects invalid author/before/after/message filters" time="0.003">
    </testcase>
    <testcase classname="getDiagnostics() diff and commit only filters accepts author/before/after/message filters if type:diff is present" name="getDiagnostics() diff and commit only filters accepts author/before/after/message filters if type:diff is present" time="0.001">
    </testcase>
    <testcase classname="getDiagnostics() diff and commit only filters accepts author/before/after/message filters if type:commit is present" name="getDiagnostics() diff and commit only filters accepts author/before/after/message filters if type:commit is present" time="0">
    </testcase>
    <testcase classname="getDiagnostics() repo and rev filters detects rev without repo filter" name="getDiagnostics() repo and rev filters detects rev without repo filter" time="0.001">
    </testcase>
    <testcase classname="getDiagnostics() repo and rev filters detects rev with repo+rev tag filter" name="getDiagnostics() repo and rev filters detects rev with repo+rev tag filter" time="0.001">
    </testcase>
    <testcase classname="getDiagnostics() repo and rev filters detects rev with empty repo filter" name="getDiagnostics() repo and rev filters detects rev with empty repo filter" time="0.001">
    </testcase>
    <testcase classname="getDiagnostics() repo and rev filters accepts rev filter if valid repo filter is present" name="getDiagnostics() repo and rev filters accepts rev filter if valid repo filter is present" time="0">
    </testcase>
    <testcase classname="getDiagnostics() structural search and type: filter detects type: filter in structural search" name="getDiagnostics() structural search and type: filter detects type: filter in structural search" time="0.001">
    </testcase>
    <testcase classname="getDiagnostics() structural search and type: filter accepts type: filter in non-structure search" name="getDiagnostics() structural search and type: filter accepts type: filter in non-structure search" time="0.001">
    </testcase>
    <testcase classname="getDiagnostics() structural search without lang: filter detects structural search without lang filter" name="getDiagnostics() structural search without lang: filter detects structural search without lang filter" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="getPageKindFromPathName()" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:09" time="0.416" tests="9">
    <testcase classname="getPageKindFromPathName() blob page, dash in URL" name="getPageKindFromPathName() blob page, dash in URL" time="0.002">
    </testcase>
    <testcase classname="getPageKindFromPathName() blob page, no dash in URL" name="getPageKindFromPathName() blob page, no dash in URL" time="0">
    </testcase>
    <testcase classname="getPageKindFromPathName() MR page, dash in URL" name="getPageKindFromPathName() MR page, dash in URL" time="0.001">
    </testcase>
    <testcase classname="getPageKindFromPathName() MR page, no dash in URL" name="getPageKindFromPathName() MR page, no dash in URL" time="0">
    </testcase>
    <testcase classname="getPageKindFromPathName() Commit page, dash in URL" name="getPageKindFromPathName() Commit page, dash in URL" time="0.001">
    </testcase>
    <testcase classname="getPageKindFromPathName() Commit page, no dash in URL" name="getPageKindFromPathName() Commit page, no dash in URL" time="0">
    </testcase>
    <testcase classname="getPageKindFromPathName() Project home" name="getPageKindFromPathName() Project home" time="0">
    </testcase>
    <testcase classname="getPageKindFromPathName() Project pipelines" name="getPageKindFromPathName() Project pipelines" time="0">
    </testcase>
    <testcase classname="getPageKindFromPathName() Merge requests list" name="getPageKindFromPathName() Merge requests list" time="0">
    </testcase>
  </testsuite>
  <testsuite name="computeContext" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:09" time="1.881" tests="6">
    <testcase classname="computeContext provides config" name="computeContext provides config" time="0.008">
    </testcase>
    <testcase classname="computeContext with code editor" name="computeContext with code editor" time="0.005">
    </testcase>
    <testcase classname="computeContext without code editor" name="computeContext without code editor" time="0.001">
    </testcase>
    <testcase classname="computeContext code editor with no selection" name="computeContext code editor with no selection" time="0.001">
    </testcase>
    <testcase classname="computeContext panel" name="computeContext panel" time="0.001">
    </testcase>
    <testcase classname="computeContext context fallback" name="computeContext context fallback" time="0">
    </testcase>
  </testsuite>
  <testsuite name="mergeContributions()" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:10" time="1.19" tests="12">
    <testcase classname="mergeContributions() handles an empty array" name="mergeContributions() handles an empty array" time="0.007">
    </testcase>
    <testcase classname="mergeContributions() handles a single item" name="mergeContributions() handles a single item" time="0.001">
    </testcase>
    <testcase classname="mergeContributions() handles multiple items" name="mergeContributions() handles multiple items" time="0.001">
    </testcase>
    <testcase classname="filterContributions() handles empty contributions" name="filterContributions() handles empty contributions" time="0.001">
    </testcase>
    <testcase classname="filterContributions() handles empty menu contributions" name="filterContributions() handles empty menu contributions" time="0.002">
    </testcase>
    <testcase classname="filterContributions() handles non-empty contributions" name="filterContributions() handles non-empty contributions" time="0">
    </testcase>
    <testcase classname="evaluateContributions() handles empty contributions" name="evaluateContributions() handles empty contributions" time="0">
    </testcase>
    <testcase classname="evaluateContributions() handles empty array of command contributions" name="evaluateContributions() handles empty array of command contributions" time="0.001">
    </testcase>
    <testcase classname="evaluateContributions() handles non-empty contributions" name="evaluateContributions() handles non-empty contributions" time="0.01">
    </testcase>
    <testcase classname="evaluateContributions() supports commandArguments with the first element non-evaluated" name="evaluateContributions() supports commandArguments with the first element non-evaluated" time="0.004">
    </testcase>
    <testcase classname="evaluateContributions() evaluates `actionItem.pressed` if present" name="evaluateContributions() evaluates `actionItem.pressed` if present" time="0.002">
    </testcase>
    <testcase classname="parseContributionExpressions() should not parse the `id` or `command` values" name="parseContributionExpressions() should not parse the `id` or `command` values" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="emitLoading()" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:11" time="1.8" tests="13">
    <testcase classname="emitLoading() emits an empty result if the source emits an empty result before the loader delay" name="emitLoading() emits an empty result if the source emits an empty result before the loader delay" time="0.006">
    </testcase>
    <testcase classname="emitLoading() emits a loader if the source has not emitted after the loader delay" name="emitLoading() emits a loader if the source has not emitted after the loader delay" time="0.002">
    </testcase>
    <testcase classname="emitLoading() emits an empty result if the source completes without a result" name="emitLoading() emits an empty result if the source completes without a result" time="0.001">
    </testcase>
    <testcase classname="emitLoading() emits an empty result if the source completes without a result before the loader delay" name="emitLoading() emits an empty result if the source completes without a result before the loader delay" time="0.001">
    </testcase>
    <testcase classname="emitLoading() emits an empty result if the source completes after an empty loading result" name="emitLoading() emits an empty result if the source completes after an empty loading result" time="0.003">
    </testcase>
    <testcase classname="emitLoading() emits the last result if the source completes after an intermediate non-empty loading result" name="emitLoading() emits the last result if the source completes after an intermediate non-empty loading result" time="0.002">
    </testcase>
    <testcase classname="emitLoading() errors if the source errors" name="emitLoading() errors if the source errors" time="0.003">
    </testcase>
    <testcase classname="emitLoading() emits a loader if the source has not emitted a result after the loader delay" name="emitLoading() emits a loader if the source has not emitted a result after the loader delay" time="0">
    </testcase>
    <testcase classname="emitLoading() emits a loader if the source first emits an empty result, but then starts loading again" name="emitLoading() emits a loader if the source first emits an empty result, but then starts loading again" time="0.002">
    </testcase>
    <testcase classname="emitLoading() emits a loader if the source first emits an empty result, but then starts loading again after the loader delay already passed" name="emitLoading() emits a loader if the source first emits an empty result, but then starts loading again after the loader delay already passed" time="0.003">
    </testcase>
    <testcase classname="emitLoading() hides the loader when the source emits an empty result" name="emitLoading() hides the loader when the source emits an empty result" time="0.002">
    </testcase>
    <testcase classname="emitLoading() emits intermediate results before the loader delay" name="emitLoading() emits intermediate results before the loader delay" time="0.002">
    </testcase>
    <testcase classname="emitLoading() emits intermediate results after the loader delay and showing a loader" name="emitLoading() emits intermediate results after the loader delay and showing a loader" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="useCookieStorage" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:11" time="2.187" tests="12">
    <testcase classname="useCookieStorage typeof value === &quot;string&quot; should get initial value" name="useCookieStorage typeof value === &quot;string&quot; should get initial value" time="0.057">
    </testcase>
    <testcase classname="useCookieStorage typeof value === &quot;string&quot; should set and get value" name="useCookieStorage typeof value === &quot;string&quot; should set and get value" time="0.004">
    </testcase>
    <testcase classname="useCookieStorage typeof value === &quot;string&quot; should remove value" name="useCookieStorage typeof value === &quot;string&quot; should remove value" time="0.008">
    </testcase>
    <testcase classname="useCookieStorage typeof value === &quot;object&quot; should get initial value" name="useCookieStorage typeof value === &quot;object&quot; should get initial value" time="0.004">
    </testcase>
    <testcase classname="useCookieStorage typeof value === &quot;object&quot; should set and get value" name="useCookieStorage typeof value === &quot;object&quot; should set and get value" time="0.005">
    </testcase>
    <testcase classname="useCookieStorage typeof value === &quot;object&quot; should remove value" name="useCookieStorage typeof value === &quot;object&quot; should remove value" time="0.003">
    </testcase>
    <testcase classname="useCookieStorage typeof value === &quot;boolean&quot; &amp;&amp; value === true should get initial value" name="useCookieStorage typeof value === &quot;boolean&quot; &amp;&amp; value === true should get initial value" time="0.004">
    </testcase>
    <testcase classname="useCookieStorage typeof value === &quot;boolean&quot; &amp;&amp; value === true should set and get value" name="useCookieStorage typeof value === &quot;boolean&quot; &amp;&amp; value === true should set and get value" time="0.003">
    </testcase>
    <testcase classname="useCookieStorage typeof value === &quot;boolean&quot; &amp;&amp; value === true should remove value" name="useCookieStorage typeof value === &quot;boolean&quot; &amp;&amp; value === true should remove value" time="0.004">
    </testcase>
    <testcase classname="useCookieStorage typeof value === &quot;boolean&quot; &amp;&amp; value === false should get initial value" name="useCookieStorage typeof value === &quot;boolean&quot; &amp;&amp; value === false should get initial value" time="0.002">
    </testcase>
    <testcase classname="useCookieStorage typeof value === &quot;boolean&quot; &amp;&amp; value === false should set and get value" name="useCookieStorage typeof value === &quot;boolean&quot; &amp;&amp; value === false should set and get value" time="0.004">
    </testcase>
    <testcase classname="useCookieStorage typeof value === &quot;boolean&quot; &amp;&amp; value === false should remove value" name="useCookieStorage typeof value === &quot;boolean&quot; &amp;&amp; value === false should remove value" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:10" time="4.606" tests="2">
    <testcase classname=" util.test.ts" name=" util.test.ts" time="0.001">
    </testcase>
    <testcase classname="filterLocationsForDocumentHighlights should filter out distinct paths" name="filterLocationsForDocumentHighlights should filter out distinct paths" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="getHover from ExtensionHost API, it aims to have more e2e feel" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:13" time="3.158" tests="1">
    <testcase classname="getHover from ExtensionHost API, it aims to have more e2e feel restarts hover call if a provider was added or removed" name="getHover from ExtensionHost API, it aims to have more e2e feel restarts hover call if a provider was added or removed" time="0.131">
    </testcase>
  </testsuite>
  <testsuite name="ZoektRanking" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:11" time="6.444" tests="5">
    <testcase classname="ZoektRanking collapsedResults, single-line matches only" name="ZoektRanking collapsedResults, single-line matches only" time="0.016">
    </testcase>
    <testcase classname="ZoektRanking collapsed results, single-line matches only, matches in order of zoekt relevance ranking" name="ZoektRanking collapsed results, single-line matches only, matches in order of zoekt relevance ranking" time="0.003">
    </testcase>
    <testcase classname="ZoektRanking collapsed results, multiline matches only" name="ZoektRanking collapsed results, multiline matches only" time="0.002">
    </testcase>
    <testcase classname="ZoektRanking expandedResults, single-line matches only" name="ZoektRanking expandedResults, single-line matches only" time="0.002">
    </testcase>
    <testcase classname="ZoektRanking expanded matches, multiline matches only" name="ZoektRanking expanded matches, multiline matches only" time="0.7">
    </testcase>
  </testsuite>
  <testsuite name="wrapping indentation in code blocks" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:16" time="5.454" tests="2">
    <testcase classname="wrapping indentation in code blocks wraps indentation in code blocks" name="wrapping indentation in code blocks wraps indentation in code blocks" time="0.001">
    </testcase>
    <testcase classname="wrapping indentation in code blocks wraps indentation in code blocks" name="wrapping indentation in code blocks wraps indentation in code blocks" time="0">
    </testcase>
  </testsuite>
  <testsuite name="init" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:21" time="1.179" tests="1">
    <testcase classname="init placeholder" name="init placeholder" time="0">
    </testcase>
  </testsuite>
  <testsuite name="get-links" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:15" time="9.813" tests="4">
    <testcase classname="get-links parses urls and GitHub issues" name="get-links parses urls and GitHub issues" time="0.121">
    </testcase>
    <testcase classname="get-links parses overlapping URLs and GitHub issues" name="get-links parses overlapping URLs and GitHub issues" time="0.001">
    </testcase>
    <testcase classname="get-links does not parse GitHub issues if no external URLS" name="get-links does not parse GitHub issues if no external URLS" time="0.001">
    </testcase>
    <testcase classname="get-links does not parse file names" name="get-links does not parse file names" time="0">
    </testcase>
  </testsuite>
  <testsuite name="getSuggestionQuery" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:18" time="7.053" tests="7">
    <testcase classname="getSuggestionQuery should generate suggestion query for repo filter" name="getSuggestionQuery should generate suggestion query for repo filter" time="0.007">
    </testcase>
    <testcase classname="getSuggestionQuery should not add non-relevant filters and patterns to repo suggestion query" name="getSuggestionQuery should not add non-relevant filters and patterns to repo suggestion query" time="0.003">
    </testcase>
    <testcase classname="getSuggestionQuery should archived, visibility, and fork filters to repo suggestion query" name="getSuggestionQuery should archived, visibility, and fork filters to repo suggestion query" time="0.004">
    </testcase>
    <testcase classname="getSuggestionQuery should not include relevant filters for repo suggestion query if inside an `or` expression" name="getSuggestionQuery should not include relevant filters for repo suggestion query if inside an `or` expression" time="0">
    </testcase>
    <testcase classname="getSuggestionQuery should not generate a file suggestion query if inside an `or` expression" name="getSuggestionQuery should not generate a file suggestion query if inside an `or` expression" time="0.001">
    </testcase>
    <testcase classname="getSuggestionQuery should generate a file suggestion query with relevant filters" name="getSuggestionQuery should generate a file suggestion query with relevant filters" time="0">
    </testcase>
    <testcase classname="getSuggestionQuery should generate a symbol suggestion query with relevant filters" name="getSuggestionQuery should generate a symbol suggestion query with relevant filters" time="0">
    </testcase>
  </testsuite>
  <testsuite name="useLastRepoName" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:25" time="0.745" tests="5">
    <testcase classname="useLastRepoName returns no repo name if we have never seen any results" name="useLastRepoName returns no repo name if we have never seen any results" time="0.017">
    </testcase>
    <testcase classname="useLastRepoName returns the repo name if results contain a single repo" name="useLastRepoName returns the repo name if results contain a single repo" time="0.005">
    </testcase>
    <testcase classname="useLastRepoName returns the previous repo name if the query matches but there are no results" name="useLastRepoName returns the previous repo name if the query matches but there are no results" time="0.004">
    </testcase>
    <testcase classname="useLastRepoName returns an empty repo name if the repo query has changed" name="useLastRepoName returns an empty repo name if the repo query has changed" time="0.028">
    </testcase>
    <testcase classname="useLastRepoName returns an empty repo name if the results contain multiple repos" name="useLastRepoName returns an empty repo name if the results contain multiple repos" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:20" time="5.616" tests="2">
    <testcase classname=" util.test.ts" name=" util.test.ts" time="0.001">
    </testcase>
    <testcase classname="stencil should find ranges in stencils" name="stencil should find ranges in stencils" time="0">
    </testcase>
  </testsuite>
  <testsuite name="convertMarkdownToBlocks" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:25" time="2.477" tests="4">
    <testcase classname="convertMarkdownToBlocks should handle empty markdown" name="convertMarkdownToBlocks should handle empty markdown" time="0.013">
    </testcase>
    <testcase classname="convertMarkdownToBlocks should handle only markdown text" name="convertMarkdownToBlocks should handle only markdown text" time="0.019">
    </testcase>
    <testcase classname="convertMarkdownToBlocks should handle a single file link" name="convertMarkdownToBlocks should handle a single file link" time="0.011">
    </testcase>
    <testcase classname="convertMarkdownToBlocks should handle interleaved markdown, query, and file blocks" name="convertMarkdownToBlocks should handle interleaved markdown, query, and file blocks" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:25" time="2.479" tests="14">
    <testcase classname=" util.test.ts" name=" util.test.ts" time="0">
    </testcase>
    <testcase classname="graphql providers combined definition and hover provider should use result from window" name="graphql providers combined definition and hover provider should use result from window" time="0.002">
    </testcase>
    <testcase classname="graphql providers combined definition and hover provider should correctly parse result" name="graphql providers combined definition and hover provider should correctly parse result" time="0.001">
    </testcase>
    <testcase classname="graphql providers combined definition and hover provider should deal with empty payload" name="graphql providers combined definition and hover provider should deal with empty payload" time="0">
    </testcase>
    <testcase classname="graphql providers references provider should use result from window" name="graphql providers references provider should use result from window" time="0.005">
    </testcase>
    <testcase classname="graphql providers references provider should correctly parse result" name="graphql providers references provider should correctly parse result" time="0.001">
    </testcase>
    <testcase classname="graphql providers references provider should deal with empty payload" name="graphql providers references provider should deal with empty payload" time="0.001">
    </testcase>
    <testcase classname="graphql providers references provider should paginate results" name="graphql providers references provider should paginate results" time="0">
    </testcase>
    <testcase classname="graphql providers references provider should not page results indefinitely" name="graphql providers references provider should not page results indefinitely" time="0.003">
    </testcase>
    <testcase classname="graphql providers document highlights provider should use result from window" name="graphql providers document highlights provider should use result from window" time="0.001">
    </testcase>
    <testcase classname="graphql providers document highlights provider should correctly parse result" name="graphql providers document highlights provider should correctly parse result" time="0.001">
    </testcase>
    <testcase classname="graphql providers document highlights provider should deal with empty payload" name="graphql providers document highlights provider should deal with empty payload" time="0">
    </testcase>
    <testcase classname="graphql providers stencil should detect a hit" name="graphql providers stencil should detect a hit" time="0">
    </testcase>
    <testcase classname="graphql providers stencil should detect a miss" name="graphql providers stencil should detect a miss" time="0">
    </testcase>
  </testsuite>
  <testsuite name="appendContextFilter" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:28" time="0.489" tests="19">
    <testcase classname="appendContextFilter appending context to empty query" name="appendContextFilter appending context to empty query" time="0.001">
    </testcase>
    <testcase classname="appendContextFilter appending context to populated query" name="appendContextFilter appending context to populated query" time="0.002">
    </testcase>
    <testcase classname="appendContextFilter appending when query already contains a context" name="appendContextFilter appending when query already contains a context" time="0.001">
    </testcase>
    <testcase classname="appendContextFilter appending when query already contains multiple contexts" name="appendContextFilter appending when query already contains multiple contexts" time="0.001">
    </testcase>
    <testcase classname="omitFilter omit context filter from the start of the query" name="omitFilter omit context filter from the start of the query" time="0">
    </testcase>
    <testcase classname="omitFilter omit context filter from the end of the query" name="omitFilter omit context filter from the end of the query" time="0">
    </testcase>
    <testcase classname="omitFilter omit context filter from the middle of the query" name="omitFilter omit context filter from the middle of the query" time="0">
    </testcase>
    <testcase classname="updateFilter append count" name="updateFilter append count" time="0.001">
    </testcase>
    <testcase classname="updateFilter update first count" name="updateFilter update first count" time="0">
    </testcase>
    <testcase classname="updateFilters (all filters) append count" name="updateFilters (all filters) append count" time="0.001">
    </testcase>
    <testcase classname="updateFilters (all filters) update all counts count" name="updateFilters (all filters) update all counts count" time="0">
    </testcase>
    <testcase classname="sanitizeQueryForTelemetry no effect without redactable filters" name="sanitizeQueryForTelemetry no effect without redactable filters" time="0.01">
    </testcase>
    <testcase classname="sanitizeQueryForTelemetry all filters" name="sanitizeQueryForTelemetry all filters" time="0.006">
    </testcase>
    <testcase classname="sanitizeQueryForTelemetry aliased filters" name="sanitizeQueryForTelemetry aliased filters" time="0.007">
    </testcase>
    <testcase classname="sanitizeQueryForTelemetry negated filters" name="sanitizeQueryForTelemetry negated filters" time="0.003">
    </testcase>
    <testcase classname="parenthesizeQueryWithGlobalContext query without context" name="parenthesizeQueryWithGlobalContext query without context" time="0">
    </testcase>
    <testcase classname="parenthesizeQueryWithGlobalContext do not parenthesize query without operators" name="parenthesizeQueryWithGlobalContext do not parenthesize query without operators" time="0">
    </testcase>
    <testcase classname="parenthesizeQueryWithGlobalContext parenthesize query with global context filter" name="parenthesizeQueryWithGlobalContext parenthesize query with global context filter" time="0.01">
    </testcase>
    <testcase classname="parenthesizeQueryWithGlobalContext do not parenthesize query with nested context" name="parenthesizeQueryWithGlobalContext do not parenthesize query with nested context" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="parseRepoURI" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:26" time="1.069" tests="59">
    <testcase classname="parseRepoURI should parse repo" name="parseRepoURI should parse repo" time="0.002">
    </testcase>
    <testcase classname="parseRepoURI should parse repo with spaces" name="parseRepoURI should parse repo with spaces" time="0.001">
    </testcase>
    <testcase classname="parseRepoURI should parse repo with plus sign" name="parseRepoURI should parse repo with plus sign" time="0">
    </testcase>
    <testcase classname="parseRepoURI should parse repo with revision" name="parseRepoURI should parse repo with revision" time="0.001">
    </testcase>
    <testcase classname="parseRepoURI should parse repo with revision with special characters" name="parseRepoURI should parse repo with revision with special characters" time="0.002">
    </testcase>
    <testcase classname="parseRepoURI should parse repo with commitID" name="parseRepoURI should parse repo with commitID" time="0.002">
    </testcase>
    <testcase classname="parseRepoURI should parse repo with revision and file" name="parseRepoURI should parse repo with revision and file" time="0">
    </testcase>
    <testcase classname="parseRepoURI should parse repo with revision and file with spaces" name="parseRepoURI should parse repo with revision and file with spaces" time="0">
    </testcase>
    <testcase classname="parseRepoURI should parse repo with revision and file and line" name="parseRepoURI should parse repo with revision and file and line" time="0">
    </testcase>
    <testcase classname="parseRepoURI should parse repo with revision and file and position" name="parseRepoURI should parse repo with revision and file and position" time="0.001">
    </testcase>
    <testcase classname="parseRepoURI should parse repo with revision and file and range" name="parseRepoURI should parse repo with revision and file and range" time="0">
    </testcase>
    <testcase classname="parseRepoURI should parse a file with spaces" name="parseRepoURI should parse a file with spaces" time="0">
    </testcase>
    <testcase classname="makeRepoURI should make repo" name="makeRepoURI should make repo" time="0">
    </testcase>
    <testcase classname="makeRepoURI should make repo with revision" name="makeRepoURI should make repo with revision" time="0">
    </testcase>
    <testcase classname="makeRepoURI should make repo with commitID" name="makeRepoURI should make repo with commitID" time="0">
    </testcase>
    <testcase classname="makeRepoURI should make repo with revision and file" name="makeRepoURI should make repo with revision and file" time="0.001">
    </testcase>
    <testcase classname="makeRepoURI should make repo with revision and file and line" name="makeRepoURI should make repo with revision and file and line" time="0">
    </testcase>
    <testcase classname="makeRepoURI should make repo with revision and file and position" name="makeRepoURI should make repo with revision and file and position" time="0">
    </testcase>
    <testcase classname="util/url parseHash parses empty hash" name="util/url parseHash parses empty hash" time="0.001">
    </testcase>
    <testcase classname="util/url parseHash parses unexpectedly formatted hash" name="util/url parseHash parses unexpectedly formatted hash" time="0.001">
    </testcase>
    <testcase classname="util/url parseHash parses hash with leading octothorpe" name="util/url parseHash parses hash with leading octothorpe" time="0">
    </testcase>
    <testcase classname="util/url parseHash parses hash with line" name="util/url parseHash parses hash with line" time="0">
    </testcase>
    <testcase classname="util/url parseHash parses hash with line and character" name="util/url parseHash parses hash with line and character" time="0.001">
    </testcase>
    <testcase classname="util/url parseHash parses hash with range" name="util/url parseHash parses hash with range" time="0">
    </testcase>
    <testcase classname="util/url parseHash parses hash with references" name="util/url parseHash parses hash with references" time="0.001">
    </testcase>
    <testcase classname="util/url parseHash parses modern hash with references" name="util/url parseHash parses modern hash with references" time="0.006">
    </testcase>
    <testcase classname="util/url toPrettyBlobURL formats url for empty revision" name="util/url toPrettyBlobURL formats url for empty revision" time="0">
    </testcase>
    <testcase classname="util/url toPrettyBlobURL formats url for specified revision" name="util/url toPrettyBlobURL formats url for specified revision" time="0">
    </testcase>
    <testcase classname="util/url toPrettyBlobURL formats url with position" name="util/url toPrettyBlobURL formats url with position" time="0.001">
    </testcase>
    <testcase classname="util/url toPrettyBlobURL formats url with view state" name="util/url toPrettyBlobURL formats url with view state" time="0.001">
    </testcase>
    <testcase classname="util/url toPrettyBlobURL formats url with symbols in filePath" name="util/url toPrettyBlobURL formats url with symbols in filePath" time="0">
    </testcase>
    <testcase classname="util/url toAbsoluteBlobURL default sourcegraph URL, default context" name="util/url toAbsoluteBlobURL default sourcegraph URL, default context" time="0">
    </testcase>
    <testcase classname="util/url toAbsoluteBlobURL default sourcegraph URL, specified revision" name="util/url toAbsoluteBlobURL default sourcegraph URL, specified revision" time="0">
    </testcase>
    <testcase classname="util/url toAbsoluteBlobURL default sourcegraph URL, with position" name="util/url toAbsoluteBlobURL default sourcegraph URL, with position" time="0">
    </testcase>
    <testcase classname="withWorkspaceRootInputRevision uses input revision for URI inside root with input revision" name="withWorkspaceRootInputRevision uses input revision for URI inside root with input revision" time="0.001">
    </testcase>
    <testcase classname="withWorkspaceRootInputRevision does not change URI outside root (different repoName)" name="withWorkspaceRootInputRevision does not change URI outside root (different repoName)" time="0">
    </testcase>
    <testcase classname="withWorkspaceRootInputRevision does not change URI outside root (different revision)" name="withWorkspaceRootInputRevision does not change URI outside root (different revision)" time="0">
    </testcase>
    <testcase classname="withWorkspaceRootInputRevision uses empty string input revision (treats differently from undefined)" name="withWorkspaceRootInputRevision uses empty string input revision (treats differently from undefined)" time="0">
    </testcase>
    <testcase classname="withWorkspaceRootInputRevision does not change URI if root has undefined input revision" name="withWorkspaceRootInputRevision does not change URI if root has undefined input revision" time="0">
    </testcase>
    <testcase classname="buildSearchURLQuery builds the URL query for a regular expression search" name="buildSearchURLQuery builds the URL query for a regular expression search" time="0.004">
    </testcase>
    <testcase classname="buildSearchURLQuery builds the URL query for a literal search" name="buildSearchURLQuery builds the URL query for a literal search" time="0">
    </testcase>
    <testcase classname="buildSearchURLQuery handles an empty query" name="buildSearchURLQuery handles an empty query" time="0">
    </testcase>
    <testcase classname="buildSearchURLQuery handles characters that need encoding" name="buildSearchURLQuery handles characters that need encoding" time="0.001">
    </testcase>
    <testcase classname="buildSearchURLQuery preserves / and : for readability" name="buildSearchURLQuery preserves / and : for readability" time="0.001">
    </testcase>
    <testcase classname="buildSearchURLQuery removal of patternType parameter overrides the patternType parameter at the end" name="buildSearchURLQuery removal of patternType parameter overrides the patternType parameter at the end" time="0.001">
    </testcase>
    <testcase classname="buildSearchURLQuery removal of patternType parameter overrides the patternType parameter at the beginning" name="buildSearchURLQuery removal of patternType parameter overrides the patternType parameter at the beginning" time="0.001">
    </testcase>
    <testcase classname="buildSearchURLQuery removal of patternType parameter overrides the patternType parameter at the end with another operator" name="buildSearchURLQuery removal of patternType parameter overrides the patternType parameter at the end with another operator" time="0">
    </testcase>
    <testcase classname="buildSearchURLQuery removal of patternType parameter overrides the patternType parameter in the middle" name="buildSearchURLQuery removal of patternType parameter overrides the patternType parameter in the middle" time="0.001">
    </testcase>
    <testcase classname="buildSearchURLQuery removal of patternType parameter overrides the patternType parameter if using a quoted value" name="buildSearchURLQuery removal of patternType parameter overrides the patternType parameter if using a quoted value" time="0">
    </testcase>
    <testcase classname="buildSearchURLQuery builds the URL query with a case parameter if caseSensitive is true" name="buildSearchURLQuery builds the URL query with a case parameter if caseSensitive is true" time="0">
    </testcase>
    <testcase classname="buildSearchURLQuery appends the case parameter if `case:yes` exists in the query" name="buildSearchURLQuery appends the case parameter if `case:yes` exists in the query" time="0">
    </testcase>
    <testcase classname="buildSearchURLQuery removes the case parameter if using a quoted value" name="buildSearchURLQuery removes the case parameter if using a quoted value" time="0.001">
    </testcase>
    <testcase classname="buildSearchURLQuery removes the case parameter case:no exists in the query and caseSensitive is true" name="buildSearchURLQuery removes the case parameter case:no exists in the query and caseSensitive is true" time="0">
    </testcase>
    <testcase classname="isExternalLink returns false for the same site" name="isExternalLink returns false for the same site" time="0.003">
    </testcase>
    <testcase classname="isExternalLink returns false for relative links" name="isExternalLink returns false for relative links" time="0">
    </testcase>
    <testcase classname="isExternalLink returns false for invalid URLs" name="isExternalLink returns false for invalid URLs" time="0.004">
    </testcase>
    <testcase classname="isExternalLink returns true for a different site" name="isExternalLink returns true for a different site" time="0.001">
    </testcase>
    <testcase classname="toRepoURL generates absolute repo URL without a rev" name="toRepoURL generates absolute repo URL without a rev" time="0">
    </testcase>
    <testcase classname="toRepoURL generates absolute repo URL with a rev" name="toRepoURL generates absolute repo URL with a rev" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="match" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:28" time="0.412" tests="70">
    <testcase classname="match reports true if any selectors match" name="match reports true if any selectors match" time="0.004">
    </testcase>
    <testcase classname="match reports false if no selectors match" name="match reports false if no selectors match" time="0.001">
    </testcase>
    <testcase classname="match supports iterators for the document selectors" name="match supports iterators for the document selectors" time="0">
    </testcase>
    <testcase classname="score matches" name="score matches" time="0.004">
    </testcase>
    <testcase classname="offsetToPosition 0" name="offsetToPosition 0" time="0.002">
    </testcase>
    <testcase classname="offsetToPosition 1" name="offsetToPosition 1" time="0">
    </testcase>
    <testcase classname="offsetToPosition 2" name="offsetToPosition 2" time="0">
    </testcase>
    <testcase classname="offsetToPosition 3" name="offsetToPosition 3" time="0">
    </testcase>
    <testcase classname="offsetToPosition 4" name="offsetToPosition 4" time="0">
    </testcase>
    <testcase classname="offsetToPosition 5" name="offsetToPosition 5" time="0.001">
    </testcase>
    <testcase classname="offsetToPosition 6" name="offsetToPosition 6" time="0">
    </testcase>
    <testcase classname="offsetToPosition 7" name="offsetToPosition 7" time="0">
    </testcase>
    <testcase classname="offsetToPosition 8" name="offsetToPosition 8" time="0">
    </testcase>
    <testcase classname="offsetToPosition 9" name="offsetToPosition 9" time="0">
    </testcase>
    <testcase classname="offsetToPosition 10" name="offsetToPosition 10" time="0">
    </testcase>
    <testcase classname="offsetToPosition 11" name="offsetToPosition 11" time="0.001">
    </testcase>
    <testcase classname="offsetToPosition 12" name="offsetToPosition 12" time="0">
    </testcase>
    <testcase classname="offsetToPosition 13" name="offsetToPosition 13" time="0">
    </testcase>
    <testcase classname="positionToOffset 0" name="positionToOffset 0" time="0">
    </testcase>
    <testcase classname="positionToOffset 1" name="positionToOffset 1" time="0">
    </testcase>
    <testcase classname="positionToOffset 2" name="positionToOffset 2" time="0">
    </testcase>
    <testcase classname="positionToOffset 3" name="positionToOffset 3" time="0">
    </testcase>
    <testcase classname="positionToOffset 4" name="positionToOffset 4" time="0">
    </testcase>
    <testcase classname="positionToOffset 5" name="positionToOffset 5" time="0">
    </testcase>
    <testcase classname="positionToOffset 6" name="positionToOffset 6" time="0">
    </testcase>
    <testcase classname="positionToOffset 7" name="positionToOffset 7" time="0">
    </testcase>
    <testcase classname="positionToOffset 8" name="positionToOffset 8" time="0.001">
    </testcase>
    <testcase classname="positionToOffset 9" name="positionToOffset 9" time="0">
    </testcase>
    <testcase classname="positionToOffset 10" name="positionToOffset 10" time="0">
    </testcase>
    <testcase classname="positionToOffset 11" name="positionToOffset 11" time="0">
    </testcase>
    <testcase classname="positionToOffset 12" name="positionToOffset 12" time="0">
    </testcase>
    <testcase classname="positionToOffset 13" name="positionToOffset 13" time="0">
    </testcase>
    <testcase classname="ExtensionDocument uri" name="ExtensionDocument uri" time="0">
    </testcase>
    <testcase classname="ExtensionDocument languageId" name="ExtensionDocument languageId" time="0">
    </testcase>
    <testcase classname="ExtensionDocument text" name="ExtensionDocument text" time="0.001">
    </testcase>
    <testcase classname="ExtensionDocument positionAt 0" name="ExtensionDocument positionAt 0" time="0.001">
    </testcase>
    <testcase classname="ExtensionDocument positionAt 1" name="ExtensionDocument positionAt 1" time="0">
    </testcase>
    <testcase classname="ExtensionDocument positionAt 2" name="ExtensionDocument positionAt 2" time="0">
    </testcase>
    <testcase classname="ExtensionDocument positionAt 3" name="ExtensionDocument positionAt 3" time="0">
    </testcase>
    <testcase classname="ExtensionDocument positionAt 4" name="ExtensionDocument positionAt 4" time="0.001">
    </testcase>
    <testcase classname="ExtensionDocument positionAt 5" name="ExtensionDocument positionAt 5" time="0">
    </testcase>
    <testcase classname="ExtensionDocument positionAt 6" name="ExtensionDocument positionAt 6" time="0.001">
    </testcase>
    <testcase classname="ExtensionDocument positionAt 7" name="ExtensionDocument positionAt 7" time="0">
    </testcase>
    <testcase classname="ExtensionDocument positionAt 8" name="ExtensionDocument positionAt 8" time="0.001">
    </testcase>
    <testcase classname="ExtensionDocument positionAt 9" name="ExtensionDocument positionAt 9" time="0">
    </testcase>
    <testcase classname="ExtensionDocument positionAt 10" name="ExtensionDocument positionAt 10" time="0">
    </testcase>
    <testcase classname="ExtensionDocument positionAt 11" name="ExtensionDocument positionAt 11" time="0">
    </testcase>
    <testcase classname="ExtensionDocument positionAt 12" name="ExtensionDocument positionAt 12" time="0">
    </testcase>
    <testcase classname="ExtensionDocument positionAt 13" name="ExtensionDocument positionAt 13" time="0.013">
    </testcase>
    <testcase classname="ExtensionDocument offsetAt 0" name="ExtensionDocument offsetAt 0" time="0">
    </testcase>
    <testcase classname="ExtensionDocument offsetAt 1" name="ExtensionDocument offsetAt 1" time="0.001">
    </testcase>
    <testcase classname="ExtensionDocument offsetAt 2" name="ExtensionDocument offsetAt 2" time="0">
    </testcase>
    <testcase classname="ExtensionDocument offsetAt 3" name="ExtensionDocument offsetAt 3" time="0">
    </testcase>
    <testcase classname="ExtensionDocument offsetAt 4" name="ExtensionDocument offsetAt 4" time="0">
    </testcase>
    <testcase classname="ExtensionDocument offsetAt 5" name="ExtensionDocument offsetAt 5" time="0">
    </testcase>
    <testcase classname="ExtensionDocument offsetAt 6" name="ExtensionDocument offsetAt 6" time="0">
    </testcase>
    <testcase classname="ExtensionDocument offsetAt 7" name="ExtensionDocument offsetAt 7" time="0">
    </testcase>
    <testcase classname="ExtensionDocument offsetAt 8" name="ExtensionDocument offsetAt 8" time="0">
    </testcase>
    <testcase classname="ExtensionDocument offsetAt 9" name="ExtensionDocument offsetAt 9" time="0">
    </testcase>
    <testcase classname="ExtensionDocument offsetAt 10" name="ExtensionDocument offsetAt 10" time="0">
    </testcase>
    <testcase classname="ExtensionDocument offsetAt 11" name="ExtensionDocument offsetAt 11" time="0">
    </testcase>
    <testcase classname="ExtensionDocument offsetAt 12" name="ExtensionDocument offsetAt 12" time="0">
    </testcase>
    <testcase classname="ExtensionDocument offsetAt 13" name="ExtensionDocument offsetAt 13" time="0">
    </testcase>
    <testcase classname="ExtensionDocument getWordRangeAtPosition" name="ExtensionDocument getWordRangeAtPosition" time="0.001">
    </testcase>
    <testcase classname="ExtensionDocument getText (one line)" name="ExtensionDocument getText (one line)" time="0">
    </testcase>
    <testcase classname="ExtensionDocument getText (two lines)" name="ExtensionDocument getText (two lines)" time="0">
    </testcase>
    <testcase classname="ExtensionDocument getText (several lines)" name="ExtensionDocument getText (several lines)" time="0.001">
    </testcase>
    <testcase classname="getEOL \n" name="getEOL \n" time="0">
    </testcase>
    <testcase classname="getEOL \r\n" name="getEOL \r\n" time="0">
    </testcase>
    <testcase classname="getEOL \r" name="getEOL \r" time="0">
    </testcase>
  </testsuite>
  <testsuite name="blob/codemirror/utils" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:28" time="0.942" tests="11">
    <testcase classname="blob/codemirror/utils zeroToOneBased... converts zero-based to one-based positions" name="blob/codemirror/utils zeroToOneBased... converts zero-based to one-based positions" time="0.001">
    </testcase>
    <testcase classname="blob/codemirror/utils zeroToOneBased... converts zero-based to one-based ranges" name="blob/codemirror/utils zeroToOneBased... converts zero-based to one-based ranges" time="0">
    </testcase>
    <testcase classname="blob/codemirror/utils positionToOffset returns a valid offset" name="blob/codemirror/utils positionToOffset returns a valid offset" time="0.001">
    </testcase>
    <testcase classname="blob/codemirror/utils positionToOffset null when the position is not valid inside the document" name="blob/codemirror/utils positionToOffset null when the position is not valid inside the document" time="0">
    </testcase>
    <testcase classname="blob/codemirror/utils uiPositionToOffset returns a valid offset" name="blob/codemirror/utils uiPositionToOffset returns a valid offset" time="0">
    </testcase>
    <testcase classname="blob/codemirror/utils uiPositionToOffset null when the position is not valid inside the document" name="blob/codemirror/utils uiPositionToOffset null when the position is not valid inside the document" time="0.001">
    </testcase>
    <testcase classname="blob/codemirror/utils offsetToUIPosition returns a valid position" name="blob/codemirror/utils offsetToUIPosition returns a valid position" time="0">
    </testcase>
    <testcase classname="blob/codemirror/utils offsetToUIPosition returns a valid range" name="blob/codemirror/utils offsetToUIPosition returns a valid range" time="0">
    </testcase>
    <testcase classname="blob/codemirror/utils sortRangeValuesByStart sort ranges by start line and character" name="blob/codemirror/utils sortRangeValuesByStart sort ranges by start line and character" time="0.001">
    </testcase>
    <testcase classname="blob/codemirror/utils isValidLineRange returns true if the line range is inside the document" name="blob/codemirror/utils isValidLineRange returns true if the line range is inside the document" time="0">
    </testcase>
    <testcase classname="blob/codemirror/utils isValidLineRange returns false if the line range is outside the document" name="blob/codemirror/utils isValidLineRange returns false if the line range is outside the document" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="useScrollManager" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:29" time="0.869" tests="1">
    <testcase classname="useScrollManager handles scroll correctly" name="useScrollManager handles scroll correctly" time="0.065">
    </testcase>
  </testsuite>
  <testsuite name="Icon" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:29" time="1.762" tests="7">
    <testcase classname="Icon custom icons renders a simple inline icon correctly" name="Icon custom icons renders a simple inline icon correctly" time="0.013">
    </testcase>
    <testcase classname="Icon custom icons renders a medium icon correctly" name="Icon custom icons renders a medium icon correctly" time="0.003">
    </testcase>
    <testcase classname="Icon legacy mdi-react icons renders a simple inline icon correctly" name="Icon legacy mdi-react icons renders a simple inline icon correctly" time="0.002">
    </testcase>
    <testcase classname="Icon legacy mdi-react icons renders a medium icon correctly" name="Icon legacy mdi-react icons renders a medium icon correctly" time="0.002">
    </testcase>
    <testcase classname="Icon new @mdi/js icons renders a simple inline icon correctly" name="Icon new @mdi/js icons renders a simple inline icon correctly" time="0.002">
    </testcase>
    <testcase classname="Icon new @mdi/js icons renders a medium icon correctly" name="Icon new @mdi/js icons renders a medium icon correctly" time="0.003">
    </testcase>
    <testcase classname="Icon styled as icons renders a simple span" name="Icon styled as icons renders a simple span" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="scanPredicate" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:30" time="1.026" tests="15">
    <testcase classname="scanPredicate scan recognized and valid syntax" name="scanPredicate scan recognized and valid syntax" time="0.001">
    </testcase>
    <testcase classname="scanPredicate scan recognized dot syntax" name="scanPredicate scan recognized dot syntax" time="0">
    </testcase>
    <testcase classname="scanPredicate scan recognized and valid syntax with escapes" name="scanPredicate scan recognized and valid syntax with escapes" time="0">
    </testcase>
    <testcase classname="scanPredicate scan valid syntax but not recognized" name="scanPredicate scan valid syntax but not recognized" time="0.001">
    </testcase>
    <testcase classname="scanPredicate scan unbalanced syntax" name="scanPredicate scan unbalanced syntax" time="0">
    </testcase>
    <testcase classname="scanPredicate scan invalid nonalphanumeric name" name="scanPredicate scan invalid nonalphanumeric name" time="0">
    </testcase>
    <testcase classname="scanPredicate resolve field aliases for predicates" name="scanPredicate resolve field aliases for predicates" time="0">
    </testcase>
    <testcase classname="scanPredicate scan recognized file:contains.content syntax" name="scanPredicate scan recognized file:contains.content syntax" time="0">
    </testcase>
    <testcase classname="scanPredicate scan invalid repo:contains() syntax" name="scanPredicate scan invalid repo:contains() syntax" time="0">
    </testcase>
    <testcase classname="scanPredicate scan invalid file:contains() syntax" name="scanPredicate scan invalid file:contains() syntax" time="0">
    </testcase>
    <testcase classname="resolveAccess resolves partial access tree" name="resolveAccess resolves partial access tree" time="0">
    </testcase>
    <testcase classname="resolveAccess resolves partial access tree depth 2" name="resolveAccess resolves partial access tree depth 2" time="0">
    </testcase>
    <testcase classname="resolveAccess resolves fully qualified path" name="resolveAccess resolves fully qualified path" time="0.001">
    </testcase>
    <testcase classname="resolveAccess undefind path" name="resolveAccess undefind path" time="0">
    </testcase>
    <testcase classname="resolveAccess invalid predicate syntax" name="resolveAccess invalid predicate syntax" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Parser" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:31" time="0.629" tests="30">
    <testcase classname="Parser !a" name="Parser !a" time="0.001">
    </testcase>
    <testcase classname="Parser &quot;a&quot;" name="Parser &quot;a&quot;" time="0">
    </testcase>
    <testcase classname="Parser `a`" name="Parser `a`" time="0">
    </testcase>
    <testcase classname="Parser `${x}`" name="Parser `${x}`" time="0.001">
    </testcase>
    <testcase classname="Parser `${x}${y}`" name="Parser `${x}${y}`" time="0">
    </testcase>
    <testcase classname="Parser `${x+y}`" name="Parser `${x+y}`" time="0.002">
    </testcase>
    <testcase classname="Parser `a${x}`" name="Parser `a${x}`" time="0">
    </testcase>
    <testcase classname="Parser `${x}b`" name="Parser `${x}b`" time="0.001">
    </testcase>
    <testcase classname="Parser `a${x}b`" name="Parser `a${x}b`" time="0">
    </testcase>
    <testcase classname="Parser `a${x}b${y}c`" name="Parser `a${x}b${y}c`" time="0">
    </testcase>
    <testcase classname="Parser `a${`x${y}z`}b`" name="Parser `a${`x${y}z`}b`" time="0.001">
    </testcase>
    <testcase classname="Parser a &amp;&amp; b" name="Parser a &amp;&amp; b" time="0.001">
    </testcase>
    <testcase classname="Parser a == b &amp;&amp; c == d" name="Parser a == b &amp;&amp; c == d" time="0.001">
    </testcase>
    <testcase classname="Parser (a + b) * c" name="Parser (a + b) * c" time="0">
    </testcase>
    <testcase classname="Parser ab * 1 + x(2, 3)" name="Parser ab * 1 + x(2, 3)" time="0.001">
    </testcase>
    <testcase classname="Parser throws an error on an invalid argument list" name="Parser throws an error on an invalid argument list" time="0.027">
    </testcase>
    <testcase classname="Parser throws an error on an unclosed string" name="Parser throws an error on an unclosed string" time="0.002">
    </testcase>
    <testcase classname="Parser throws an error on an unclosed template" name="Parser throws an error on an unclosed template" time="0">
    </testcase>
    <testcase classname="Parser throws an error on an invalid unary operator" name="Parser throws an error on an invalid unary operator" time="0.057">
    </testcase>
    <testcase classname="Parser throws an error on an invalid binary operator" name="Parser throws an error on an invalid binary operator" time="0">
    </testcase>
    <testcase classname="Parser throws an error on an unclosed function call" name="Parser throws an error on an unclosed function call" time="0.001">
    </testcase>
    <testcase classname="Parser throws an error on an unterminated expression" name="Parser throws an error on an unterminated expression" time="0.001">
    </testcase>
    <testcase classname="TemplateParser ${x}" name="TemplateParser ${x}" time="0.001">
    </testcase>
    <testcase classname="TemplateParser ${x}${y}" name="TemplateParser ${x}${y}" time="0">
    </testcase>
    <testcase classname="TemplateParser ${x+y}" name="TemplateParser ${x+y}" time="0.001">
    </testcase>
    <testcase classname="TemplateParser a${x}" name="TemplateParser a${x}" time="0">
    </testcase>
    <testcase classname="TemplateParser ${x}b" name="TemplateParser ${x}b" time="0">
    </testcase>
    <testcase classname="TemplateParser a${x}b" name="TemplateParser a${x}b" time="0">
    </testcase>
    <testcase classname="TemplateParser a${x}b${y}c" name="TemplateParser a${x}b${y}c" time="0.001">
    </testcase>
    <testcase classname="TemplateParser a${`x${y}z`}b" name="TemplateParser a${`x${y}z`}b" time="0">
    </testcase>
  </testsuite>
  <testsuite name="checkIsSourcegraph()" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:31" time="0.778" tests="3">
    <testcase classname="checkIsSourcegraph() returns true when the location matches the provided sourcegraphServerURL" name="checkIsSourcegraph() returns true when the location matches the provided sourcegraphServerURL" time="0.001">
    </testcase>
    <testcase classname="checkIsSourcegraph() returns true for sourcegraph.com" name="checkIsSourcegraph() returns true for sourcegraph.com" time="0">
    </testcase>
    <testcase classname="checkIsSourcegraph() returns false when the location attempts to impersonate sourcegraph.com" name="checkIsSourcegraph() returns false when the location attempts to impersonate sourcegraph.com" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:32" time="0.395" tests="3">
    <testcase classname=" spec.test.ts" name=" spec.test.ts" time="0.001">
    </testcase>
    <testcase classname="goSpec filters definitions" name="goSpec filters definitions" time="0.001">
    </testcase>
    <testcase classname="goSpec filters definitions from root package" name="goSpec filters definitions from root package" time="0">
    </testcase>
  </testsuite>
  <testsuite name="match" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:32" time="0.461" tests="32">
    <testcase classname="match reports true if any selectors match" name="match reports true if any selectors match" time="0.001">
    </testcase>
    <testcase classname="match reports false if no selectors match" name="match reports false if no selectors match" time="0.001">
    </testcase>
    <testcase classname="match supports iterators for the document selectors" name="match supports iterators for the document selectors" time="0">
    </testcase>
    <testcase classname="score matches" name="score matches" time="0.004">
    </testcase>
    <testcase classname="offsetToPosition 0" name="offsetToPosition 0" time="0.001">
    </testcase>
    <testcase classname="offsetToPosition 1" name="offsetToPosition 1" time="0.001">
    </testcase>
    <testcase classname="offsetToPosition 2" name="offsetToPosition 2" time="0">
    </testcase>
    <testcase classname="offsetToPosition 3" name="offsetToPosition 3" time="0">
    </testcase>
    <testcase classname="offsetToPosition 4" name="offsetToPosition 4" time="0">
    </testcase>
    <testcase classname="offsetToPosition 5" name="offsetToPosition 5" time="0.001">
    </testcase>
    <testcase classname="offsetToPosition 6" name="offsetToPosition 6" time="0">
    </testcase>
    <testcase classname="offsetToPosition 7" name="offsetToPosition 7" time="0">
    </testcase>
    <testcase classname="offsetToPosition 8" name="offsetToPosition 8" time="0.001">
    </testcase>
    <testcase classname="offsetToPosition 9" name="offsetToPosition 9" time="0">
    </testcase>
    <testcase classname="offsetToPosition 10" name="offsetToPosition 10" time="0">
    </testcase>
    <testcase classname="offsetToPosition 11" name="offsetToPosition 11" time="0">
    </testcase>
    <testcase classname="offsetToPosition 12" name="offsetToPosition 12" time="0">
    </testcase>
    <testcase classname="offsetToPosition 13" name="offsetToPosition 13" time="0">
    </testcase>
    <testcase classname="positionToOffset 0" name="positionToOffset 0" time="0">
    </testcase>
    <testcase classname="positionToOffset 1" name="positionToOffset 1" time="0">
    </testcase>
    <testcase classname="positionToOffset 2" name="positionToOffset 2" time="0">
    </testcase>
    <testcase classname="positionToOffset 3" name="positionToOffset 3" time="0">
    </testcase>
    <testcase classname="positionToOffset 4" name="positionToOffset 4" time="0">
    </testcase>
    <testcase classname="positionToOffset 5" name="positionToOffset 5" time="0">
    </testcase>
    <testcase classname="positionToOffset 6" name="positionToOffset 6" time="0">
    </testcase>
    <testcase classname="positionToOffset 7" name="positionToOffset 7" time="0">
    </testcase>
    <testcase classname="positionToOffset 8" name="positionToOffset 8" time="0">
    </testcase>
    <testcase classname="positionToOffset 9" name="positionToOffset 9" time="0">
    </testcase>
    <testcase classname="positionToOffset 10" name="positionToOffset 10" time="0">
    </testcase>
    <testcase classname="positionToOffset 11" name="positionToOffset 11" time="0.016">
    </testcase>
    <testcase classname="positionToOffset 12" name="positionToOffset 12" time="0">
    </testcase>
    <testcase classname="positionToOffset 13" name="positionToOffset 13" time="0">
    </testcase>
  </testsuite>
  <testsuite name="useItemsToShow" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:32" time="0.39" tests="5">
    <testcase classname="useItemsToShow returns expected default values" name="useItemsToShow returns expected default values" time="0.012">
    </testcase>
    <testcase classname="useItemsToShow increases `itemsToShow` value on `handleBottomHit()` call" name="useItemsToShow increases `itemsToShow` value on `handleBottomHit()` call" time="0.003">
    </testcase>
    <testcase classname="useItemsToShow preserves current `itemsToShow` value on a component unmount" name="useItemsToShow preserves current `itemsToShow` value on a component unmount" time="0.003">
    </testcase>
    <testcase classname="useItemsToShow doesn&apos;t go over the current results number" name="useItemsToShow doesn&apos;t go over the current results number" time="0.002">
    </testcase>
    <testcase classname="useItemsToShow resets `itemsToShow` if a new query is provided" name="useItemsToShow resets `itemsToShow` if a new query is provided" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:32" time="0.344" tests="1">
    <testcase classname=" spec.test.ts" name=" spec.test.ts" time="0">
    </testcase>
  </testsuite>
  <testsuite name="BrandLogo" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:32" time="0.595" tests="8">
    <testcase classname="BrandLogo renders light sourcegraph logo" name="BrandLogo renders light sourcegraph logo" time="0.053">
    </testcase>
    <testcase classname="BrandLogo renders light sourcegraph symbol" name="BrandLogo renders light sourcegraph symbol" time="0.006">
    </testcase>
    <testcase classname="BrandLogo renders dark sourcegraph logo" name="BrandLogo renders dark sourcegraph logo" time="0.005">
    </testcase>
    <testcase classname="BrandLogo renders dark sourcegraph symbol" name="BrandLogo renders dark sourcegraph symbol" time="0.011">
    </testcase>
    <testcase classname="BrandLogo renders light custom branding logo" name="BrandLogo renders light custom branding logo" time="0.007">
    </testcase>
    <testcase classname="BrandLogo renders light custom branding symbol" name="BrandLogo renders light custom branding symbol" time="0.006">
    </testcase>
    <testcase classname="BrandLogo renders dark custom branding logo" name="BrandLogo renders dark custom branding logo" time="0.004">
    </testcase>
    <testcase classname="BrandLogo renders dark custom branding symbol" name="BrandLogo renders dark custom branding symbol" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="searchResultsToFileContent" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:32" time="0.799" tests="15">
    <testcase classname="searchResultsToFileContent returns correct content for searchType &quot;null&quot;" name="searchResultsToFileContent returns correct content for searchType &quot;null&quot;" time="0.003">
    </testcase>
    <testcase classname="searchResultsToFileContent returns correct content for searchType &quot;file&quot;" name="searchResultsToFileContent returns correct content for searchType &quot;file&quot;" time="0.001">
    </testcase>
    <testcase classname="searchResultsToFileContent returns correct content for searchType &quot;repo&quot;" name="searchResultsToFileContent returns correct content for searchType &quot;repo&quot;" time="0.001">
    </testcase>
    <testcase classname="searchResultsToFileContent returns correct content for searchType &quot;path&quot;" name="searchResultsToFileContent returns correct content for searchType &quot;path&quot;" time="0.001">
    </testcase>
    <testcase classname="searchResultsToFileContent returns correct content for searchType &quot;symbol&quot;" name="searchResultsToFileContent returns correct content for searchType &quot;symbol&quot;" time="0.003">
    </testcase>
    <testcase classname="searchResultsToFileContent returns correct content for searchType &quot;diff&quot;" name="searchResultsToFileContent returns correct content for searchType &quot;diff&quot;" time="0.002">
    </testcase>
    <testcase classname="searchResultsToFileContent returns correct content for searchType &quot;commit&quot;" name="searchResultsToFileContent returns correct content for searchType &quot;commit&quot;" time="0.007">
    </testcase>
    <testcase classname="searchResultsToFileContent returns correct content for searchType &quot;owner&quot;" name="searchResultsToFileContent returns correct content for searchType &quot;owner&quot;" time="0">
    </testcase>
    <testcase classname="searchResultsToFileContent returns correct content for repo match with enableRepositoryMetadata=true" name="searchResultsToFileContent returns correct content for repo match with enableRepositoryMetadata=true" time="0.001">
    </testcase>
    <testcase classname="buildFileName builds correct fileName from query &quot;context:global code host &quot;" name="buildFileName builds correct fileName from query &quot;context:global code host &quot;" time="0.001">
    </testcase>
    <testcase classname="buildFileName builds correct fileName from query &quot;context:global code host count:200 type:path &quot;" name="buildFileName builds correct fileName from query &quot;context:global code host count:200 type:path &quot;" time="0">
    </testcase>
    <testcase classname="buildFileName builds correct fileName from query &quot;context:global code host count:200 type:commit&quot;" name="buildFileName builds correct fileName from query &quot;context:global code host count:200 type:commit&quot;" time="0">
    </testcase>
    <testcase classname="buildFileName builds correct fileName from query &quot;context:global nice type:diff&quot;" name="buildFileName builds correct fileName from query &quot;context:global nice type:diff&quot;" time="0">
    </testcase>
    <testcase classname="buildFileName builds correct fileName from query &quot;context:global reac.. json&quot;" name="buildFileName builds correct fileName from query &quot;context:global reac.. json&quot;" time="0">
    </testcase>
    <testcase classname="buildFileName builds correct fileName from query &quot;context:global function greeting( &quot;" name="buildFileName builds correct fileName from query &quot;context:global function greeting( &quot;" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="PrefixSumComputer" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:31" time="2.675" tests="1">
    <testcase classname="PrefixSumComputer PrefixSumComputer" name="PrefixSumComputer PrefixSumComputer" time="0.029">
    </testcase>
  </testsuite>
  <testsuite name="H2" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:33" time="0.443" tests="2">
    <testcase classname="H2 should render correctly" name="H2 should render correctly" time="0.017">
    </testcase>
    <testcase classname="H2 renders correctly with `as`" name="H2 renders correctly with `as`" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="useURLSyncedString" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:33" time="0.731" tests="3">
    <testcase classname="useURLSyncedString should return default value if no URL search param is set" name="useURLSyncedString should return default value if no URL search param is set" time="0.021">
    </testcase>
    <testcase classname="useURLSyncedString should sync state with URL search parameters" name="useURLSyncedString should sync state with URL search parameters" time="0.087">
    </testcase>
    <testcase classname="useURLSyncedString should not override other useURLSyncedString states" name="useURLSyncedString should not override other useURLSyncedString states" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="rectangle should calculate intersection" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:34" time="0.554" tests="3">
    <testcase classname="rectangle should calculate intersection with {
  left: 500,
  top: 500,
  width: 200,
  height: 200,
  right: 700,
  bottom: 700
} and { left: 0, top: 0, width: 600, height: 600, right: 600, bottom: 600 } rectangles" name="rectangle should calculate intersection with {
  left: 500,
  top: 500,
  width: 200,
  height: 200,
  right: 700,
  bottom: 700
} and { left: 0, top: 0, width: 600, height: 600, right: 600, bottom: 600 } rectangles" time="0.001">
    </testcase>
    <testcase classname="rectangle should calculate intersection with { left: 0, top: 0, width: 200, height: 200, right: 200, bottom: 200 } and { left: 10, top: 10, width: 600, height: 600, right: 610, bottom: 610 } rectangles" name="rectangle should calculate intersection with { left: 0, top: 0, width: 200, height: 200, right: 200, bottom: 200 } and { left: 10, top: 10, width: 600, height: 600, right: 610, bottom: 610 } rectangles" time="0">
    </testcase>
    <testcase classname="rectangle should calculate intersection with { left: 0, top: 0, width: 200, height: 200, right: 200, bottom: 200 } and {
  left: 210,
  top: 210,
  width: 600,
  height: 600,
  right: 810,
  bottom: 810
} rectangles" name="rectangle should calculate intersection with { left: 0, top: 0, width: 200, height: 200, right: 200, bottom: 200 } and {
  left: 210,
  top: 210,
  width: 600,
  height: 600,
  right: 810,
  bottom: 810
} rectangles" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="Button" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:34" time="0.781" tests="13">
    <testcase classname="Button renders a simple button correctly" name="Button renders a simple button correctly" time="0.015">
    </testcase>
    <testcase classname="Button supports rendering as different elements" name="Button supports rendering as different elements" time="0.002">
    </testcase>
    <testcase classname="Button Renders variant &apos;primary&apos; correctly" name="Button Renders variant &apos;primary&apos; correctly" time="0.002">
    </testcase>
    <testcase classname="Button Renders variant &apos;secondary&apos; correctly" name="Button Renders variant &apos;secondary&apos; correctly" time="0.002">
    </testcase>
    <testcase classname="Button Renders variant &apos;success&apos; correctly" name="Button Renders variant &apos;success&apos; correctly" time="0.002">
    </testcase>
    <testcase classname="Button Renders variant &apos;danger&apos; correctly" name="Button Renders variant &apos;danger&apos; correctly" time="0.002">
    </testcase>
    <testcase classname="Button Renders variant &apos;warning&apos; correctly" name="Button Renders variant &apos;warning&apos; correctly" time="0.001">
    </testcase>
    <testcase classname="Button Renders variant &apos;info&apos; correctly" name="Button Renders variant &apos;info&apos; correctly" time="0.001">
    </testcase>
    <testcase classname="Button Renders variant &apos;merged&apos; correctly" name="Button Renders variant &apos;merged&apos; correctly" time="0.002">
    </testcase>
    <testcase classname="Button Renders variant &apos;link&apos; correctly" name="Button Renders variant &apos;link&apos; correctly" time="0.001">
    </testcase>
    <testcase classname="Button Renders variant &apos;icon&apos; correctly" name="Button Renders variant &apos;icon&apos; correctly" time="0.002">
    </testcase>
    <testcase classname="Button Renders size &apos;sm&apos; correctly" name="Button Renders size &apos;sm&apos; correctly" time="0.001">
    </testcase>
    <testcase classname="Button Renders size &apos;lg&apos; correctly" name="Button Renders size &apos;lg&apos; correctly" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="languageCompletion" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:34" time="0.338" tests="2">
    <testcase classname="languageCompletion suggest popular languages" name="languageCompletion suggest popular languages" time="0.002">
    </testcase>
    <testcase classname="languageCompletion suggest all languages" name="languageCompletion suggest all languages" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="case-insensitive fuzzy search" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:34" time="0.979" tests="6">
    <testcase classname="case-insensitive fuzzy search fuzzyMatches-no-separator" name="case-insensitive fuzzy search fuzzyMatches-no-separator" time="0.008">
    </testcase>
    <testcase classname="case-insensitive fuzzy search fuzzyMatches-exact-match-first" name="case-insensitive fuzzy search fuzzyMatches-exact-match-first" time="0.003">
    </testcase>
    <testcase classname="case-insensitive fuzzy search fuzzyMatches-space-union" name="case-insensitive fuzzy search fuzzyMatches-space-union" time="0.013">
    </testcase>
    <testcase classname="case-insensitive fuzzy search fuzzyMatches-exact-match" name="case-insensitive fuzzy search fuzzyMatches-exact-match" time="0.004">
    </testcase>
    <testcase classname="case-insensitive fuzzy search fuzzyMatches-no-smart-case" name="case-insensitive fuzzy search fuzzyMatches-no-smart-case" time="0.002">
    </testcase>
    <testcase classname="case-insensitive fuzzy search fuzzyMatches-buggy-cache" name="case-insensitive fuzzy search fuzzyMatches-buggy-cache" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="getRelevantTokens" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:35" time="0.584" tests="9">
    <testcase classname="getRelevantTokens branch logic preserves sequences" name="getRelevantTokens branch logic preserves sequences" time="0.004">
    </testcase>
    <testcase classname="getRelevantTokens branch logic preserves the target OR branch" name="getRelevantTokens branch logic preserves the target OR branch" time="0.001">
    </testcase>
    <testcase classname="getRelevantTokens branch logic preserves both AND branches" name="getRelevantTokens branch logic preserves both AND branches" time="0">
    </testcase>
    <testcase classname="getRelevantTokens branch logic preserves OR branches inside targeted AND branches" name="getRelevantTokens branch logic preserves OR branches inside targeted AND branches" time="0.001">
    </testcase>
    <testcase classname="getRelevantTokens custom filters only preserves tokens for which the filter function returns true" name="getRelevantTokens custom filters only preserves tokens for which the filter function returns true" time="0.001">
    </testcase>
    <testcase classname="getRelevantTokens custom filters preserves one branch if the other is filtered out" name="getRelevantTokens custom filters preserves one branch if the other is filtered out" time="0">
    </testcase>
    <testcase classname="getRelevantTokens tokens preserves quoted filter values" name="getRelevantTokens tokens preserves quoted filter values" time="0.001">
    </testcase>
    <testcase classname="getRelevantTokens tokens preserves regex literals" name="getRelevantTokens tokens preserves regex literals" time="0">
    </testcase>
    <testcase classname="getRelevantTokens tokens preserves negated tokens" name="getRelevantTokens tokens preserves negated tokens" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="shortenPath" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:35" time="0.762" tests="3">
    <testcase classname="shortenPath returns the original path when it is shorter than the desired length" name="shortenPath returns the original path when it is shorter than the desired length" time="0.001">
    </testcase>
    <testcase classname="shortenPath returns the original path when it does not have sufficient segments" name="shortenPath returns the original path when it does not have sufficient segments" time="0">
    </testcase>
    <testcase classname="shortenPath preserves the first and last two segements" name="shortenPath preserves the first and last two segements" time="0">
    </testcase>
  </testsuite>
  <testsuite name="prettyBytesBigint" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:35" time="1.21" tests="7">
    <testcase classname="prettyBytesBigint pretty prints 1.23 Gb" name="prettyBytesBigint pretty prints 1.23 Gb" time="0.002">
    </testcase>
    <testcase classname="prettyBytesBigint pretty prints 1.02 Gb" name="prettyBytesBigint pretty prints 1.02 Gb" time="0">
    </testcase>
    <testcase classname="prettyBytesBigint pretty prints 500.50 Gb" name="prettyBytesBigint pretty prints 500.50 Gb" time="0">
    </testcase>
    <testcase classname="prettyBytesBigint pretty prints 50.05 Tb" name="prettyBytesBigint pretty prints 50.05 Tb" time="0.001">
    </testcase>
    <testcase classname="prettyBytesBigint pretty prints 50 Gb" name="prettyBytesBigint pretty prints 50 Gb" time="0.001">
    </testcase>
    <testcase classname="prettyBytesBigint pretty prints 1 Mb" name="prettyBytesBigint pretty prints 1 Mb" time="0">
    </testcase>
    <testcase classname="prettyBytesBigint pretty prints 999 Mb" name="prettyBytesBigint pretty prints 999 Mb" time="0">
    </testcase>
  </testsuite>
  <testsuite name="useURLSyncedState" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:35" time="1.668" tests="1">
    <testcase classname="useURLSyncedState should sync state with URL search parameters" name="useURLSyncedState should sync state with URL search parameters" time="0.062">
    </testcase>
  </testsuite>
  <testsuite name="Code" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:36" time="0.552" tests="2">
    <testcase classname="Code renders a simple text code correctly" name="Code renders a simple text code correctly" time="0.013">
    </testcase>
    <testcase classname="Code supports rendering as different elements" name="Code supports rendering as different elements" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="H6" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:36" time="0.882" tests="2">
    <testcase classname="H6 should render correctly" name="H6 should render correctly" time="0.025">
    </testcase>
    <testcase classname="H6 should render correctly with `as`" name="H6 should render correctly with `as`" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="SyntaxHighlightedSearchQuery" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:36" time="0.973" tests="4">
    <testcase classname="SyntaxHighlightedSearchQuery should syntax highlight filter" name="SyntaxHighlightedSearchQuery should syntax highlight filter" time="0.058">
    </testcase>
    <testcase classname="SyntaxHighlightedSearchQuery should syntax highlight operator" name="SyntaxHighlightedSearchQuery should syntax highlight operator" time="0.008">
    </testcase>
    <testcase classname="SyntaxHighlightedSearchQuery should syntax highlight negated filter" name="SyntaxHighlightedSearchQuery should syntax highlight negated filter" time="0.005">
    </testcase>
    <testcase classname="SyntaxHighlightedSearchQuery should syntax highlight filter and operator" name="SyntaxHighlightedSearchQuery should syntax highlight filter and operator" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="parseSearchQuery" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:31" time="6.725" tests="10">
    <testcase classname="parseSearchQuery query with leaves" name="parseSearchQuery query with leaves" time="0.046">
    </testcase>
    <testcase classname="parseSearchQuery query with and" name="parseSearchQuery query with and" time="0.001">
    </testcase>
    <testcase classname="parseSearchQuery query with or" name="parseSearchQuery query with or" time="0.001">
    </testcase>
    <testcase classname="parseSearchQuery query with not" name="parseSearchQuery query with not" time="0">
    </testcase>
    <testcase classname="parseSearchQuery query with and/or operator precedence" name="parseSearchQuery query with and/or operator precedence" time="0.001">
    </testcase>
    <testcase classname="parseSearchQuery query with parentheses that override precedence" name="parseSearchQuery query with parentheses that override precedence" time="0.004">
    </testcase>
    <testcase classname="parseSearchQuery query with nested parentheses" name="parseSearchQuery query with nested parentheses" time="0.001">
    </testcase>
    <testcase classname="parseSearchQuery query with mixed parenthesis and implicit AND" name="parseSearchQuery query with mixed parenthesis and implicit AND" time="0.001">
    </testcase>
    <testcase classname="parseSearchQuery query with mixed explicit OR and implicit AND operators" name="parseSearchQuery query with mixed explicit OR and implicit AND operators" time="0.001">
    </testcase>
    <testcase classname="parseSearchQuery query with mixed explicit and implicit operators inside parens" name="parseSearchQuery query with mixed explicit and implicit operators inside parens" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="getMonacoTokens()" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:37" time="0.674" tests="36">
    <testcase classname="getMonacoTokens() returns the tokens for a parsed search query" name="getMonacoTokens() returns the tokens for a parsed search query" time="0.009">
    </testcase>
    <testcase classname="getMonacoTokens() search query containing parenthesized parameters" name="getMonacoTokens() search query containing parenthesized parameters" time="0.001">
    </testcase>
    <testcase classname="getMonacoTokens() no decoration for literal" name="getMonacoTokens() no decoration for literal" time="0">
    </testcase>
    <testcase classname="getMonacoTokens() decorate regexp character set and group" name="getMonacoTokens() decorate regexp character set and group" time="0.001">
    </testcase>
    <testcase classname="getMonacoTokens() decorate regexp assertion" name="getMonacoTokens() decorate regexp assertion" time="0.071">
    </testcase>
    <testcase classname="getMonacoTokens() decorate regexp quantifiers" name="getMonacoTokens() decorate regexp quantifiers" time="0.001">
    </testcase>
    <testcase classname="getMonacoTokens() decorate range quantifier" name="getMonacoTokens() decorate range quantifier" time="0.002">
    </testcase>
    <testcase classname="getMonacoTokens() decorate paren groups" name="getMonacoTokens() decorate paren groups" time="0">
    </testcase>
    <testcase classname="getMonacoTokens() decorate non-capturing paren groups" name="getMonacoTokens() decorate non-capturing paren groups" time="0.001">
    </testcase>
    <testcase classname="getMonacoTokens() decorate character classes" name="getMonacoTokens() decorate character classes" time="0.001">
    </testcase>
    <testcase classname="getMonacoTokens() decorate character classes" name="getMonacoTokens() decorate character classes" time="0">
    </testcase>
    <testcase classname="getMonacoTokens() decorate regexp field values" name="getMonacoTokens() decorate regexp field values" time="0.001">
    </testcase>
    <testcase classname="getMonacoTokens() decorate regexp | operator, single pattern" name="getMonacoTokens() decorate regexp | operator, single pattern" time="0.001">
    </testcase>
    <testcase classname="getMonacoTokens() decorate regexp | operator, multiple patterns" name="getMonacoTokens() decorate regexp | operator, multiple patterns" time="0">
    </testcase>
    <testcase classname="getMonacoTokens() decorate escaped characters" name="getMonacoTokens() decorate escaped characters" time="0">
    </testcase>
    <testcase classname="getMonacoTokens() decorate structural holes" name="getMonacoTokens() decorate structural holes" time="0.001">
    </testcase>
    <testcase classname="getMonacoTokens() decorate structural holes with valid inlined regexp" name="getMonacoTokens() decorate structural holes with valid inlined regexp" time="0.002">
    </testcase>
    <testcase classname="getMonacoTokens() decorate structural holes with valid inlined regexp, no variable" name="getMonacoTokens() decorate structural holes with valid inlined regexp, no variable" time="0.004">
    </testcase>
    <testcase classname="getMonacoTokens() decorate structural hole ... alias" name="getMonacoTokens() decorate structural hole ... alias" time="0.002">
    </testcase>
    <testcase classname="getMonacoTokens() decorate structural hole ... alias" name="getMonacoTokens() decorate structural hole ... alias" time="0.002">
    </testcase>
    <testcase classname="getMonacoTokens() decorate repo revision syntax, separate revisions" name="getMonacoTokens() decorate repo revision syntax, separate revisions" time="0.001">
    </testcase>
    <testcase classname="getMonacoTokens() decorate revision field syntax, separate revisions" name="getMonacoTokens() decorate revision field syntax, separate revisions" time="0.001">
    </testcase>
    <testcase classname="getMonacoTokens() do not decorate regex syntax when filter value is quoted" name="getMonacoTokens() do not decorate regex syntax when filter value is quoted" time="0.001">
    </testcase>
    <testcase classname="getMonacoTokens() decorate repo revision syntax, path with wildcard and negation" name="getMonacoTokens() decorate repo revision syntax, path with wildcard and negation" time="0.002">
    </testcase>
    <testcase classname="getMonacoTokens() decorate search context value" name="getMonacoTokens() decorate search context value" time="0">
    </testcase>
    <testcase classname="getMonacoTokens() returns path separator tokens for regexp values" name="getMonacoTokens() returns path separator tokens for regexp values" time="0.001">
    </testcase>
    <testcase classname="getMonacoTokens() returns regexp highlighting if path separators cannot be parsed" name="getMonacoTokens() returns regexp highlighting if path separators cannot be parsed" time="0.001">
    </testcase>
    <testcase classname="getMonacoTokens() highlight recognized predicate with body as regexp" name="getMonacoTokens() highlight recognized predicate with body as regexp" time="0.001">
    </testcase>
    <testcase classname="getMonacoTokens() highlight recognized predicate with multiple fields" name="getMonacoTokens() highlight recognized predicate with multiple fields" time="0.001">
    </testcase>
    <testcase classname="getMonacoTokens() highlight repo:has.file predicate" name="getMonacoTokens() highlight repo:has.file predicate" time="0.001">
    </testcase>
    <testcase classname="getMonacoTokens() highlight repo:has.topic predicate" name="getMonacoTokens() highlight repo:has.topic predicate" time="0">
    </testcase>
    <testcase classname="getMonacoTokens() highlight repo:has.description predicate" name="getMonacoTokens() highlight repo:has.description predicate" time="0">
    </testcase>
    <testcase classname="getMonacoTokens() highlight repo:has predicate" name="getMonacoTokens() highlight repo:has predicate" time="0">
    </testcase>
    <testcase classname="getMonacoTokens() highlight repo:has.tag predicate" name="getMonacoTokens() highlight repo:has.tag predicate" time="0.001">
    </testcase>
    <testcase classname="getMonacoTokens() highlight repo:has.key predicate" name="getMonacoTokens() highlight repo:has.key predicate" time="0">
    </testcase>
    <testcase classname="getMonacoTokens() highlight regex delimited pattern for standard search" name="getMonacoTokens() highlight regex delimited pattern for standard search" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="parseUrlOverrideFeatureFlags" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:37" time="0.534" tests="2">
    <testcase classname="parseUrlOverrideFeatureFlags parses single key" name="parseUrlOverrideFeatureFlags parses single key" time="0.002">
    </testcase>
    <testcase classname="parseUrlOverrideFeatureFlags parses multiple keys" name="parseUrlOverrideFeatureFlags parses multiple keys" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="scanBalancedPattern()" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:38" time="0.629" tests="41">
    <testcase classname="scanBalancedPattern() balanced, scans up to whitespace" name="scanBalancedPattern() balanced, scans up to whitespace" time="0.002">
    </testcase>
    <testcase classname="scanBalancedPattern() balanced, consumes spaces" name="scanBalancedPattern() balanced, consumes spaces" time="0.001">
    </testcase>
    <testcase classname="scanBalancedPattern() balanced, consumes unrecognized filter-like value" name="scanBalancedPattern() balanced, consumes unrecognized filter-like value" time="0.001">
    </testcase>
    <testcase classname="scanBalancedPattern() not recognized, contains not keyword" name="scanBalancedPattern() not recognized, contains not keyword" time="0.001">
    </testcase>
    <testcase classname="scanBalancedPattern() not recognized, starts with a not keyword" name="scanBalancedPattern() not recognized, starts with a not keyword" time="0">
    </testcase>
    <testcase classname="scanBalancedPattern() not recognized, contains an or keyword" name="scanBalancedPattern() not recognized, contains an or keyword" time="0.001">
    </testcase>
    <testcase classname="scanBalancedPattern() not recognized, contains an and keyword" name="scanBalancedPattern() not recognized, contains an and keyword" time="0">
    </testcase>
    <testcase classname="scanBalancedPattern() not recognized, contains a recognized repo field" name="scanBalancedPattern() not recognized, contains a recognized repo field" time="0.051">
    </testcase>
    <testcase classname="scanBalancedPattern() balanced, no conflicting tokens" name="scanBalancedPattern() balanced, no conflicting tokens" time="0">
    </testcase>
    <testcase classname="scanBalancedPattern() not recognized, unbalanced" name="scanBalancedPattern() not recognized, unbalanced" time="0">
    </testcase>
    <testcase classname="scanBalancedPattern() single unbalanced paren" name="scanBalancedPattern() single unbalanced paren" time="0">
    </testcase>
    <testcase classname="scanSearchQuery() for literal search empty" name="scanSearchQuery() for literal search empty" time="0.001">
    </testcase>
    <testcase classname="scanSearchQuery() for literal search whitespace" name="scanSearchQuery() for literal search whitespace" time="0">
    </testcase>
    <testcase classname="scanSearchQuery() for literal search literal" name="scanSearchQuery() for literal search literal" time="0.001">
    </testcase>
    <testcase classname="scanSearchQuery() for literal search triple quotes" name="scanSearchQuery() for literal search triple quotes" time="0">
    </testcase>
    <testcase classname="scanSearchQuery() for literal search filter" name="scanSearchQuery() for literal search filter" time="0.001">
    </testcase>
    <testcase classname="scanSearchQuery() for literal search negated filter" name="scanSearchQuery() for literal search negated filter" time="0.001">
    </testcase>
    <testcase classname="scanSearchQuery() for literal search filter with quoted value" name="scanSearchQuery() for literal search filter with quoted value" time="0">
    </testcase>
    <testcase classname="scanSearchQuery() for literal search filter with a value ending with a colon" name="scanSearchQuery() for literal search filter with a value ending with a colon" time="0.001">
    </testcase>
    <testcase classname="scanSearchQuery() for literal search filter where the value is a colon" name="scanSearchQuery() for literal search filter where the value is a colon" time="0">
    </testcase>
    <testcase classname="scanSearchQuery() for literal search quoted, double quotes, literal" name="scanSearchQuery() for literal search quoted, double quotes, literal" time="0.001">
    </testcase>
    <testcase classname="scanSearchQuery() for literal search quoted, double quotes, regexp" name="scanSearchQuery() for literal search quoted, double quotes, regexp" time="0.001">
    </testcase>
    <testcase classname="scanSearchQuery() for literal search quoted, single quotes, literal" name="scanSearchQuery() for literal search quoted, single quotes, literal" time="0">
    </testcase>
    <testcase classname="scanSearchQuery() for literal search quoted, single quotes, regexp" name="scanSearchQuery() for literal search quoted, single quotes, regexp" time="0">
    </testcase>
    <testcase classname="scanSearchQuery() for literal search quoted (do not escape quotes in literal mode)" name="scanSearchQuery() for literal search quoted (do not escape quotes in literal mode)" time="0">
    </testcase>
    <testcase classname="scanSearchQuery() for literal search quoted (escape quotes in regex mode)" name="scanSearchQuery() for literal search quoted (escape quotes in regex mode)" time="0">
    </testcase>
    <testcase classname="scanSearchQuery() for literal search complex query" name="scanSearchQuery() for literal search complex query" time="0.001">
    </testcase>
    <testcase classname="scanSearchQuery() for literal search parenthesized parameters" name="scanSearchQuery() for literal search parenthesized parameters" time="0.001">
    </testcase>
    <testcase classname="scanSearchQuery() for literal search nested parenthesized parameters" name="scanSearchQuery() for literal search nested parenthesized parameters" time="0">
    </testcase>
    <testcase classname="scanSearchQuery() for literal search do not treat links as filters" name="scanSearchQuery() for literal search do not treat links as filters" time="0">
    </testcase>
    <testcase classname="scanSearchQuery() for regexp interpret regexp pattern with match groups" name="scanSearchQuery() for regexp interpret regexp pattern with match groups" time="0">
    </testcase>
    <testcase classname="scanSearchQuery() for regexp interpret regexp pattern with match groups between keywords" name="scanSearchQuery() for regexp interpret regexp pattern with match groups between keywords" time="0.001">
    </testcase>
    <testcase classname="scanSearchQuery() for regexp interpret regexp slash quotes" name="scanSearchQuery() for regexp interpret regexp slash quotes" time="0">
    </testcase>
    <testcase classname="scanSearchQuery() for standard scan literal and regexp patterns" name="scanSearchQuery() for standard scan literal and regexp patterns" time="0">
    </testcase>
    <testcase classname="scanSearchQuery() with comments interpret C-style comments" name="scanSearchQuery() with comments interpret C-style comments" time="0.001">
    </testcase>
    <testcase classname="scanSearchQuery() with comments do not interpret C-style comments" name="scanSearchQuery() with comments do not interpret C-style comments" time="0">
    </testcase>
    <testcase classname="scanSearchQuery() with predicate recognize predicate" name="scanSearchQuery() with predicate recognize predicate" time="0">
    </testcase>
    <testcase classname="scanSearchQuery() with predicate recognize multiple predicates over whitespace" name="scanSearchQuery() with predicate recognize multiple predicates over whitespace" time="0">
    </testcase>
    <testcase classname="scanSearchQuery() with predicate recognize parenthesized predicate" name="scanSearchQuery() with predicate recognize parenthesized predicate" time="0">
    </testcase>
    <testcase classname="scanSearchQuery() with predicate recognize `not` and other keywords in literal search where unquoted terms might appear to be quoted" name="scanSearchQuery() with predicate recognize `not` and other keywords in literal search where unquoted terms might appear to be quoted" time="0">
    </testcase>
    <testcase classname="scanSearchQuery() with predicate detect patterntype inside query" name="scanSearchQuery() with predicate detect patterntype inside query" time="0">
    </testcase>
  </testsuite>
  <testsuite name="hashCode" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:38" time="0.619" tests="2">
    <testcase classname="hashCode UUIDs" name="hashCode UUIDs" time="0.021">
    </testcase>
    <testcase classname="hashCode is deterministic" name="hashCode is deterministic" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;StackedMeter /&gt;" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:37" time="1.007" tests="1">
    <testcase classname="&lt;StackedMeter /&gt; renders correctly" name="&lt;StackedMeter /&gt; renders correctly" time="0.038">
    </testcase>
  </testsuite>
  <testsuite name="searchQueryValidator" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:38" time="0.522" tests="9">
    <testcase classname="searchQueryValidator validates a known good string" name="searchQueryValidator validates a known good string" time="0.005">
    </testcase>
    <testcase classname="searchQueryValidator validates not containing `and`" name="searchQueryValidator validates not containing `and`" time="0.001">
    </testcase>
    <testcase classname="searchQueryValidator validates not containing `or`" name="searchQueryValidator validates not containing `or`" time="0.001">
    </testcase>
    <testcase classname="searchQueryValidator validates not containing `not`" name="searchQueryValidator validates not containing `not`" time="0">
    </testcase>
    <testcase classname="searchQueryValidator validates not using `repo`" name="searchQueryValidator validates not using `repo`" time="0.001">
    </testcase>
    <testcase classname="searchQueryValidator validates not using `commit` or `diff`" name="searchQueryValidator validates not using `commit` or `diff`" time="0">
    </testcase>
    <testcase classname="searchQueryValidator validates not using `commit` or `diff`" name="searchQueryValidator validates not using `commit` or `diff`" time="0.001">
    </testcase>
    <testcase classname="searchQueryValidator validates no new lines" name="searchQueryValidator validates no new lines" time="0">
    </testcase>
    <testcase classname="searchQueryValidator validates not using `rev`" name="searchQueryValidator validates not using `rev`" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="H1" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:38" time="0.661" tests="2">
    <testcase classname="H1 should render correctly" name="H1 should render correctly" time="0.023">
    </testcase>
    <testcase classname="H1 should render correctly with `as`" name="H1 should render correctly with `as`" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="MultiSelectContextProvider" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:39" time="0.628" tests="6">
    <testcase classname="MultiSelectContextProvider providers are initially empty" name="MultiSelectContextProvider providers are initially empty" time="0.023">
    </testcase>
    <testcase classname="MultiSelectContextProvider selecting and deselecting single IDs works" name="MultiSelectContextProvider selecting and deselecting single IDs works" time="0.003">
    </testcase>
    <testcase classname="MultiSelectContextProvider selecting and deselecting visible works" name="MultiSelectContextProvider selecting and deselecting visible works" time="0.007">
    </testcase>
    <testcase classname="MultiSelectContextProvider selecting and deselecting additional visible works" name="MultiSelectContextProvider selecting and deselecting additional visible works" time="0.014">
    </testcase>
    <testcase classname="MultiSelectContextProvider selecting and deselecting additional visible after filter works" name="MultiSelectContextProvider selecting and deselecting additional visible after filter works" time="0.005">
    </testcase>
    <testcase classname="MultiSelectContextProvider selecting and deselecting all works" name="MultiSelectContextProvider selecting and deselecting all works" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="isErrorLike" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:38" time="0.835" tests="6">
    <testcase classname="isErrorLike reports true for Error values" name="isErrorLike reports true for Error values" time="0.001">
    </testcase>
    <testcase classname="isErrorLike reports true for error-like values" name="isErrorLike reports true for error-like values" time="0">
    </testcase>
    <testcase classname="isErrorLike reports false for non-error-like values" name="isErrorLike reports false for non-error-like values" time="0.001">
    </testcase>
    <testcase classname="asError preserves Error values" name="asError preserves Error values" time="0">
    </testcase>
    <testcase classname="asError creates Error values from error-like values" name="asError creates Error values from error-like values" time="0">
    </testcase>
    <testcase classname="asError creates Error values from strings" name="asError creates Error values from strings" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="persistenceMapper" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:38" time="0.844" tests="5">
    <testcase classname="persistenceMapper does not persist anything if the cache is empty" name="persistenceMapper does not persist anything if the cache is empty" time="0.001">
    </testcase>
    <testcase classname="persistenceMapper persists only hardcoded queries" name="persistenceMapper persists only hardcoded queries" time="0">
    </testcase>
    <testcase classname="persistenceMapper persists cache references" name="persistenceMapper persists cache references" time="0.001">
    </testcase>
    <testcase classname="persistenceMapper persists array of cache references" name="persistenceMapper persists array of cache references" time="0.001">
    </testcase>
    <testcase classname="persistenceMapper persists deeply nested cache references" name="persistenceMapper persists deeply nested cache references" time="0">
    </testcase>
  </testsuite>
  <testsuite name="collectMetrics" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:39" time="0.559" tests="7">
    <testcase classname="collectMetrics operators" name="collectMetrics operators" time="0.002">
    </testcase>
    <testcase classname="collectMetrics predicates" name="collectMetrics predicates" time="0">
    </testcase>
    <testcase classname="collectMetrics only patterns" name="collectMetrics only patterns" time="0.001">
    </testcase>
    <testcase classname="collectMetrics personal context" name="collectMetrics personal context" time="0">
    </testcase>
    <testcase classname="collectMetrics exhaustive count:all" name="collectMetrics exhaustive count:all" time="0.001">
    </testcase>
    <testcase classname="collectMetrics select" name="collectMetrics select" time="0.009">
    </testcase>
    <testcase classname="collectMetrics uninteresting" name="collectMetrics uninteresting" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="finds a filter" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:39" time="0.35" tests="10">
    <testcase classname="finds a filter valid global filter" name="finds a filter valid global filter" time="0.002">
    </testcase>
    <testcase classname="finds a filter invalid global filter for more than one filter" name="finds a filter invalid global filter for more than one filter" time="0">
    </testcase>
    <testcase classname="finds a filter invalid global filter for subexpression filter" name="finds a filter invalid global filter for subexpression filter" time="0.001">
    </testcase>
    <testcase classname="finds a filter valid single subexpression filter" name="finds a filter valid single subexpression filter" time="0">
    </testcase>
    <testcase classname="finds a filter valid multiple subexpression filters" name="finds a filter valid multiple subexpression filters" time="0">
    </testcase>
    <testcase classname="finds a filter invalid subexpression filter when global" name="finds a filter invalid subexpression filter when global" time="0.001">
    </testcase>
    <testcase classname="isContextFilterInQuery no context filter in query" name="isContextFilterInQuery no context filter in query" time="0">
    </testcase>
    <testcase classname="isContextFilterInQuery context filter in query" name="isContextFilterInQuery context filter in query" time="0">
    </testcase>
    <testcase classname="isContextFilterInQuery context filters in both subexpressions" name="isContextFilterInQuery context filters in both subexpressions" time="0">
    </testcase>
    <testcase classname="isContextFilterInQuery context filters in one subexpression" name="isContextFilterInQuery context filters in one subexpression" time="0">
    </testcase>
  </testsuite>
  <testsuite name="formatDuration should work properly " errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:39" time="0.296" tests="9">
    <testcase classname="formatDuration should work properly  with minutes" name="formatDuration should work properly  with minutes" time="0.005">
    </testcase>
    <testcase classname="formatDuration should work properly  with hours" name="formatDuration should work properly  with hours" time="0">
    </testcase>
    <testcase classname="formatDuration should work properly  with hours and days" name="formatDuration should work properly  with hours and days" time="0">
    </testcase>
    <testcase classname="formatDuration should work properly  with days" name="formatDuration should work properly  with days" time="0.001">
    </testcase>
    <testcase classname="formatDuration should work properly  with days and week" name="formatDuration should work properly  with days and week" time="0">
    </testcase>
    <testcase classname="formatDuration should work properly  with weeks" name="formatDuration should work properly  with weeks" time="0">
    </testcase>
    <testcase classname="formatDuration should work properly  with weeks and months" name="formatDuration should work properly  with weeks and months" time="0">
    </testcase>
    <testcase classname="formatDuration should work properly  with mounts" name="formatDuration should work properly  with mounts" time="0">
    </testcase>
    <testcase classname="formatDuration should work properly  with mounts and years" name="formatDuration should work properly  with mounts and years" time="0">
    </testcase>
  </testsuite>
  <testsuite name="H5" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:39" time="0.345" tests="2">
    <testcase classname="H5 should render correctly" name="H5 should render correctly" time="0.012">
    </testcase>
    <testcase classname="H5 should render correctly with `as`" name="H5 should render correctly with `as`" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="Repo Settings Utils" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:40" time="0.314" tests="2">
    <testcase classname="Repo Settings Utils formatDuration formats durations over 1 second to seconds" name="Repo Settings Utils formatDuration formats durations over 1 second to seconds" time="0.002">
    </testcase>
    <testcase classname="Repo Settings Utils formatDuration formats durations under 1 second to milliseconds" name="Repo Settings Utils formatDuration formats durations under 1 second to milliseconds" time="0">
    </testcase>
  </testsuite>
  <testsuite name="visit()" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:40" time="0.36" tests="1">
    <testcase classname="visit() basic visit" name="visit() basic visit" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="isInputElement" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:40" time="0.566" tests="7">
    <testcase classname="isInputElement detect &lt;input&gt; elements as input" name="isInputElement detect &lt;input&gt; elements as input" time="0.002">
    </testcase>
    <testcase classname="isInputElement detect &lt;textarea&gt; elements as input" name="isInputElement detect &lt;textarea&gt; elements as input" time="0">
    </testcase>
    <testcase classname="isInputElement detect contenteditable elements as input" name="isInputElement detect contenteditable elements as input" time="0">
    </testcase>
    <testcase classname="isInputElement detect content editable elements inherited" name="isInputElement detect content editable elements inherited" time="0.002">
    </testcase>
    <testcase classname="createSVGIcon create SVG icon without label" name="createSVGIcon create SVG icon without label" time="0.004">
    </testcase>
    <testcase classname="createSVGIcon create SVG icon with label" name="createSVGIcon create SVG icon with label" time="0">
    </testcase>
    <testcase classname="createSVGIcon create SVG icon with empty label" name="createSVGIcon create SVG icon with empty label" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="getConstrainedElement" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:40" time="0.586" tests="2">
    <testcase classname="getConstrainedElement should return correct result with overflowed content" name="getConstrainedElement should return correct result with overflowed content" time="0.001">
    </testcase>
    <testcase classname="getConstrainedElement should return correct result with overflowed content" name="getConstrainedElement should return correct result with overflowed content" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Lexer" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:40" time="1.078" tests="21">
    <testcase classname="Lexer scans an expression" name="Lexer scans an expression" time="0.305">
    </testcase>
    <testcase classname="Lexer scans identifier with dots" name="Lexer scans identifier with dots" time="0.002">
    </testcase>
    <testcase classname="Lexer scans string" name="Lexer scans string" time="0.002">
    </testcase>
    <testcase classname="Lexer templates scans no-substitution template" name="Lexer templates scans no-substitution template" time="0.002">
    </testcase>
    <testcase classname="Lexer templates scans template with empty head/tail" name="Lexer templates scans template with empty head/tail" time="0.001">
    </testcase>
    <testcase classname="Lexer templates scans template with empty head/tail and multiple tokens" name="Lexer templates scans template with empty head/tail and multiple tokens" time="0.004">
    </testcase>
    <testcase classname="Lexer templates scans template with non-empty head, empty tail" name="Lexer templates scans template with non-empty head, empty tail" time="0.002">
    </testcase>
    <testcase classname="Lexer templates scans template with empty head, non-empty tail" name="Lexer templates scans template with empty head, non-empty tail" time="0.005">
    </testcase>
    <testcase classname="Lexer templates scans template with non-empty head/tail" name="Lexer templates scans template with non-empty head/tail" time="0.001">
    </testcase>
    <testcase classname="Lexer templates scans template with middle and empty values" name="Lexer templates scans template with middle and empty values" time="0.006">
    </testcase>
    <testcase classname="Lexer templates scans template with middle" name="Lexer templates scans template with middle" time="0.006">
    </testcase>
    <testcase classname="Lexer templates scans nested no-substitution template" name="Lexer templates scans nested no-substitution template" time="0.005">
    </testcase>
    <testcase classname="Lexer templates scans nested template" name="Lexer templates scans nested template" time="0.001">
    </testcase>
    <testcase classname="Lexer templates throws on unclosed expression" name="Lexer templates throws on unclosed expression" time="0.034">
    </testcase>
    <testcase classname="Lexer throws on unclosed string" name="Lexer throws on unclosed string" time="0.004">
    </testcase>
    <testcase classname="Lexer scans single-char binary operators" name="Lexer scans single-char binary operators" time="0.002">
    </testcase>
    <testcase classname="Lexer scans 2-char binary operators" name="Lexer scans 2-char binary operators" time="0.001">
    </testcase>
    <testcase classname="Lexer scans 3-char binary operators" name="Lexer scans 3-char binary operators" time="0.003">
    </testcase>
    <testcase classname="Lexer scans adjacent operators" name="Lexer scans adjacent operators" time="0.001">
    </testcase>
    <testcase classname="Lexer constants OPERATOR_CHARS" name="Lexer constants OPERATOR_CHARS" time="0.018">
    </testcase>
    <testcase classname="TemplateLexer scans template with middle" name="TemplateLexer scans template with middle" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Path" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:41" time="0.5" tests="4">
    <testcase classname="Path no path components" name="Path no path components" time="0.01">
    </testcase>
    <testcase classname="Path 1 path component" name="Path 1 path component" time="0.006">
    </testcase>
    <testcase classname="Path 2 path components" name="Path 2 path components" time="0.005">
    </testcase>
    <testcase classname="Path 3 path components" name="Path 3 path components" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="useTimeoutManager()" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:40" time="0.795" tests="4">
    <testcase classname="useTimeoutManager() should call the callback after specified time elapses" name="useTimeoutManager() should call the callback after specified time elapses" time="0.052">
    </testcase>
    <testcase classname="useTimeoutManager() should cancel previous timeout on subsequent invocation" name="useTimeoutManager() should cancel previous timeout on subsequent invocation" time="0.004">
    </testcase>
    <testcase classname="useTimeoutManager() should cancel timeout on component unmount" name="useTimeoutManager() should cancel timeout on component unmount" time="0.002">
    </testcase>
    <testcase classname="useTimeoutManager() should cancel timeout after calling `cancelTimeout`" name="useTimeoutManager() should cancel timeout after calling `cancelTimeout`" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:41" time="1.029" tests="2">
    <testcase classname=" spec.test.ts" name=" spec.test.ts" time="0">
    </testcase>
    <testcase classname="javaSpec filters definitions" name="javaSpec filters definitions" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="prettyInterval" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:41" time="0.891" tests="8">
    <testcase classname="prettyInterval should format 10 seconds as 10 seconds" name="prettyInterval should format 10 seconds as 10 seconds" time="0.001">
    </testcase>
    <testcase classname="prettyInterval should format 60 seconds as 1 minute" name="prettyInterval should format 60 seconds as 1 minute" time="0.001">
    </testcase>
    <testcase classname="prettyInterval should format 60*60 seconds as 1 hour" name="prettyInterval should format 60*60 seconds as 1 hour" time="0">
    </testcase>
    <testcase classname="prettyInterval should format 24*60*60 seconds as 1 day" name="prettyInterval should format 24*60*60 seconds as 1 day" time="0.001">
    </testcase>
    <testcase classname="prettyInterval should format 24*60*60 + 60*60 + 60 + 5 seconds as 1 day 1 hour 1 minute 5 seconds" name="prettyInterval should format 24*60*60 + 60*60 + 60 + 5 seconds as 1 day 1 hour 1 minute 5 seconds" time="0">
    </testcase>
    <testcase classname="prettyInterval should format 0 seconds as an empty string" name="prettyInterval should format 0 seconds as an empty string" time="0">
    </testcase>
    <testcase classname="prettyInterval should format multiple days, hours and minutes correctly" name="prettyInterval should format multiple days, hours and minutes correctly" time="0">
    </testcase>
    <testcase classname="prettyInterval should handle plurals correctly" name="prettyInterval should handle plurals correctly" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="overlay_position" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:41" time="1.087" tests="10">
    <testcase classname="overlay_position calculateOverlayPosition() with the scrolling element being document not scrolled should return a position above the given target if the overlay fits above" name="overlay_position calculateOverlayPosition() with the scrolling element being document not scrolled should return a position above the given target if the overlay fits above" time="0">
    </testcase>
    <testcase classname="overlay_position calculateOverlayPosition() with the scrolling element being document not scrolled should return a position below the a given target if the overlay does not fit above" name="overlay_position calculateOverlayPosition() with the scrolling element being document not scrolled should return a position below the a given target if the overlay does not fit above" time="0.001">
    </testcase>
    <testcase classname="overlay_position calculateOverlayPosition() with the scrolling element being document scrolled should return a position above the given target if the overlay fits above" name="overlay_position calculateOverlayPosition() with the scrolling element being document scrolled should return a position above the given target if the overlay fits above" time="0.001">
    </testcase>
    <testcase classname="overlay_position calculateOverlayPosition() with the scrolling element being document scrolled should return a position below the a given target if the overlay does not fit above" name="overlay_position calculateOverlayPosition() with the scrolling element being document scrolled should return a position below the a given target if the overlay does not fit above" time="0.001">
    </testcase>
    <testcase classname="overlay_position calculateOverlayPosition() with the scrolling element being the relativeElement not scrolled should return a position above the given target if the overlay fits above2" name="overlay_position calculateOverlayPosition() with the scrolling element being the relativeElement not scrolled should return a position above the given target if the overlay fits above2" time="0">
    </testcase>
    <testcase classname="overlay_position calculateOverlayPosition() with the scrolling element being the relativeElement not scrolled should return a position below the a given target if the overlay does not fit above" name="overlay_position calculateOverlayPosition() with the scrolling element being the relativeElement not scrolled should return a position below the a given target if the overlay does not fit above" time="0">
    </testcase>
    <testcase classname="overlay_position calculateOverlayPosition() with the scrolling element being the relativeElement scrolled should return a position above the given target if the overlay fits above" name="overlay_position calculateOverlayPosition() with the scrolling element being the relativeElement scrolled should return a position above the given target if the overlay fits above" time="0">
    </testcase>
    <testcase classname="overlay_position calculateOverlayPosition() with the scrolling element being the relativeElement scrolled should return a position below the a given target if the overlay does not fit above" name="overlay_position calculateOverlayPosition() with the scrolling element being the relativeElement scrolled should return a position below the a given target if the overlay does not fit above" time="0.001">
    </testcase>
    <testcase classname="overlay_position calculateOverlayPosition() without a relativeElement should return a position above the given target if the overlay fits above" name="overlay_position calculateOverlayPosition() without a relativeElement should return a position above the given target if the overlay fits above" time="0">
    </testcase>
    <testcase classname="overlay_position calculateOverlayPosition() without a relativeElement should return a position below the a given target if the overlay does not fit above" name="overlay_position calculateOverlayPosition() without a relativeElement should return a position below the a given target if the overlay does not fit above" time="0">
    </testcase>
  </testsuite>
  <testsuite name="migrate legacy editor settings tests" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:42" time="0.463" tests="5">
    <testcase classname="migrate legacy editor settings tests migrates one legacy editor setting" name="migrate legacy editor settings tests migrates one legacy editor setting" time="0.003">
    </testcase>
    <testcase classname="migrate legacy editor settings tests migrates all legacy editor settings" name="migrate legacy editor settings tests migrates all legacy editor settings" time="0.001">
    </testcase>
    <testcase classname="migrate legacy editor settings tests doesn’t change the original settings object" name="migrate legacy editor settings tests doesn’t change the original settings object" time="0.001">
    </testcase>
    <testcase classname="migrate legacy editor settings tests uses the right precedence" name="migrate legacy editor settings tests uses the right precedence" time="0">
    </testcase>
    <testcase classname="migrate legacy editor settings tests doesn’t do anything if there are new settings available" name="migrate legacy editor settings tests doesn’t do anything if there are new settings available" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="util/getReactElements" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:42" time="0.72" tests="1">
    <testcase classname="util/getReactElements returns only React-Elements from the provided array" name="util/getReactElements returns only React-Elements from the provided array" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="matchValue" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:40" time="3.129" tests="15">
    <testcase classname="matchValue base patterns allows primtive values as patterns" name="matchValue base patterns allows primtive values as patterns" time="0.004">
    </testcase>
    <testcase classname="matchValue base patterns allows functions as patterns" name="matchValue base patterns allows functions as patterns" time="0.042">
    </testcase>
    <testcase classname="matchValue base patterns allows objects as patterns" name="matchValue base patterns allows objects as patterns" time="0.001">
    </testcase>
    <testcase classname="matchValue base patterns allows wrapper patterns " name="matchValue base patterns allows wrapper patterns " time="0.001">
    </testcase>
    <testcase classname="matchValue matching against union types allows matching against primitve unions" name="matchValue matching against union types allows matching against primitve unions" time="0">
    </testcase>
    <testcase classname="matchValue matching against union types allows using a property in a pattern that does not exist in all union members" name="matchValue matching against union types allows using a property in a pattern that does not exist in all union members" time="0.001">
    </testcase>
    <testcase classname="matchValue matching against union types properly types function patterns for properties that do not exist in all union members" name="matchValue matching against union types properly types function patterns for properties that do not exist in all union members" time="0">
    </testcase>
    <testcase classname="matchValue matching against union types disallows properties that do not exist on any union member" name="matchValue matching against union types disallows properties that do not exist on any union member" time="0.001">
    </testcase>
    <testcase classname="matchValue data extraction extracts data when there is a match" name="matchValue data extraction extracts data when there is a match" time="0">
    </testcase>
    <testcase classname="matchValue data extraction allows functions as data extractor" name="matchValue data extraction allows functions as data extractor" time="0">
    </testcase>
    <testcase classname="matchValue some() matches against an array of nodes" name="matchValue some() matches against an array of nodes" time="0">
    </testcase>
    <testcase classname="matchValue every() matches against an array of nodes" name="matchValue every() matches against an array of nodes" time="0">
    </testcase>
    <testcase classname="matchValue oneOf() matches one or more patterns against a value" name="matchValue oneOf() matches one or more patterns against a value" time="0">
    </testcase>
    <testcase classname="matchValue allOf() matches one ore more patterns against a value" name="matchValue allOf() matches one ore more patterns against a value" time="0">
    </testcase>
    <testcase classname="matchValue not() matches against a single node" name="matchValue not() matches against a single node" time="0">
    </testcase>
  </testsuite>
  <testsuite name="encodeURIPathComponent" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:43" time="0.448" tests="6">
    <testcase classname="encodeURIPathComponent encodes all special characters except slashes and the plus sign" name="encodeURIPathComponent encodes all special characters except slashes and the plus sign" time="0.001">
    </testcase>
    <testcase classname="lprToSelectionsZeroIndexed converts an LPR with only a start line" name="lprToSelectionsZeroIndexed converts an LPR with only a start line" time="0.001">
    </testcase>
    <testcase classname="lprToSelectionsZeroIndexed converts an LPR with a line and a character" name="lprToSelectionsZeroIndexed converts an LPR with a line and a character" time="0.001">
    </testcase>
    <testcase classname="lprToSelectionsZeroIndexed converts an LPR with a start and end line" name="lprToSelectionsZeroIndexed converts an LPR with a start and end line" time="0">
    </testcase>
    <testcase classname="lprToSelectionsZeroIndexed converts an LPR with a start and end line and characters" name="lprToSelectionsZeroIndexed converts an LPR with a start and end line and characters" time="0">
    </testcase>
    <testcase classname="appendLineRangeQueryParameter appends line range to the start of query with existing parameters" name="appendLineRangeQueryParameter appends line range to the start of query with existing parameters" time="0">
    </testcase>
  </testsuite>
  <testsuite name="util/index" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:43" time="0.445" tests="4">
    <testcase classname="util/index getPathExtension returns extension if normal path" name="util/index getPathExtension returns extension if normal path" time="0.001">
    </testcase>
    <testcase classname="util/index getPathExtension returns empty string if no extension" name="util/index getPathExtension returns empty string if no extension" time="0">
    </testcase>
    <testcase classname="util/index getPathExtension returns empty string if hidden file with no extension" name="util/index getPathExtension returns empty string if hidden file with no extension" time="0">
    </testcase>
    <testcase classname="util/index getPathExtension returns extension for path with multiple dot separators" name="util/index getPathExtension returns extension for path with multiple dot separators" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Label" errors="0" failures="0" skipped="0" timestamp="2023-08-29T07:23:42" time="1.07" tests="2">
    <testcase classname="Label should render correctly" name="Label should render correctly" time="0.017">
    </testcase>
    <testcase classname="Label should render correctly with `as`" name="Label should render correctly with `as`" time="0.002">
    </testcase>
  </testsuite>
</testsuites>