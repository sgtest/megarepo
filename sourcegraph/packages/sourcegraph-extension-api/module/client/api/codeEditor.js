import { BehaviorSubject, Subscription } from 'rxjs';
import { handleRequests } from '../../common/proxy';
/** @internal */
export class ClientCodeEditor {
    constructor(connection, registry) {
        this.registry = registry;
        this.subscriptions = new Subscription();
        /** Map of document URI to its decorations (last published by the server). */
        this.decorations = new Map();
        this.subscriptions.add(this.registry.registerProvider(undefined, (textDocument) => this.getDecorationsSubject(textDocument.uri)));
        handleRequests(connection, 'codeEditor', this);
    }
    $setDecorations(resource, decorations) {
        this.getDecorationsSubject(resource, decorations);
    }
    getDecorationsSubject(resource, value) {
        let subject = this.decorations.get(resource);
        if (!subject) {
            subject = new BehaviorSubject(value || null);
            this.decorations.set(resource, subject);
        }
        if (value !== undefined) {
            subject.next(value);
        }
        return subject;
    }
    unsubscribe() {
        // Clear decorations.
        for (const subject of this.decorations.values()) {
            subject.next(null);
        }
        this.subscriptions.unsubscribe();
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29kZUVkaXRvci5qcyIsInNvdXJjZVJvb3QiOiJzcmMvIiwic291cmNlcyI6WyJjbGllbnQvYXBpL2NvZGVFZGl0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGVBQWUsRUFBYyxZQUFZLEVBQUUsTUFBTSxNQUFNLENBQUE7QUFDaEUsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLG9CQUFvQixDQUFBO0FBWW5ELGdCQUFnQjtBQUNoQixNQUFNLE9BQU8sZ0JBQWdCO0lBTXpCLFlBQ0ksVUFBc0IsRUFDZCxRQUFvRjtRQUFwRixhQUFRLEdBQVIsUUFBUSxDQUE0RTtRQVB4RixrQkFBYSxHQUFHLElBQUksWUFBWSxFQUFFLENBQUE7UUFFMUMsNkVBQTZFO1FBQ3JFLGdCQUFXLEdBQUcsSUFBSSxHQUFHLEVBQTRELENBQUE7UUFNckYsSUFBSSxDQUFDLGFBQWEsQ0FBQyxHQUFHLENBQ2xCLElBQUksQ0FBQyxRQUFRLENBQUMsZ0JBQWdCLENBQzFCLFNBQVMsRUFDVCxDQUFDLFlBQW9DLEVBQStDLEVBQUUsQ0FDbEYsSUFBSSxDQUFDLHFCQUFxQixDQUFDLFlBQVksQ0FBQyxHQUFHLENBQUMsQ0FDbkQsQ0FDSixDQUFBO1FBRUQsY0FBYyxDQUFDLFVBQVUsRUFBRSxZQUFZLEVBQUUsSUFBSSxDQUFDLENBQUE7SUFDbEQsQ0FBQztJQUVNLGVBQWUsQ0FBQyxRQUFnQixFQUFFLFdBQXFDO1FBQzFFLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxRQUFRLEVBQUUsV0FBVyxDQUFDLENBQUE7SUFDckQsQ0FBQztJQUVPLHFCQUFxQixDQUN6QixRQUFnQixFQUNoQixLQUF1QztRQUV2QyxJQUFJLE9BQU8sR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsQ0FBQTtRQUM1QyxJQUFJLENBQUMsT0FBTyxFQUFFO1lBQ1YsT0FBTyxHQUFHLElBQUksZUFBZSxDQUFrQyxLQUFLLElBQUksSUFBSSxDQUFDLENBQUE7WUFDN0UsSUFBSSxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsUUFBUSxFQUFFLE9BQU8sQ0FBQyxDQUFBO1NBQzFDO1FBQ0QsSUFBSSxLQUFLLEtBQUssU0FBUyxFQUFFO1lBQ3JCLE9BQU8sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUE7U0FDdEI7UUFDRCxPQUFPLE9BQU8sQ0FBQTtJQUNsQixDQUFDO0lBRU0sV0FBVztRQUNkLHFCQUFxQjtRQUNyQixLQUFLLE1BQU0sT0FBTyxJQUFJLElBQUksQ0FBQyxXQUFXLENBQUMsTUFBTSxFQUFFLEVBQUU7WUFDN0MsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQTtTQUNyQjtRQUVELElBQUksQ0FBQyxhQUFhLENBQUMsV0FBVyxFQUFFLENBQUE7SUFDcEMsQ0FBQztDQUNKIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQmVoYXZpb3JTdWJqZWN0LCBPYnNlcnZhYmxlLCBTdWJzY3JpcHRpb24gfSBmcm9tICdyeGpzJ1xuaW1wb3J0IHsgaGFuZGxlUmVxdWVzdHMgfSBmcm9tICcuLi8uLi9jb21tb24vcHJveHknXG5pbXBvcnQgeyBDb25uZWN0aW9uIH0gZnJvbSAnLi4vLi4vcHJvdG9jb2wvanNvbnJwYzIvY29ubmVjdGlvbidcbmltcG9ydCB7IFRleHREb2N1bWVudERlY29yYXRpb24gfSBmcm9tICcuLi8uLi9wcm90b2NvbC9wbGFpblR5cGVzJ1xuaW1wb3J0IHsgUHJvdmlkZVRleHREb2N1bWVudERlY29yYXRpb25TaWduYXR1cmUgfSBmcm9tICcuLi9wcm92aWRlcnMvZGVjb3JhdGlvbidcbmltcG9ydCB7IEZlYXR1cmVQcm92aWRlclJlZ2lzdHJ5IH0gZnJvbSAnLi4vcHJvdmlkZXJzL3JlZ2lzdHJ5J1xuaW1wb3J0IHsgVGV4dERvY3VtZW50SWRlbnRpZmllciB9IGZyb20gJy4uL3R5cGVzL3RleHREb2N1bWVudCdcblxuLyoqIEBpbnRlcm5hbCAqL1xuZXhwb3J0IGludGVyZmFjZSBDbGllbnRDb2RlRWRpdG9yQVBJIHtcbiAgICAkc2V0RGVjb3JhdGlvbnMocmVzb3VyY2U6IHN0cmluZywgZGVjb3JhdGlvbnM6IFRleHREb2N1bWVudERlY29yYXRpb25bXSk6IHZvaWRcbn1cblxuLyoqIEBpbnRlcm5hbCAqL1xuZXhwb3J0IGNsYXNzIENsaWVudENvZGVFZGl0b3IgaW1wbGVtZW50cyBDbGllbnRDb2RlRWRpdG9yQVBJIHtcbiAgICBwcml2YXRlIHN1YnNjcmlwdGlvbnMgPSBuZXcgU3Vic2NyaXB0aW9uKClcblxuICAgIC8qKiBNYXAgb2YgZG9jdW1lbnQgVVJJIHRvIGl0cyBkZWNvcmF0aW9ucyAobGFzdCBwdWJsaXNoZWQgYnkgdGhlIHNlcnZlcikuICovXG4gICAgcHJpdmF0ZSBkZWNvcmF0aW9ucyA9IG5ldyBNYXA8c3RyaW5nLCBCZWhhdmlvclN1YmplY3Q8VGV4dERvY3VtZW50RGVjb3JhdGlvbltdIHwgbnVsbD4+KClcblxuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBjb25uZWN0aW9uOiBDb25uZWN0aW9uLFxuICAgICAgICBwcml2YXRlIHJlZ2lzdHJ5OiBGZWF0dXJlUHJvdmlkZXJSZWdpc3RyeTx1bmRlZmluZWQsIFByb3ZpZGVUZXh0RG9jdW1lbnREZWNvcmF0aW9uU2lnbmF0dXJlPlxuICAgICkge1xuICAgICAgICB0aGlzLnN1YnNjcmlwdGlvbnMuYWRkKFxuICAgICAgICAgICAgdGhpcy5yZWdpc3RyeS5yZWdpc3RlclByb3ZpZGVyKFxuICAgICAgICAgICAgICAgIHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICAodGV4dERvY3VtZW50OiBUZXh0RG9jdW1lbnRJZGVudGlmaWVyKTogT2JzZXJ2YWJsZTxUZXh0RG9jdW1lbnREZWNvcmF0aW9uW10gfCBudWxsPiA9PlxuICAgICAgICAgICAgICAgICAgICB0aGlzLmdldERlY29yYXRpb25zU3ViamVjdCh0ZXh0RG9jdW1lbnQudXJpKVxuICAgICAgICAgICAgKVxuICAgICAgICApXG5cbiAgICAgICAgaGFuZGxlUmVxdWVzdHMoY29ubmVjdGlvbiwgJ2NvZGVFZGl0b3InLCB0aGlzKVxuICAgIH1cblxuICAgIHB1YmxpYyAkc2V0RGVjb3JhdGlvbnMocmVzb3VyY2U6IHN0cmluZywgZGVjb3JhdGlvbnM6IFRleHREb2N1bWVudERlY29yYXRpb25bXSk6IHZvaWQge1xuICAgICAgICB0aGlzLmdldERlY29yYXRpb25zU3ViamVjdChyZXNvdXJjZSwgZGVjb3JhdGlvbnMpXG4gICAgfVxuXG4gICAgcHJpdmF0ZSBnZXREZWNvcmF0aW9uc1N1YmplY3QoXG4gICAgICAgIHJlc291cmNlOiBzdHJpbmcsXG4gICAgICAgIHZhbHVlPzogVGV4dERvY3VtZW50RGVjb3JhdGlvbltdIHwgbnVsbFxuICAgICk6IEJlaGF2aW9yU3ViamVjdDxUZXh0RG9jdW1lbnREZWNvcmF0aW9uW10gfCBudWxsPiB7XG4gICAgICAgIGxldCBzdWJqZWN0ID0gdGhpcy5kZWNvcmF0aW9ucy5nZXQocmVzb3VyY2UpXG4gICAgICAgIGlmICghc3ViamVjdCkge1xuICAgICAgICAgICAgc3ViamVjdCA9IG5ldyBCZWhhdmlvclN1YmplY3Q8VGV4dERvY3VtZW50RGVjb3JhdGlvbltdIHwgbnVsbD4odmFsdWUgfHwgbnVsbClcbiAgICAgICAgICAgIHRoaXMuZGVjb3JhdGlvbnMuc2V0KHJlc291cmNlLCBzdWJqZWN0KVxuICAgICAgICB9XG4gICAgICAgIGlmICh2YWx1ZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBzdWJqZWN0Lm5leHQodmFsdWUpXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHN1YmplY3RcbiAgICB9XG5cbiAgICBwdWJsaWMgdW5zdWJzY3JpYmUoKTogdm9pZCB7XG4gICAgICAgIC8vIENsZWFyIGRlY29yYXRpb25zLlxuICAgICAgICBmb3IgKGNvbnN0IHN1YmplY3Qgb2YgdGhpcy5kZWNvcmF0aW9ucy52YWx1ZXMoKSkge1xuICAgICAgICAgICAgc3ViamVjdC5uZXh0KG51bGwpXG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLnN1YnNjcmlwdGlvbnMudW5zdWJzY3JpYmUoKVxuICAgIH1cbn1cbiJdfQ==