import { Subscription } from 'rxjs';
import { createProxyAndHandleRequests } from '../../common/proxy';
import { ConnectionError, ConnectionErrors } from '../../protocol/jsonrpc2/connection';
/**
 * @internal
 * @template C - The configuration schema.
 */
export class ClientConfiguration {
    constructor(connection, environmentConfiguration, updateConfiguration) {
        this.updateConfiguration = updateConfiguration;
        this.subscriptions = new Subscription();
        this.proxy = createProxyAndHandleRequests('configuration', connection, this);
        this.subscriptions.add(environmentConfiguration.subscribe(config => {
            this.proxy.$acceptConfigurationData(config).catch(error => {
                if (error instanceof ConnectionError && error.code === ConnectionErrors.Unsubscribed) {
                    // This error was probably caused by the user disabling
                    // an extension, which is a normal occurrence.
                    return;
                }
                throw error;
            });
        }));
    }
    async $acceptConfigurationUpdate(params) {
        await this.updateConfiguration(params);
    }
    unsubscribe() {
        this.subscriptions.unsubscribe();
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlndXJhdGlvbi5qcyIsInNvdXJjZVJvb3QiOiJzcmMvIiwic291cmNlcyI6WyJjbGllbnQvYXBpL2NvbmZpZ3VyYXRpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFjLFlBQVksRUFBRSxNQUFNLE1BQU0sQ0FBQTtBQUMvQyxPQUFPLEVBQUUsNEJBQTRCLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQTtBQUdqRSxPQUFPLEVBQWMsZUFBZSxFQUFFLGdCQUFnQixFQUFFLE1BQU0sb0NBQW9DLENBQUE7QUFPbEc7OztHQUdHO0FBQ0gsTUFBTSxPQUFPLG1CQUFtQjtJQUk1QixZQUNJLFVBQXNCLEVBQ3RCLHdCQUF1QyxFQUMvQixtQkFBeUU7UUFBekUsd0JBQW1CLEdBQW5CLG1CQUFtQixDQUFzRDtRQU43RSxrQkFBYSxHQUFHLElBQUksWUFBWSxFQUFFLENBQUE7UUFRdEMsSUFBSSxDQUFDLEtBQUssR0FBRyw0QkFBNEIsQ0FBQyxlQUFlLEVBQUUsVUFBVSxFQUFFLElBQUksQ0FBQyxDQUFBO1FBRTVFLElBQUksQ0FBQyxhQUFhLENBQUMsR0FBRyxDQUNsQix3QkFBd0IsQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLEVBQUU7WUFDeEMsSUFBSSxDQUFDLEtBQUssQ0FBQyx3QkFBd0IsQ0FBQyxNQUFNLENBQUMsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLEVBQUU7Z0JBQ3RELElBQUksS0FBSyxZQUFZLGVBQWUsSUFBSSxLQUFLLENBQUMsSUFBSSxLQUFLLGdCQUFnQixDQUFDLFlBQVksRUFBRTtvQkFDbEYsdURBQXVEO29CQUN2RCw4Q0FBOEM7b0JBQzlDLE9BQU07aUJBQ1Q7Z0JBQ0QsTUFBTSxLQUFLLENBQUE7WUFDZixDQUFDLENBQUMsQ0FBQTtRQUNOLENBQUMsQ0FBQyxDQUNMLENBQUE7SUFDTCxDQUFDO0lBRU0sS0FBSyxDQUFDLDBCQUEwQixDQUFDLE1BQWlDO1FBQ3JFLE1BQU0sSUFBSSxDQUFDLG1CQUFtQixDQUFDLE1BQU0sQ0FBQyxDQUFBO0lBQzFDLENBQUM7SUFFTSxXQUFXO1FBQ2QsSUFBSSxDQUFDLGFBQWEsQ0FBQyxXQUFXLEVBQUUsQ0FBQTtJQUNwQyxDQUFDO0NBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPYnNlcnZhYmxlLCBTdWJzY3JpcHRpb24gfSBmcm9tICdyeGpzJ1xuaW1wb3J0IHsgY3JlYXRlUHJveHlBbmRIYW5kbGVSZXF1ZXN0cyB9IGZyb20gJy4uLy4uL2NvbW1vbi9wcm94eSdcbmltcG9ydCB7IEV4dENvbmZpZ3VyYXRpb25BUEkgfSBmcm9tICcuLi8uLi9leHRlbnNpb24vYXBpL2NvbmZpZ3VyYXRpb24nXG5pbXBvcnQgeyBDb25maWd1cmF0aW9uVXBkYXRlUGFyYW1zIH0gZnJvbSAnLi4vLi4vcHJvdG9jb2wnXG5pbXBvcnQgeyBDb25uZWN0aW9uLCBDb25uZWN0aW9uRXJyb3IsIENvbm5lY3Rpb25FcnJvcnMgfSBmcm9tICcuLi8uLi9wcm90b2NvbC9qc29ucnBjMi9jb25uZWN0aW9uJ1xuXG4vKiogQGludGVybmFsICovXG5leHBvcnQgaW50ZXJmYWNlIENsaWVudENvbmZpZ3VyYXRpb25BUEkge1xuICAgICRhY2NlcHRDb25maWd1cmF0aW9uVXBkYXRlKHBhcmFtczogQ29uZmlndXJhdGlvblVwZGF0ZVBhcmFtcyk6IFByb21pc2U8dm9pZD5cbn1cblxuLyoqXG4gKiBAaW50ZXJuYWxcbiAqIEB0ZW1wbGF0ZSBDIC0gVGhlIGNvbmZpZ3VyYXRpb24gc2NoZW1hLlxuICovXG5leHBvcnQgY2xhc3MgQ2xpZW50Q29uZmlndXJhdGlvbjxDPiBpbXBsZW1lbnRzIENsaWVudENvbmZpZ3VyYXRpb25BUEkge1xuICAgIHByaXZhdGUgc3Vic2NyaXB0aW9ucyA9IG5ldyBTdWJzY3JpcHRpb24oKVxuICAgIHByaXZhdGUgcHJveHk6IEV4dENvbmZpZ3VyYXRpb25BUEk8Qz5cblxuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBjb25uZWN0aW9uOiBDb25uZWN0aW9uLFxuICAgICAgICBlbnZpcm9ubWVudENvbmZpZ3VyYXRpb246IE9ic2VydmFibGU8Qz4sXG4gICAgICAgIHByaXZhdGUgdXBkYXRlQ29uZmlndXJhdGlvbjogKHBhcmFtczogQ29uZmlndXJhdGlvblVwZGF0ZVBhcmFtcykgPT4gUHJvbWlzZTx2b2lkPlxuICAgICkge1xuICAgICAgICB0aGlzLnByb3h5ID0gY3JlYXRlUHJveHlBbmRIYW5kbGVSZXF1ZXN0cygnY29uZmlndXJhdGlvbicsIGNvbm5lY3Rpb24sIHRoaXMpXG5cbiAgICAgICAgdGhpcy5zdWJzY3JpcHRpb25zLmFkZChcbiAgICAgICAgICAgIGVudmlyb25tZW50Q29uZmlndXJhdGlvbi5zdWJzY3JpYmUoY29uZmlnID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLnByb3h5LiRhY2NlcHRDb25maWd1cmF0aW9uRGF0YShjb25maWcpLmNhdGNoKGVycm9yID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGVycm9yIGluc3RhbmNlb2YgQ29ubmVjdGlvbkVycm9yICYmIGVycm9yLmNvZGUgPT09IENvbm5lY3Rpb25FcnJvcnMuVW5zdWJzY3JpYmVkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBUaGlzIGVycm9yIHdhcyBwcm9iYWJseSBjYXVzZWQgYnkgdGhlIHVzZXIgZGlzYWJsaW5nXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBhbiBleHRlbnNpb24sIHdoaWNoIGlzIGEgbm9ybWFsIG9jY3VycmVuY2UuXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm5cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB0aHJvdyBlcnJvclxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9KVxuICAgICAgICApXG4gICAgfVxuXG4gICAgcHVibGljIGFzeW5jICRhY2NlcHRDb25maWd1cmF0aW9uVXBkYXRlKHBhcmFtczogQ29uZmlndXJhdGlvblVwZGF0ZVBhcmFtcyk6IFByb21pc2U8dm9pZD4ge1xuICAgICAgICBhd2FpdCB0aGlzLnVwZGF0ZUNvbmZpZ3VyYXRpb24ocGFyYW1zKVxuICAgIH1cblxuICAgIHB1YmxpYyB1bnN1YnNjcmliZSgpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5zdWJzY3JpcHRpb25zLnVuc3Vic2NyaWJlKClcbiAgICB9XG59XG4iXX0=