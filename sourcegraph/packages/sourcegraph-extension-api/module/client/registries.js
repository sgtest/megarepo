import { CommandRegistry } from './providers/command';
import { ContributionRegistry } from './providers/contribution';
import { TextDocumentDecorationProviderRegistry } from './providers/decoration';
import { TextDocumentHoverProviderRegistry } from './providers/hover';
import { TextDocumentLocationProviderRegistry, TextDocumentReferencesProviderRegistry } from './providers/location';
import { QueryTransformerRegistry } from './providers/queryTransformer';
import { ViewProviderRegistry } from './providers/view';
/**
 * Registries is a container for all provider registries.
 *
 * @template X extension type
 * @template C configuration cascade type
 */
export class Registries {
    constructor(environment) {
        this.environment = environment;
        this.commands = new CommandRegistry();
        this.contribution = new ContributionRegistry(this.environment);
        this.textDocumentDefinition = new TextDocumentLocationProviderRegistry();
        this.textDocumentImplementation = new TextDocumentLocationProviderRegistry();
        this.textDocumentReferences = new TextDocumentReferencesProviderRegistry();
        this.textDocumentTypeDefinition = new TextDocumentLocationProviderRegistry();
        this.textDocumentHover = new TextDocumentHoverProviderRegistry();
        this.textDocumentDecoration = new TextDocumentDecorationProviderRegistry();
        this.queryTransformer = new QueryTransformerRegistry();
        this.views = new ViewProviderRegistry();
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVnaXN0cmllcy5qcyIsInNvdXJjZVJvb3QiOiJzcmMvIiwic291cmNlcyI6WyJjbGllbnQvcmVnaXN0cmllcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFJQSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0scUJBQXFCLENBQUE7QUFDckQsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sMEJBQTBCLENBQUE7QUFDL0QsT0FBTyxFQUFFLHNDQUFzQyxFQUFFLE1BQU0sd0JBQXdCLENBQUE7QUFDL0UsT0FBTyxFQUFFLGlDQUFpQyxFQUFFLE1BQU0sbUJBQW1CLENBQUE7QUFDckUsT0FBTyxFQUFFLG9DQUFvQyxFQUFFLHNDQUFzQyxFQUFFLE1BQU0sc0JBQXNCLENBQUE7QUFDbkgsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sOEJBQThCLENBQUE7QUFDdkUsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sa0JBQWtCLENBQUE7QUFFdkQ7Ozs7O0dBS0c7QUFDSCxNQUFNLE9BQU8sVUFBVTtJQUNuQixZQUFvQixXQUEwQztRQUExQyxnQkFBVyxHQUFYLFdBQVcsQ0FBK0I7UUFFOUMsYUFBUSxHQUFHLElBQUksZUFBZSxFQUFFLENBQUE7UUFDaEMsaUJBQVksR0FBRyxJQUFJLG9CQUFvQixDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQTtRQUN6RCwyQkFBc0IsR0FBRyxJQUFJLG9DQUFvQyxFQUFFLENBQUE7UUFDbkUsK0JBQTBCLEdBQUcsSUFBSSxvQ0FBb0MsRUFBRSxDQUFBO1FBQ3ZFLDJCQUFzQixHQUFHLElBQUksc0NBQXNDLEVBQUUsQ0FBQTtRQUNyRSwrQkFBMEIsR0FBRyxJQUFJLG9DQUFvQyxFQUFFLENBQUE7UUFDdkUsc0JBQWlCLEdBQUcsSUFBSSxpQ0FBaUMsRUFBRSxDQUFBO1FBQzNELDJCQUFzQixHQUFHLElBQUksc0NBQXNDLEVBQUUsQ0FBQTtRQUNyRSxxQkFBZ0IsR0FBRyxJQUFJLHdCQUF3QixFQUFFLENBQUE7UUFDakQsVUFBSyxHQUFHLElBQUksb0JBQW9CLEVBQUUsQ0FBQTtJQVhlLENBQUM7Q0FZckUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcydcbmltcG9ydCB7IENvbmZpZ3VyYXRpb25DYXNjYWRlIH0gZnJvbSAnLi4vcHJvdG9jb2wnXG5pbXBvcnQgeyBFbnZpcm9ubWVudCB9IGZyb20gJy4vZW52aXJvbm1lbnQnXG5pbXBvcnQgeyBFeHRlbnNpb24gfSBmcm9tICcuL2V4dGVuc2lvbidcbmltcG9ydCB7IENvbW1hbmRSZWdpc3RyeSB9IGZyb20gJy4vcHJvdmlkZXJzL2NvbW1hbmQnXG5pbXBvcnQgeyBDb250cmlidXRpb25SZWdpc3RyeSB9IGZyb20gJy4vcHJvdmlkZXJzL2NvbnRyaWJ1dGlvbidcbmltcG9ydCB7IFRleHREb2N1bWVudERlY29yYXRpb25Qcm92aWRlclJlZ2lzdHJ5IH0gZnJvbSAnLi9wcm92aWRlcnMvZGVjb3JhdGlvbidcbmltcG9ydCB7IFRleHREb2N1bWVudEhvdmVyUHJvdmlkZXJSZWdpc3RyeSB9IGZyb20gJy4vcHJvdmlkZXJzL2hvdmVyJ1xuaW1wb3J0IHsgVGV4dERvY3VtZW50TG9jYXRpb25Qcm92aWRlclJlZ2lzdHJ5LCBUZXh0RG9jdW1lbnRSZWZlcmVuY2VzUHJvdmlkZXJSZWdpc3RyeSB9IGZyb20gJy4vcHJvdmlkZXJzL2xvY2F0aW9uJ1xuaW1wb3J0IHsgUXVlcnlUcmFuc2Zvcm1lclJlZ2lzdHJ5IH0gZnJvbSAnLi9wcm92aWRlcnMvcXVlcnlUcmFuc2Zvcm1lcidcbmltcG9ydCB7IFZpZXdQcm92aWRlclJlZ2lzdHJ5IH0gZnJvbSAnLi9wcm92aWRlcnMvdmlldydcblxuLyoqXG4gKiBSZWdpc3RyaWVzIGlzIGEgY29udGFpbmVyIGZvciBhbGwgcHJvdmlkZXIgcmVnaXN0cmllcy5cbiAqXG4gKiBAdGVtcGxhdGUgWCBleHRlbnNpb24gdHlwZVxuICogQHRlbXBsYXRlIEMgY29uZmlndXJhdGlvbiBjYXNjYWRlIHR5cGVcbiAqL1xuZXhwb3J0IGNsYXNzIFJlZ2lzdHJpZXM8WCBleHRlbmRzIEV4dGVuc2lvbiwgQyBleHRlbmRzIENvbmZpZ3VyYXRpb25DYXNjYWRlPiB7XG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBlbnZpcm9ubWVudDogT2JzZXJ2YWJsZTxFbnZpcm9ubWVudDxYLCBDPj4pIHt9XG5cbiAgICBwdWJsaWMgcmVhZG9ubHkgY29tbWFuZHMgPSBuZXcgQ29tbWFuZFJlZ2lzdHJ5KClcbiAgICBwdWJsaWMgcmVhZG9ubHkgY29udHJpYnV0aW9uID0gbmV3IENvbnRyaWJ1dGlvblJlZ2lzdHJ5KHRoaXMuZW52aXJvbm1lbnQpXG4gICAgcHVibGljIHJlYWRvbmx5IHRleHREb2N1bWVudERlZmluaXRpb24gPSBuZXcgVGV4dERvY3VtZW50TG9jYXRpb25Qcm92aWRlclJlZ2lzdHJ5KClcbiAgICBwdWJsaWMgcmVhZG9ubHkgdGV4dERvY3VtZW50SW1wbGVtZW50YXRpb24gPSBuZXcgVGV4dERvY3VtZW50TG9jYXRpb25Qcm92aWRlclJlZ2lzdHJ5KClcbiAgICBwdWJsaWMgcmVhZG9ubHkgdGV4dERvY3VtZW50UmVmZXJlbmNlcyA9IG5ldyBUZXh0RG9jdW1lbnRSZWZlcmVuY2VzUHJvdmlkZXJSZWdpc3RyeSgpXG4gICAgcHVibGljIHJlYWRvbmx5IHRleHREb2N1bWVudFR5cGVEZWZpbml0aW9uID0gbmV3IFRleHREb2N1bWVudExvY2F0aW9uUHJvdmlkZXJSZWdpc3RyeSgpXG4gICAgcHVibGljIHJlYWRvbmx5IHRleHREb2N1bWVudEhvdmVyID0gbmV3IFRleHREb2N1bWVudEhvdmVyUHJvdmlkZXJSZWdpc3RyeSgpXG4gICAgcHVibGljIHJlYWRvbmx5IHRleHREb2N1bWVudERlY29yYXRpb24gPSBuZXcgVGV4dERvY3VtZW50RGVjb3JhdGlvblByb3ZpZGVyUmVnaXN0cnkoKVxuICAgIHB1YmxpYyByZWFkb25seSBxdWVyeVRyYW5zZm9ybWVyID0gbmV3IFF1ZXJ5VHJhbnNmb3JtZXJSZWdpc3RyeSgpXG4gICAgcHVibGljIHJlYWRvbmx5IHZpZXdzID0gbmV3IFZpZXdQcm92aWRlclJlZ2lzdHJ5KClcbn1cbiJdfQ==