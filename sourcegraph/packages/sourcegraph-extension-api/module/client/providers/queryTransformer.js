import { of } from 'rxjs';
import { flatMap, map, switchMap } from 'rxjs/operators';
import { FeatureProviderRegistry } from './registry';
/** Transforms search queries using registered query transformers from extensions. */
export class QueryTransformerRegistry extends FeatureProviderRegistry {
    transformQuery(query) {
        return transformQuery(this.providers, query);
    }
}
/**
 * Returns an observable that emits a query transformed by all providers whenever any of the last-emitted set of providers emits
 * a query.
 *
 * Most callers should use QueryTransformerRegistry's transformQuery method, which uses the registered query transformers
 *
 */
export function transformQuery(providers, query) {
    return providers.pipe(switchMap(providers => {
        if (providers.length === 0) {
            return [query];
        }
        return providers.reduce((currentQuery, transformQuery) => currentQuery.pipe(flatMap(q => transformQuery(q).pipe(map(transformedQuery => transformedQuery)))), of(query));
    }));
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXVlcnlUcmFuc2Zvcm1lci5qcyIsInNvdXJjZVJvb3QiOiJzcmMvIiwic291cmNlcyI6WyJjbGllbnQvcHJvdmlkZXJzL3F1ZXJ5VHJhbnNmb3JtZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFjLEVBQUUsRUFBRSxNQUFNLE1BQU0sQ0FBQTtBQUNyQyxPQUFPLEVBQUUsT0FBTyxFQUFFLEdBQUcsRUFBRSxTQUFTLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQTtBQUN4RCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxZQUFZLENBQUE7QUFJcEQscUZBQXFGO0FBQ3JGLE1BQU0sT0FBTyx3QkFBeUIsU0FBUSx1QkFBb0Q7SUFDdkYsY0FBYyxDQUFDLEtBQWE7UUFDL0IsT0FBTyxjQUFjLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRSxLQUFLLENBQUMsQ0FBQTtJQUNoRCxDQUFDO0NBQ0o7QUFFRDs7Ozs7O0dBTUc7QUFDSCxNQUFNLFVBQVUsY0FBYyxDQUFDLFNBQWdELEVBQUUsS0FBYTtJQUMxRixPQUFPLFNBQVMsQ0FBQyxJQUFJLENBQ2pCLFNBQVMsQ0FBQyxTQUFTLENBQUMsRUFBRTtRQUNsQixJQUFJLFNBQVMsQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO1lBQ3hCLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQTtTQUNqQjtRQUNELE9BQU8sU0FBUyxDQUFDLE1BQU0sQ0FDbkIsQ0FBQyxZQUFZLEVBQUUsY0FBYyxFQUFFLEVBQUUsQ0FDN0IsWUFBWSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FBQyxFQUFFLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFDdEcsRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUNaLENBQUE7SUFDTCxDQUFDLENBQUMsQ0FDTCxDQUFBO0FBQ0wsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9ic2VydmFibGUsIG9mIH0gZnJvbSAncnhqcydcbmltcG9ydCB7IGZsYXRNYXAsIG1hcCwgc3dpdGNoTWFwIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnXG5pbXBvcnQgeyBGZWF0dXJlUHJvdmlkZXJSZWdpc3RyeSB9IGZyb20gJy4vcmVnaXN0cnknXG5cbmV4cG9ydCB0eXBlIFRyYW5zZm9ybVF1ZXJ5U2lnbmF0dXJlID0gKHF1ZXJ5OiBzdHJpbmcpID0+IE9ic2VydmFibGU8c3RyaW5nPlxuXG4vKiogVHJhbnNmb3JtcyBzZWFyY2ggcXVlcmllcyB1c2luZyByZWdpc3RlcmVkIHF1ZXJ5IHRyYW5zZm9ybWVycyBmcm9tIGV4dGVuc2lvbnMuICovXG5leHBvcnQgY2xhc3MgUXVlcnlUcmFuc2Zvcm1lclJlZ2lzdHJ5IGV4dGVuZHMgRmVhdHVyZVByb3ZpZGVyUmVnaXN0cnk8e30sIFRyYW5zZm9ybVF1ZXJ5U2lnbmF0dXJlPiB7XG4gICAgcHVibGljIHRyYW5zZm9ybVF1ZXJ5KHF1ZXJ5OiBzdHJpbmcpOiBPYnNlcnZhYmxlPHN0cmluZz4ge1xuICAgICAgICByZXR1cm4gdHJhbnNmb3JtUXVlcnkodGhpcy5wcm92aWRlcnMsIHF1ZXJ5KVxuICAgIH1cbn1cblxuLyoqXG4gKiBSZXR1cm5zIGFuIG9ic2VydmFibGUgdGhhdCBlbWl0cyBhIHF1ZXJ5IHRyYW5zZm9ybWVkIGJ5IGFsbCBwcm92aWRlcnMgd2hlbmV2ZXIgYW55IG9mIHRoZSBsYXN0LWVtaXR0ZWQgc2V0IG9mIHByb3ZpZGVycyBlbWl0c1xuICogYSBxdWVyeS5cbiAqXG4gKiBNb3N0IGNhbGxlcnMgc2hvdWxkIHVzZSBRdWVyeVRyYW5zZm9ybWVyUmVnaXN0cnkncyB0cmFuc2Zvcm1RdWVyeSBtZXRob2QsIHdoaWNoIHVzZXMgdGhlIHJlZ2lzdGVyZWQgcXVlcnkgdHJhbnNmb3JtZXJzXG4gKlxuICovXG5leHBvcnQgZnVuY3Rpb24gdHJhbnNmb3JtUXVlcnkocHJvdmlkZXJzOiBPYnNlcnZhYmxlPFRyYW5zZm9ybVF1ZXJ5U2lnbmF0dXJlW10+LCBxdWVyeTogc3RyaW5nKTogT2JzZXJ2YWJsZTxzdHJpbmc+IHtcbiAgICByZXR1cm4gcHJvdmlkZXJzLnBpcGUoXG4gICAgICAgIHN3aXRjaE1hcChwcm92aWRlcnMgPT4ge1xuICAgICAgICAgICAgaWYgKHByb3ZpZGVycy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gW3F1ZXJ5XVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHByb3ZpZGVycy5yZWR1Y2UoXG4gICAgICAgICAgICAgICAgKGN1cnJlbnRRdWVyeSwgdHJhbnNmb3JtUXVlcnkpID0+XG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbnRRdWVyeS5waXBlKGZsYXRNYXAocSA9PiB0cmFuc2Zvcm1RdWVyeShxKS5waXBlKG1hcCh0cmFuc2Zvcm1lZFF1ZXJ5ID0+IHRyYW5zZm9ybWVkUXVlcnkpKSkpLFxuICAgICAgICAgICAgICAgIG9mKHF1ZXJ5KVxuICAgICAgICAgICAgKVxuICAgICAgICB9KVxuICAgIClcbn1cbiJdfQ==