export var ContributableMenu;
(function (ContributableMenu) {
    /** The global command palette. */
    ContributableMenu["CommandPalette"] = "commandPalette";
    /** The global navigation bar in the application. */
    ContributableMenu["GlobalNav"] = "global/nav";
    /** The title bar for the current document. */
    ContributableMenu["EditorTitle"] = "editor/title";
    /** A directory page (including for the root directory of a repository). */
    ContributableMenu["DirectoryPage"] = "directory/page";
    /** The help menu in the application. */
    ContributableMenu["Help"] = "help";
})(ContributableMenu || (ContributableMenu = {}));
/** The containers to which an extension can contribute views. */
export var ContributableViewContainer;
(function (ContributableViewContainer) {
    /**
     * A view that is displayed in the panel for a window.
     *
     * Clients: The client should render this as a resizable panel in a window, with multiple tabs to switch
     * between different panel views.
     */
    ContributableViewContainer["Panel"] = "window/panel";
})(ContributableViewContainer || (ContributableViewContainer = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udHJpYnV0aW9uLmpzIiwic291cmNlUm9vdCI6InNyYy8iLCJzb3VyY2VzIjpbInByb3RvY29sL2NvbnRyaWJ1dGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFxS0EsTUFBTSxDQUFOLElBQVksaUJBZVg7QUFmRCxXQUFZLGlCQUFpQjtJQUN6QixrQ0FBa0M7SUFDbEMsc0RBQWlDLENBQUE7SUFFakMsb0RBQW9EO0lBQ3BELDZDQUF3QixDQUFBO0lBRXhCLDhDQUE4QztJQUM5QyxpREFBNEIsQ0FBQTtJQUU1QiwyRUFBMkU7SUFDM0UscURBQWdDLENBQUE7SUFFaEMsd0NBQXdDO0lBQ3hDLGtDQUFhLENBQUE7QUFDakIsQ0FBQyxFQWZXLGlCQUFpQixLQUFqQixpQkFBaUIsUUFlNUI7QUF1Q0QsaUVBQWlFO0FBQ2pFLE1BQU0sQ0FBTixJQUFZLDBCQVFYO0FBUkQsV0FBWSwwQkFBMEI7SUFDbEM7Ozs7O09BS0c7SUFDSCxvREFBc0IsQ0FBQTtBQUMxQixDQUFDLEVBUlcsMEJBQTBCLEtBQTFCLDBCQUEwQixRQVFyQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEtleVBhdGggfSBmcm9tICcuL2NvbmZpZ3VyYXRpb24nXG5cbi8qKlxuICogQ29udHJpYnV0aW9ucyBkZXNjcmliZXMgdGhlIGZ1bmN0aW9uYWxpdHkgcHJvdmlkZWQgYnkgYW4gZXh0ZW5zaW9uLlxuICovXG5leHBvcnQgaW50ZXJmYWNlIENvbnRyaWJ1dGlvbnMge1xuICAgIC8qKiBBY3Rpb25zIGNvbnRyaWJ1dGVkIGJ5IHRoZSBleHRlbnNpb24uICovXG4gICAgYWN0aW9ucz86IEFjdGlvbkNvbnRyaWJ1dGlvbltdXG5cbiAgICAvKiogTWVudSBpdGVtcyBjb250cmlidXRlZCBieSB0aGUgZXh0ZW5zaW9uLiAqL1xuICAgIG1lbnVzPzogTWVudUNvbnRyaWJ1dGlvbnNcbn1cblxuLyoqXG4gKiBBbiBhY3Rpb24gY29udHJpYnV0aW9uIGRlc2NyaWJlcyBhIGNvbW1hbmQgdGhhdCBjYW4gYmUgaW52b2tlZCwgYWxvbmcgd2l0aCBhIHRpdGxlLCBkZXNjcmlwdGlvbiwgaWNvbiwgZXRjLlxuICovXG5leHBvcnQgaW50ZXJmYWNlIEFjdGlvbkNvbnRyaWJ1dGlvbiB7XG4gICAgLyoqXG4gICAgICogVGhlIGlkZW50aWZpZXIgZm9yIHRoaXMgYWN0aW9uLCB3aGljaCBtdXN0IGJlIHVuaXF1ZSBhbW9uZyBhbGwgY29udHJpYnV0ZWQgYWN0aW9ucy5cbiAgICAgKlxuICAgICAqIEV4dGVuc2lvbnM6IEJ5IGNvbnZlbnRpb24sIHRoaXMgaXMgYSBkb3R0ZWQgc3RyaW5nIG9mIHRoZSBmb3JtIGBteUV4dGVuc2lvbk5hbWUubXlBY3Rpb25OYW1lYC4gSXQgaXMgY29tbW9uXG4gICAgICogdG8gdXNlIHRoZSBzYW1lIHZhbHVlcyBmb3IgYGlkYCBhbmQgYGNvbW1hbmRgIChmb3IgdGhlIGNvbW1vbiBjYXNlIHdoZXJlIHRoZSBjb21tYW5kIGhhcyBvbmx5IG9uZSBhY3Rpb25cbiAgICAgKiB0aGF0IG1lbnRpb25zIGl0KS5cbiAgICAgKi9cbiAgICBpZDogc3RyaW5nXG5cbiAgICAvKipcbiAgICAgKiBUaGUgY29tbWFuZCB0aGF0IHRoaXMgYWN0aW9uIGludm9rZXMuIEl0IGNhbiByZWZlciB0byBhIGNvbW1hbmQgcmVnaXN0ZXJlZCBieSB0aGUgc2FtZSBleHRlbnNpb24gb3IgYW55XG4gICAgICogb3RoZXIgZXh0ZW5zaW9uLCBvciB0byBhIGJ1aWx0aW4gY29tbWFuZC5cbiAgICAgKlxuICAgICAqIEV4dGVuc2lvbnM6IFRoZSBjb21tYW5kIG11c3QgYmUgcmVnaXN0ZXJlZCAodW5sZXNzIGl0IGlzIGEgYnVpbHRpbiBjb21tYW5kKS4gRXh0ZW5zaW9ucyBjYW4gcmVnaXN0ZXJcbiAgICAgKiBjb21tYW5kcyBpbiB0aGUgYGluaXRpYWxpemVgIHJlc3BvbnNlIG9yIHZpYSBgY2xpZW50L3JlZ2lzdGVyQ2FwYWJpbGl0eWAuXG4gICAgICpcbiAgICAgKiAjIyBCdWlsdGluIGNsaWVudCBjb21tYW5kc1xuICAgICAqXG4gICAgICogQ2xpZW50czogQWxsIGNsaWVudHMgbXVzdCBoYW5kbGUgdGhlIGZvbGxvd2luZyBjb21tYW5kcyBhcyBzcGVjaWZpZWQuXG4gICAgICpcbiAgICAgKiAjIyMgYG9wZW5gIHtAbGluayBBY3Rpb25Db250cmlidXRpb25DbGllbnRDb21tYW5kT3Blbn1cbiAgICAgKlxuICAgICAqIFRoZSBidWlsdGluIGNvbW1hbmQgYG9wZW5gIGNhdXNlcyB0aGUgY2xpZW50IHRvIG9wZW4gYSBVUkwgKHNwZWNpZmllZCBhcyBhIHN0cmluZyBpbiB0aGUgZmlyc3QgZWxlbWVudCBvZlxuICAgICAqIGNvbW1hbmRBcmd1bWVudHMpIHVzaW5nIHRoZSBkZWZhdWx0IFVSTCBoYW5kbGVyLCBpbnN0ZWFkIG9mIGludm9raW5nIHRoZSBjb21tYW5kIG9uIHRoZSBleHRlbnNpb24uXG4gICAgICpcbiAgICAgKiBDbGllbnRzOiBUaGUgY2xpZW50IHNob3VsZCB0cmVhdCB0aGUgZmlyc3QgZWxlbWVudCBvZiBjb21tYW5kQXJndW1lbnRzIGFzIGEgVVJMIChzdHJpbmcpIHRvIG9wZW4gd2l0aCB0aGVcbiAgICAgKiBkZWZhdWx0IFVSTCBoYW5kbGVyIChpbnN0ZWFkIG9mIHNlbmRpbmcgYSByZXF1ZXN0IHRvIHRoZSBleHRlbnNpb24gdG8gZXhlY3V0ZSB0aGlzIGNvbW1hbmQpLiBJZiB0aGUgY2xpZW50XG4gICAgICogaXMgcnVubmluZyBpbiBhIHdlYiBicm93c2VyLCB0aGUgY2xpZW50IHNob3VsZCByZW5kZXIgdGhlIGFjdGlvbiBhcyBhbiBIVE1MIDxhPiBlbGVtZW50IHNvIHRoYXQgaXQgYmVoYXZlc1xuICAgICAqIGxpa2UgYSBsaW5rLlxuICAgICAqXG4gICAgICogIyMjIGB1cGRhdGVDb25maWd1cmF0aW9uYCB7QGxpbmsgQWN0aW9uQ29udHJpYnV0aW9uQ2xpZW50Q29tbWFuZFVwZGF0ZUNvbmZpZ3VyYXRpb259XG4gICAgICpcbiAgICAgKiBUaGUgYnVpbHRpbiBjb21tYW5kIGB1cGRhdGVDb25maWd1cmF0aW9uYCBjYXVzZXMgdGhlIGNsaWVudCB0byBhcHBseSBhbiB1cGRhdGUgdG8gdGhlIGNvbmZpZ3VyYXRpb24gc2V0dGluZ3MuXG4gICAgICovXG4gICAgY29tbWFuZDogc3RyaW5nXG5cbiAgICAvKipcbiAgICAgKiBPcHRpb25hbCBhcmd1bWVudHMgdG8gcGFzcyB0byB0aGUgZXh0ZW5zaW9uIHdoZW4gdGhlIGFjdGlvbiBpcyBpbnZva2VkLlxuICAgICAqL1xuICAgIGNvbW1hbmRBcmd1bWVudHM/OiBhbnlbXVxuXG4gICAgLyoqIFRoZSB0aXRsZSB0aGF0IHN1Y2NpbmN0bHkgZGVzY3JpYmVzIHdoYXQgdGhpcyBhY3Rpb24gZG9lcy4gKi9cbiAgICB0aXRsZT86IHN0cmluZ1xuXG4gICAgLyoqXG4gICAgICogVGhlIGNhdGVnb3J5IHRoYXQgZGVzY3JpYmVzIHRoZSBncm91cCBvZiByZWxhdGVkIGFjdGlvbnMgb2Ygd2hpY2ggdGhpcyBhY3Rpb24gaXMgYSBtZW1iZXIuXG4gICAgICpcbiAgICAgKiBDbGllbnRzOiBXaGVuIGRpc3BsYXlpbmcgdGhpcyBhY3Rpb24ncyB0aXRsZSBhbG9uZ3NpZGUgdGl0bGVzIG9mIGFjdGlvbnMgZnJvbSBvdGhlciBncm91cHMsIHRoZSBjbGllbnRcbiAgICAgKiBzaG91bGQgZGlzcGxheSBlYWNoIGFjdGlvbiBhcyBcIiR7Y2F0ZWdvcnl9OiAke3RpdGxlfVwiIGlmIHRoZSBwcmVmaXggaXMgc2V0LlxuICAgICAqL1xuICAgIGNhdGVnb3J5Pzogc3RyaW5nXG5cbiAgICAvKipcbiAgICAgKiBBIGxvbmdlciBkZXNjcmlwdGlvbiBvZiB0aGUgYWN0aW9uIHRha2VuIGJ5IHRoaXMgYWN0aW9uLlxuICAgICAqXG4gICAgICogRXh0ZW5zaW9uczogVGhlIGRlc2NyaXB0aW9uIHNob3VsZCBub3QgYmUgdW5uZWNlc3NhcmlseSByZXBldGl0aXZlIHdpdGggdGhlIHRpdGxlLlxuICAgICAqXG4gICAgICogQ2xpZW50czogSWYgdGhlIGRlc2NyaXB0aW9uIGlzIHNob3duLCB0aGUgdGl0bGUgbXVzdCBiZSBzaG93biBuZWFyYnkuXG4gICAgICovXG4gICAgZGVzY3JpcHRpb24/OiBzdHJpbmdcblxuICAgIC8qKlxuICAgICAqIEEgVVJMIHRvIGFuIGljb24gZm9yIHRoaXMgYWN0aW9uIChkYXRhOiBVUklzIGFyZSBPSykuXG4gICAgICpcbiAgICAgKiBDbGllbnRzOiBUaGUgY2xpZW50IHNob3VsZCBzaG93IHRoaXMgaWNvbiBiZWZvcmUgdGhlIHRpdGxlLCBwcm9wb3J0aW9uYWxseSBzY2FsaW5nIHRoZSBkaW1lbnNpb25zIGFzXG4gICAgICogbmVjZXNzYXJ5IHRvIGF2b2lkIHVuZHVseSBlbmxhcmdpbmcgdGhlIGl0ZW0gYmV5b25kIHRoZSBkaW1lbnNpb25zIG5lY2Vzc2FyeSB0byByZW5kZXIgdGhlIHRleHQuIFRoZSBjbGllbnRcbiAgICAgKiBzaG91bGQgYXNzdW1lIHRoZSBpY29uIGlzIHNxdWFyZSAob3Igcm91Z2hseSBzcXVhcmUpLiBUaGUgY2xpZW50IG11c3Qgbm90IGRpc3BsYXkgYSBib3JkZXIgYXJvdW5kIHRoZSBpY29uLlxuICAgICAqIFRoZSBjbGllbnQgbWF5IGNob29zZSBub3QgdG8gZGlzcGxheSB0aGlzIGljb24uXG4gICAgICovXG4gICAgaWNvblVSTD86IHN0cmluZ1xuXG4gICAgLyoqXG4gICAgICogQSBzcGVjaWZpY2F0aW9uIG9mIGhvdyB0byBkaXNwbGF5IHRoaXMgYWN0aW9uIGFzIGEgYnV0dG9uIG9uIGEgdG9vbGJhci4gVGhlIGNsaWVudCBpcyByZXNwb25zaWJsZSBmb3JcbiAgICAgKiBkaXNwbGF5aW5nIGNvbnRyaWJ1dGlvbnMgYW5kIGRlZmluaW5nIHdoaWNoIHBhcnRzIG9mIGl0cyBpbnRlcmZhY2UgYXJlIGNvbnNpZGVyZWQgdG8gYmUgdG9vbGJhcnMuIEdlbmVyYWxseSxcbiAgICAgKiBpdGVtcyBvbiBhIHRvb2xiYXIgYXJlIGFsd2F5cyB2aXNpYmxlIGFuZCwgY29tcGFyZWQgdG8gaXRlbXMgaW4gYSBkcm9wZG93biBtZW51IG9yIGxpc3QsIGFyZSBleHBlY3RlZCB0byBiZVxuICAgICAqIHNtYWxsZXIgYW5kIHRvIGNvbnZleSBpbmZvcm1hdGlvbiAoaW4gYWRkaXRpb24gdG8gcGVyZm9ybWluZyBhbiBhY3Rpb24pLlxuICAgICAqXG4gICAgICogRm9yIGV4YW1wbGUsIGEgXCJUb2dnbGUgY29kZSBjb3ZlcmFnZVwiIGFjdGlvbiBtYXkgcHJlZmVyIHRvIGRpc3BsYXkgYSBzdW1tYXJpemVkIHN0YXR1cyAoc3VjaCBhcyBcIkNvdmVyYWdlOlxuICAgICAqIDc3JVwiKSBvbiBhIHRvb2xiYXIgaW5zdGVhZCBvZiB0aGUgZnVsbCB0aXRsZS5cbiAgICAgKlxuICAgICAqIENsaWVudHM6IElmIHRoZSBsYWJlbCBpcyBlbXB0eSBhbmQgb25seSBhbiBpY29uVVJMIGlzIHNldCwgYW5kIHRoZSBjbGllbnQgZGVjaWRlcyBub3QgdG8gZGlzcGxheSB0aGUgaWNvblxuICAgICAqIChlLmcuLCBiZWNhdXNlIHRoZSBjbGllbnQgaXMgbm90IGdyYXBoaWNhbCksIHRoZW4gdGhlIGNsaWVudCBtYXkgaGlkZSB0aGUgaXRlbSBmcm9tIHRoZSB0b29sYmFyLlxuICAgICAqL1xuICAgIGFjdGlvbkl0ZW0/OiBBY3Rpb25JdGVtXG59XG5cbi8qKlxuICogTmFycm93cyB0aGUgdHlwZSBvZiB7QGxpbmsgQWN0aW9uQ29udHJpYnV0aW9ufSBmb3IgYWN0aW9ucyB0aGF0IGludm9rZSB0aGUgYG9wZW5gIGNsaWVudCBjb21tYW5kLlxuICovXG5leHBvcnQgaW50ZXJmYWNlIEFjdGlvbkNvbnRyaWJ1dGlvbkNsaWVudENvbW1hbmRPcGVuIGV4dGVuZHMgQWN0aW9uQ29udHJpYnV0aW9uIHtcbiAgICBjb21tYW5kOiAnb3BlbidcblxuICAgIC8qKlxuICAgICAqIFRoZSBhcmd1bWVudHMgZm9yIHRoZSBgb3BlbmAgY2xpZW50IGNvbW1hbmQuIFRoZSBmaXJzdCBhcnJheSBlbGVtZW50IGlzIGEgVVJMLCB3aGljaCBpcyBvcGVuZWQgYnkgdGhlIGNsaWVudFxuICAgICAqIHVzaW5nIHRoZSBkZWZhdWx0IFVSTCBoYW5kbGVyLlxuICAgICAqL1xuICAgIGNvbW1hbmRBcmd1bWVudHM6IFtzdHJpbmddXG59XG5cbi8qKlxuICogTmFycm93cyB0aGUgdHlwZSBvZiB7QGxpbmsgQWN0aW9uQ29udHJpYnV0aW9ufSBmb3IgYWN0aW9ucyB0aGF0IGludm9rZSB0aGUgYHVwZGF0ZUNvbmZpZ3VyYXRpb25gIGNsaWVudCBjb21tYW5kLlxuICovXG5leHBvcnQgaW50ZXJmYWNlIEFjdGlvbkNvbnRyaWJ1dGlvbkNsaWVudENvbW1hbmRVcGRhdGVDb25maWd1cmF0aW9uIGV4dGVuZHMgQWN0aW9uQ29udHJpYnV0aW9uIHtcbiAgICBjb21tYW5kOiAndXBkYXRlQ29uZmlndXJhdGlvbidcblxuICAgIC8qKlxuICAgICAqIFRoZSBhcmd1bWVudHMgZm9yIHRoZSBgdXBkYXRlQ29uZmlndXJhdGlvbmAgY2xpZW50IGNvbW1hbmQ6XG4gICAgICpcbiAgICAgKiAxLiBUaGUga2V5IHBhdGggb2YgdGhlIHZhbHVlIChpbiB0aGUgY29uZmlndXJhdGlvbiBzZXR0aW5ncykgdG8gdXBkYXRlXG4gICAgICogMi4gVGhlIHZhbHVlIHRvIGluc2VydCBhdCB0aGUga2V5IHBhdGhcbiAgICAgKiAzLiBPcHRpb25hbDogcmVzZXJ2ZWQgZm9yIGZ1dHVyZSB1c2UgKG11c3QgYWx3YXlzIGJlIGBudWxsYClcbiAgICAgKiA0LiBPcHRpb25hbDogJ2pzb24nIGlmIHRoZSBjbGllbnQgc2hvdWxkIHBhcnNlIHRoZSAybmQgYXJndW1lbnQgdXNpbmcgSlNPTi5wYXJzZSBiZWZvcmUgaW5zZXJ0aW5nIHRoZSB2YWx1ZVxuICAgICAqL1xuICAgIGNvbW1hbmRBcmd1bWVudHM6IFtLZXlQYXRoLCBhbnldIHwgW0tleVBhdGgsIHN0cmluZywgbnVsbCwgJ2pzb24nXVxufVxuXG4vKiogQSBkZXNjcmlwdGlvbiBvZiBob3cgdG8gZGlzcGxheSBhIGJ1dHRvbiBvbiBhIHRvb2xiYXIuICovXG5leHBvcnQgaW50ZXJmYWNlIEFjdGlvbkl0ZW0ge1xuICAgIC8qKiBUaGUgdGV4dCBsYWJlbCBmb3IgdGhpcyBpdGVtLiAqL1xuICAgIGxhYmVsPzogc3RyaW5nXG5cbiAgICAvKipcbiAgICAgKiBBIGRlc2NyaXB0aW9uIGFzc29jaWF0ZWQgd2l0aCB0aGlzIGFjdGlvbiBpdGVtLlxuICAgICAqXG4gICAgICogQ2xpZW50czogVGhlIGRlc2NyaXB0aW9uIHNob3VsZCBiZSBzaG93biBpbiBhIHRvb2x0aXAgd2hlbiB0aGUgdXNlciBmb2N1c2VzIG9yIGhvdmVycyB0aGlzIHRvb2xiYXIgaXRlbS5cbiAgICAgKi9cbiAgICBkZXNjcmlwdGlvbj86IHN0cmluZ1xuXG4gICAgLyoqXG4gICAgICogVGhlIGljb24gVVJMIGZvciB0aGlzIGFjdGlvbiAoZGF0YTogVVJJcyBhcmUgT0spLlxuICAgICAqXG4gICAgICogQ2xpZW50czogVGhlIGNsaWVudCBzaG91bGQgdGhpcyBpY29uIGJlZm9yZSB0aGUgbGFiZWwgKGlmIGFueSksIHByb3BvcnRpb25hbGx5IHNjYWxpbmcgdGhlIGRpbWVuc2lvbnMgYXNcbiAgICAgKiBuZWNlc3NhcnkgdG8gYXZvaWQgdW5kdWx5IGVubGFyZ2luZyB0aGUgdG9vbGJhciBpdGVtIGJleW9uZCB0aGUgZGltZW5zaW9ucyBuZWNlc3NhcnkgdG8gc2hvdyB0aGUgbGFiZWwuXG4gICAgICogSW4gc3BhY2UtY29uc3RyYWluZWQgc2l0dWF0aW9ucywgdGhlIGNsaWVudCBzaG91bGQgc2hvdyBvbmx5IHRoZSBpY29uIGFuZCBvbWl0IHRoZSBsYWJlbC4gVGhlIGNsaWVudFxuICAgICAqIG11c3Qgbm90IGRpc3BsYXkgYSBib3JkZXIgYXJvdW5kIHRoZSBpY29uLiBUaGUgY2xpZW50IG1heSBjaG9vc2Ugbm90IHRvIGRpc3BsYXkgdGhpcyBpY29uLlxuICAgICAqL1xuICAgIGljb25VUkw/OiBzdHJpbmdcblxuICAgIC8qKlxuICAgICAqIEEgZGVzY3JpcHRpb24gb2YgdGhlIGluZm9ybWF0aW9uIHJlcHJlc2VudGVkIGJ5IHRoZSBpY29uLlxuICAgICAqXG4gICAgICogQ2xpZW50czogVGhlIGNsaWVudCBzaG91bGQgbm90IGRpc3BsYXkgdGhpcyB0ZXh0IGRpcmVjdGx5LiBJbnN0ZWFkLCB0aGUgY2xpZW50IHNob3VsZCB1c2UgdGhlXG4gICAgICogYWNjZXNzaWJpbGl0eSBmYWNpbGl0aWVzIG9mIHRoZSBjbGllbnQncyBwbGF0Zm9ybSAoc3VjaCBhcyB0aGUgPGltZyBhbHQ+IGF0dHJpYnV0ZSkgdG8gbWFrZSBpdCBhdmFpbGFibGVcbiAgICAgKiB0byB1c2VycyBuZWVkaW5nIHRoZSB0ZXh0dWFsIGRlc2NyaXB0aW9uLlxuICAgICAqL1xuICAgIGljb25EZXNjcmlwdGlvbj86IHN0cmluZ1xufVxuXG5leHBvcnQgZW51bSBDb250cmlidXRhYmxlTWVudSB7XG4gICAgLyoqIFRoZSBnbG9iYWwgY29tbWFuZCBwYWxldHRlLiAqL1xuICAgIENvbW1hbmRQYWxldHRlID0gJ2NvbW1hbmRQYWxldHRlJyxcblxuICAgIC8qKiBUaGUgZ2xvYmFsIG5hdmlnYXRpb24gYmFyIGluIHRoZSBhcHBsaWNhdGlvbi4gKi9cbiAgICBHbG9iYWxOYXYgPSAnZ2xvYmFsL25hdicsXG5cbiAgICAvKiogVGhlIHRpdGxlIGJhciBmb3IgdGhlIGN1cnJlbnQgZG9jdW1lbnQuICovXG4gICAgRWRpdG9yVGl0bGUgPSAnZWRpdG9yL3RpdGxlJyxcblxuICAgIC8qKiBBIGRpcmVjdG9yeSBwYWdlIChpbmNsdWRpbmcgZm9yIHRoZSByb290IGRpcmVjdG9yeSBvZiBhIHJlcG9zaXRvcnkpLiAqL1xuICAgIERpcmVjdG9yeVBhZ2UgPSAnZGlyZWN0b3J5L3BhZ2UnLFxuXG4gICAgLyoqIFRoZSBoZWxwIG1lbnUgaW4gdGhlIGFwcGxpY2F0aW9uLiAqL1xuICAgIEhlbHAgPSAnaGVscCcsXG59XG5cbi8qKlxuICogTWVudUNvbnRyaWJ1dGlvbnMgZGVzY3JpYmVzIHRoZSBtZW51IGl0ZW1zIGNvbnRyaWJ1dGVkIGJ5IGFuIGV4dGVuc2lvbi5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBNZW51Q29udHJpYnV0aW9ucyBleHRlbmRzIFBhcnRpYWw8UmVjb3JkPENvbnRyaWJ1dGFibGVNZW51LCBNZW51SXRlbUNvbnRyaWJ1dGlvbltdPj4ge31cblxuLyoqXG4gKiBNZW51SXRlbUNvbnRyaWJ1dGlvbiBpcyBhIG1lbnUgaXRlbSBjb250cmlidXRlZCBieSBhbiBleHRlbnNpb24uXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgTWVudUl0ZW1Db250cmlidXRpb24ge1xuICAgIC8qKlxuICAgICAqIFRoZSBhY3Rpb24gdG8gaW52b2tlIHdoZW4gdGhlIGl0ZW0gaXMgc2VsZWN0ZWQuIFRoZSB2YWx1ZSByZWZlcnMgdG8gYSB7QGxpbmsgQWN0aW9uQ29udHJpYnV0aW9uI2lkfSB2YWx1ZS5cbiAgICAgKi9cbiAgICBhY3Rpb246IHN0cmluZ1xuXG4gICAgLyoqXG4gICAgICogQW4gYWx0ZXJuYXRpdmUgYWN0aW9uIHRvIGludm9rZSB3aGVuIHRoZSBpdGVtIGlzIHNlbGVjdGVkIHdoaWxlIHByZXNzaW5nIHRoZSBPcHRpb24vQWx0L01ldGEvQ3RybC9DbWQga2V5c1xuICAgICAqIG9yIHVzaW5nIHRoZSBtaWRkbGUgbW91c2UgYnV0dG9uLiBUaGUgdmFsdWUgcmVmZXJzIHRvIGEge0BsaW5rIEFjdGlvbkNvbnRyaWJ1dGlvbiNpZH0gdmFsdWUuXG4gICAgICovXG4gICAgYWx0Pzogc3RyaW5nXG5cbiAgICAvKipcbiAgICAgKiBBbiBleHByZXNzaW9uIHRoYXQsIGlmIGdpdmVuLCBtdXN0IGV2YWx1YXRlIHRvIHRydWUgKG9yIGEgdHJ1dGh5IHZhbHVlKSBmb3IgdGhpcyBjb250cmlidXRpb24gdG8gYmVcbiAgICAgKiBkaXNwbGF5ZWQuIFRoZSBleHByZXNzaW9uIG1heSB1c2UgdmFsdWVzIGZyb20gdGhlIGNvbnRleHQgaW4gd2hpY2ggdGhlIGNvbnRyaWJ1dGlvbiB3b3VsZCBiZSBkaXNwbGF5ZWQuXG4gICAgICovXG4gICAgd2hlbj86IHN0cmluZ1xuXG4gICAgLyoqXG4gICAgICogVGhlIGdyb3VwIGluIHdoaWNoIHRoaXMgaXRlbSBpcyBkaXNwbGF5ZWQuIFRoaXMgZGVmaW5lcyB0aGUgc29ydCBvcmRlciBvZiBtZW51IGl0ZW1zLiBUaGUgZ3JvdXAgdmFsdWUgaXMgYW5cbiAgICAgKiBvcGFxdWUgc3RyaW5nIChpdCBpcyBqdXN0IGNvbXBhcmVkIHJlbGF0aXZlIHRvIG90aGVyIGl0ZW1zJyBncm91cCB2YWx1ZXMpOyB0aGVyZSBpcyBubyBzcGVjaWZpY2F0aW9uIHNldCBvZlxuICAgICAqIGV4cGVjdGVkIG9yIHN1cHBvcnRlZCB2YWx1ZXMuXG4gICAgICpcbiAgICAgKiBDbGllbnRzOiBPbiBhIHRvb2xiYXIsIHRoZSBjbGllbnQgc2hvdWxkIHNvcnQgdG9vbGJhciBpdGVtcyBieSAoZ3JvdXAsIGFjdGlvbiksIHdpdGggdG9vbGJhciBpdGVtcyBsYWNraW5nIGFcbiAgICAgKiBncm91cCBzb3J0aW5nIGxhc3QuIFRoZSBjbGllbnQgbXVzdCBub3QgZGlzcGxheSB0aGUgZ3JvdXAgdmFsdWUuXG4gICAgICovXG4gICAgZ3JvdXA/OiBzdHJpbmdcbn1cblxuLyoqIFRoZSBjb250YWluZXJzIHRvIHdoaWNoIGFuIGV4dGVuc2lvbiBjYW4gY29udHJpYnV0ZSB2aWV3cy4gKi9cbmV4cG9ydCBlbnVtIENvbnRyaWJ1dGFibGVWaWV3Q29udGFpbmVyIHtcbiAgICAvKipcbiAgICAgKiBBIHZpZXcgdGhhdCBpcyBkaXNwbGF5ZWQgaW4gdGhlIHBhbmVsIGZvciBhIHdpbmRvdy5cbiAgICAgKlxuICAgICAqIENsaWVudHM6IFRoZSBjbGllbnQgc2hvdWxkIHJlbmRlciB0aGlzIGFzIGEgcmVzaXphYmxlIHBhbmVsIGluIGEgd2luZG93LCB3aXRoIG11bHRpcGxlIHRhYnMgdG8gc3dpdGNoXG4gICAgICogYmV0d2VlbiBkaWZmZXJlbnQgcGFuZWwgdmlld3MuXG4gICAgICovXG4gICAgUGFuZWwgPSAnd2luZG93L3BhbmVsJyxcbn1cbiJdfQ==