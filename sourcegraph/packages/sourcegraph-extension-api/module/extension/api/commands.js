import { ProviderMap } from './common';
/** @internal */
export class ExtCommands {
    constructor(proxy) {
        this.proxy = proxy;
        this.registrations = new ProviderMap(id => this.proxy.$unregister(id));
    }
    /** Proxy method invoked by the client when the client wants to executes a command. */
    $executeCommand(id, args) {
        const { callback } = this.registrations.get(id);
        return Promise.resolve(callback(...args));
    }
    /**
     * Extension API method invoked directly when an extension wants to execute a command. It calls to the client
     * to execute the command because the desired command might be implemented on the client (or otherwise not in
     * this extension host).
     */
    executeCommand(command, args) {
        return this.proxy.$executeCommand(command, args);
    }
    registerCommand(entry) {
        const { id, subscription } = this.registrations.add(entry);
        this.proxy.$registerCommand(id, entry.command);
        return subscription;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbWFuZHMuanMiLCJzb3VyY2VSb290Ijoic3JjLyIsInNvdXJjZXMiOlsiZXh0ZW5zaW9uL2FwaS9jb21tYW5kcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sVUFBVSxDQUFBO0FBWXRDLGdCQUFnQjtBQUNoQixNQUFNLE9BQU8sV0FBVztJQUdwQixZQUFvQixLQUF3QjtRQUF4QixVQUFLLEdBQUwsS0FBSyxDQUFtQjtRQUZwQyxrQkFBYSxHQUFHLElBQUksV0FBVyxDQUFlLEVBQUUsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxXQUFXLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQTtJQUV4QyxDQUFDO0lBRWhELHNGQUFzRjtJQUMvRSxlQUFlLENBQUMsRUFBVSxFQUFFLElBQVc7UUFDMUMsTUFBTSxFQUFFLFFBQVEsRUFBRSxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsR0FBRyxDQUFlLEVBQUUsQ0FBQyxDQUFBO1FBQzdELE9BQU8sT0FBTyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFBO0lBQzdDLENBQUM7SUFFRDs7OztPQUlHO0lBQ0ksY0FBYyxDQUFDLE9BQWUsRUFBRSxJQUFXO1FBQzlDLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxlQUFlLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxDQUFBO0lBQ3BELENBQUM7SUFFTSxlQUFlLENBQUMsS0FBbUI7UUFDdEMsTUFBTSxFQUFFLEVBQUUsRUFBRSxZQUFZLEVBQUUsR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQTtRQUMxRCxJQUFJLENBQUMsS0FBSyxDQUFDLGdCQUFnQixDQUFDLEVBQUUsRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUE7UUFDOUMsT0FBTyxZQUFZLENBQUE7SUFDdkIsQ0FBQztDQUNKIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVW5zdWJzY3JpYmFibGUgfSBmcm9tICdyeGpzJ1xuaW1wb3J0IHsgQ2xpZW50Q29tbWFuZHNBUEkgfSBmcm9tICcuLi8uLi9jbGllbnQvYXBpL2NvbW1hbmRzJ1xuaW1wb3J0IHsgUHJvdmlkZXJNYXAgfSBmcm9tICcuL2NvbW1vbidcblxuLyoqIEBpbnRlcm5hbCAqL1xuZXhwb3J0IGludGVyZmFjZSBFeHRDb21tYW5kc0FQSSB7XG4gICAgJGV4ZWN1dGVDb21tYW5kKGlkOiBudW1iZXIsIGFyZ3M6IGFueVtdKTogUHJvbWlzZTxhbnk+XG59XG5cbmludGVyZmFjZSBDb21tYW5kRW50cnkge1xuICAgIGNvbW1hbmQ6IHN0cmluZ1xuICAgIGNhbGxiYWNrOiAoLi4uYXJnczogYW55W10pID0+IGFueVxufVxuXG4vKiogQGludGVybmFsICovXG5leHBvcnQgY2xhc3MgRXh0Q29tbWFuZHMgaW1wbGVtZW50cyBFeHRDb21tYW5kc0FQSSB7XG4gICAgcHJpdmF0ZSByZWdpc3RyYXRpb25zID0gbmV3IFByb3ZpZGVyTWFwPENvbW1hbmRFbnRyeT4oaWQgPT4gdGhpcy5wcm94eS4kdW5yZWdpc3RlcihpZCkpXG5cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIHByb3h5OiBDbGllbnRDb21tYW5kc0FQSSkge31cblxuICAgIC8qKiBQcm94eSBtZXRob2QgaW52b2tlZCBieSB0aGUgY2xpZW50IHdoZW4gdGhlIGNsaWVudCB3YW50cyB0byBleGVjdXRlcyBhIGNvbW1hbmQuICovXG4gICAgcHVibGljICRleGVjdXRlQ29tbWFuZChpZDogbnVtYmVyLCBhcmdzOiBhbnlbXSk6IFByb21pc2U8YW55PiB7XG4gICAgICAgIGNvbnN0IHsgY2FsbGJhY2sgfSA9IHRoaXMucmVnaXN0cmF0aW9ucy5nZXQ8Q29tbWFuZEVudHJ5PihpZClcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShjYWxsYmFjayguLi5hcmdzKSlcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBFeHRlbnNpb24gQVBJIG1ldGhvZCBpbnZva2VkIGRpcmVjdGx5IHdoZW4gYW4gZXh0ZW5zaW9uIHdhbnRzIHRvIGV4ZWN1dGUgYSBjb21tYW5kLiBJdCBjYWxscyB0byB0aGUgY2xpZW50XG4gICAgICogdG8gZXhlY3V0ZSB0aGUgY29tbWFuZCBiZWNhdXNlIHRoZSBkZXNpcmVkIGNvbW1hbmQgbWlnaHQgYmUgaW1wbGVtZW50ZWQgb24gdGhlIGNsaWVudCAob3Igb3RoZXJ3aXNlIG5vdCBpblxuICAgICAqIHRoaXMgZXh0ZW5zaW9uIGhvc3QpLlxuICAgICAqL1xuICAgIHB1YmxpYyBleGVjdXRlQ29tbWFuZChjb21tYW5kOiBzdHJpbmcsIGFyZ3M6IGFueVtdKTogUHJvbWlzZTxhbnk+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJveHkuJGV4ZWN1dGVDb21tYW5kKGNvbW1hbmQsIGFyZ3MpXG4gICAgfVxuXG4gICAgcHVibGljIHJlZ2lzdGVyQ29tbWFuZChlbnRyeTogQ29tbWFuZEVudHJ5KTogVW5zdWJzY3JpYmFibGUge1xuICAgICAgICBjb25zdCB7IGlkLCBzdWJzY3JpcHRpb24gfSA9IHRoaXMucmVnaXN0cmF0aW9ucy5hZGQoZW50cnkpXG4gICAgICAgIHRoaXMucHJveHkuJHJlZ2lzdGVyQ29tbWFuZChpZCwgZW50cnkuY29tbWFuZClcbiAgICAgICAgcmV0dXJuIHN1YnNjcmlwdGlvblxuICAgIH1cbn1cbiJdfQ==