/** @internal */
export class ExtCodeEditor {
    constructor(resource, proxy, documents) {
        this.resource = resource;
        this.proxy = proxy;
        this.documents = documents;
        this.type = 'CodeEditor';
    }
    get document() {
        return this.documents.get(this.resource);
    }
    setDecorations(_decorationType, decorations) {
        this.proxy.$setDecorations(this.resource, decorations.map(fromTextDocumentDecoration));
    }
    toJSON() {
        return { type: this.type, document: this.document };
    }
}
function fromTextDocumentDecoration(decoration) {
    return Object.assign({}, decoration, { range: decoration.range.toJSON() });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29kZUVkaXRvci5qcyIsInNvdXJjZVJvb3QiOiJzcmMvIiwic291cmNlcyI6WyJleHRlbnNpb24vYXBpL2NvZGVFZGl0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBTUEsZ0JBQWdCO0FBQ2hCLE1BQU0sT0FBTyxhQUFhO0lBQ3RCLFlBQW9CLFFBQWdCLEVBQVUsS0FBMEIsRUFBVSxTQUF1QjtRQUFyRixhQUFRLEdBQVIsUUFBUSxDQUFRO1FBQVUsVUFBSyxHQUFMLEtBQUssQ0FBcUI7UUFBVSxjQUFTLEdBQVQsU0FBUyxDQUFjO1FBRXpGLFNBQUksR0FBRyxZQUFZLENBQUE7SUFGeUUsQ0FBQztJQUk3RyxJQUFXLFFBQVE7UUFDZixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQTtJQUM1QyxDQUFDO0lBRU0sY0FBYyxDQUFDLGVBQXFCLEVBQUUsV0FBaUQ7UUFDMUYsSUFBSSxDQUFDLEtBQUssQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxXQUFXLENBQUMsR0FBRyxDQUFDLDBCQUEwQixDQUFDLENBQUMsQ0FBQTtJQUMxRixDQUFDO0lBRU0sTUFBTTtRQUNULE9BQU8sRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLElBQUksRUFBRSxRQUFRLEVBQUUsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFBO0lBQ3ZELENBQUM7Q0FDSjtBQUVELFNBQVMsMEJBQTBCLENBQUMsVUFBOEM7SUFDOUUseUJBQ08sVUFBVSxJQUNiLEtBQUssRUFBRyxVQUFVLENBQUMsS0FBZSxDQUFDLE1BQU0sRUFBRSxJQUM5QztBQUNMLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBzb3VyY2VncmFwaCBmcm9tICdzb3VyY2VncmFwaCdcbmltcG9ydCB7IENsaWVudENvZGVFZGl0b3JBUEkgfSBmcm9tICcuLi8uLi9jbGllbnQvYXBpL2NvZGVFZGl0b3InXG5pbXBvcnQgKiBhcyBwbGFpbiBmcm9tICcuLi8uLi9wcm90b2NvbC9wbGFpblR5cGVzJ1xuaW1wb3J0IHsgUmFuZ2UgfSBmcm9tICcuLi90eXBlcy9yYW5nZSdcbmltcG9ydCB7IEV4dERvY3VtZW50cyB9IGZyb20gJy4vZG9jdW1lbnRzJ1xuXG4vKiogQGludGVybmFsICovXG5leHBvcnQgY2xhc3MgRXh0Q29kZUVkaXRvciBpbXBsZW1lbnRzIHNvdXJjZWdyYXBoLkNvZGVFZGl0b3Ige1xuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgcmVzb3VyY2U6IHN0cmluZywgcHJpdmF0ZSBwcm94eTogQ2xpZW50Q29kZUVkaXRvckFQSSwgcHJpdmF0ZSBkb2N1bWVudHM6IEV4dERvY3VtZW50cykge31cblxuICAgIHB1YmxpYyByZWFkb25seSB0eXBlID0gJ0NvZGVFZGl0b3InXG5cbiAgICBwdWJsaWMgZ2V0IGRvY3VtZW50KCk6IHNvdXJjZWdyYXBoLlRleHREb2N1bWVudCB7XG4gICAgICAgIHJldHVybiB0aGlzLmRvY3VtZW50cy5nZXQodGhpcy5yZXNvdXJjZSlcbiAgICB9XG5cbiAgICBwdWJsaWMgc2V0RGVjb3JhdGlvbnMoX2RlY29yYXRpb25UeXBlOiBudWxsLCBkZWNvcmF0aW9uczogc291cmNlZ3JhcGguVGV4dERvY3VtZW50RGVjb3JhdGlvbltdKTogdm9pZCB7XG4gICAgICAgIHRoaXMucHJveHkuJHNldERlY29yYXRpb25zKHRoaXMucmVzb3VyY2UsIGRlY29yYXRpb25zLm1hcChmcm9tVGV4dERvY3VtZW50RGVjb3JhdGlvbikpXG4gICAgfVxuXG4gICAgcHVibGljIHRvSlNPTigpOiBhbnkge1xuICAgICAgICByZXR1cm4geyB0eXBlOiB0aGlzLnR5cGUsIGRvY3VtZW50OiB0aGlzLmRvY3VtZW50IH1cbiAgICB9XG59XG5cbmZ1bmN0aW9uIGZyb21UZXh0RG9jdW1lbnREZWNvcmF0aW9uKGRlY29yYXRpb246IHNvdXJjZWdyYXBoLlRleHREb2N1bWVudERlY29yYXRpb24pOiBwbGFpbi5UZXh0RG9jdW1lbnREZWNvcmF0aW9uIHtcbiAgICByZXR1cm4ge1xuICAgICAgICAuLi5kZWNvcmF0aW9uLFxuICAgICAgICByYW5nZTogKGRlY29yYXRpb24ucmFuZ2UgYXMgUmFuZ2UpLnRvSlNPTigpLFxuICAgIH1cbn1cbiJdfQ==