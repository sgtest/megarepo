# See explanation of linters at https://golangci-lint.run/usage/linters/
linters:
  disable-all: true
  enable:
    - unused

issues:
  exclude-rules:
    # Exclude bodyclose lint from tests because leaking connections in tests
    # is a non-issue, and checking that adds unnecessary noise
    - path: _test\.go
      linters:
        - bodyclose
        - unparam
        - gosimple
        - unused

run:
  timeout: 5m

  skip-dirs:
    - client
    - ui
    - vendor
    - node_modules
    - docker-images/syntax-highlighter

  skip-files:
    # Auto-generated with depguard and forbidigo failures
    - schema/schema.go

    # Imports blacklisted errors
    # Unfortunately golangci-lint doesn't really like multiple go.mod files, so
    # whenever we reference a file here it's relative to its containing workspace.
    # These values are under the ./lib module.
    - errors/cockroach.go

    # These are all projects with distinct go.mod files that can't import lib
    # due to not knowing an absolute path to the user's sourcegraph directory
    # and go mod replace directives not accepting relative paths.
    #
    # We should remove the go.mod files in these directories and share the set
    # of dependencies in the root module (which has access to the colocated lib)
    # like we did with sg. That seemed very successful!

    # In ./enterprise/dev/insight-data-gen
    - main.go
    # In ./internal/cmd/progress-bot
    - main.go
