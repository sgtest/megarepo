// Code generated by stringdata. DO NOT EDIT.

package schema

// SiteSchemaJSON is the content of the file "site.schema.json".
const SiteSchemaJSON = `{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "site.schema.json#",
  "title": "Site configuration",
  "description": "Configuration for a Sourcegraph site.",
  "allowComments": true,
  "type": "object",
  "additionalProperties": false,
  "properties": {
    "dontIncludeSymbolResultsByDefault": {
      "description": "Set to ` + "`" + `true` + "`" + ` to not include symbol results if no ` + "`" + `type:` + "`" + ` filter was given",
      "type": "boolean",
      "group": "Search"
    },
    "disableBuiltInSearches": {
      "description": "Whether built-in searches should be hidden on the Searches page.",
      "type": "boolean",
      "group": "Search"
    },
    "search.index.enabled": {
      "description": "Whether indexed search is enabled. If unset Sourcegraph detects the environment to decide if indexed search is enabled. Indexed search is RAM heavy, and is disabled by default in the single docker image. All other environments will have it enabled by default. The size of all your repository working copies is the amount of additional RAM required.",
      "type": "boolean",
      "!go": { "pointer": true },
      "group": "Search"
    },
    "search.index.symbols.enabled": {
      "description": "Whether indexed symbol search is enabled. This is contingent on the indexed search configuration, and is true by default for instances with indexed search enabled. Enabling this will cause every repository to re-index, which is a time consuming (several hours) operation. Additionally, it requires more storage and ram to accommodate the added symbols information in the search index.",
      "type": "boolean",
      "!go": { "pointer": true },
      "group": "Search"
    },
    "search.largeFiles": {
      "description": "A list of file glob patterns where matching files will be indexed and searched regardless of their size. The glob pattern syntax can be found here: https://golang.org/pkg/path/filepath/#Match.",
      "type": "array",
      "items": {
        "type": "string"
      },
      "group": "Search",
      "examples": [["go.sum", "package-lock.json", "*.thrift"]]
    },
    "debug.search.symbolsParallelism": {
      "description": "(debug) controls the amount of symbol search parallelism. Defaults to 20. It is not recommended to change this outside of debugging scenarios. This option will be removed in a future version.",
      "type": "integer",
      "group": "Debug",
      "examples": [["20"]]
    },
    "experimentalFeatures": {
      "description": "Experimental features to enable or disable. Features that are now enabled by default are marked as deprecated.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "eventLogging": {
          "description": "Enables user event logging inside of the Sourcegraph instance. This will allow admins to have greater visibility of user activity, such as frequently viewed pages, frequent searches, and more. These event logs (and any specific user actions) are only stored locally, and never leave this Sourcegraph instance.",
          "type": "string",
          "enum": ["enabled", "disabled"],
          "default": "enabled"
        },
        "debug.log": {
          "description": "Turns on debug logging for specific debugging scenarios.",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "extsvc.gitlab": {
              "description": "Log GitLab API requests.",
              "type": "boolean",
              "default": false
            }
          }
        },
        "automation": {
          "description": "Enables the experimental code change management campaigns feature. NOTE: The automation feature was renamed to campaigns, but this experimental feature flag name was not changed (because the feature flag will go away soon anyway).",
          "type": "string",
          "enum": ["enabled", "disabled"],
          "default": "disabled"
        },
        "structuralSearch": {
          "description": "Enables structural search.",
          "type": "string",
          "enum": ["enabled", "disabled"],
          "default": "enabled"
        },
        "andOrQuery": {
          "description": "Interpret a search input query as an and/or query.",
          "type": "string",
          "enum": ["enabled", "disabled"],
          "default": "disabled"
        },
        "bitbucketServerFastPerm": {
          "description": "DEPRECATED: Configure in Bitbucket Server config.",
          "type": "string",
          "enum": ["enabled", "disabled"],
          "default": "disabled"
        },
        "searchMultipleRevisionsPerRepository": {
          "description": "Enables searching multiple revisions of the same repository (using ` + "`" + `repo:myrepo@branch1:branch2` + "`" + `).",
          "type": "boolean",
          "default": false,
          "!go": { "pointer": true }
        },
        "tls.external": {
          "description": "Global TLS/SSL settings for Sourcegraph to use when communicating with code hosts.",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "insecureSkipVerify": {
              "description": "insecureSkipVerify controls whether a client verifies the server's certificate chain and host name.\nIf InsecureSkipVerify is true, TLS accepts any certificate presented by the server and any host name in that certificate. In this mode, TLS is susceptible to man-in-the-middle attacks.",
              "type": "boolean",
              "default": false
            },
            "certificates": {
              "description": "TLS certificates to accept. This is only necessary if you are using self-signed certificates or an internal CA. Can be an internal CA certificate or a self-signed certificate. To get the certificate of a webserver run ` + "`" + `openssl s_client -connect HOST:443 -showcerts < /dev/null 2> /dev/null | openssl x509 -outform PEM` + "`" + `. To escape the value into a JSON string, you may want to use a tool like https://json-escape-text.now.sh.",
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^-----BEGIN CERTIFICATE-----\n",
                "examples": ["-----BEGIN CERTIFICATE-----\n..."]
              }
            }
          }
        },
        "customGitFetch": {
          "description": "JSON array of configuration that maps from Git clone URL domain/path to custom git fetch command.",
          "type": "array",
          "items": {
            "title": "CustomGitFetchMapping",
            "description": "Mapping from Git clone URl domain/path to git fetch command. The ` + "`" + `domainPath` + "`" + ` field contains the Git clone URL domain/path part. The ` + "`" + `fetch` + "`" + ` field contains the custom git fetch command.",
            "type": "object",
            "additionalProperties": false,
            "required": ["domainPath", "fetch"],
            "properties": {
              "domainPath": {
                "description": "Git clone URL domain/path",
                "type": "string"
              },
              "fetch": {
                "description": "Git fetch command",
                "type": "string",
                "minLength": 1
              }
            }
          },
          "examples": [
            [
              {
                "domainPath": "somecodehost.com/path/to/repo",
                "fetch": "customgitbinary someflag"
              },
              {
                "domainPath": "somecodehost.com/path/to/anotherrepo",
                "fetch": "customgitbinary someflag anotherflag"
              }
            ]
          ]
        },
        "versionContexts": {
          "description": "JSON array of version context configuration",
          "type": "array",
          "items": {
            "title": "VersionContext",
            "description": "Configuration of the version context",
            "type": "object",
            "additionalProperties": false,
            "required": ["name", "revisions"],
            "properties": {
              "name": {
                "description": "Name of the version context, it must be unique.",
                "type": "string",
                "minLength": 1,
                "maxLength": 14
              },
              "revisions": {
                "description": "List of repositories of the version context",
                "type": "array",
                "items": {
                  "title": "VersionContextRevision",
                  "description": "Description of the chosen repository and revision",
                  "type": "object",
                  "additionalProperties": false,
                  "required": ["repo", "rev"],
                  "properties": {
                    "repo": {
                      "description": "Repository name",
                      "type": "string"
                    },
                    "rev": {
                      "description": "Branch, tag, or commit hash",
                      "type": "string"
                    }
                  }
                }
              },
              "description": {
                "description": "Description of the version context",
                "type": "string"
              }
            }
          },
          "examples": [
            {
              "name": "Release foo",
              "revisions": [
                {
                  "repo": "github.com/sourcegraph/sourcegraph",
                  "rev": "3.15"
                },
                {
                  "repo": "github.com/sourcegraph/lib1",
                  "rev": "23edr233r"
                },
                {
                  "repo": "github.com/sourcegraph/lib2",
                  "rev": "2.4"
                }
              ]
            }
          ]
        }
      },
      "examples": [
        {
          "customGitFetch": [
            {
              "domainPath": "somecodehost.com/path/to/repo",
              "fetch": "customgitbinary someflag"
            },
            {
              "domainPath": "somecodehost.com/path/to/anotherrepo",
              "fetch": "customgitbinary someflag anotherflag"
            }
          ]
        }
      ],
      "group": "Experimental"
    },
    "automation.readAccess.enabled": {
      "description": "DEPRECATED: The automation feature was renamed to campaigns. Use ` + "`" + `campaigns.readAccess.enabled` + "`" + ` instead.",
      "type": "boolean",
      "!go": { "pointer": true },
      "group": "Campaigns"
    },
    "campaigns.readAccess.enabled": {
      "description": "Enables read-only access to campaigns for non-site-admin users. This is a setting for the experimental campaigns feature. These will only have an effect when campaigns is enabled with ` + "`" + `{\"experimentalFeatures\": {\"automation\": \"enabled\"}}` + "`" + `.",
      "type": "boolean",
      "!go": { "pointer": true },
      "group": "Campaigns"
    },
    "corsOrigin": {
      "description": "Required when using any of the native code host integrations for Phabricator, GitLab, or Bitbucket Server. It is a space-separated list of allowed origins for cross-origin HTTP requests which should be the base URL for your Phabricator, GitLab, or Bitbucket Server instance.",
      "type": "string",
      "examples": ["https://my-phabricator.example.com https://my-bitbucket.example.com https://my-gitlab.example.com"],
      "pattern": "^((https?:\\/\\/[\\w-\\.]+)( https?:\\/\\/[\\w-\\.]+)*)|\\*$",
      "group": "Security"
    },
    "lsifEnforceAuth": {
      "description": "Whether or not LSIF uploads will be blocked unless a valid LSIF upload token is provided.",
      "type": "boolean",
      "default": false,
      "group": "Security"
    },
    "disableNonCriticalTelemetry": {
      "description": "Disable aggregated event counts from being sent to Sourcegraph.com via pings.",
      "type": "boolean",
      "default": false,
      "group": "Misc."
    },
    "disableAutoGitUpdates": {
      "description": "Disable periodically fetching git contents for existing repositories.",
      "type": "boolean",
      "default": false,
      "group": "External services"
    },
    "disablePublicRepoRedirects": {
      "description": "Disable redirects to sourcegraph.com when visiting public repositories that can't exist on this server.",
      "type": "boolean",
      "group": "External services"
    },
    "git.cloneURLToRepositoryName": {
      "description": "JSON array of configuration that maps from Git clone URL to repository name. Sourcegraph automatically resolves remote clone URLs to their proper code host. However, there may be non-remote clone URLs (e.g., in submodule declarations) that Sourcegraph cannot automatically map to a code host. In this case, use this field to specify the mapping. The mappings are tried in the order they are specified and take precedence over automatic mappings.",
      "type": "array",
      "items": {
        "title": "CloneURLToRepositoryName",
        "description": "Describes a mapping from clone URL to repository name. The ` + "`" + `from` + "`" + ` field contains a regular expression with named capturing groups. The ` + "`" + `to` + "`" + ` field contains a template string that references capturing group names. For instance, if ` + "`" + `from` + "`" + ` is \"^../(?P<name>\\w+)$\" and ` + "`" + `to` + "`" + ` is \"github.com/user/{name}\", the clone URL \"../myRepository\" would be mapped to the repository name \"github.com/user/myRepository\".",
        "type": "object",
        "additionalProperties": false,
        "required": ["from", "to"],
        "properties": {
          "from": {
            "description": "A regular expression that matches a set of clone URLs. The regular expression should use the Go regular expression syntax (https://golang.org/pkg/regexp/) and contain at least one named capturing group. The regular expression matches partially by default, so use \"^...$\" if whole-string matching is desired.",
            "type": "string"
          },
          "to": {
            "description": "The repository name output pattern. This should use ` + "`" + `{matchGroup}` + "`" + ` syntax to reference the capturing groups from the ` + "`" + `from` + "`" + ` field.",
            "type": "string"
          }
        }
      },
      "group": "External services"
    },
    "githubClientID": {
      "description": "Client ID for GitHub. (DEPRECATED)",
      "type": "string",
      "group": "Internal",
      "hide": true
    },
    "githubClientSecret": {
      "description": "Client secret for GitHub. (DEPRECATED)",
      "type": "string",
      "group": "Internal",
      "hide": true
    },
    "gitMaxConcurrentClones": {
      "description": "Maximum number of git clone processes that will be run concurrently to update repositories.",
      "type": "integer",
      "default": 5,
      "group": "External services"
    },
    "repoListUpdateInterval": {
      "description": "Interval (in minutes) for checking code hosts (such as GitHub, Gitolite, etc.) for new repositories.",
      "type": "integer",
      "default": 1,
      "group": "External services"
    },
    "maxReposToSearch": {
      "description": "The maximum number of repositories to search across. The user is prompted to narrow their query if exceeded. Any value less than or equal to zero means unlimited.",
      "type": "integer",
      "default": -1,
      "group": "Search"
    },
    "parentSourcegraph": {
      "description": "URL to fetch unreachable repository details from. Defaults to \"https://sourcegraph.com\"",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "url": {
          "type": "string",
          "default": "https://sourcegraph.com"
        }
      },
      "group": "External services"
    },
    "auth.accessTokens": {
      "description": "Settings for access tokens, which enable external tools to access the Sourcegraph API with the privileges of the user.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "allow": {
          "description": "Allow or restrict the use of access tokens. The default is \"all-users-create\", which enables all users to create access tokens. Use \"none\" to disable access tokens entirely. Use \"site-admin-create\" to restrict creation of new tokens to admin users (existing tokens will still work until revoked).",
          "type": "string",
          "enum": ["all-users-create", "site-admin-create", "none"],
          "default": "all-users-create"
        }
      },
      "default": {
        "allow": "all-users-create"
      },
      "examples": [
        {
          "allow": "site-admin-create"
        },
        { "allow": "none" }
      ],
      "group": "Security"
    },
    "permissions.userMapping": {
      "description": "Settings for Sourcegraph permissions, which allow the site admin to explicitly manage repository permissions via the GraphQL API. This setting cannot be enabled if repository permissions for any specific external service are enabled (i.e., when the external service's ` + "`" + `authorization` + "`" + ` field is set).",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "description": "Whether permissions user mapping is enabled. There must be no ` + "`" + `authorization` + "`" + ` field in any external service configuration before enabling this.",
          "type": "boolean",
          "default": false
        },
        "bindID": {
          "description": "The type of identifier to identify a user. The default is \"email\", which uses the email address to identify a user. Use \"username\" to identify a user by their username. Changing this setting will erase any permissions created for users that do not yet exist.",
          "type": "string",
          "enum": ["email", "username"],
          "default": "email"
        }
      },
      "default": {
        "enabled": true,
        "bindID": "email"
      },
      "examples": [{ "bindID": "email" }, { "bindID": "username" }],
      "group": "Security"
    },
    "permissions.backgroundSync": {
      "description": "Sync code host repository and user permissions in the background.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "description": "Whether syncing permissions in the background is enabled.",
          "type": "boolean",
          "default": false
        }
      },
      "default": {
        "enabled": true
      },
      "examples": [{ "enabled": true }],
      "group": "Security"
    },
    "branding": {
      "description": "Customize Sourcegraph homepage logo and search icon.\n\nOnly available in Sourcegraph Enterprise.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "light": {
          "$ref": "#/definitions/BrandAssets"
        },
        "dark": {
          "$ref": "#/definitions/BrandAssets"
        },
        "favicon": {
          "description": "The URL of the favicon to be used for your instance. We recommend using the following file format: ICO",
          "type": "string",
          "format": "uri"
        },
        "disableSymbolSpin": {
          "description": "Prevents the icon in the top-left corner of the screen from spinning on hover.",
          "type": "boolean",
          "default": false
        },
        "brandName": {
          "description": "String to display everywhere the brand name should be displayed. Defaults to \"Sourcegraph\"",
          "type": "string",
          "default": "Sourcegraph"
        }
      },
      "examples": [
        {
          "favicon": "https://example.com/favicon.ico",
          "light": {
            "logo": "https://example.com/logo_light.png",
            "symbol": "https://example.com/search_symbol_light_24x24.png"
          },
          "dark": {
            "logo": "https://example.com/logo_dark.png",
            "symbol": "https://example.com/search_symbol_dark_24x24.png"
          },
          "disableSymbolSpin": true
        }
      ]
    },
    "email.smtp": {
      "title": "SMTPServerConfig",
      "description": "The SMTP server used to send transactional emails (such as email verifications, reset-password emails, and notifications).",
      "type": "object",
      "additionalProperties": false,
      "required": ["host", "port", "authentication"],
      "properties": {
        "host": {
          "description": "The SMTP server host.",
          "type": "string"
        },
        "port": {
          "description": "The SMTP server port.",
          "type": "integer"
        },
        "username": {
          "description": "The username to use when communicating with the SMTP server.",
          "type": "string"
        },
        "password": {
          "description": "The username to use when communicating with the SMTP server.",
          "type": "string"
        },
        "authentication": {
          "description": "The type of authentication to use for the SMTP server.",
          "type": "string",
          "enum": ["none", "PLAIN", "CRAM-MD5"]
        },
        "domain": {
          "description": "The HELO domain to provide to the SMTP server (if needed).",
          "type": "string"
        }
      },
      "default": null,
      "examples": [
        {
          "host": "smtp.example.com",
          "port": 465,
          "username": "alice",
          "password": "mypassword",
          "authentication": "PLAIN"
        }
      ],
      "group": "Email"
    },
    "email.address": {
      "description": "The \"from\" address for emails sent by this server.",
      "type": "string",
      "format": "email",
      "group": "Email",
      "default": "noreply@sourcegraph.com"
    },
    "extensions": {
      "description": "Configures Sourcegraph extensions.",
      "type": "object",
      "properties": {
        "disabled": {
          "description": "Disable all usage of extensions.",
          "type": "boolean",
          "default": false,
          "!go": { "pointer": true }
        },
        "remoteRegistry": {
          "description": "The remote extension registry URL, or ` + "`" + `false` + "`" + ` to not use a remote extension registry. If not set, the default remote extension registry URL is used.",
          "oneOf": [
            { "type": "string", "format": "uri" },
            { "type": "boolean", "const": false }
          ]
        },
        "allowRemoteExtensions": {
          "description": "Allow only the explicitly listed remote extensions (by extension ID, such as \"alice/myextension\") from the remote registry. If not set, all remote extensions may be used from the remote registry. To completely disable the remote registry, set ` + "`" + `remoteRegistry` + "`" + ` to ` + "`" + `false` + "`" + `.\n\nOnly available in Sourcegraph Enterprise.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "default": {
        "remoteRegistry": "https://sourcegraph.com/.api/registry"
      },
      "examples": [
        {
          "remoteRegistry": "https://sourcegraph.com/.api/registry",
          "allowRemoteExtensions": ["sourcegraph/java"]
        }
      ],
      "group": "Extensions"
    },
    "auth.userOrgMap": {
      "description": "Ensure that matching users are members of the specified orgs (auto-joining users to the orgs if they are not already a member). Provide a JSON object of the form ` + "`" + `{\"*\": [\"org1\", \"org2\"]}` + "`" + `, where org1 and org2 are orgs that all users are automatically joined to. Currently the only supported key is ` + "`" + `\"*\"` + "`" + `.",
      "type": "object",
      "additionalProperties": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "examples": [{ "*": ["myorg1"] }],
      "hide": true
    },
    "log": {
      "description": "Configuration for logging and alerting, including to external services.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "sentry": {
          "description": "Configuration for Sentry",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "dsn": {
              "description": "Sentry Data Source Name (DSN). Per the Sentry docs (https://docs.sentry.io/quickstart/#about-the-dsn), it should match the following pattern: '{PROTOCOL}://{PUBLIC_KEY}@{HOST}/{PATH}{PROJECT_ID}'.",
              "type": "string",
              "pattern": "^https?://"
            }
          }
        }
      },
      "examples": [{ "sentry": { "dsn": "https://mykey@sentry.io/myproject" } }],
      "group": "Misc."
    },
    "externalURL": {
      "description": "The externally accessible URL for Sourcegraph (i.e., what you type into your browser). Previously called ` + "`" + `appURL` + "`" + `. Only root URLs are allowed.",
      "type": "string",
      "examples": ["https://sourcegraph.example.com"]
    },
    "lightstepAccessToken": {
      "description": "DEPRECATED. Use Jaeger (` + "`" + `\"observability.tracing\": { \"sampling\": \"selective\" }` + "`" + `), instead.",
      "type": "string",
      "group": "Misc."
    },
    "lightstepProject": {
      "description": "DEPRECATED. Use Jaeger (` + "`" + `\"observability.tracing\": { \"sampling\": \"selective\" }` + "`" + `), instead.",
      "type": "string",
      "examples": ["myproject"],
      "group": "Misc."
    },
    "useJaeger": {
      "description": "DEPRECATED. Use ` + "`" + `\"observability.tracing\": { \"sampling\": \"all\" }` + "`" + `, instead. Enables Jaeger tracing.",
      "type": "boolean",
      "group": "Misc."
    },
    "observability.tracing": {
      "description": "Controls the settings for distributed tracing.",
      "type": "object",
      "properties": {
        "sampling": {
          "description": "Determines the requests for which distributed traces are recorded. \"none\" (default) turns off tracing entirely. \"selective\" sends traces whenever ` + "`" + `?trace=1` + "`" + ` is present in the URL. \"all\" sends traces on every request. Note that this only affects the behavior of the distributed tracing client. The Jaeger instance must be running for traces to be collected (as described in the Sourcegraph installation instructions). Additional downsampling can be configured in Jaeger, itself (https://www.jaegertracing.io/docs/1.17/sampling)",
          "type": "string",
          "enum": ["selective", "all", "none"],
          "default": "selective"
        },
        "debug": {
          "description": "Turns on debug logging of opentracing client requests. This can be useful for debugging connectivity issues between the tracing client and the Jaeger agent, the performance overhead of tracing, and other issues related to the use of distributed tracing.",
          "type": "boolean",
          "default": false
        }
      }
    },
    "observability.logSlowSearches": {
      "description": "(debug) logs all search queries (issued by users, code intelligence, or API requests) slower than the specified number of milliseconds.",
      "type": "integer",
      "group": "Debug",
      "examples": [["10000"]]
    },
    "observability.logSlowGraphQLRequests": {
      "description": "(debug) logs all GraphQL requests slower than the specified number of milliseconds.",
      "type": "integer",
      "group": "Debug",
      "examples": [["10000"]]
    },
    "htmlHeadTop": {
      "description": "HTML to inject at the top of the ` + "`" + `<head>` + "`" + ` element on each page, for analytics scripts",
      "type": "string",
      "group": "Misc."
    },
    "htmlHeadBottom": {
      "description": "HTML to inject at the bottom of the ` + "`" + `<head>` + "`" + ` element on each page, for analytics scripts",
      "type": "string",
      "group": "Misc."
    },
    "htmlBodyTop": {
      "description": "HTML to inject at the top of the ` + "`" + `<body>` + "`" + ` element on each page, for analytics scripts",
      "type": "string",
      "group": "Misc."
    },
    "htmlBodyBottom": {
      "description": "HTML to inject at the bottom of the ` + "`" + `<body>` + "`" + ` element on each page, for analytics scripts",
      "type": "string",
      "group": "Misc."
    },
    "licenseKey": {
      "description": "The license key associated with a Sourcegraph product subscription, which is necessary to activate Sourcegraph Enterprise functionality. To obtain this value, contact Sourcegraph to purchase a subscription. To escape the value into a JSON string, you may want to use a tool like https://json-escape-text.now.sh.",
      "type": "string",
      "group": "Sourcegraph Enterprise license"
    },
    "auth.providers": {
      "description": "The authentication providers to use for identifying and signing in users. See instructions below for configuring SAML, OpenID Connect (including G Suite), and HTTP authentication proxies. Multiple authentication providers are supported (by specifying multiple elements in this array).",
      "type": "array",
      "items": {
        "required": ["type"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["builtin", "saml", "openidconnect", "http-header", "github", "gitlab"]
          }
        },
        "oneOf": [
          { "$ref": "#/definitions/BuiltinAuthProvider" },
          { "$ref": "#/definitions/SAMLAuthProvider" },
          { "$ref": "#/definitions/OpenIDConnectAuthProvider" },
          { "$ref": "#/definitions/HTTPHeaderAuthProvider" },
          { "$ref": "#/definitions/GitHubAuthProvider" },
          { "$ref": "#/definitions/GitLabAuthProvider" }
        ],
        "!go": {
          "taggedUnionType": true
        }
      },
      "group": "Authentication",
      "default": [{ "type": "builtin", "allowSignup": true }]
    },
    "auth.public": {
      "description": "WARNING: This option has been removed as of 3.8.",
      "type": "boolean",
      "default": false,
      "group": "Authentication"
    },
    "auth.sessionExpiry": {
      "type": "string",
      "description": "The duration of a user session, after which it expires and the user is required to re-authenticate. The default is 90 days. There is typically no need to set this, but some users may have specific internal security requirements.\n\nThe string format is that of the Duration type in the Go time package (https://golang.org/pkg/time/#ParseDuration). E.g., \"720h\", \"43200m\", \"2592000s\" all indicate a timespan of 30 days.\n\nNote: changing this field does not affect the expiration of existing sessions. If you would like to enforce this limit for existing sessions, you must log out currently signed-in users. You can force this by removing all keys beginning with \"session_\" from the Redis store:\n\n* For deployments using ` + "`" + `sourcegraph/server` + "`" + `: ` + "`" + `docker exec $CONTAINER_ID redis-cli --raw keys 'session_*' | xargs docker exec $CONTAINER_ID redis-cli del` + "`" + `\n* For cluster deployments: \n  ` + "`" + `` + "`" + `` + "`" + `\n  REDIS_POD=\"$(kubectl get pods -l app=redis-store -o jsonpath={.items[0].metadata.name})\";\n  kubectl exec \"$REDIS_POD\" -- redis-cli --raw keys 'session_*' | xargs kubectl exec \"$REDIS_POD\" -- redis-cli --raw del;\n  ` + "`" + `` + "`" + `` + "`" + `\n",
      "default": "2160h",
      "examples": ["168h"],
      "group": "Authentication"
    },
    "auth.enableUsernameChanges": {
      "description": "Enables users to change their username after account creation. Warning: setting this to be true has security implications if you have enabled (or will at any point in the future enable) repository permissions with an option that relies on username equivalency between Sourcegraph and an external service or authentication provider. Do NOT set this to true if you are using non-built-in authentication OR rely on username equivalency for repository permissions.",
      "type": "boolean",
      "default": false,
      "group": "Authentication"
    },
    "auth.minPasswordLength": {
      "description": "The minimum number of Unicode code points that a password must contain.",
      "type": "integer",
      "default": 12,
      "group": "Authentication"
    },
    "update.channel": {
      "description": "The channel on which to automatically check for Sourcegraph updates.",
      "type": ["string"],
      "enum": ["release", "none"],
      "default": "release",
      "examples": ["none"],
      "group": "Misc."
    }
  },
  "definitions": {
    "BrandAssets": {
      "type": "object",
      "properties": {
        "logo": {
          "description": "The URL to the image used on the homepage. This will replace the Sourcegraph logo on the homepage. Maximum width: 320px. We recommend using the following file formats: SVG, PNG",
          "type": "string",
          "format": "uri"
        },
        "symbol": {
          "description": "The URL to the symbol used as the search icon. Recommended size: 24x24px. We recommend using the following file formats: SVG, PNG, ICO",
          "type": "string",
          "format": "uri"
        }
      }
    },
    "BuiltinAuthProvider": {
      "description": "Configures the builtin username-password authentication provider.",
      "type": "object",
      "additionalProperties": false,
      "required": ["type"],
      "properties": {
        "type": {
          "type": "string",
          "const": "builtin"
        },
        "allowSignup": {
          "description": "Allows new visitors to sign up for accounts. The sign-up page will be enabled and accessible to all visitors.\n\nSECURITY: If the site has no users (i.e., during initial setup), it will always allow the first user to sign up and become site admin **without any approval** (first user to sign up becomes the admin).",
          "type": "boolean",
          "default": false
        }
      }
    },
    "OpenIDConnectAuthProvider": {
      "description": "Configures the OpenID Connect authentication provider for SSO.",
      "type": "object",
      "additionalProperties": false,
      "required": ["type", "issuer", "clientID", "clientSecret"],
      "properties": {
        "type": {
          "type": "string",
          "const": "openidconnect"
        },
        "displayName": { "$ref": "#/definitions/AuthProviderCommon/properties/displayName" },
        "configID": {
          "description": "An identifier that can be used to reference this authentication provider in other parts of the config. For example, in configuration for a code host, you may want to designate this authentication provider as the identity provider for the code host.",
          "type": "string"
        },
        "issuer": {
          "description": "The URL of the OpenID Connect issuer.\n\nFor Google Apps: https://accounts.google.com",
          "type": "string",
          "format": "uri",
          "pattern": "^https?://"
        },
        "clientID": {
          "description": "The client ID for the OpenID Connect client for this site.\n\nFor Google Apps: obtain this value from the API console (https://console.developers.google.com), as described at https://developers.google.com/identity/protocols/OpenIDConnect#getcredentials",
          "type": "string",
          "pattern": "^[^<]"
        },
        "clientSecret": {
          "description": "The client secret for the OpenID Connect client for this site.\n\nFor Google Apps: obtain this value from the API console (https://console.developers.google.com), as described at https://developers.google.com/identity/protocols/OpenIDConnect#getcredentials",
          "type": "string",
          "pattern": "^[^<]"
        },
        "requireEmailDomain": {
          "description": "Only allow users to authenticate if their email domain is equal to this value (example: mycompany.com). Do not include a leading \"@\". If not set, all users on this OpenID Connect provider can authenticate to Sourcegraph.",
          "type": "string",
          "pattern": "^[^<@]"
        }
      }
    },
    "SAMLAuthProvider": {
      "description": "Configures the SAML authentication provider for SSO.\n\nNote: if you are using IdP-initiated login, you must have *at most one* SAMLAuthProvider in the ` + "`" + `auth.providers` + "`" + ` array.",
      "type": "object",
      "additionalProperties": false,
      "required": ["type"],
      "dependencies": {
        "serviceProviderCertificate": ["serviceProviderPrivateKey"],
        "serviceProviderPrivateKey": ["serviceProviderCertificate"],
        "signRequests": ["serviceProviderCertificate", "serviceProviderPrivateKey"]
      },
      "properties": {
        "type": {
          "type": "string",
          "const": "saml"
        },
        "configID": {
          "description": "An identifier that can be used to reference this authentication provider in other parts of the config. For example, in configuration for a code host, you may want to designate this authentication provider as the identity provider for the code host.",
          "type": "string"
        },
        "displayName": { "$ref": "#/definitions/AuthProviderCommon/properties/displayName" },
        "serviceProviderIssuer": {
          "description": "The SAML Service Provider name, used to identify this Service Provider. This is required if the \"externalURL\" field is not set (as the SAML metadata endpoint is computed as \"<externalURL>.auth/saml/metadata\"), or when using multiple SAML authentication providers.",
          "type": "string"
        },
        "identityProviderMetadataURL": {
          "description": "The SAML Identity Provider metadata URL (for dynamic configuration of the SAML Service Provider).",
          "type": "string",
          "format": "uri",
          "pattern": "^https?://"
        },
        "identityProviderMetadata": {
          "description": "The SAML Identity Provider metadata XML contents (for static configuration of the SAML Service Provider). The value of this field should be an XML document whose root element is ` + "`" + `<EntityDescriptor>` + "`" + ` or ` + "`" + `<EntityDescriptors>` + "`" + `. To escape the value into a JSON string, you may want to use a tool like https://json-escape-text.now.sh.",
          "type": "string"
        },
        "serviceProviderCertificate": {
          "description": "The SAML Service Provider certificate in X.509 encoding (begins with \"-----BEGIN CERTIFICATE-----\"). This certificate is used by the Identity Provider to validate the Service Provider's AuthnRequests and LogoutRequests. It corresponds to the Service Provider's private key (` + "`" + `serviceProviderPrivateKey` + "`" + `). To escape the value into a JSON string, you may want to use a tool like https://json-escape-text.now.sh.",
          "type": "string",
          "$comment": "The pattern matches either X.509 encoding or an env var.",
          "pattern": "^(-----BEGIN CERTIFICATE-----\n|\\$)",
          "minLength": 1
        },
        "serviceProviderPrivateKey": {
          "description": "The SAML Service Provider private key in PKCS#8 encoding (begins with \"-----BEGIN PRIVATE KEY-----\"). This private key is used to sign AuthnRequests and LogoutRequests. It corresponds to the Service Provider's certificate (` + "`" + `serviceProviderCertificate` + "`" + `). To escape the value into a JSON string, you may want to use a tool like https://json-escape-text.now.sh.",
          "type": "string",
          "$comment": "The pattern matches either PKCS#8 encoding or an env var.",
          "pattern": "^(-----BEGIN PRIVATE KEY-----\n|\\$)",
          "minLength": 1
        },
        "nameIDFormat": {
          "description": "The SAML NameID format to use when performing user authentication.",
          "type": "string",
          "pattern": "^urn:",
          "default": "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
          "examples": [
            "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
            "urn:oasis:names:tc:SAML:1.1:nameid-format:persistent",
            "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
            "urn:oasis:names:tc:SAML:2.0:nameid-format:emailAddress",
            "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
            "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
            "urn:oasis:names:tc:SAML:2.0:nameid-format:unspecified"
          ]
        },
        "signRequests": {
          "description": "Sign AuthnRequests and LogoutRequests sent to the Identity Provider using the Service Provider's private key (` + "`" + `serviceProviderPrivateKey` + "`" + `). It defaults to true if the ` + "`" + `serviceProviderPrivateKey` + "`" + ` and ` + "`" + `serviceProviderCertificate` + "`" + ` are set, and false otherwise.",
          "type": "boolean",
          "!go": { "pointer": true }
        },
        "insecureSkipAssertionSignatureValidation": {
          "description": "Whether the Service Provider should (insecurely) accept assertions from the Identity Provider without a valid signature.",
          "type": "boolean",
          "default": false
        }
      }
    },
    "HTTPHeaderAuthProvider": {
      "description": "Configures the HTTP header authentication provider (which authenticates users by consulting an HTTP request header set by an authentication proxy such as https://github.com/bitly/oauth2_proxy).",
      "type": "object",
      "additionalProperties": false,
      "required": ["type", "usernameHeader"],
      "properties": {
        "type": {
          "type": "string",
          "const": "http-header"
        },
        "usernameHeader": {
          "description": "The name (case-insensitive) of an HTTP header whose value is taken to be the username of the client requesting the page. Set this value when using an HTTP proxy that authenticates requests, and you don't want the extra configurability of the other authentication methods.",
          "type": "string",
          "examples": ["X-Forwarded-User"]
        },
        "stripUsernameHeaderPrefix": {
          "description": "The prefix that precedes the username portion of the HTTP header specified in ` + "`" + `usernameHeader` + "`" + `. If specified, the prefix will be stripped from the header value and the remainder will be used as the username. For example, if using Google Identity-Aware Proxy (IAP) with Google Sign-In, set this value to ` + "`" + `accounts.google.com:` + "`" + `.",
          "type": "string",
          "examples": ["accounts.google.com:"]
        }
      }
    },
    "GitHubAuthProvider": {
      "description": "Configures the GitHub (or GitHub Enterprise) OAuth authentication provider for SSO. In addition to specifying this configuration object, you must also create a OAuth App on your GitHub instance: https://developer.github.com/apps/building-oauth-apps/creating-an-oauth-app/. When a user signs into Sourcegraph or links their GitHub account to their existing Sourcegraph account, GitHub will prompt the user for the repo scope.",
      "type": "object",
      "additionalProperties": false,
      "required": ["type", "clientID", "clientSecret"],
      "properties": {
        "type": {
          "type": "string",
          "const": "github"
        },
        "url": {
          "type": "string",
          "description": "URL of the GitHub instance, such as https://github.com or https://github-enterprise.example.com.",
          "default": "https://github.com/"
        },
        "clientID": {
          "type": "string",
          "description": "The Client ID of the GitHub OAuth app, accessible from https://github.com/settings/developers (or the same path on GitHub Enterprise)."
        },
        "clientSecret": {
          "type": "string",
          "description": "The Client Secret of the GitHub OAuth app, accessible from https://github.com/settings/developers (or the same path on GitHub Enterprise)."
        },
        "displayName": { "$ref": "#/definitions/AuthProviderCommon/properties/displayName" },
        "allowSignup": {
          "description": "Allows new visitors to sign up for accounts via GitHub authentication. If false, users signing in via GitHub must have an existing Sourcegraph account, which will be linked to their GitHub identity after sign-in.",
          "default": false,
          "type": "boolean"
        },
        "allowOrgs": {
          "description": "Restricts new logins to members of these GitHub organizations. Existing sessions won't be invalidated. Leave empty or unset for no org restrictions.",
          "default": [],
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        }
      }
    },
    "GitLabAuthProvider": {
      "description": "Configures the GitLab OAuth authentication provider for SSO. In addition to specifying this configuration object, you must also create a OAuth App on your GitLab instance: https://docs.gitlab.com/ee/integration/oauth_provider.html. The application should have ` + "`" + `api` + "`" + ` and ` + "`" + `read_user` + "`" + ` scopes and the callback URL set to the concatenation of your Sourcegraph instance URL and \"/.auth/gitlab/callback\".",
      "type": "object",
      "additionalProperties": false,
      "required": ["type", "clientID", "clientSecret"],
      "properties": {
        "type": {
          "type": "string",
          "const": "gitlab"
        },
        "url": {
          "type": "string",
          "description": "URL of the GitLab instance, such as https://gitlab.com or https://gitlab.example.com.",
          "default": "https://gitlab.com/"
        },
        "clientID": {
          "type": "string",
          "description": "The Client ID of the GitLab OAuth app, accessible from https://gitlab.com/oauth/applications (or the same path on your private GitLab instance)."
        },
        "clientSecret": {
          "type": "string",
          "description": "The Client Secret of the GitLab OAuth app, accessible from https://gitlab.com/oauth/applications (or the same path on your private GitLab instance)."
        },
        "displayName": { "$ref": "#/definitions/AuthProviderCommon/properties/displayName" }
      }
    },
    "AuthProviderCommon": {
      "$comment": "This schema is not used directly. The *AuthProvider schemas refer to its properties directly.",
      "description": "Common properties for authentication providers.",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "The name to use when displaying this authentication provider in the UI. Defaults to an auto-generated name with the type of authentication provider and other relevant identifiers (such as a hostname).",
          "type": "string"
        }
      }
    }
  }
}
`
