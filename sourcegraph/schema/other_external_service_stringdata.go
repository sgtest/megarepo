// Code generated by stringdata. DO NOT EDIT.

package schema

// OtherExternalServiceSchemaJSON is the content of the file "other_external_service.schema.json".
const OtherExternalServiceSchemaJSON = `{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "other_external_service.schema.json#",
  "title": "OtherExternalServiceConnection",
  "description": "Configuration for a Connection to Git repositories for which an external service integration isn't yet available.",
  "allowComments": true,
  "type": "object",
  "additionalProperties": false,
  "required": ["repos"],
  "properties": {
    "url": {
      "title": "Git clone base URL",
      "type": "string",
      "format": "uri",
      "pattern": "^(git|ssh|https?)://",
      "not": {
        "type": "string",
        "pattern": "example\\.com"
      },
      "examples": ["https://github.com/?access_token=secret", "ssh://user@host.xz:2333/", "git://host.xz:2333/"]
    },
    "repos": {
      "title": "List of repository clone URLs to be discovered.",
      "type": "array",
      "items": {
        "type": "string",
        "minLength": 1,
        "format": "uri-reference",
        "examples": ["path/to/my/repo", "path/to/my/repo.git/"]
      }
    },
    "repositoryPathPattern": {
      "description": "The pattern used to generate the corresponding Sourcegraph repository name for the repositories. In the pattern, the variable \"{base}\" is replaced with the Git clone base URL host and path, and \"{repo}\" is replaced with the repository path taken from the ` + "`" + `repos` + "`" + ` field.\n\nFor example, if your Git clone base URL is https://git.example.com/repos and ` + "`" + `repos` + "`" + ` contains the value \"my/repo\", then a repositoryPathPattern of \"{base}/{repo}\" would mean that a repository at https://git.example.com/repos/my/repo is available on Sourcegraph at https://sourcegraph.example.com/git.example.com/repos/my/repo.\n\nIt is important that the Sourcegraph repository name generated with this pattern be unique to this code host. If different code hosts generate repository names that collide, Sourcegraph's behavior is undefined.",
      "type": "string",
      "default": "{base}/{repo}",
      "examples": ["pretty-host-name/{repo}"]
    }
  }
}
`
