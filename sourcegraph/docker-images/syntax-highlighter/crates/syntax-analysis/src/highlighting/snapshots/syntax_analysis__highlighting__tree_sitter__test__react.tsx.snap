---
source: crates/syntax-analysis/src/highlighting/tree_sitter.rs
expression: "snapshot_treesitter_syntax_kinds(&document, &contents)"
---
  const Component: React.FunctionComponent<{}> = () => {
//^^^^^ Keyword
//      ^^^^^^^^^ IdentifierFunction
//                 ^^^^^ Identifier
//                       ^^^^^^^^^^^^^^^^^ IdentifierType
      let name = 'id'
//    ^^^ Keyword
//        ^^^^ Identifier
//               ^ StringLiteral
//                ^^ StringLiteral
//                  ^ StringLiteral
      return (
//    ^^^^^^ Keyword
          <div>
//        ^ TagDelimiter
//         ^^^ Tag
//            ^ TagDelimiter
              <p />
//            ^ TagDelimiter
//             ^ Tag
//               ^ TagDelimiter
//                ^ TagDelimiter
              <h1 id={name}>My Component</h1>
//            ^ TagDelimiter
//             ^^ Tag
//                ^^ TagAttribute
//                    ^^^^ Identifier
//                         ^ TagDelimiter
//                                      ^ TagDelimiter
//                                       ^ TagDelimiter
//                                        ^^ Tag
//                                          ^ TagDelimiter
              {[1, 2, 3].map(item => (
//              ^ NumericLiteral
//                 ^ NumericLiteral
//                    ^ NumericLiteral
//                       ^^^ IdentifierFunction
//                           ^^^^ Identifier
                  <p key={item}>{item}</p>
//                ^ TagDelimiter
//                 ^ Tag
//                   ^^^ TagAttribute
//                        ^^^^ Identifier
//                             ^ TagDelimiter
//                               ^^^^ Identifier
//                                    ^ TagDelimiter
//                                     ^ TagDelimiter
//                                      ^ Tag
//                                       ^ TagDelimiter
              ))}
          </div>
//        ^ TagDelimiter
//         ^ TagDelimiter
//          ^^^ Tag
//             ^ TagDelimiter
      )
  }
