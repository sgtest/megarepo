---
source: crates/sg-syntax/src/sg_sciptect.rs
expression: "dump_document(&document, &contents)"
---
  @requires_authorization(roles=["ADMIN"])
//^ PunctuationBracket  punctuation.definition.annotation.python
// ^^^^^^^^^^^^^^^^^^^^^^ Identifier  variable.annotation.function.python
//                       ^ PunctuationBracket  punctuation.section.arguments.begin.python
//                        ^^^^^ Identifier  variable.parameter.python
//                             ^ IdentifierOperator  keyword.operator.assignment.python
//                              ^ PunctuationBracket  punctuation.section.sequence.begin.python
//                               ^ StringLiteral  string.quoted.double.python
//                                ^^^^^^ StringLiteral  string.quoted.double.python
//                                      ^ PunctuationBracket  punctuation.section.sequence.end.python
//                                       ^ PunctuationBracket  punctuation.section.arguments.end.python
  def somefunc(param1='', param2=0):
//^^^ IdentifierKeyword  keyword.declaration.function.python
//    ^^^^^^^^ IdentifierFunction  entity.name.function.python
//            ^ PunctuationBracket  punctuation.section.parameters.begin.python
//             ^^^^^^ Identifier  variable.parameter.python
//                   ^ IdentifierOperator  keyword.operator.assignment.python
//                    ^ StringLiteral  string.quoted.single.python
//                     ^ StringLiteral  string.quoted.single.python
//                      ^ PunctuationBracket  punctuation.separator.parameters.python
//                        ^^^^^^ Identifier  variable.parameter.python
//                              ^ IdentifierOperator  keyword.operator.assignment.python
//                               ^ NumericLiteral  constant.numeric.integer.decimal.python
//                                ^ PunctuationBracket  punctuation.section.parameters.end.python
//                                 ^ PunctuationBracket  punctuation.section.function.begin.python
      r'''A docstring'''
//    ^ IdentifierType  storage.type.string.python
//     ^^^^^^^^^^^^^^^^^ Comment  comment.block.documentation.python
      if param1 > param2: # interesting
//    ^^ IdentifierKeyword  keyword.control.conditional.if.python
//              ^ IdentifierOperator  keyword.operator.comparison.python
//                      ^ PunctuationBracket  punctuation.section.block.conditional.if.python
//                        ^^^^^^^^^^^^^ Comment  comment.line.number-sign.python
          print 'Gre\'ater'
//        ^^^^^ IdentifierKeyword  keyword.other.print.python
//              ^ StringLiteral  string.quoted.single.python
//               ^^^ StringLiteral  constant.character.escape.python
//                  ^^ StringLiteralEscape  constant.character.escape.python
//                    ^^^^^ StringLiteral  string.quoted.single.python
      return (param2 - param1 + 1 + 0b10l) or None
//    ^^^^^^ IdentifierKeyword  keyword.control.flow.return.python
//           ^ PunctuationBracket  punctuation.section.group.begin.python
//                   ^ IdentifierOperator  keyword.operator.arithmetic.python
//                            ^ IdentifierOperator  keyword.operator.arithmetic.python
//                              ^ NumericLiteral  constant.numeric.integer.decimal.python
//                                ^ IdentifierOperator  keyword.operator.arithmetic.python
//                                  ^^ PunctuationBracket  punctuation.definition.numeric.base.python
//                                    ^^ NumericLiteral  storage.type.numeric.python
//                                      ^ IdentifierType  storage.type.numeric.python
//                                       ^ PunctuationBracket  punctuation.section.group.end.python
//                                         ^^ IdentifierOperator  keyword.operator.logical.python
//                                            ^^^^ IdentifierBuiltin  constant.language.python
  
  class SomeClass:
//^^^^^ IdentifierKeyword  keyword.declaration.class.python
//      ^^^^^^^^^ Identifier  entity.name.class.python
//               ^ PunctuationBracket  punctuation.section.class.begin.python
      pass
//    ^^^^ IdentifierKeyword  keyword.control.flow.pass.python

