---
source: crates/sg-syntax/src/sg_sciptect.rs
assertion_line: 616
expression: "snapshot_sciptect_documents(&document, &contents)"
---
  export class Foo {
//^^^^^^ Keyword keyword.control.import-export.js
//       ^^^^^ Keyword storage.type.class.js
//             ^^^ Identifier entity.name.class.js
//                 ^ PunctuationBracket punctuation.section.block.begin.js
    property = 42
//  ^^^^^^^^ Identifier variable.other.readwrite.js
//           ^ IdentifierOperator keyword.operator.assignment.js
//             ^^ NumericLiteral constant.numeric.integer.decimal.js
    fn() {
//  ^^ IdentifierFunction entity.name.function.js
//    ^ PunctuationBracket punctuation.section.group.begin.js
//     ^ PunctuationBracket punctuation.section.group.end.js
//       ^ PunctuationBracket punctuation.section.block.begin.js
      console.log(this.propert)
//    ^^^^^^^ IdentifierType support.type.object.console.js
//           ^ PunctuationBracket punctuation.accessor.js
//            ^^^ IdentifierFunction support.function.console.js
//               ^ PunctuationBracket punctuation.section.group.begin.js
//                ^^^^ IdentifierBuiltin variable.language.this.js
//                    ^ PunctuationBracket punctuation.accessor.js
//                            ^ PunctuationBracket punctuation.section.group.end.js
    }
//  ^ PunctuationBracket punctuation.section.block.end.js
  }
//^ PunctuationBracket punctuation.section.block.end.js
  export function $initHighlight(block, cls) {
//^^^^^^ Keyword keyword.control.import-export.js
//       ^^^^^^^^ Keyword storage.type.function.js
//                ^^^^^^^^^^^^^^ IdentifierFunction entity.name.function.js
//                              ^ PunctuationBracket punctuation.section.group.begin.js
//                               ^^^^^ Identifier variable.parameter.function.js
//                                    ^ PunctuationBracket punctuation.separator.parameter.function.js
//                                      ^^^ Identifier variable.parameter.function.js
//                                         ^ PunctuationBracket punctuation.section.group.end.js
//                                           ^ PunctuationBracket punctuation.section.block.begin.js
    try {
//  ^^^ Keyword keyword.control.exception.try.js
//      ^ PunctuationBracket punctuation.section.block.begin.js
      if (cls.search(/\bno\-highlight\b/) != -1)
//    ^^ Keyword keyword.control.conditional.if.js
//       ^ PunctuationBracket punctuation.section.group.begin.js
//        ^^^ Identifier variable.other.readwrite.js
//           ^ PunctuationBracket punctuation.accessor.js
//            ^^^^^^ IdentifierFunction variable.function.js
//                  ^ PunctuationBracket punctuation.section.group.begin.js
//                   ^ StringLiteral keyword.control.anchor.regexp
//                    ^^ Keyword keyword.control.anchor.regexp
//                      ^^ StringLiteral constant.character.escape.backslash.regexp
//                        ^^ StringLiteralEscape constant.character.escape.backslash.regexp
//                          ^^^^^^^^^ StringLiteral keyword.control.anchor.regexp
//                                   ^^ Keyword keyword.control.anchor.regexp
//                                     ^ StringLiteral string.regexp.js
//                                      ^ PunctuationBracket punctuation.section.group.end.js
//                                        ^^ IdentifierOperator keyword.operator.comparison.js
//                                           ^ IdentifierOperator keyword.operator.arithmetic.js
//                                            ^ NumericLiteral constant.numeric.integer.decimal.js
//                                             ^ PunctuationBracket punctuation.section.group.end.js
        return process(block, true, 0x0F) +
//      ^^^^^^ Keyword keyword.control.flow.return.js
//                    ^ PunctuationBracket punctuation.section.group.begin.js
//                     ^^^^^ Identifier variable.other.readwrite.js
//                          ^ PunctuationBracket punctuation.separator.comma.js
//                            ^^^^ IdentifierBuiltin constant.language.boolean.true.js
//                                ^ PunctuationBracket punctuation.separator.comma.js
//                                  ^^ PunctuationBracket punctuation.definition.numeric.base.js
//                                    ^^ NumericLiteral constant.numeric.integer.hexadecimal.js
//                                      ^ PunctuationBracket punctuation.section.group.end.js
//                                        ^ IdentifierOperator keyword.operator.arithmetic.js
               ` class="${cls}"`;
//             ^^^^^^^^^ StringLiteral string.quoted.other.js
//                      ^^ PunctuationBracket punctuation.section.interpolation.begin.js
//                        ^^^ Identifier variable.other.readwrite.js
//                           ^ PunctuationBracket punctuation.section.interpolation.end.js
//                            ^^ StringLiteral string.quoted.other.js
//                              ^ PunctuationDelimiter punctuation.terminator.statement.js
    } catch (e) {
//  ^ PunctuationBracket punctuation.section.block.end.js
//    ^^^^^ Keyword keyword.control.exception.catch.js
//          ^ PunctuationBracket punctuation.section.group.begin.js
//           ^ Identifier variable.other.readwrite.js
//            ^ PunctuationBracket punctuation.section.group.end.js
//              ^ PunctuationBracket punctuation.section.block.begin.js
      /* handle exception */
//    ^^^^^^^^^^^^^^^^^^^^^^ Comment comment.block.js
    }
//  ^ PunctuationBracket punctuation.section.block.end.js
    for (var i = 0 / 2; i < classes.length; i++) {
//  ^^^ Keyword keyword.control.loop.for.js
//      ^ PunctuationBracket punctuation.section.group.js
//       ^^^ IdentifierType storage.type.js
//           ^ Identifier variable.other.readwrite.js
//             ^ IdentifierOperator keyword.operator.assignment.js
//               ^ NumericLiteral constant.numeric.integer.decimal.js
//                 ^ IdentifierOperator keyword.operator.arithmetic.js
//                   ^ NumericLiteral constant.numeric.integer.decimal.js
//                    ^ PunctuationBracket punctuation.separator.expression.js
//                      ^ Identifier variable.other.readwrite.js
//                        ^ IdentifierOperator keyword.operator.relational.js
//                          ^^^^^^^ Identifier variable.other.readwrite.js
//                                 ^ PunctuationBracket punctuation.accessor.js
//                                        ^ PunctuationBracket punctuation.separator.expression.js
//                                          ^ Identifier variable.other.readwrite.js
//                                           ^^ IdentifierOperator keyword.operator.arithmetic.js
//                                             ^ PunctuationBracket punctuation.section.group.js
//                                               ^ PunctuationBracket punctuation.section.block.begin.js
      if (checkCondition(classes[i]) === undefined)
//    ^^ Keyword keyword.control.conditional.if.js
//       ^ PunctuationBracket punctuation.section.group.begin.js
//        ^^^^^^^^^^^^^^ IdentifierFunction variable.function.js
//                      ^ PunctuationBracket punctuation.section.group.begin.js
//                       ^^^^^^^ Identifier variable.other.readwrite.js
//                              ^ PunctuationBracket punctuation.section.brackets.begin.js
//                               ^ Identifier variable.other.readwrite.js
//                                ^ PunctuationBracket punctuation.section.brackets.end.js
//                                 ^ PunctuationBracket punctuation.section.group.end.js
//                                   ^^^ IdentifierOperator keyword.operator.comparison.js
//                                       ^^^^^^^^^ IdentifierBuiltin constant.language.undefined.js
//                                                ^ PunctuationBracket punctuation.section.group.end.js
        console.log('undefined');
//      ^^^^^^^ IdentifierType support.type.object.console.js
//             ^ PunctuationBracket punctuation.accessor.js
//              ^^^ IdentifierFunction support.function.console.js
//                 ^ PunctuationBracket punctuation.section.group.begin.js
//                  ^^^^^^^^^^^ StringLiteral string.quoted.single.js
//                             ^ PunctuationBracket punctuation.section.group.end.js
//                              ^ PunctuationDelimiter punctuation.terminator.statement.js
    }
//  ^ PunctuationBracket punctuation.section.block.end.js
  
    return (
//  ^^^^^^ Keyword keyword.control.flow.return.js
//         ^ PunctuationBracket punctuation.section.group.begin.js
      <div>
//    ^ PunctuationBracket punctuation.definition.tag.begin.js
//     ^^^ Identifier entity.name.tag.js
//        ^ PunctuationBracket punctuation.definition.tag.end.js
        <web-component>{block}</web-component>
//      ^ PunctuationBracket punctuation.definition.tag.begin.js
//       ^^^^^^^^^^^^^ Identifier entity.name.tag.js
//                    ^ PunctuationBracket punctuation.definition.tag.end.js
//                     ^ PunctuationBracket punctuation.definition.interpolation.begin.js
//                      ^^^^^ Identifier variable.other.readwrite.js
//                           ^ PunctuationBracket punctuation.definition.interpolation.end.js
//                            ^ PunctuationBracket punctuation.definition.tag.begin.js
//                             ^ PunctuationBracket punctuation.definition.tag.begin.js
//                              ^^^^^^^^^^^^^ Identifier entity.name.tag.js
//                                           ^ PunctuationBracket punctuation.definition.tag.end.js
      </div>
//    ^ PunctuationBracket punctuation.definition.tag.begin.js
//     ^ PunctuationBracket punctuation.definition.tag.begin.js
//      ^^^ Identifier entity.name.tag.js
//         ^ PunctuationBracket punctuation.definition.tag.end.js
    )
//  ^ PunctuationBracket punctuation.section.group.end.js
  }
//^ PunctuationBracket punctuation.section.block.end.js
  
  export  $initHighlight;
//^^^^^^ Keyword keyword.control.import-export.js
//        ^^^^^^^^^^^^^^ Identifier variable.other.readwrite.js
//                      ^ PunctuationDelimiter punctuation.terminator.statement.js

