---
source: crates/sg-syntax/src/sg_sciptect.rs
expression: "dump_document(&document, &contents)"
---
  #!/bin/sh
// ^^^^^^^^ Comment  comment.line.number-sign.shell
  set -eux
//^^^ IdentifierFunction  support.function.set.shell
//    ^ PunctuationBracket  punctuation.definition.parameter.shell
//     ^^^ Identifier  variable.parameter.option.shell
  
  OUT=$(test/backtrace-test-raise 2>&1)
//^^^ Identifier  variable.other.readwrite.assignment.shell
//   ^ IdentifierOperator  keyword.operator.assignment.shell
//    ^ PunctuationBracket  punctuation.definition.variable.shell
//    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ StringLiteral  string.unquoted.shell
//     ^ PunctuationBracket  punctuation.section.parens.begin.shell
//      ^^^^^^^^^^^^^^^^^^^^^^^^^ IdentifierFunction  variable.function.shell
//                                ^ NumericLiteral  constant.numeric.integer.decimal.file-descriptor.shell
//                                 ^^ IdentifierOperator  keyword.operator.assignment.redirection.shell
//                                   ^ NumericLiteral  constant.numeric.integer.decimal.file-descriptor.shell
//                                    ^ PunctuationBracket  punctuation.section.parens.end.shell
  REPO_LINT=$(
//^^^^^^^^^ Identifier  variable.other.readwrite.assignment.shell
//         ^ IdentifierOperator  keyword.operator.assignment.shell
//          ^ PunctuationBracket  punctuation.definition.variable.shell
//           ^ PunctuationBracket  punctuation.section.parens.begin.shell
//          ^^ StringLiteral 4:10..9:19  string.unquoted.shell
   git diff origin/main -- foobar.md |
// ^^^ IdentifierFunction  variable.function.shell
//                     ^^^ IdentifierOperator  keyword.operator.end-of-options.shell
//                                   ^ IdentifierOperator  keyword.operator.logical.pipe.shell
   # some comment
// ^ Comment  comment.line.number-sign.shell
//  ^^^^^^^^^^^^^ Comment  comment.line.number-sign.shell
   grep ^+ |
// ^^^^ IdentifierFunction  variable.function.shell
//         ^ IdentifierOperator  keyword.operator.logical.pipe.shell
   # more sed
// ^ Comment  comment.line.number-sign.shell
//  ^^^^^^^^^ Comment  comment.line.number-sign.shell
   sed 's/#readme//')
// ^^^ IdentifierFunction  variable.function.shell
//     ^^^^^^^^^^^^^ StringLiteral  string.quoted.single.shell
//                  ^ PunctuationBracket  punctuation.section.parens.end.shell
  echo "$OUT"
//^^^^ IdentifierFunction  support.function.echo.shell
//     ^^^^^^ StringLiteral  string.quoted.double.shell
//      ^ PunctuationBracket  punctuation.definition.variable.shell
//       ^^^ Identifier  variable.other.readwrite.shell
  echo "$REPO_LINT"
//^^^^ IdentifierFunction  support.function.echo.shell
//     ^^^^^^^^^^^^ StringLiteral  string.quoted.double.shell
//      ^ PunctuationBracket  punctuation.definition.variable.shell
//       ^^^^^^^^^ Identifier  variable.other.readwrite.shell
  echo "$OUT" | grep 'in main backtrace-test-raise.cc:4'
//^^^^ IdentifierFunction  support.function.echo.shell
//     ^^^^^^ StringLiteral  string.quoted.double.shell
//      ^ PunctuationBracket  punctuation.definition.variable.shell
//       ^^^ Identifier  variable.other.readwrite.shell
//            ^ IdentifierOperator  keyword.operator.logical.pipe.shell
//              ^^^^ IdentifierFunction  variable.function.shell
//                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ StringLiteral  string.quoted.single.shell
  if [ "$OUT" != '0' ]; then
//^^ IdentifierKeyword  keyword.control.conditional.if.shell
//   ^ IdentifierFunction  support.function.test.begin.shell
//     ^^^^^^ StringLiteral  string.quoted.double.shell
//      ^ PunctuationBracket  punctuation.definition.variable.shell
//       ^^^ Identifier  variable.other.readwrite.shell
//            ^^ IdentifierOperator  keyword.operator.logical.shell
//               ^^^ StringLiteral  string.quoted.single.shell
//                   ^ IdentifierFunction  support.function.test.end.shell
//                    ^ IdentifierOperator  keyword.operator.logical.continue.shell
//                      ^^^^ IdentifierKeyword  keyword.control.conditional.then.shell
  echo 'foo'
//^^^^ IdentifierFunction  support.function.echo.shell
//     ^^^^^ StringLiteral  string.quoted.single.shell
  fi
//^^ IdentifierKeyword  keyword.control.conditional.end.shell

