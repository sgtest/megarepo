---
source: crates/sg-syntax/src/sg_sciptect.rs
expression: "dump_document(&document, &contents)"
---
  package main
//^^^^^^^ IdentifierKeyword
//        ^^^^ Identifier
  
  import "fmt"
//^^^^^^ IdentifierKeyword
//       ^^^^^ StringLiteral
  
  type Bar struct {
//^^^^ IdentifierKeyword
//     ^^^ IdentifierType
//         ^^^^^^ IdentifierKeyword
//                ^ PunctuationBracket
   z int
// ^ Identifier
//   ^^^ IdentifierBuiltinType
  }
//^ PunctuationBracket
  
  type Foo struct {
//^^^^ IdentifierKeyword
//     ^^^ IdentifierType
//         ^^^^^^ IdentifierKeyword
//                ^ PunctuationBracket
   x *int
// ^ Identifier
//   ^ IdentifierOperator
//    ^^^ IdentifierBuiltinType
   Y string
// ^ Identifier
//   ^^^^^^ IdentifierBuiltinType
   Bar
   Bar2 Bar
// ^^^^ Identifier
//      ^^^ IdentifierType
   Bar3 *Bar
// ^^^^ Identifier
//      ^ IdentifierOperator
//       ^^^ IdentifierType
  }
//^ PunctuationBracket
  
  func main() {
//^^^^ IdentifierKeyword
//     ^^^^ IdentifierFunction
//         ^ PunctuationBracket
//          ^ PunctuationBracket
//            ^ PunctuationBracket
   // this is comment
// ^^^^^^^^^^^^^^^^^^ Comment
  
   x := 1234
// ^ Identifier
//   ^^ IdentifierOperator
//      ^^^^ NumericLiteral
   char := '1'
// ^^^^ Identifier
//      ^^ IdentifierOperator
//         ^^^ CharacterLiteral
   aString := "hello\n"
// ^^^^^^^ Identifier
//         ^^ IdentifierOperator
//            ^^^^^^ StringLiteral
//                  ^^ StringLiteralEscape
//                    ^ StringLiteral
   bool := true
// ^^^^ Identifier
//      ^^ IdentifierOperator
//         ^^^^ IdentifierBuiltin
   multilineString := `hello
// ^^^^^^^^^^^^^^^ Identifier
//                 ^^ IdentifierOperator
//                    ^^^^^^ StringLiteral 23:20..25:16
   world
  this is my poem` + aString
//                 ^ IdentifierOperator
//                   ^^^^^^^ Identifier
  
   var null_was_a_mistake *int
// ^^^ IdentifierKeyword
//     ^^^^^^^^^^^^^^^^^^ Identifier
//                        ^ IdentifierOperator
//                         ^^^ IdentifierBuiltinType
   null_was_a_mistake = nil
// ^^^^^^^^^^^^^^^^^^ Identifier
//                    ^ IdentifierOperator
//                      ^^^ IdentifierBuiltin
  
   foo := &Foo{
// ^^^ Identifier
//     ^^ IdentifierOperator
//        ^ IdentifierOperator
//         ^^^ Identifier
//            ^ PunctuationBracket
    x: &x,
//  ^ Identifier
//   ^ PunctuationBracket
//     ^ IdentifierOperator
//      ^ Identifier
//       ^ PunctuationBracket
    Bar: Bar{
//  ^^^ Identifier
//     ^ PunctuationBracket
//       ^^^ Identifier
//          ^ PunctuationBracket
     z: 43,
//   ^ Identifier
//    ^ PunctuationBracket
//      ^^ NumericLiteral
//        ^ PunctuationBracket
    },
//  ^ PunctuationBracket
//   ^ PunctuationBracket
   }
// ^ PunctuationBracket
  
   fmt.Println(x, char, aString, bool, null_was_a_mistake, foo, multilineString)
// ^^^ Identifier
//    ^ PunctuationBracket
//     ^^^^^^^ IdentifierFunction
//            ^ PunctuationBracket
//             ^ Identifier
//              ^ PunctuationBracket
//                ^^^^ Identifier
//                    ^ PunctuationBracket
//                      ^^^^^^^ Identifier
//                             ^ PunctuationBracket
//                               ^^^^ Identifier
//                                   ^ PunctuationBracket
//                                     ^^^^^^^^^^^^^^^^^^ Identifier
//                                                       ^ PunctuationBracket
//                                                         ^^^ Identifier
//                                                            ^ PunctuationBracket
//                                                              ^^^^^^^^^^^^^^^ Identifier
//                                                                             ^ PunctuationBracket
  }
//^ PunctuationBracket

