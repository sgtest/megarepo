---
source: crates/sg-syntax/src/sg_sciptect.rs
assertion_line: 616
expression: "snapshot_sciptect_documents(&document, &contents)"
---
  package foobar
//^^^^^^^ Keyword keyword.control.scala
//        ^^^^^^ Identifier entity.name.namespace.header.scala
  
  case class Foo(x: Int) extends AnyVal
//^^^^^ Keyword storage.type.class.scala
//     ^^^^^ Keyword storage.type.class.scala
//          ^^^^ Identifier entity.name.class.scala
//              ^ PunctuationBracket punctuation.section.group.begin.scala
//               ^ Identifier variable.parameter.scala
//                ^ PunctuationBracket punctuation.ascription.scala
//                  ^^^ IdentifierType storage.type.primitive.scala
//                     ^ PunctuationBracket punctuation.section.group.end.scala
//                       ^^^^^^^ Keyword keyword.declaration.scala
//                               ^^^^^^ Identifier entity.other.inherited-class.scala
  object Foo {
//^^^^^^ Keyword storage.type.class.scala
//      ^^^^ Identifier entity.name.class.scala
//           ^ PunctuationBracket punctuation.section.braces.begin.scala
    val x: Int = 42
//  ^^^ Keyword storage.type.stable.scala
//      ^ Identifier variable.other.constant.scala
//       ^ PunctuationBracket punctuation.ascription.scala
//         ^^^ IdentifierType storage.type.primitive.scala
//             ^ IdentifierOperator keyword.operator.assignment.scala
//               ^^ NumericLiteral constant.numeric.integer.decimal.scala
    val y: Double = 42.0
//  ^^^ Keyword storage.type.stable.scala
//      ^ Identifier variable.other.constant.scala
//       ^ PunctuationBracket punctuation.ascription.scala
//         ^^^^^^ IdentifierType storage.type.primitive.scala
//                ^ IdentifierOperator keyword.operator.assignment.scala
//                  ^^ NumericLiteral punctuation.separator.decimal.scala
//                    ^ PunctuationBracket punctuation.separator.decimal.scala
//                     ^ NumericLiteral constant.numeric.float.decimal.scala
    val z = s"hello $x" + "hello world"
//  ^^^ Keyword storage.type.stable.scala
//      ^ Identifier variable.other.constant.scala
//        ^ IdentifierOperator keyword.operator.assignment.scala
//          ^ IdentifierFunction support.function.scala
//           ^^^^^^^ StringLiteral string.quoted.interpolated.scala
//                  ^ Identifier variable.other.scala
//                   ^ Identifier variable.other.scala
//                    ^ StringLiteral string.quoted.interpolated.scala
//                        ^^^^^^^^^^^^^ StringLiteral string.quoted.double.scala
    val a: Map[Int, Int] = Map.empty
//  ^^^ Keyword storage.type.stable.scala
//      ^ Identifier variable.other.constant.scala
//       ^ PunctuationBracket punctuation.ascription.scala
//         ^^^ IdentifierType support.class.scala
//            ^ PunctuationBracket punctuation.definition.generic.begin.scala
//             ^^^ IdentifierType storage.type.primitive.scala
//                ^ PunctuationBracket punctuation.separator.scala
//                  ^^^ IdentifierType storage.type.primitive.scala
//                     ^ PunctuationBracket punctuation.definition.generic.end.scala
//                       ^ IdentifierOperator keyword.operator.assignment.scala
//                            ^ PunctuationBracket punctuation.accessor.scala
    val b: Foo = Foo(x = 42)
//  ^^^ Keyword storage.type.stable.scala
//      ^ Identifier variable.other.constant.scala
//       ^ PunctuationBracket punctuation.ascription.scala
//         ^^^ IdentifierType support.class.scala
//             ^ IdentifierOperator keyword.operator.assignment.scala
//                  ^ PunctuationBracket punctuation.section.group.begin.scala
//                     ^ IdentifierOperator keyword.operator.assignment.scala
//                       ^^ NumericLiteral constant.numeric.integer.decimal.scala
//                         ^ PunctuationBracket punctuation.section.group.end.scala
    lazy val c = 'a'
//  ^^^^ Keyword storage.modifier.other.scala
//       ^^^ Keyword storage.type.stable.scala
//           ^ Identifier variable.other.constant.scala
//             ^ IdentifierOperator keyword.operator.assignment.scala
//               ^^^ CharacterLiteral constant.character.literal.scala
    var d = 1.4f
//  ^^^ Keyword storage.type.volatile.scala
//      ^ Identifier variable.other.readwrite.scala
//        ^ IdentifierOperator keyword.operator.assignment.scala
//          ^ NumericLiteral punctuation.separator.decimal.scala
//           ^ PunctuationBracket punctuation.separator.decimal.scala
//            ^ NumericLiteral storage.type.numeric.scala
//             ^ IdentifierType storage.type.numeric.scala
    def main(args: Array[String]): Unit = {
//  ^^^ Keyword storage.type.function.scala
//      ^^^^ IdentifierFunction entity.name.function.scala
//          ^ PunctuationBracket punctuation.section.group.begin.scala
//           ^^^^ Identifier variable.parameter.scala
//               ^ PunctuationBracket punctuation.ascription.scala
//                 ^^^^^ IdentifierType support.class.scala
//                      ^ PunctuationBracket punctuation.definition.generic.begin.scala
//                       ^^^^^^ IdentifierType support.class.scala
//                             ^ PunctuationBracket punctuation.definition.generic.end.scala
//                              ^ PunctuationBracket punctuation.section.group.end.scala
//                               ^ PunctuationBracket punctuation.ascription.scala
//                                 ^^^^ IdentifierType storage.type.primitive.scala
//                                      ^ IdentifierOperator keyword.operator.assignment.scala
//                                        ^ PunctuationBracket punctuation.section.block.begin.scala
      println(args.toList)
//           ^ PunctuationBracket punctuation.section.group.begin.scala
//                ^ PunctuationBracket punctuation.accessor.scala
//                       ^ PunctuationBracket punctuation.section.group.end.scala
      args.toList match {
//        ^ PunctuationBracket punctuation.accessor.scala
//                ^^^^^ Keyword keyword.control.flow.scala
//                      ^ PunctuationBracket punctuation.section.block.begin.scala
          case 1 :: 2 :: Nil =>
//        ^^^^ Keyword keyword.other.declaration.scala
//             ^ NumericLiteral constant.numeric.integer.decimal.scala
//                  ^ NumericLiteral constant.numeric.integer.decimal.scala
//                           ^^ IdentifierType storage.type.function.arrow.case.scala
          case a :: Nil =>
//        ^^^^ Keyword keyword.other.declaration.scala
//             ^ Identifier variable.parameter.scala
//                      ^^ IdentifierType storage.type.function.arrow.case.scala
      }
//    ^ PunctuationBracket punctuation.section.block.end.scala
    }
//  ^ PunctuationBracket punctuation.section.block.end.scala
    private def privateMethod = 42
//  ^^^^^^^ Keyword storage.modifier.access.scala
//          ^^^ Keyword storage.type.function.scala
//              ^^^^^^^^^^^^^ IdentifierFunction entity.name.function.scala
//                            ^ IdentifierOperator keyword.operator.assignment.scala
//                              ^^ NumericLiteral constant.numeric.integer.decimal.scala
    protected def protectedMethod = 42
//  ^^^^^^^^^ Keyword storage.modifier.access.scala
//            ^^^ Keyword storage.type.function.scala
//                ^^^^^^^^^^^^^^^ IdentifierFunction entity.name.function.scala
//                                ^ IdentifierOperator keyword.operator.assignment.scala
//                                  ^^ NumericLiteral constant.numeric.integer.decimal.scala
    private[this] def privateThisMethod = 42
//  ^^^^^^^ Keyword storage.modifier.access.scala
//         ^ PunctuationBracket punctuation.definition.generic.begin.scala
//          ^^^^ Identifier variable.language.scala
//              ^ PunctuationBracket punctuation.definition.generic.end.scala
//                ^^^ Keyword storage.type.function.scala
//                    ^^^^^^^^^^^^^^^^^ IdentifierFunction entity.name.function.scala
//                                      ^ IdentifierOperator keyword.operator.assignment.scala
//                                        ^^ NumericLiteral constant.numeric.integer.decimal.scala
    private[foobar] def privatePackageMethod = 42
//  ^^^^^^^ Keyword storage.modifier.access.scala
//         ^ PunctuationBracket punctuation.definition.generic.begin.scala
//          ^^^^^^ IdentifierType support.type.scala
//                ^ PunctuationBracket punctuation.definition.generic.end.scala
//                  ^^^ Keyword storage.type.function.scala
//                      ^^^^^^^^^^^^^^^^^^^^ IdentifierFunction entity.name.function.scala
//                                           ^ IdentifierOperator keyword.operator.assignment.scala
//                                             ^^ NumericLiteral constant.numeric.integer.decimal.scala
    type MyMap[T] = Map[String, T]
//  ^^^^ Keyword storage.type.scala
//       ^^^^^ IdentifierType entity.name.type.scala
//            ^ PunctuationBracket punctuation.definition.generic.begin.scala
//             ^ IdentifierType support.class.scala
//              ^ PunctuationBracket punctuation.definition.generic.end.scala
//                ^^ IdentifierOperator keyword.operator.assignment.scala
//                  ^^^ IdentifierType support.class.scala
//                     ^ PunctuationBracket punctuation.definition.generic.begin.scala
//                      ^^^^^^ IdentifierType support.class.scala
//                            ^ PunctuationBracket punctuation.separator.scala
//                              ^ IdentifierType support.class.scala
//                               ^ PunctuationBracket punctuation.definition.generic.end.scala
    trait MyTrait[T] extends SuperTrait[T]
//  ^^^^^ Keyword storage.type.class.scala
//       ^^^^^^^^ Identifier entity.name.class.scala
//               ^ PunctuationBracket punctuation.definition.generic.begin.scala
//                ^ IdentifierType support.class.scala
//                 ^ PunctuationBracket punctuation.definition.generic.end.scala
//                   ^^^^^^^ Keyword keyword.declaration.scala
//                           ^^^^^^^^^^ Identifier entity.other.inherited-class.scala
//                                     ^ PunctuationBracket punctuation.definition.generic.begin.scala
//                                      ^ IdentifierType support.class.scala
//                                       ^ PunctuationBracket punctuation.definition.generic.end.scala
    enum X { case A, B }
//         ^ PunctuationBracket punctuation.section.block.begin.scala
//           ^^^^ Keyword keyword.other.declaration.scala
//                 ^ PunctuationBracket punctuation.separator.scala
//                     ^ PunctuationBracket punctuation.section.block.end.scala
  }
//^ PunctuationBracket punctuation.section.braces.end.scala

