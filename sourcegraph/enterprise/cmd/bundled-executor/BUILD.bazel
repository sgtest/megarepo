load("@rules_oci//oci:defs.bzl", "oci_image", "oci_push", "oci_tarball")
load("@rules_pkg//:pkg.bzl", "pkg_tar")
load("@container_structure_test//:defs.bzl", "container_structure_test")
load("//dev:oci_defs.bzl", "image_repository")
load("//cmd/server:macro.bzl", "container_dependencies", "dependencies_tars")

DEPS = [
    "//enterprise/cmd/batcheshelper",
    "//enterprise/cmd/executor",
]

container_dependencies(DEPS)

pkg_tar(
    name = "tar_src-cli",
    srcs = ["@src-cli-linux-amd64//:src-cli-linux-amd64"],
    package_dir = "/usr/local/bin",
)

oci_image(
    name = "image",
    base = "@wolfi_bundled_executor_base",
    entrypoint = [
        "/sbin/tini",
        "--",
        "/usr/local/bin/executor",
    ],
    env = {
        "EXECUTOR_USE_FIRECRACKER": "false",  # Firecracker doesn't work in docker, so disable it by default
        "EXECUTOR_MAXIMUM_NUM_JOBS": "1",  # Preconfigure bundled-executor to take 1 parallel job and restart afterwards, this is to keep the environment clean-ish
        "EXECUTOR_NUM_TOTAL_JOBS": "1",
    },
    tars = dependencies_tars(DEPS) + [":tar_src-cli"],
    user = "sourcegraph",
)

oci_tarball(
    name = "image_tarball",
    image = ":image",
    repo_tags = ["bundled-executor:candidate"],
)

container_structure_test(
    name = "image_test",
    timeout = "short",
    configs = ["image_test.yaml"],
    driver = "docker",
    image = ":image",
    tags = ["requires-network"],
)

oci_push(
    name = "candidate_push",
    image = ":image",
    repository = image_repository("bundled-executor"),
)
