load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "command",
    srcs = [
        "command.go",
        "docker.go",
        "firecracker.go",
        "kubernetes.go",
        "logger.go",
        "observability.go",
        "shell.go",
        "util.go",
    ],
    importpath = "github.com/sourcegraph/sourcegraph/enterprise/cmd/executor/internal/worker/command",
    visibility = ["//enterprise/cmd/executor:__subpackages__"],
    deps = [
        "//enterprise/cmd/executor/internal/util",
        "//enterprise/internal/executor/types",
        "//internal/executor",
        "//internal/metrics",
        "//internal/observation",
        "//lib/errors",
        "@com_github_kballard_go_shellquote//:go-shellquote",
        "@com_github_prometheus_client_golang//prometheus",
        "@com_github_sourcegraph_log//:log",
        "@io_k8s_api//batch/v1:batch",
        "@io_k8s_api//core/v1:core",
        "@io_k8s_apimachinery//pkg/api/resource",
        "@io_k8s_apimachinery//pkg/apis/meta/v1:meta",
        "@io_k8s_client_go//kubernetes",
        "@io_k8s_utils//pointer",
        "@io_opentelemetry_go_otel//attribute",
        "@org_golang_x_sync//errgroup",
    ],
)

go_test(
    name = "command_test",
    srcs = [
        "command_test.go",
        "docker_test.go",
        "firecracker_test.go",
        "kubernetes_test.go",
        "logger_test.go",
        "mocks_test.go",
        "shell_test.go",
        "util_test.go",
    ],
    embed = [":command"],
    deps = [
        "//enterprise/cmd/executor/internal/util",
        "//enterprise/internal/executor/types",
        "//internal/executor",
        "//internal/observation",
        "//lib/errors",
        "@com_github_google_go_cmp//cmp",
        "@com_github_sourcegraph_log//logtest",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//mock",
        "@com_github_stretchr_testify//require",
        "@io_k8s_api//batch/v1:batch",
        "@io_k8s_api//core/v1:core",
        "@io_k8s_apimachinery//pkg/api/resource",
        "@io_k8s_apimachinery//pkg/apis/meta/v1:meta",
        "@io_k8s_apimachinery//pkg/runtime",
        "@io_k8s_apimachinery//pkg/watch",
        "@io_k8s_client_go//kubernetes/fake",
        "@io_k8s_client_go//testing",
        "@io_k8s_utils//pointer",
    ],
)
