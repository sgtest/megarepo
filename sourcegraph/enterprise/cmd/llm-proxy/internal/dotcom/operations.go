// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package dotcom

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// CheckAccessTokenDotcomDotcomQuery includes the requested fields of the GraphQL type DotcomQuery.
// The GraphQL type's documentation follows.
//
// Mutations that are only used on Sourcegraph.com.
// FOR INTERNAL USE ONLY.
type CheckAccessTokenDotcomDotcomQuery struct {
	// The access available to the product subscription with the given access token.
	// The returned ProductSubscription may be archived or not associated with an active license.
	//
	// Only Sourcegraph.com site admins, the account owners of the product subscription, and
	// specific service accounts may perform this query.
	// FOR INTERNAL USE ONLY.
	ProductSubscriptionByAccessToken CheckAccessTokenDotcomDotcomQueryProductSubscriptionByAccessTokenProductSubscription `json:"productSubscriptionByAccessToken"`
}

// GetProductSubscriptionByAccessToken returns CheckAccessTokenDotcomDotcomQuery.ProductSubscriptionByAccessToken, and is useful for accessing the field via an interface.
func (v *CheckAccessTokenDotcomDotcomQuery) GetProductSubscriptionByAccessToken() CheckAccessTokenDotcomDotcomQueryProductSubscriptionByAccessTokenProductSubscription {
	return v.ProductSubscriptionByAccessToken
}

// CheckAccessTokenDotcomDotcomQueryProductSubscriptionByAccessTokenProductSubscription includes the requested fields of the GraphQL type ProductSubscription.
// The GraphQL type's documentation follows.
//
// A product subscription that was created on Sourcegraph.com.
// FOR INTERNAL USE ONLY.
type CheckAccessTokenDotcomDotcomQueryProductSubscriptionByAccessTokenProductSubscription struct {
	// The unique ID of this product subscription.
	Id string `json:"id"`
	// The unique UUID of this product subscription. Unlike ProductSubscription.id, this does not
	// encode the type and is not a GraphQL node ID.
	Uuid string `json:"uuid"`
	// Whether this product subscription was archived.
	IsArchived bool `json:"isArchived"`
	// LLM-proxy access granted to this subscription. Properties may be inferred from the active license, or be defined in overrides.
	LlmProxyAccess CheckAccessTokenDotcomDotcomQueryProductSubscriptionByAccessTokenProductSubscriptionLlmProxyAccessLLMProxyAccess `json:"llmProxyAccess"`
}

// GetId returns CheckAccessTokenDotcomDotcomQueryProductSubscriptionByAccessTokenProductSubscription.Id, and is useful for accessing the field via an interface.
func (v *CheckAccessTokenDotcomDotcomQueryProductSubscriptionByAccessTokenProductSubscription) GetId() string {
	return v.Id
}

// GetUuid returns CheckAccessTokenDotcomDotcomQueryProductSubscriptionByAccessTokenProductSubscription.Uuid, and is useful for accessing the field via an interface.
func (v *CheckAccessTokenDotcomDotcomQueryProductSubscriptionByAccessTokenProductSubscription) GetUuid() string {
	return v.Uuid
}

// GetIsArchived returns CheckAccessTokenDotcomDotcomQueryProductSubscriptionByAccessTokenProductSubscription.IsArchived, and is useful for accessing the field via an interface.
func (v *CheckAccessTokenDotcomDotcomQueryProductSubscriptionByAccessTokenProductSubscription) GetIsArchived() bool {
	return v.IsArchived
}

// GetLlmProxyAccess returns CheckAccessTokenDotcomDotcomQueryProductSubscriptionByAccessTokenProductSubscription.LlmProxyAccess, and is useful for accessing the field via an interface.
func (v *CheckAccessTokenDotcomDotcomQueryProductSubscriptionByAccessTokenProductSubscription) GetLlmProxyAccess() CheckAccessTokenDotcomDotcomQueryProductSubscriptionByAccessTokenProductSubscriptionLlmProxyAccessLLMProxyAccess {
	return v.LlmProxyAccess
}

// CheckAccessTokenDotcomDotcomQueryProductSubscriptionByAccessTokenProductSubscriptionLlmProxyAccessLLMProxyAccess includes the requested fields of the GraphQL type LLMProxyAccess.
// The GraphQL type's documentation follows.
//
// LLM-proxy access granted to a subscription.
// FOR INTERNAL USE ONLY.
type CheckAccessTokenDotcomDotcomQueryProductSubscriptionByAccessTokenProductSubscriptionLlmProxyAccessLLMProxyAccess struct {
	// Whether or not a subscription has LLM-proxy access.
	//
	// It may be true, even if a subscription is archived, as a historical record. However,
	// archived subscriptions should not be treated as having access to LLM-proxy.
	Enabled bool `json:"enabled"`
	// Rate limits for LLM-proxy access, if access is enabled.
	RateLimit *CheckAccessTokenDotcomDotcomQueryProductSubscriptionByAccessTokenProductSubscriptionLlmProxyAccessLLMProxyAccessRateLimitLLMProxyRateLimit `json:"rateLimit"`
}

// GetEnabled returns CheckAccessTokenDotcomDotcomQueryProductSubscriptionByAccessTokenProductSubscriptionLlmProxyAccessLLMProxyAccess.Enabled, and is useful for accessing the field via an interface.
func (v *CheckAccessTokenDotcomDotcomQueryProductSubscriptionByAccessTokenProductSubscriptionLlmProxyAccessLLMProxyAccess) GetEnabled() bool {
	return v.Enabled
}

// GetRateLimit returns CheckAccessTokenDotcomDotcomQueryProductSubscriptionByAccessTokenProductSubscriptionLlmProxyAccessLLMProxyAccess.RateLimit, and is useful for accessing the field via an interface.
func (v *CheckAccessTokenDotcomDotcomQueryProductSubscriptionByAccessTokenProductSubscriptionLlmProxyAccessLLMProxyAccess) GetRateLimit() *CheckAccessTokenDotcomDotcomQueryProductSubscriptionByAccessTokenProductSubscriptionLlmProxyAccessLLMProxyAccessRateLimitLLMProxyRateLimit {
	return v.RateLimit
}

// CheckAccessTokenDotcomDotcomQueryProductSubscriptionByAccessTokenProductSubscriptionLlmProxyAccessLLMProxyAccessRateLimitLLMProxyRateLimit includes the requested fields of the GraphQL type LLMProxyRateLimit.
// The GraphQL type's documentation follows.
//
// LLM-proxy access rate limits for a subscription.
// FOR INTERNAL USE ONLY.
type CheckAccessTokenDotcomDotcomQueryProductSubscriptionByAccessTokenProductSubscriptionLlmProxyAccessLLMProxyAccessRateLimitLLMProxyRateLimit struct {
	// Requests per time interval.
	Limit int `json:"limit"`
	// Interval for rate limiting.
	IntervalSeconds int `json:"intervalSeconds"`
}

// GetLimit returns CheckAccessTokenDotcomDotcomQueryProductSubscriptionByAccessTokenProductSubscriptionLlmProxyAccessLLMProxyAccessRateLimitLLMProxyRateLimit.Limit, and is useful for accessing the field via an interface.
func (v *CheckAccessTokenDotcomDotcomQueryProductSubscriptionByAccessTokenProductSubscriptionLlmProxyAccessLLMProxyAccessRateLimitLLMProxyRateLimit) GetLimit() int {
	return v.Limit
}

// GetIntervalSeconds returns CheckAccessTokenDotcomDotcomQueryProductSubscriptionByAccessTokenProductSubscriptionLlmProxyAccessLLMProxyAccessRateLimitLLMProxyRateLimit.IntervalSeconds, and is useful for accessing the field via an interface.
func (v *CheckAccessTokenDotcomDotcomQueryProductSubscriptionByAccessTokenProductSubscriptionLlmProxyAccessLLMProxyAccessRateLimitLLMProxyRateLimit) GetIntervalSeconds() int {
	return v.IntervalSeconds
}

// CheckAccessTokenResponse is returned by CheckAccessToken on success.
type CheckAccessTokenResponse struct {
	// Queries that are only used on Sourcegraph.com.
	//
	// FOR INTERNAL USE ONLY.
	Dotcom CheckAccessTokenDotcomDotcomQuery `json:"dotcom"`
}

// GetDotcom returns CheckAccessTokenResponse.Dotcom, and is useful for accessing the field via an interface.
func (v *CheckAccessTokenResponse) GetDotcom() CheckAccessTokenDotcomDotcomQuery { return v.Dotcom }

// __CheckAccessTokenInput is used internally by genqlient
type __CheckAccessTokenInput struct {
	Token string `json:"token"`
}

// GetToken returns __CheckAccessTokenInput.Token, and is useful for accessing the field via an interface.
func (v *__CheckAccessTokenInput) GetToken() string { return v.Token }

// CheckAccessToken returns traints of the product subscription associated with
// the given access token.
func CheckAccessToken(
	ctx context.Context,
	client graphql.Client,
	token string,
) (*CheckAccessTokenResponse, error) {
	req := &graphql.Request{
		OpName: "CheckAccessToken",
		Query: `
query CheckAccessToken ($token: String!) {
	dotcom {
		productSubscriptionByAccessToken(accessToken: $token) {
			id
			uuid
			isArchived
			llmProxyAccess {
				enabled
				rateLimit {
					limit
					intervalSeconds
				}
			}
		}
	}
}
`,
		Variables: &__CheckAccessTokenInput{
			Token: token,
		},
	}
	var err error

	var data CheckAccessTokenResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}
