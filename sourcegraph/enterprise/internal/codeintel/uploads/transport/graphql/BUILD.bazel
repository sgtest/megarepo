load("//dev:go_defs.bzl", "go_test")
load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "graphql",
    srcs = [
        "dataloader.go",
        "iface.go",
        "index_steps_resolver.go",
        "indexer_resolver.go",
        "observability.go",
        "precise_index_resolver.go",
        "precise_index_resolver_factory.go",
        "root_resolver.go",
        "root_resolver_coverage.go",
        "root_resolver_index_mutations.go",
        "root_resolver_index_queries.go",
        "root_resolver_status.go",
        "util_identifiers.go",
        "util_states.go",
    ],
    importpath = "github.com/sourcegraph/sourcegraph/enterprise/internal/codeintel/uploads/transport/graphql",
    visibility = ["//enterprise:__subpackages__"],
    deps = [
        "//enterprise/internal/codeintel/autoindexing",
        "//enterprise/internal/codeintel/autoindexing/shared",
        "//enterprise/internal/codeintel/policies/shared",
        "//enterprise/internal/codeintel/policies/transport/graphql",
        "//enterprise/internal/codeintel/shared/resolvers",
        "//enterprise/internal/codeintel/shared/resolvers/dataloader",
        "//enterprise/internal/codeintel/shared/resolvers/gitresolvers",
        "//enterprise/internal/codeintel/uploads/shared",
        "//internal/api",
        "//internal/auth",
        "//internal/codeintel/resolvers",
        "//internal/conf",
        "//internal/database",
        "//internal/executor",
        "//internal/gitserver",
        "//internal/gqlutil",
        "//internal/metrics",
        "//internal/observation",
        "//lib/errors",
        "@com_github_grafana_regexp//:regexp",
        "@com_github_graph_gophers_graphql_go//:graphql-go",
        "@com_github_graph_gophers_graphql_go//relay",
        "@io_opentelemetry_go_otel//attribute",
    ],
)

go_test(
    name = "graphql_test",
    srcs = ["mocks_test.go"],
    embed = [":graphql"],
    deps = ["//enterprise/internal/codeintel/uploads/shared"],
)
