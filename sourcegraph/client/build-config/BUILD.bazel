load("@aspect_rules_ts//ts:defs.bzl", "ts_config")
load("@npm//:defs.bzl", "npm_link_all_packages")
load("//dev:defs.bzl", "npm_package", "ts_project")
load("//dev:eslint.bzl", "eslint_config_and_lint_root")

# TODO(bazel): currently handled with #keep
# gazelle:js_resolve **/esbuild/* //client/build-config/src/esbuild

npm_link_all_packages(name = "node_modules")

eslint_config_and_lint_root()

ts_config(
    name = "tsconfig",
    src = "tsconfig.json",
    visibility = ["//client:__subpackages__"],
    deps = [
        "//:tsconfig",
    ],
)

ts_project(
    name = "build-config_lib",
    srcs = [
        "src/index.ts",
        "src/paths.ts",
        "src/utils/environment-config.ts",
        "src/webpack/babel-loader.ts",
        "src/webpack/css-loader.ts",
        "src/webpack/getCacheConfig.ts",
        "src/webpack/monaco-editor.ts",
        "src/webpack/plugins.ts",
    ],
    module = "commonjs",
    tsconfig = ":tsconfig",
    deps = [
        ":node_modules/@statoscope/webpack-plugin",
        ":node_modules/buffer",  #keep
        ":node_modules/css-loader",  #keep
        ":node_modules/monaco-editor-webpack-plugin",
        ":node_modules/process",  #keep
        ":node_modules/style-loader",  #keep
        ":node_modules/terser-webpack-plugin",
        ":node_modules/webpack",

        # TODO: figure out why is this needed for integration tests even though it's defined in babel_config
        "//:node_modules/@babel/runtime",  #keep
        "//:node_modules/@types/node",
        "//:node_modules/monaco-editor",  #keep
        "//:node_modules/monaco-yaml",  #keep
        "//client/build-config/src/esbuild",
    ],
)

npm_package(
    name = "build-config_pkg",
    srcs = [
        "package.json",
        ":build-config_lib",
    ],
    type = "commonjs",
)
