load("@aspect_rules_ts//ts:defs.bzl", "ts_config")
load("@npm//:defs.bzl", "npm_link_all_packages")
load("//dev:defs.bzl", "npm_package", "ts_project")
load("//dev:eslint.bzl", "eslint_config_and_lint_root")

# gazelle:js_resolve vscode //:node_modules/@vscode

npm_link_all_packages(name = "node_modules")

eslint_config_and_lint_root()

ts_config(
    name = "tsconfig",
    src = "tsconfig.json",
    visibility = ["//client:__subpackages__"],
    deps = [
        "//:tsconfig",
        "//client/common:tsconfig",
        "//client/http-client:tsconfig",
    ],
)

ts_project(
    name = "cody-shared_lib",
    srcs = [
        "src/chat/bot-response-multiplexer.ts",
        "src/chat/chat.ts",
        "src/chat/client.ts",
        "src/chat/context.ts",
        "src/chat/markdown.ts",
        "src/chat/preamble.ts",
        "src/chat/recipes/agent-recipes.ts",
        "src/chat/recipes/browser-recipes.ts",
        "src/chat/recipes/chat-question.ts",
        "src/chat/recipes/context-search.ts",
        "src/chat/recipes/explain-code-detailed.ts",
        "src/chat/recipes/explain-code-high-level.ts",
        "src/chat/recipes/file-touch.ts",
        "src/chat/recipes/find-code-smells.ts",
        "src/chat/recipes/fixup.ts",
        "src/chat/recipes/generate-docstring.ts",
        "src/chat/recipes/generate-pr-description.ts",
        "src/chat/recipes/generate-release-notes.ts",
        "src/chat/recipes/generate-test.ts",
        "src/chat/recipes/git-log.ts",
        "src/chat/recipes/helpers.ts",
        "src/chat/recipes/improve-variable-names.ts",
        "src/chat/recipes/inline-chat.ts",
        "src/chat/recipes/langs.ts",
        "src/chat/recipes/next-questions.ts",
        "src/chat/recipes/non-stop.ts",
        "src/chat/recipes/optimize-code.ts",
        "src/chat/recipes/recipe.ts",
        "src/chat/recipes/translate.ts",
        "src/chat/transcript/index.ts",
        "src/chat/transcript/interaction.ts",
        "src/chat/transcript/messages.ts",
        "src/chat/useClient.ts",
        "src/chat/viewHelpers.ts",
        "src/codebase-context/index.ts",
        "src/codebase-context/messages.ts",
        "src/codebase-context/rerank.ts",
        "src/configuration.ts",
        "src/editor/index.ts",
        "src/editor/withPreselectedOptions.ts",
        "src/embeddings/client.ts",
        "src/embeddings/index.ts",
        "src/guardrails/client.ts",
        "src/guardrails/index.ts",
        "src/hallucinations-detector/index.ts",
        "src/intent-detector/client.ts",
        "src/intent-detector/index.ts",
        "src/local-context/index.ts",
        "src/prompt/constants.ts",
        "src/prompt/prompt-mixin.ts",
        "src/prompt/templates.ts",
        "src/prompt/truncation.ts",
        "src/sourcegraph-api/completions/browserClient.ts",
        "src/sourcegraph-api/completions/client.ts",
        "src/sourcegraph-api/completions/nodeClient.ts",
        "src/sourcegraph-api/completions/parse.ts",
        "src/sourcegraph-api/completions/types.ts",
        "src/sourcegraph-api/graphql/client.ts",
        "src/sourcegraph-api/graphql/index.ts",
        "src/sourcegraph-api/graphql/queries.ts",
        "src/sourcegraph-api/index.ts",
        "src/sourcegraph-api/utils.ts",
        "src/telemetry/EventLogger.ts",
        "src/unified-context/client.ts",
        "src/unified-context/index.ts",
        "src/utils.ts",
    ],
    tsconfig = ":tsconfig",
    # TODO(bazel): "#keep"s required for type-only imports
    deps = [
        ":node_modules/@sourcegraph/common",
        ":node_modules/@sourcegraph/http-client",
        ":node_modules/@types/xml2js",
        ":node_modules/xml2js",
        "//:node_modules/@microsoft/fetch-event-source",
        "//:node_modules/@types/isomorphic-fetch",
        "//:node_modules/@types/marked",
        "//:node_modules/@types/node",
        "//:node_modules/@types/react",
        "//:node_modules/@types/vscode",  #keep
        "//:node_modules/@vscode",
        "//:node_modules/isomorphic-fetch",
        "//:node_modules/marked",
        "//:node_modules/react",
    ],
)

npm_package(
    name = "cody-shared_pkg",
    srcs = [
        "package.json",
        ":cody-shared_lib",
    ],
)

ts_project(
    name = "cody-shared_tests",
    testonly = True,
    srcs = [
        "src/chat/bot-response-multiplexer.test.ts",
        "src/chat/transcript/transcript.test.ts",
        "src/guardrails/index.test.ts",
        "src/hallucinations-detector/index.test.ts",
        "src/sourcegraph-api/utils.test.ts",
        "src/test/mocks.ts",
    ],
    tsconfig = ":tsconfig",
    deps = [
        ":cody-shared_lib",
        "//:node_modules/@types/node",
    ],
)
