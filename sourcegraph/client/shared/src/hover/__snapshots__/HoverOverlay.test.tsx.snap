// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HoverOverlay actions and hover empty 1`] = `
<div
  className="hoverOverlay"
  data-testid="hover-overlay"
  style={
    Object {
      "left": "0px",
      "opacity": 1,
      "top": "0px",
      "visibility": "visible",
    }
  }
>
  <div
    className="hoverOverlayContents"
    data-testid="hover-overlay-contents"
  >
    <small
      className="hoverEmpty"
    >
      No hover information available.
    </small>
  </div>
</div>
`;

exports[`HoverOverlay actions and hover error 1`] = `
<div
  className="hoverOverlay"
  data-testid="hover-overlay"
  style={
    Object {
      "left": "0px",
      "opacity": 1,
      "top": "0px",
      "visibility": "visible",
    }
  }
>
  <div
    className="hoverOverlayContents"
    data-testid="hover-overlay-contents"
  >
    <div
      className="hoverError"
    >
      M2
    </div>
  </div>
</div>
`;

exports[`HoverOverlay actions and hover loading 1`] = `
<div
  className="hoverOverlay"
  data-testid="hover-overlay"
  style={
    Object {
      "left": "0px",
      "opacity": 1,
      "top": "0px",
      "visibility": "visible",
    }
  }
>
  <div
    className="hoverOverlayContents hoverOverlayContentsLoading"
    data-testid="hover-overlay-contents"
  >
    <div
      className="loaderRow"
    >
      <div
        className="loading-spinner "
      />
    </div>
  </div>
</div>
`;

exports[`HoverOverlay actions and hover present 1`] = `
<div
  className="hoverOverlay"
  data-testid="hover-overlay"
  style={
    Object {
      "left": "0px",
      "opacity": 1,
      "top": "0px",
      "visibility": "visible",
    }
  }
>
  <div
    className="hoverOverlayContents"
    data-testid="hover-overlay-contents"
  >
    <span
      className="hoverOverlayContent hoverOverlayContent test-tooltip-content"
      dangerouslySetInnerHTML={
        Object {
          "__html": "<p>v</p>
",
        }
      }
      data-testid="hover-overlay-content"
    />
  </div>
  <div
    className="actions"
  >
    <div
      className="actionsInner"
    >
      <ActionItem
        action={
          Object {
            "command": "c",
            "id": "a",
          }
        }
        active={true}
        className="action test-tooltip-untitled"
        disabledDuringExecution={true}
        extensionsController={
          Object {
            "executeCommand": [Function],
          }
        }
        location={
          Object {
            "hash": "",
            "key": undefined,
            "pathname": "/",
            "search": "",
            "state": undefined,
          }
        }
        platformContext={
          Object {
            "forceUpdateTooltip": [Function],
            "settings": Observable {
              "_isScalar": false,
              "_subscribe": [Function],
            },
          }
        }
        showInlineError={true}
        showLoadingSpinnerDuringExecution={true}
        telemetryService={
          Object {
            "log": [Function],
            "logViewEvent": [Function],
          }
        }
        variant="actionItem"
      />
    </div>
  </div>
</div>
`;

exports[`HoverOverlay actions and hover undefined 1`] = `null`;

exports[`HoverOverlay actions empty 1`] = `
<div
  className="hoverOverlay"
  data-testid="hover-overlay"
  style={
    Object {
      "left": "0px",
      "opacity": 1,
      "top": "0px",
      "visibility": "visible",
    }
  }
>
  <div
    className="hoverOverlayContents"
    data-testid="hover-overlay-contents"
  />
</div>
`;

exports[`HoverOverlay actions error 1`] = `null`;

exports[`HoverOverlay actions error, hover present 1`] = `
<div
  className="hoverOverlay"
  data-testid="hover-overlay"
  style={
    Object {
      "left": "0px",
      "opacity": 1,
      "top": "0px",
      "visibility": "visible",
    }
  }
>
  <div
    className="hoverOverlayContents"
    data-testid="hover-overlay-contents"
  >
    <span
      className="hoverOverlayContent hoverOverlayContent test-tooltip-content"
      dangerouslySetInnerHTML={
        Object {
          "__html": "<p>v</p>
",
        }
      }
      data-testid="hover-overlay-content"
    />
  </div>
</div>
`;

exports[`HoverOverlay actions loading 1`] = `
<div
  className="hoverOverlay"
  data-testid="hover-overlay"
  style={
    Object {
      "left": "0px",
      "opacity": 1,
      "top": "0px",
      "visibility": "visible",
    }
  }
>
  <div
    className="hoverOverlayContents"
    data-testid="hover-overlay-contents"
  />
</div>
`;

exports[`HoverOverlay actions present 1`] = `
<div
  className="hoverOverlay"
  data-testid="hover-overlay"
  style={
    Object {
      "left": "0px",
      "opacity": 1,
      "top": "0px",
      "visibility": "visible",
    }
  }
>
  <div
    className="hoverOverlayContents"
    data-testid="hover-overlay-contents"
  />
  <div
    className="actions"
  >
    <div
      className="actionsInner"
    >
      <ActionItem
        action={
          Object {
            "command": "c",
            "id": "a",
            "title": "Some title",
          }
        }
        active={true}
        className="action test-tooltip-some-title"
        disabledDuringExecution={true}
        extensionsController={
          Object {
            "executeCommand": [Function],
          }
        }
        location={
          Object {
            "hash": "",
            "key": undefined,
            "pathname": "/",
            "search": "",
            "state": undefined,
          }
        }
        platformContext={
          Object {
            "forceUpdateTooltip": [Function],
            "settings": Observable {
              "_isScalar": false,
              "_subscribe": [Function],
            },
          }
        }
        showInlineError={true}
        showLoadingSpinnerDuringExecution={true}
        telemetryService={
          Object {
            "log": [Function],
            "logViewEvent": [Function],
          }
        }
        variant="actionItem"
      />
    </div>
  </div>
</div>
`;

exports[`HoverOverlay actions present, hover loading 1`] = `
<div
  className="hoverOverlay"
  data-testid="hover-overlay"
  style={
    Object {
      "left": "0px",
      "opacity": 1,
      "top": "0px",
      "visibility": "visible",
    }
  }
>
  <div
    className="hoverOverlayContents hoverOverlayContentsLoading"
    data-testid="hover-overlay-contents"
  >
    <div
      className="loaderRow"
    >
      <div
        className="loading-spinner "
      />
    </div>
  </div>
  <div
    className="actions"
  >
    <div
      className="actionsInner"
    >
      <ActionItem
        action={
          Object {
            "command": "c",
            "id": "a",
          }
        }
        active={true}
        className="action test-tooltip-untitled"
        disabledDuringExecution={true}
        extensionsController={
          Object {
            "executeCommand": [Function],
          }
        }
        location={
          Object {
            "hash": "",
            "key": undefined,
            "pathname": "/",
            "search": "",
            "state": undefined,
          }
        }
        platformContext={
          Object {
            "forceUpdateTooltip": [Function],
            "settings": Observable {
              "_isScalar": false,
              "_subscribe": [Function],
            },
          }
        }
        showInlineError={true}
        showLoadingSpinnerDuringExecution={true}
        telemetryService={
          Object {
            "log": [Function],
            "logViewEvent": [Function],
          }
        }
        variant="actionItem"
      />
    </div>
  </div>
</div>
`;

exports[`HoverOverlay actions, hover and alert present 1`] = `
<div
  className="hoverOverlay"
  data-testid="hover-overlay"
  style={
    Object {
      "left": "0px",
      "opacity": 1,
      "top": "0px",
      "visibility": "visible",
    }
  }
>
  <div
    className="hoverOverlayContents"
    data-testid="hover-overlay-contents"
  >
    <span
      className="hoverOverlayContent hoverOverlayContent test-tooltip-content"
      dangerouslySetInnerHTML={
        Object {
          "__html": "<p>v</p>
",
        }
      }
      data-testid="hover-overlay-content"
    />
  </div>
  <div
    className="hoverOverlayAlerts"
  >
    <div
      className="alert"
    >
      <span
        className="hoverOverlayContent hoverOverlayContent"
        dangerouslySetInnerHTML={
          Object {
            "__html": "<p>Testing <code>markdown</code> rendering.</p>
",
          }
        }
        data-testid="hover-overlay-content"
      />
      <div
        className="alertDismiss"
      >
        <a
          href=""
          onClick={[Function]}
          role="button"
        >
          <small>
            Dismiss
          </small>
        </a>
      </div>
    </div>
  </div>
  <div
    className="actions"
  >
    <div
      className="actionsInner"
    >
      <ActionItem
        action={
          Object {
            "command": "c",
            "id": "a",
          }
        }
        active={true}
        className="action test-tooltip-untitled"
        disabledDuringExecution={true}
        extensionsController={
          Object {
            "executeCommand": [Function],
          }
        }
        location={
          Object {
            "hash": "",
            "key": undefined,
            "pathname": "/",
            "search": "",
            "state": undefined,
          }
        }
        platformContext={
          Object {
            "forceUpdateTooltip": [Function],
            "settings": Observable {
              "_isScalar": false,
              "_subscribe": [Function],
            },
          }
        }
        showInlineError={true}
        showLoadingSpinnerDuringExecution={true}
        telemetryService={
          Object {
            "log": [Function],
            "logViewEvent": [Function],
          }
        }
        variant="actionItem"
      />
    </div>
  </div>
</div>
`;

exports[`HoverOverlay hover empty 1`] = `null`;

exports[`HoverOverlay hover error 1`] = `
<div
  className="hoverOverlay"
  data-testid="hover-overlay"
  style={
    Object {
      "left": "0px",
      "opacity": 1,
      "top": "0px",
      "visibility": "visible",
    }
  }
>
  <div
    className="hoverOverlayContents"
    data-testid="hover-overlay-contents"
  >
    <div
      className="hoverError"
    >
      M
    </div>
  </div>
</div>
`;

exports[`HoverOverlay hover error, actions present 1`] = `
<div
  className="hoverOverlay"
  data-testid="hover-overlay"
  style={
    Object {
      "left": "0px",
      "opacity": 1,
      "top": "0px",
      "visibility": "visible",
    }
  }
>
  <div
    className="hoverOverlayContents"
    data-testid="hover-overlay-contents"
  >
    <div
      className="hoverError"
    >
      M
    </div>
  </div>
  <div
    className="actions"
  >
    <div
      className="actionsInner"
    >
      <ActionItem
        action={
          Object {
            "command": "c",
            "id": "a",
          }
        }
        active={true}
        className="action test-tooltip-untitled"
        disabledDuringExecution={true}
        extensionsController={
          Object {
            "executeCommand": [Function],
          }
        }
        location={
          Object {
            "hash": "",
            "key": undefined,
            "pathname": "/",
            "search": "",
            "state": undefined,
          }
        }
        platformContext={
          Object {
            "forceUpdateTooltip": [Function],
            "settings": Observable {
              "_isScalar": false,
              "_subscribe": [Function],
            },
          }
        }
        showInlineError={true}
        showLoadingSpinnerDuringExecution={true}
        telemetryService={
          Object {
            "log": [Function],
            "logViewEvent": [Function],
          }
        }
        variant="actionItem"
      />
    </div>
  </div>
</div>
`;

exports[`HoverOverlay hover loading 1`] = `
<div
  className="hoverOverlay"
  data-testid="hover-overlay"
  style={
    Object {
      "left": "0px",
      "opacity": 1,
      "top": "0px",
      "visibility": "visible",
    }
  }
>
  <div
    className="hoverOverlayContents hoverOverlayContentsLoading"
    data-testid="hover-overlay-contents"
  >
    <div
      className="loaderRow"
    >
      <div
        className="loading-spinner "
      />
    </div>
  </div>
</div>
`;

exports[`HoverOverlay hover present 1`] = `
<div
  className="hoverOverlay"
  data-testid="hover-overlay"
  style={
    Object {
      "left": "0px",
      "opacity": 1,
      "top": "0px",
      "visibility": "visible",
    }
  }
>
  <div
    className="hoverOverlayContents"
    data-testid="hover-overlay-contents"
  >
    <span
      className="hoverOverlayContent hoverOverlayContent test-tooltip-content"
      dangerouslySetInnerHTML={
        Object {
          "__html": "<p>v</p>
",
        }
      }
      data-testid="hover-overlay-content"
    />
  </div>
</div>
`;

exports[`HoverOverlay hover present, actions loading 1`] = `
<div
  className="hoverOverlay"
  data-testid="hover-overlay"
  style={
    Object {
      "left": "0px",
      "opacity": 1,
      "top": "0px",
      "visibility": "visible",
    }
  }
>
  <div
    className="hoverOverlayContents"
    data-testid="hover-overlay-contents"
  >
    <span
      className="hoverOverlayContent hoverOverlayContent test-tooltip-content"
      dangerouslySetInnerHTML={
        Object {
          "__html": "<p>v</p>
",
        }
      }
      data-testid="hover-overlay-content"
    />
  </div>
</div>
`;

exports[`HoverOverlay multiple hovers present 1`] = `
<div
  className="hoverOverlay"
  data-testid="hover-overlay"
  style={
    Object {
      "left": "0px",
      "opacity": 1,
      "top": "0px",
      "visibility": "visible",
    }
  }
>
  <div
    className="hoverOverlayContents"
    data-testid="hover-overlay-contents"
  >
    <span
      className="hoverOverlayContent hoverOverlayContent test-tooltip-content"
      dangerouslySetInnerHTML={
        Object {
          "__html": "<p>v</p>
",
        }
      }
      data-testid="hover-overlay-content"
    />
    <hr />
    <span
      className="hoverOverlayContent hoverOverlayContent test-tooltip-content"
      dangerouslySetInnerHTML={
        Object {
          "__html": "<p>v2</p>
",
        }
      }
      data-testid="hover-overlay-content"
    />
  </div>
</div>
`;
