// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DiffHunk renders a unified diff view for the given diff hunk 1`] = `
Array [
  <tr>
    <td
      className="num"
      colSpan={2}
      data-diff-boundary-num={true}
    />
    <td
      className="content content"
      data-diff-boundary-content={true}
      data-diff-marker=" "
    >
      <code
        className="content"
      >
        @@ -
        159
        ,
        7
         +
        159
        ,
        7
         
        @@ export async function register({
      </code>
    </td>
  </tr>,
  <tr
    className="lineBoth"
    data-hunk-line-kind="UNCHANGED"
  >
    <td
      className="num"
      data-hunk-num=" "
      data-line={159}
      data-part="base"
      id="anchor_L159"
    >
      <a
        className="numLine"
        href="/#anchor_L159"
        onClick={[Function]}
      >
        159
      </a>
    </td>
    <td
      className="num"
      data-hunk-num=" "
      data-line={159}
      data-part="head"
      id="anchor_R159"
    >
      <a
        className="numLine"
        href="/#anchor_R159"
        onClick={[Function]}
      >
        159
      </a>
    </td>
    <td
      className="content"
      data-diff-marker=" "
      style={Object {}}
    >
      <div
        className="d-inline-block"
        dangerouslySetInnerHTML={
          Object {
            "__html": "        const subscriptions = new Subscription()",
          }
        }
      />
    </td>
  </tr>,
  <tr
    className="lineBoth"
    data-hunk-line-kind="UNCHANGED"
  >
    <td
      className="num"
      data-hunk-num=" "
      data-line={160}
      data-part="base"
      id="anchor_L160"
    >
      <a
        className="numLine"
        href="/#anchor_L160"
        onClick={[Function]}
      >
        160
      </a>
    </td>
    <td
      className="num"
      data-hunk-num=" "
      data-line={160}
      data-part="head"
      id="anchor_R160"
    >
      <a
        className="numLine"
        href="/#anchor_R160"
        onClick={[Function]}
      >
        160
      </a>
    </td>
    <td
      className="content"
      data-diff-marker=" "
      style={Object {}}
    >
      <div
        className="d-inline-block"
        dangerouslySetInnerHTML={
          Object {
            "__html": "        const decorationType = sourcegraph.app.createDecorationType()",
          }
        }
      />
    </td>
  </tr>,
  <tr
    className="lineBoth"
    data-hunk-line-kind="UNCHANGED"
  >
    <td
      className="num"
      data-hunk-num=" "
      data-line={161}
      data-part="base"
      id="anchor_L161"
    >
      <a
        className="numLine"
        href="/#anchor_L161"
        onClick={[Function]}
      >
        161
      </a>
    </td>
    <td
      className="num"
      data-hunk-num=" "
      data-line={161}
      data-part="head"
      id="anchor_R161"
    >
      <a
        className="numLine"
        href="/#anchor_R161"
        onClick={[Function]}
      >
        161
      </a>
    </td>
    <td
      className="content"
      data-diff-marker=" "
      style={Object {}}
    >
      <div
        className="d-inline-block"
        dangerouslySetInnerHTML={
          Object {
            "__html": "        const connection = await createConnection()",
          }
        }
      />
    </td>
  </tr>,
  <tr
    className="lineDeletion"
    data-hunk-line-kind="DELETED"
  >
    <td
      className="num"
      data-hunk-num=" "
      data-line={162}
      data-part="base"
      id="anchor_L162"
    >
      <a
        className="numLine"
        href="/#anchor_L162"
        onClick={[Function]}
      >
        162
      </a>
    </td>
    <td
      className="num numEmpty"
    />
    <td
      className="content"
      data-diff-marker="-"
      style={Object {}}
    >
      <div
        className="d-inline-block"
        dangerouslySetInnerHTML={
          Object {
            "__html": "        logger.log(\`WebSocket connection to TypeScript backend opened\`)",
          }
        }
      />
    </td>
  </tr>,
  <tr
    className="lineAddition"
    data-hunk-line-kind="ADDED"
  >
    <td
      className="num numEmpty"
    />
    <td
      className="num"
      data-hunk-num=" "
      data-line={162}
      data-part="head"
      id="anchor_R162"
    >
      <a
        className="numLine"
        href="/#anchor_R162"
        onClick={[Function]}
      >
        162
      </a>
    </td>
    <td
      className="content"
      data-diff-marker="+"
      style={Object {}}
    >
      <div
        className="d-inline-block"
        dangerouslySetInnerHTML={
          Object {
            "__html": "        logger.log(\`WebSocket connection to language server opened\`)",
          }
        }
      />
    </td>
  </tr>,
  <tr
    className="lineBoth"
    data-hunk-line-kind="UNCHANGED"
  >
    <td
      className="num"
      data-hunk-num=" "
      data-line={163}
      data-part="base"
      id="anchor_L163"
    >
      <a
        className="numLine"
        href="/#anchor_L163"
        onClick={[Function]}
      >
        163
      </a>
    </td>
    <td
      className="num"
      data-hunk-num=" "
      data-line={163}
      data-part="head"
      id="anchor_R163"
    >
      <a
        className="numLine"
        href="/#anchor_R163"
        onClick={[Function]}
      >
        163
      </a>
    </td>
    <td
      className="content"
      data-diff-marker=" "
      style={Object {}}
    >
      <div
        className="d-inline-block"
        dangerouslySetInnerHTML={
          Object {
            "__html": "        subscriptions.add(",
          }
        }
      />
    </td>
  </tr>,
  <tr
    className="lineBoth"
    data-hunk-line-kind="UNCHANGED"
  >
    <td
      className="num"
      data-hunk-num=" "
      data-line={164}
      data-part="base"
      id="anchor_L164"
    >
      <a
        className="numLine"
        href="/#anchor_L164"
        onClick={[Function]}
      >
        164
      </a>
    </td>
    <td
      className="num"
      data-hunk-num=" "
      data-line={164}
      data-part="head"
      id="anchor_R164"
    >
      <a
        className="numLine"
        href="/#anchor_R164"
        onClick={[Function]}
      >
        164
      </a>
    </td>
    <td
      className="content"
      data-diff-marker=" "
      style={Object {}}
    >
      <div
        className="d-inline-block"
        dangerouslySetInnerHTML={
          Object {
            "__html": "                connection.observeNotification(LogMessageNotification.type).subscribe(({ type, message }) => {",
          }
        }
      />
    </td>
  </tr>,
  <tr
    className="lineBoth"
    data-hunk-line-kind="UNCHANGED"
  >
    <td
      className="num"
      data-hunk-num=" "
      data-line={165}
      data-part="base"
      id="anchor_L165"
    >
      <a
        className="numLine"
        href="/#anchor_L165"
        onClick={[Function]}
      >
        165
      </a>
    </td>
    <td
      className="num"
      data-hunk-num=" "
      data-line={165}
      data-part="head"
      id="anchor_R165"
    >
      <a
        className="numLine"
        href="/#anchor_R165"
        onClick={[Function]}
      >
        165
      </a>
    </td>
    <td
      className="content"
      data-diff-marker=" "
      style={Object {}}
    >
      <div
        className="d-inline-block"
        dangerouslySetInnerHTML={
          Object {
            "__html": "                    const method = LSP_TO_LOG_LEVEL[type]",
          }
        }
      />
    </td>
  </tr>,
]
`;

exports[`DiffHunk renders dark theme decorations if dark theme is active 1`] = `
Array [
  <tr>
    <td
      className="num"
      colSpan={2}
      data-diff-boundary-num={true}
    />
    <td
      className="content content"
      data-diff-boundary-content={true}
      data-diff-marker=" "
    >
      <code
        className="content"
      >
        @@ -
        159
        ,
        7
         +
        159
        ,
        7
         
        @@ export async function register({
      </code>
    </td>
  </tr>,
  <tr
    className="lineBoth"
    data-hunk-line-kind="UNCHANGED"
  >
    <td
      className="num"
      data-hunk-num=" "
      data-line={159}
      data-part="base"
      id="anchor_L159"
    >
      <a
        className="numLine"
        href="/#anchor_L159"
        onClick={[Function]}
      >
        159
      </a>
    </td>
    <td
      className="num"
      data-hunk-num=" "
      data-line={159}
      data-part="head"
      id="anchor_R159"
    >
      <a
        className="numLine"
        href="/#anchor_R159"
        onClick={[Function]}
      >
        159
      </a>
    </td>
    <td
      className="content"
      data-diff-marker=" "
      style={
        Object {
          "backgroundColor": "red",
          "border": "1px blue solid",
        }
      }
    >
      <div
        className="d-inline-block"
        dangerouslySetInnerHTML={
          Object {
            "__html": "        const subscriptions = new Subscription()",
          }
        }
      />
       
      <span
        className=""
        data-tooltip="base hover msg"
        style={
          Object {
            "backgroundColor": "black",
          }
        }
      >
        head content
      </span>
    </td>
  </tr>,
  <tr
    className="lineBoth"
    data-hunk-line-kind="UNCHANGED"
  >
    <td
      className="num"
      data-hunk-num=" "
      data-line={160}
      data-part="base"
      id="anchor_L160"
    >
      <a
        className="numLine"
        href="/#anchor_L160"
        onClick={[Function]}
      >
        160
      </a>
    </td>
    <td
      className="num"
      data-hunk-num=" "
      data-line={160}
      data-part="head"
      id="anchor_R160"
    >
      <a
        className="numLine"
        href="/#anchor_R160"
        onClick={[Function]}
      >
        160
      </a>
    </td>
    <td
      className="content"
      data-diff-marker=" "
      style={Object {}}
    >
      <div
        className="d-inline-block"
        dangerouslySetInnerHTML={
          Object {
            "__html": "        const decorationType = sourcegraph.app.createDecorationType()",
          }
        }
      />
    </td>
  </tr>,
  <tr
    className="lineBoth"
    data-hunk-line-kind="UNCHANGED"
  >
    <td
      className="num"
      data-hunk-num=" "
      data-line={161}
      data-part="base"
      id="anchor_L161"
    >
      <a
        className="numLine"
        href="/#anchor_L161"
        onClick={[Function]}
      >
        161
      </a>
    </td>
    <td
      className="num"
      data-hunk-num=" "
      data-line={161}
      data-part="head"
      id="anchor_R161"
    >
      <a
        className="numLine"
        href="/#anchor_R161"
        onClick={[Function]}
      >
        161
      </a>
    </td>
    <td
      className="content"
      data-diff-marker=" "
      style={Object {}}
    >
      <div
        className="d-inline-block"
        dangerouslySetInnerHTML={
          Object {
            "__html": "        const connection = await createConnection()",
          }
        }
      />
    </td>
  </tr>,
  <tr
    className="lineDeletion"
    data-hunk-line-kind="DELETED"
  >
    <td
      className="num"
      data-hunk-num=" "
      data-line={162}
      data-part="base"
      id="anchor_L162"
    >
      <a
        className="numLine"
        href="/#anchor_L162"
        onClick={[Function]}
      >
        162
      </a>
    </td>
    <td
      className="num numEmpty"
    />
    <td
      className="content"
      data-diff-marker="-"
      style={
        Object {
          "backgroundColor": "blue",
          "border": "1px blue solid",
        }
      }
    >
      <div
        className="d-inline-block"
        dangerouslySetInnerHTML={
          Object {
            "__html": "        logger.log(\`WebSocket connection to TypeScript backend opened\`)",
          }
        }
      />
       
      <span
        className=""
        data-tooltip="base hover msg"
        style={
          Object {
            "backgroundColor": "black",
          }
        }
      >
        base content
      </span>
    </td>
  </tr>,
  <tr
    className="lineAddition"
    data-hunk-line-kind="ADDED"
  >
    <td
      className="num numEmpty"
    />
    <td
      className="num"
      data-hunk-num=" "
      data-line={162}
      data-part="head"
      id="anchor_R162"
    >
      <a
        className="numLine"
        href="/#anchor_R162"
        onClick={[Function]}
      >
        162
      </a>
    </td>
    <td
      className="content"
      data-diff-marker="+"
      style={Object {}}
    >
      <div
        className="d-inline-block"
        dangerouslySetInnerHTML={
          Object {
            "__html": "        logger.log(\`WebSocket connection to language server opened\`)",
          }
        }
      />
    </td>
  </tr>,
  <tr
    className="lineBoth"
    data-hunk-line-kind="UNCHANGED"
  >
    <td
      className="num"
      data-hunk-num=" "
      data-line={163}
      data-part="base"
      id="anchor_L163"
    >
      <a
        className="numLine"
        href="/#anchor_L163"
        onClick={[Function]}
      >
        163
      </a>
    </td>
    <td
      className="num"
      data-hunk-num=" "
      data-line={163}
      data-part="head"
      id="anchor_R163"
    >
      <a
        className="numLine"
        href="/#anchor_R163"
        onClick={[Function]}
      >
        163
      </a>
    </td>
    <td
      className="content"
      data-diff-marker=" "
      style={Object {}}
    >
      <div
        className="d-inline-block"
        dangerouslySetInnerHTML={
          Object {
            "__html": "        subscriptions.add(",
          }
        }
      />
    </td>
  </tr>,
  <tr
    className="lineBoth"
    data-hunk-line-kind="UNCHANGED"
  >
    <td
      className="num"
      data-hunk-num=" "
      data-line={164}
      data-part="base"
      id="anchor_L164"
    >
      <a
        className="numLine"
        href="/#anchor_L164"
        onClick={[Function]}
      >
        164
      </a>
    </td>
    <td
      className="num"
      data-hunk-num=" "
      data-line={164}
      data-part="head"
      id="anchor_R164"
    >
      <a
        className="numLine"
        href="/#anchor_R164"
        onClick={[Function]}
      >
        164
      </a>
    </td>
    <td
      className="content"
      data-diff-marker=" "
      style={Object {}}
    >
      <div
        className="d-inline-block"
        dangerouslySetInnerHTML={
          Object {
            "__html": "                connection.observeNotification(LogMessageNotification.type).subscribe(({ type, message }) => {",
          }
        }
      />
    </td>
  </tr>,
  <tr
    className="lineBoth"
    data-hunk-line-kind="UNCHANGED"
  >
    <td
      className="num"
      data-hunk-num=" "
      data-line={165}
      data-part="base"
      id="anchor_L165"
    >
      <a
        className="numLine"
        href="/#anchor_L165"
        onClick={[Function]}
      >
        165
      </a>
    </td>
    <td
      className="num"
      data-hunk-num=" "
      data-line={165}
      data-part="head"
      id="anchor_R165"
    >
      <a
        className="numLine"
        href="/#anchor_R165"
        onClick={[Function]}
      >
        165
      </a>
    </td>
    <td
      className="content"
      data-diff-marker=" "
      style={Object {}}
    >
      <div
        className="d-inline-block"
        dangerouslySetInnerHTML={
          Object {
            "__html": "                    const method = LSP_TO_LOG_LEVEL[type]",
          }
        }
      />
    </td>
  </tr>,
]
`;

exports[`DiffHunk renders decorations if given 1`] = `
Array [
  <tr>
    <td
      className="num"
      colSpan={2}
      data-diff-boundary-num={true}
    />
    <td
      className="content content"
      data-diff-boundary-content={true}
      data-diff-marker=" "
    >
      <code
        className="content"
      >
        @@ -
        159
        ,
        7
         +
        159
        ,
        7
         
        @@ export async function register({
      </code>
    </td>
  </tr>,
  <tr
    className="lineBoth"
    data-hunk-line-kind="UNCHANGED"
  >
    <td
      className="num"
      data-hunk-num=" "
      data-line={159}
      data-part="base"
      id="anchor_L159"
    >
      <a
        className="numLine"
        href="/#anchor_L159"
        onClick={[Function]}
      >
        159
      </a>
    </td>
    <td
      className="num"
      data-hunk-num=" "
      data-line={159}
      data-part="head"
      id="anchor_R159"
    >
      <a
        className="numLine"
        href="/#anchor_R159"
        onClick={[Function]}
      >
        159
      </a>
    </td>
    <td
      className="content"
      data-diff-marker=" "
      style={
        Object {
          "backgroundColor": "red",
        }
      }
    >
      <div
        className="d-inline-block"
        dangerouslySetInnerHTML={
          Object {
            "__html": "        const subscriptions = new Subscription()",
          }
        }
      />
       
      <span
        className=""
        data-tooltip="base hover msg"
        style={
          Object {
            "backgroundColor": "black",
          }
        }
      >
        head content
      </span>
    </td>
  </tr>,
  <tr
    className="lineBoth"
    data-hunk-line-kind="UNCHANGED"
  >
    <td
      className="num"
      data-hunk-num=" "
      data-line={160}
      data-part="base"
      id="anchor_L160"
    >
      <a
        className="numLine"
        href="/#anchor_L160"
        onClick={[Function]}
      >
        160
      </a>
    </td>
    <td
      className="num"
      data-hunk-num=" "
      data-line={160}
      data-part="head"
      id="anchor_R160"
    >
      <a
        className="numLine"
        href="/#anchor_R160"
        onClick={[Function]}
      >
        160
      </a>
    </td>
    <td
      className="content"
      data-diff-marker=" "
      style={Object {}}
    >
      <div
        className="d-inline-block"
        dangerouslySetInnerHTML={
          Object {
            "__html": "        const decorationType = sourcegraph.app.createDecorationType()",
          }
        }
      />
    </td>
  </tr>,
  <tr
    className="lineBoth"
    data-hunk-line-kind="UNCHANGED"
  >
    <td
      className="num"
      data-hunk-num=" "
      data-line={161}
      data-part="base"
      id="anchor_L161"
    >
      <a
        className="numLine"
        href="/#anchor_L161"
        onClick={[Function]}
      >
        161
      </a>
    </td>
    <td
      className="num"
      data-hunk-num=" "
      data-line={161}
      data-part="head"
      id="anchor_R161"
    >
      <a
        className="numLine"
        href="/#anchor_R161"
        onClick={[Function]}
      >
        161
      </a>
    </td>
    <td
      className="content"
      data-diff-marker=" "
      style={Object {}}
    >
      <div
        className="d-inline-block"
        dangerouslySetInnerHTML={
          Object {
            "__html": "        const connection = await createConnection()",
          }
        }
      />
    </td>
  </tr>,
  <tr
    className="lineDeletion"
    data-hunk-line-kind="DELETED"
  >
    <td
      className="num"
      data-hunk-num=" "
      data-line={162}
      data-part="base"
      id="anchor_L162"
    >
      <a
        className="numLine"
        href="/#anchor_L162"
        onClick={[Function]}
      >
        162
      </a>
    </td>
    <td
      className="num numEmpty"
    />
    <td
      className="content"
      data-diff-marker="-"
      style={
        Object {
          "backgroundColor": "blue",
        }
      }
    >
      <div
        className="d-inline-block"
        dangerouslySetInnerHTML={
          Object {
            "__html": "        logger.log(\`WebSocket connection to TypeScript backend opened\`)",
          }
        }
      />
       
      <span
        className=""
        data-tooltip="base hover msg"
        style={
          Object {
            "backgroundColor": "black",
          }
        }
      >
        base content
      </span>
    </td>
  </tr>,
  <tr
    className="lineAddition"
    data-hunk-line-kind="ADDED"
  >
    <td
      className="num numEmpty"
    />
    <td
      className="num"
      data-hunk-num=" "
      data-line={162}
      data-part="head"
      id="anchor_R162"
    >
      <a
        className="numLine"
        href="/#anchor_R162"
        onClick={[Function]}
      >
        162
      </a>
    </td>
    <td
      className="content"
      data-diff-marker="+"
      style={Object {}}
    >
      <div
        className="d-inline-block"
        dangerouslySetInnerHTML={
          Object {
            "__html": "        logger.log(\`WebSocket connection to language server opened\`)",
          }
        }
      />
    </td>
  </tr>,
  <tr
    className="lineBoth"
    data-hunk-line-kind="UNCHANGED"
  >
    <td
      className="num"
      data-hunk-num=" "
      data-line={163}
      data-part="base"
      id="anchor_L163"
    >
      <a
        className="numLine"
        href="/#anchor_L163"
        onClick={[Function]}
      >
        163
      </a>
    </td>
    <td
      className="num"
      data-hunk-num=" "
      data-line={163}
      data-part="head"
      id="anchor_R163"
    >
      <a
        className="numLine"
        href="/#anchor_R163"
        onClick={[Function]}
      >
        163
      </a>
    </td>
    <td
      className="content"
      data-diff-marker=" "
      style={Object {}}
    >
      <div
        className="d-inline-block"
        dangerouslySetInnerHTML={
          Object {
            "__html": "        subscriptions.add(",
          }
        }
      />
    </td>
  </tr>,
  <tr
    className="lineBoth"
    data-hunk-line-kind="UNCHANGED"
  >
    <td
      className="num"
      data-hunk-num=" "
      data-line={164}
      data-part="base"
      id="anchor_L164"
    >
      <a
        className="numLine"
        href="/#anchor_L164"
        onClick={[Function]}
      >
        164
      </a>
    </td>
    <td
      className="num"
      data-hunk-num=" "
      data-line={164}
      data-part="head"
      id="anchor_R164"
    >
      <a
        className="numLine"
        href="/#anchor_R164"
        onClick={[Function]}
      >
        164
      </a>
    </td>
    <td
      className="content"
      data-diff-marker=" "
      style={Object {}}
    >
      <div
        className="d-inline-block"
        dangerouslySetInnerHTML={
          Object {
            "__html": "                connection.observeNotification(LogMessageNotification.type).subscribe(({ type, message }) => {",
          }
        }
      />
    </td>
  </tr>,
  <tr
    className="lineBoth"
    data-hunk-line-kind="UNCHANGED"
  >
    <td
      className="num"
      data-hunk-num=" "
      data-line={165}
      data-part="base"
      id="anchor_L165"
    >
      <a
        className="numLine"
        href="/#anchor_L165"
        onClick={[Function]}
      >
        165
      </a>
    </td>
    <td
      className="num"
      data-hunk-num=" "
      data-line={165}
      data-part="head"
      id="anchor_R165"
    >
      <a
        className="numLine"
        href="/#anchor_R165"
        onClick={[Function]}
      >
        165
      </a>
    </td>
    <td
      className="content"
      data-diff-marker=" "
      style={Object {}}
    >
      <div
        className="d-inline-block"
        dangerouslySetInnerHTML={
          Object {
            "__html": "                    const method = LSP_TO_LOG_LEVEL[type]",
          }
        }
      />
    </td>
  </tr>,
]
`;
