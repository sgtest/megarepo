// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`StreamingProgressSkippedPopover should render correctly 1`] = `
<StreamingProgressSkippedPopover
  history="[History]"
  onSearchAgain={[Function]}
  progress={
    Object {
      "durationMs": 1500,
      "matchCount": 2,
      "repositoriesCount": 2,
      "skipped": Array [
        Object {
          "message": "There was a network error retrieving search results. Check your Internet connection and try again.",
          "reason": "error",
          "severity": "error",
          "title": "Error loading results",
        },
        Object {
          "message": "Search timed out",
          "reason": "shard-timedout",
          "severity": "warn",
          "suggested": Object {
            "queryExpression": "timeout:2m",
            "title": "timeout:2m",
          },
          "title": "Search timed out",
        },
        Object {
          "message": "10k forked repositories excluded",
          "reason": "excluded-fork",
          "severity": "info",
          "suggested": Object {
            "queryExpression": "forked:yes",
            "title": "forked:yes",
          },
          "title": "10k forked repositories excluded",
        },
        Object {
          "message": "60k archived repositories excluded",
          "reason": "excluded-archive",
          "severity": "info",
          "suggested": Object {
            "queryExpression": "archived:yes",
            "title": "archived:yes",
          },
          "title": "60k archived repositories excluded",
        },
        Object {
          "message": "By default we exclude archived repositories. Include them with \`archived:yes\` in your query.",
          "reason": "excluded-archive",
          "severity": "info",
          "suggested": Object {
            "queryExpression": "archived:yes",
            "title": "include archived",
          },
          "title": "1 archived",
        },
      ],
    }
  }
>
  <SkippedMessage
    history="[History]"
    key="error"
    skipped={
      Object {
        "message": "There was a network error retrieving search results. Check your Internet connection and try again.",
        "reason": "error",
        "severity": "error",
        "title": "Error loading results",
      }
    }
    startOpen={true}
  >
    <Button
      className="streaming-skipped-item pt-3 pb-0 w-100 streaming-skipped-item--warn"
      color="secondary"
      disabled={false}
      onClick={[Function]}
      tag="button"
    >
      <button
        aria-label={null}
        className="streaming-skipped-item pt-3 pb-0 w-100 streaming-skipped-item--warn btn btn-secondary"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        <h4
          className="d-flex align-items-center mb-0 w-100"
        >
          <Memo(AlertCircleIcon)
            className="icon-inline mr-2 streaming-skipped-item__icon flex-shrink-0"
          />
          <span
            className="flex-grow-1 text-left"
          >
            Error loading results
          </span>
          <Memo(ChevronDownIcon)
            className="icon-inline flex-shrink-0"
          />
        </h4>
        <Collapse
          appear={false}
          enter={true}
          exit={true}
          in={false}
          isOpen={true}
          mountOnEnter={false}
          onEnter={[Function]}
          onEntered={[Function]}
          onEntering={[Function]}
          onExit={[Function]}
          onExited={[Function]}
          onExiting={[Function]}
          tag="div"
          timeout={350}
          unmountOnExit={false}
        >
          <Transition
            appear={false}
            enter={true}
            exit={true}
            in={true}
            mountOnEnter={false}
            onEnter={[Function]}
            onEntered={[Function]}
            onEntering={[Function]}
            onExit={[Function]}
            onExited={[Function]}
            onExiting={[Function]}
            timeout={350}
            unmountOnExit={false}
          >
            <div
              className="collapse show"
              style={Object {}}
            >
              <Markdown
                className="streaming-skipped-item__message mt-2 text-left"
                dangerousInnerHTML="<p>There was a network error retrieving search results. Check your Internet connection and try again.</p>
"
                history="[History]"
              >
                <div
                  className="streaming-skipped-item__message mt-2 text-left markdown"
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "<p>There was a network error retrieving search results. Check your Internet connection and try again.</p>
",
                    }
                  }
                  onClick={[Function]}
                />
              </Markdown>
            </div>
          </Transition>
        </Collapse>
        <div
          className="streaming-skipped-item__bottom-border-spacer mt-3"
        />
      </button>
    </Button>
  </SkippedMessage>
  <SkippedMessage
    history="[History]"
    key="shard-timedout"
    skipped={
      Object {
        "message": "Search timed out",
        "reason": "shard-timedout",
        "severity": "warn",
        "suggested": Object {
          "queryExpression": "timeout:2m",
          "title": "timeout:2m",
        },
        "title": "Search timed out",
      }
    }
    startOpen={false}
  >
    <Button
      className="streaming-skipped-item pt-3 pb-0 w-100 streaming-skipped-item--warn"
      color="secondary"
      disabled={false}
      onClick={[Function]}
      tag="button"
    >
      <button
        aria-label={null}
        className="streaming-skipped-item pt-3 pb-0 w-100 streaming-skipped-item--warn btn btn-secondary"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        <h4
          className="d-flex align-items-center mb-0 w-100"
        >
          <Memo(AlertCircleIcon)
            className="icon-inline mr-2 streaming-skipped-item__icon flex-shrink-0"
          />
          <span
            className="flex-grow-1 text-left"
          >
            Search timed out
          </span>
          <Memo(ChevronLeftIcon)
            className="icon-inline flex-shrink-0"
          />
        </h4>
        <Collapse
          appear={false}
          enter={true}
          exit={true}
          in={false}
          isOpen={false}
          mountOnEnter={false}
          onEnter={[Function]}
          onEntered={[Function]}
          onEntering={[Function]}
          onExit={[Function]}
          onExited={[Function]}
          onExiting={[Function]}
          tag="div"
          timeout={350}
          unmountOnExit={false}
        >
          <Transition
            appear={false}
            enter={true}
            exit={true}
            in={false}
            mountOnEnter={false}
            onEnter={[Function]}
            onEntered={[Function]}
            onEntering={[Function]}
            onExit={[Function]}
            onExited={[Function]}
            onExiting={[Function]}
            timeout={350}
            unmountOnExit={false}
          >
            <div
              className="collapse"
              style={Object {}}
            >
              <Markdown
                className="streaming-skipped-item__message mt-2 text-left"
                dangerousInnerHTML="<p>Search timed out</p>
"
                history="[History]"
              >
                <div
                  className="streaming-skipped-item__message mt-2 text-left markdown"
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "<p>Search timed out</p>
",
                    }
                  }
                  onClick={[Function]}
                />
              </Markdown>
            </div>
          </Transition>
        </Collapse>
        <div
          className="streaming-skipped-item__bottom-border-spacer mt-3"
        />
      </button>
    </Button>
  </SkippedMessage>
  <SkippedMessage
    history="[History]"
    key="excluded-fork"
    skipped={
      Object {
        "message": "10k forked repositories excluded",
        "reason": "excluded-fork",
        "severity": "info",
        "suggested": Object {
          "queryExpression": "forked:yes",
          "title": "forked:yes",
        },
        "title": "10k forked repositories excluded",
      }
    }
    startOpen={false}
  >
    <Button
      className="streaming-skipped-item pt-3 pb-0 w-100"
      color="secondary"
      disabled={false}
      onClick={[Function]}
      tag="button"
    >
      <button
        aria-label={null}
        className="streaming-skipped-item pt-3 pb-0 w-100 btn btn-secondary"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        <h4
          className="d-flex align-items-center mb-0 w-100"
        >
          <Memo(InformationOutlineIcon)
            className="icon-inline mr-2 streaming-skipped-item__icon flex-shrink-0"
          />
          <span
            className="flex-grow-1 text-left"
          >
            10k forked repositories excluded
          </span>
          <Memo(ChevronLeftIcon)
            className="icon-inline flex-shrink-0"
          />
        </h4>
        <Collapse
          appear={false}
          enter={true}
          exit={true}
          in={false}
          isOpen={false}
          mountOnEnter={false}
          onEnter={[Function]}
          onEntered={[Function]}
          onEntering={[Function]}
          onExit={[Function]}
          onExited={[Function]}
          onExiting={[Function]}
          tag="div"
          timeout={350}
          unmountOnExit={false}
        >
          <Transition
            appear={false}
            enter={true}
            exit={true}
            in={false}
            mountOnEnter={false}
            onEnter={[Function]}
            onEntered={[Function]}
            onEntering={[Function]}
            onExit={[Function]}
            onExited={[Function]}
            onExiting={[Function]}
            timeout={350}
            unmountOnExit={false}
          >
            <div
              className="collapse"
              style={Object {}}
            >
              <Markdown
                className="streaming-skipped-item__message mt-2 text-left"
                dangerousInnerHTML="<p>10k forked repositories excluded</p>
"
                history="[History]"
              >
                <div
                  className="streaming-skipped-item__message mt-2 text-left markdown"
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "<p>10k forked repositories excluded</p>
",
                    }
                  }
                  onClick={[Function]}
                />
              </Markdown>
            </div>
          </Transition>
        </Collapse>
        <div
          className="streaming-skipped-item__bottom-border-spacer mt-3"
        />
      </button>
    </Button>
  </SkippedMessage>
  <SkippedMessage
    history="[History]"
    key="excluded-archive"
    skipped={
      Object {
        "message": "60k archived repositories excluded",
        "reason": "excluded-archive",
        "severity": "info",
        "suggested": Object {
          "queryExpression": "archived:yes",
          "title": "archived:yes",
        },
        "title": "60k archived repositories excluded",
      }
    }
    startOpen={false}
  >
    <Button
      className="streaming-skipped-item pt-3 pb-0 w-100"
      color="secondary"
      disabled={false}
      onClick={[Function]}
      tag="button"
    >
      <button
        aria-label={null}
        className="streaming-skipped-item pt-3 pb-0 w-100 btn btn-secondary"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        <h4
          className="d-flex align-items-center mb-0 w-100"
        >
          <Memo(InformationOutlineIcon)
            className="icon-inline mr-2 streaming-skipped-item__icon flex-shrink-0"
          />
          <span
            className="flex-grow-1 text-left"
          >
            60k archived repositories excluded
          </span>
          <Memo(ChevronLeftIcon)
            className="icon-inline flex-shrink-0"
          />
        </h4>
        <Collapse
          appear={false}
          enter={true}
          exit={true}
          in={false}
          isOpen={false}
          mountOnEnter={false}
          onEnter={[Function]}
          onEntered={[Function]}
          onEntering={[Function]}
          onExit={[Function]}
          onExited={[Function]}
          onExiting={[Function]}
          tag="div"
          timeout={350}
          unmountOnExit={false}
        >
          <Transition
            appear={false}
            enter={true}
            exit={true}
            in={false}
            mountOnEnter={false}
            onEnter={[Function]}
            onEntered={[Function]}
            onEntering={[Function]}
            onExit={[Function]}
            onExited={[Function]}
            onExiting={[Function]}
            timeout={350}
            unmountOnExit={false}
          >
            <div
              className="collapse"
              style={Object {}}
            >
              <Markdown
                className="streaming-skipped-item__message mt-2 text-left"
                dangerousInnerHTML="<p>60k archived repositories excluded</p>
"
                history="[History]"
              >
                <div
                  className="streaming-skipped-item__message mt-2 text-left markdown"
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "<p>60k archived repositories excluded</p>
",
                    }
                  }
                  onClick={[Function]}
                />
              </Markdown>
            </div>
          </Transition>
        </Collapse>
        <div
          className="streaming-skipped-item__bottom-border-spacer mt-3"
        />
      </button>
    </Button>
  </SkippedMessage>
  <SkippedMessage
    history="[History]"
    key="excluded-archive"
    skipped={
      Object {
        "message": "By default we exclude archived repositories. Include them with \`archived:yes\` in your query.",
        "reason": "excluded-archive",
        "severity": "info",
        "suggested": Object {
          "queryExpression": "archived:yes",
          "title": "include archived",
        },
        "title": "1 archived",
      }
    }
    startOpen={false}
  >
    <Button
      className="streaming-skipped-item pt-3 pb-0 w-100"
      color="secondary"
      disabled={false}
      onClick={[Function]}
      tag="button"
    >
      <button
        aria-label={null}
        className="streaming-skipped-item pt-3 pb-0 w-100 btn btn-secondary"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        <h4
          className="d-flex align-items-center mb-0 w-100"
        >
          <Memo(InformationOutlineIcon)
            className="icon-inline mr-2 streaming-skipped-item__icon flex-shrink-0"
          />
          <span
            className="flex-grow-1 text-left"
          >
            1 archived
          </span>
          <Memo(ChevronLeftIcon)
            className="icon-inline flex-shrink-0"
          />
        </h4>
        <Collapse
          appear={false}
          enter={true}
          exit={true}
          in={false}
          isOpen={false}
          mountOnEnter={false}
          onEnter={[Function]}
          onEntered={[Function]}
          onEntering={[Function]}
          onExit={[Function]}
          onExited={[Function]}
          onExiting={[Function]}
          tag="div"
          timeout={350}
          unmountOnExit={false}
        >
          <Transition
            appear={false}
            enter={true}
            exit={true}
            in={false}
            mountOnEnter={false}
            onEnter={[Function]}
            onEntered={[Function]}
            onEntering={[Function]}
            onExit={[Function]}
            onExited={[Function]}
            onExiting={[Function]}
            timeout={350}
            unmountOnExit={false}
          >
            <div
              className="collapse"
              style={Object {}}
            >
              <Markdown
                className="streaming-skipped-item__message mt-2 text-left"
                dangerousInnerHTML="<p>By default we exclude archived repositories. Include them with <code>archived:yes</code> in your query.</p>
"
                history="[History]"
              >
                <div
                  className="streaming-skipped-item__message mt-2 text-left markdown"
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "<p>By default we exclude archived repositories. Include them with <code>archived:yes</code> in your query.</p>
",
                    }
                  }
                  onClick={[Function]}
                />
              </Markdown>
            </div>
          </Transition>
        </Collapse>
        <div
          className="streaming-skipped-item__bottom-border-spacer mt-3"
        />
      </button>
    </Button>
  </SkippedMessage>
  <Form
    className="pb-3 px-3"
    onSubmit={[Function]}
    tag="form"
  >
    <form
      className="pb-3 px-3"
      onSubmit={[Function]}
    >
      <div
        className="mb-2 mt-3"
      >
        Search again:
      </div>
      <FormGroup
        check={true}
        tag="div"
      >
        <div
          className="form-check"
        >
          <Label
            check={true}
            className="mb-1 d-block"
            key="timeout:2m"
            tag="label"
            widths={
              Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ]
            }
          >
            <label
              className="mb-1 d-block form-check-label"
            >
              <Input
                onChange={[Function]}
                type="checkbox"
                value="timeout:2m"
              >
                <input
                  className="form-check-input"
                  onChange={[Function]}
                  type="checkbox"
                  value="timeout:2m"
                />
              </Input>
               
              timeout:2m
               (
              <SyntaxHighlightedSearchQuery
                query="timeout:2m"
              >
                <span
                  className="text-monospace search-query-link"
                >
                  <span
                    className="search-filter-keyword"
                  >
                    timeout
                    :
                  </span>
                  2m
                </span>
              </SyntaxHighlightedSearchQuery>
              )
            </label>
          </Label>
          <Label
            check={true}
            className="mb-1 d-block"
            key="forked:yes"
            tag="label"
            widths={
              Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ]
            }
          >
            <label
              className="mb-1 d-block form-check-label"
            >
              <Input
                onChange={[Function]}
                type="checkbox"
                value="forked:yes"
              >
                <input
                  className="form-check-input"
                  onChange={[Function]}
                  type="checkbox"
                  value="forked:yes"
                />
              </Input>
               
              forked:yes
               (
              <SyntaxHighlightedSearchQuery
                query="forked:yes"
              >
                <span
                  className="text-monospace search-query-link"
                >
                  forked:yes
                </span>
              </SyntaxHighlightedSearchQuery>
              )
            </label>
          </Label>
          <Label
            check={true}
            className="mb-1 d-block"
            key="archived:yes"
            tag="label"
            widths={
              Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ]
            }
          >
            <label
              className="mb-1 d-block form-check-label"
            >
              <Input
                onChange={[Function]}
                type="checkbox"
                value="archived:yes"
              >
                <input
                  className="form-check-input"
                  onChange={[Function]}
                  type="checkbox"
                  value="archived:yes"
                />
              </Input>
               
              archived:yes
               (
              <SyntaxHighlightedSearchQuery
                query="archived:yes"
              >
                <span
                  className="text-monospace search-query-link"
                >
                  <span
                    className="search-filter-keyword"
                  >
                    archived
                    :
                  </span>
                  yes
                </span>
              </SyntaxHighlightedSearchQuery>
              )
            </label>
          </Label>
          <Label
            check={true}
            className="mb-1 d-block"
            key="archived:yes"
            tag="label"
            widths={
              Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ]
            }
          >
            <label
              className="mb-1 d-block form-check-label"
            >
              <Input
                onChange={[Function]}
                type="checkbox"
                value="archived:yes"
              >
                <input
                  className="form-check-input"
                  onChange={[Function]}
                  type="checkbox"
                  value="archived:yes"
                />
              </Input>
               
              include archived
               (
              <SyntaxHighlightedSearchQuery
                query="archived:yes"
              >
                <span
                  className="text-monospace search-query-link"
                >
                  <span
                    className="search-filter-keyword"
                  >
                    archived
                    :
                  </span>
                  yes
                </span>
              </SyntaxHighlightedSearchQuery>
              )
            </label>
          </Label>
        </div>
      </FormGroup>
      <Button
        className="mt-2"
        color="primary"
        disabled={true}
        tag="button"
        type="submit"
      >
        <button
          aria-label={null}
          className="mt-2 btn btn-primary disabled"
          disabled={true}
          onClick={[Function]}
          type="submit"
        >
          <Memo(SearchIcon)
            className="icon-inline mr-1"
          />
          Search again
        </button>
      </Button>
    </form>
  </Form>
</StreamingProgressSkippedPopover>
`;
