@import 'wildcard/src/global-styles/breakpoints';

.header {
    display: flex;
    flex-wrap: wrap;
    // Different form controls in the header have different height
    // values. To solve visual differences between component we should
    // "force" same height for each of them.
    align-items: stretch;
    gap: 0.5rem;
    margin-bottom: 1rem;
}

.search {
    margin: 0;
    flex-grow: 1;
    flex-basis: 24rem;

    &-input {
        // Stretch inner input element by all "stretched" container
        // height value
        height: 100%;
    }
}

.filters {
    margin: 0;
}

.sort {
    margin: 0;

    &-select {
        // Stretch inner select element by all "stretched" container
        // height value
        height: 100%;
    }
}

.jobs {
    padding: 0;
    margin: 2rem 0 0 0;
    list-style: none;

    display: grid;
    row-gap: 0.5rem;
    column-gap: 1rem;
    grid-template-rows: auto;
    grid-template-columns: [state] 100px [query] auto [author] min-content [actions] min-content [download] min-content;
}

.job {
    display: contents;

    &::after {
        content: '';
        grid-column: 1/-1;
        border-top: 1px solid var(--border-color-2);
        margin: 0.5rem 0;
    }

    &:last-child::after {
        border: none;
    }

    &-status {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 0.25rem;

        @media (--sm-breakpoint-down) {
            // Make it full width in the current row.
            grid-column: 1 / -1;
            flex-direction: row;
            width: 100%;
            gap: 0.5rem;
        }
    }

    &-progress {
        height: 1.25rem;
        width: 100%;
        background-color: var(--body-bg);
        border: 1px solid var(--border-color);
        border-radius: var(--border-radius);
        position: relative;
        overflow: hidden;

        @media (--sm-breakpoint-down) {
            // Make it full width in the current row.
            flex-basis: 10rem;
            flex-grow: 0;
            flex-shrink: 1;
        }
    }

    &-progress-bar {
        height: 100%;
        position: absolute;
        top: 0;
        left: 0;
        background-color: var(--primary);
    }

    &-query {
        flex-grow: 1;
        display: flex;
        flex-direction: column;
        gap: 0.25rem;
        min-width: 0;
        overflow: hidden;
        text-overflow: ellipsis;

        @media (--sm-breakpoint-down) {
            // Make it full width in the current row.
            grid-column: 1 / -1;
        }
    }

    &-creator {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        flex-wrap: nowrap;
        white-space: nowrap;

        @media (--sm-breakpoint-down) {
            // Make it full width in the current row.
            grid-column: 1 / 3;
            flex-wrap: wrap;
            white-space: normal;
        }
    }

    &-actions {
        display: flex;
        gap: 0.5rem;
        align-self: center;
    }

    &-slim-action {
        border: none;
        padding: 0.25rem;

        &:hover {
            background-color: var(--secondary-2) !important;
        }
    }

    &-view-logs {
        white-space: nowrap;
    }

    &-download {
        display: flex;
        flex-wrap: nowrap;
        align-self: center;
        align-items: center;
        gap: 0.25rem;
    }
}

.footer {
    margin: 1rem 0;
    width: 100%;
    display: flex;
    justify-content: center;
}

.pagination-info {
    color: var(--text-muted);
}

.initial-zero-state {
    margin-top: 2rem;
    margin-bottom: 2rem;
    grid-column: 1 / -1;
    justify-self: center;
    display: flex;
    justify-content: center;
    gap: 1.5rem;
    max-width: 48rem;

    &-image {
        max-width: 24rem;
        object-fit: contain;
    }

    &-text {
        flex-grow: 1;
        flex-basis: 20rem;
    }

    &-heading {
        margin-bottom: 1rem;
    }
}

.zero-state-with-filters {
    grid-column: 1 / -1;
    margin-top: 2rem;
    margin-bottom: 2rem;
}
