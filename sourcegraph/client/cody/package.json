{
  "name": "cody-ai",
  "private": true,
  "displayName": "Cody AI by Sourcegraph",
  "version": "0.1.5",
  "publisher": "sourcegraph",
  "license": "Apache-2.0",
  "icon": "resources/cody.png",
  "description": "AI code assistant that writes code and answers questions for you",
  "categories": [
    "Programming Languages",
    "Machine Learning",
    "Snippets",
    "Education"
  ],
  "keywords": [
    "ai",
    "openai",
    "anthropic",
    "assistant",
    "chatbot",
    "chat",
    "refactor",
    "documentation",
    "test",
    "sourcegraph",
    "codey",
    "llm",
    "codegen",
    "autocomplete",
    "bot",
    "model"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/sourcegraph/sourcegraph.git",
    "directory": "client/cody"
  },
  "bugs": {
    "url": "https://github.com/sourcegraph/sourcegraph/issues"
  },
  "homepage": "https://docs.sourcegraph.com/cody",
  "badges": [
    {
      "url": "https://img.shields.io/discord/969688426372825169?color=5765F2",
      "href": "https://srcgr.ph/discord",
      "description": "Discord"
    }
  ],
  "engines": {
    "vscode": "^1.74.0"
  },
  "scripts": {
    "build": "pnpm esbuild --minify && vite build --mode production",
    "build:dev": "concurrently \"pnpm esbuild --sourcemap\" \"vite build --mode development\"",
    "download-rg": "scripts/download-rg.sh",
    "esbuild": "esbuild ./src/extension.ts --bundle --outfile=dist/extension.js --external:vscode --format=cjs --platform=node",
    "lint": "pnpm run lint:js",
    "lint:js": "eslint --cache '**/*.[tj]s?(x)'",
    "test:integration": "tsc -b ./test/integration && pnpm run --silent build:dev && node --inspect -r ts-node/register out/test/integration/main.js",
    "test:unit": "jest",
    "test:e2e": "npx playwright install && pnpm run --silent build:dev && playwright test",
    "vscode:prepublish": "scripts/check-rg.sh",
    "vsce:package": "pnpm --silent build && vsce package --no-dependencies -o dist/cody.vsix",
    "vsce:prerelease": "pnpm --silent build && vsce package patch --pre-release --no-dependencies -o dist/cody.vsix",
    "release": "ts-node ./scripts/release.ts",
    "watch": "concurrently \"pnpm watch:esbuild\" \"pnpm watch:webview\"",
    "watch:esbuild": "pnpm esbuild --sourcemap --watch",
    "watch:webview": "vite build --mode development --watch",
    "storybook": "STORIES_GLOB='client/cody/webviews/**/*.story.tsx' pnpm --filter @sourcegraph/storybook run start"
  },
  "main": "./dist/extension.js",
  "activationEvents": [
    "onStartupFinished"
  ],
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "cody",
          "title": "Sourcegraph Cody",
          "icon": "resources/cody.svg"
        }
      ]
    },
    "views": {
      "cody": [
        {
          "type": "webview",
          "id": "cody.chat",
          "name": "Chat",
          "visibility": "visible"
        }
      ]
    },
    "commands": [
      {
        "command": "cody.recipe.explain-code",
        "title": "Ask Cody: Explain Code in Detail"
      },
      {
        "command": "cody.recipe.explain-code-high-level",
        "title": "Ask Cody: Explain Code at a High Level"
      },
      {
        "command": "cody.recipe.generate-unit-test",
        "title": "Ask Cody: Generate Unit Test"
      },
      {
        "command": "cody.recipe.generate-docstring",
        "title": "Ask Cody: Generate Docstring"
      },
      {
        "command": "cody.recipe.translate-to-language",
        "title": "Ask Cody: Translate to Language"
      },
      {
        "command": "cody.recipe.git-history",
        "title": "Ask Cody: Summarize Recent Code Changes"
      },
      {
        "command": "cody.recipe.improve-variable-names",
        "title": "Ask Cody: Improve Variable Names"
      },
      {
        "command": "cody.recipe.fixup",
        "title": "Cody: Fixup"
      },
      {
        "command": "cody.recipe.context-search",
        "title": "Ask Cody: Codebase Context Search"
      },
      {
        "command": "cody.set-access-token",
        "title": "Cody: Set Access Token"
      },
      {
        "command": "cody.delete-access-token",
        "title": "Cody: Sign out"
      },
      {
        "command": "cody.manual-completions",
        "title": "Cody: Open Completions Panel"
      },
      {
        "command": "cody.settings",
        "title": "Cody: Settings",
        "group": "Cody",
        "icon": "$(gear)"
      },
      {
        "command": "cody.focus",
        "title": "Cody: Sign In"
      },
      {
        "command": "cody.interactive.clear",
        "title": "Cody: Start a New Chat Session",
        "group": "Cody",
        "icon": "$(add)"
      },
      {
        "command": "cody.history",
        "title": "Cody: Chat History",
        "group": "Cody",
        "icon": "$(list-unordered)"
      },
      {
        "command": "cody.comment.add",
        "title": "Ask Cody",
        "category": "Cody Inline Assist",
        "enablement": "!commentIsEmpty"
      },
      {
        "command": "cody.comment.delete",
        "title": "Cody Inline Assist: Remove Comment",
        "category": "Cody Inline Assist",
        "enablement": "!commentThreadIsEmpty",
        "icon": "$(trash)"
      },
      {
        "command": "cody.comment.load",
        "title": "Cody Inline Assist: Loading",
        "category": "Cody Inline Assist",
        "enablement": "!commentThreadIsEmpty",
        "icon": "$(sync~spin)"
      },
      {
        "command": "cody.guardrails.debug",
        "title": "Cody: Guardrails Debug Attribution",
        "enablement": "config.cody.debug && config.cody.experimental.guardrails && editorHasSelection"
      }
    ],
    "keybindings": [
      {
        "command": "cody.chat.focus",
        "key": "alt+/",
        "mac": "alt+/"
      },
      {
        "command": "cody.recipe.fixup",
        "key": "ctrl+alt+/",
        "mac": "ctrl+alt+/",
        "when": "cody.activated && editorTextFocus && !editorReadonly"
      }
    ],
    "submenus": [
      {
        "label": "Ask Cody",
        "id": "cody.submenu"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "cody.recipe.explain-code",
          "when": "cody.activated"
        },
        {
          "command": "cody.recipe.context-search",
          "when": "cody.activated"
        },
        {
          "command": "cody.recipe.explain-code-high-level",
          "when": "cody.activated"
        },
        {
          "command": "cody.recipe.generate-unit-test",
          "when": "cody.activated"
        },
        {
          "command": "cody.recipe.generate-docstring",
          "when": "cody.activated"
        },
        {
          "command": "cody.recipe.translate-to-language",
          "when": "cody.activated"
        },
        {
          "command": "cody.recipe.git-history",
          "when": "cody.activated"
        },
        {
          "command": "cody.recipe.fixup",
          "when": "cody.activated"
        },
        {
          "command": "cody.set-access-token",
          "when": "false"
        },
        {
          "command": "cody.focus",
          "title": "Cody: Sign In",
          "when": "!cody.activated"
        },
        {
          "command": "cody.comment.add",
          "when": "false"
        },
        {
          "command": "cody.comment.delete",
          "when": "false"
        },
        {
          "command": "cody.comment.load",
          "when": "false"
        },
        {
          "command": "cody.manual-completions",
          "when": "config.cody.experimental.suggestions"
        }
      ],
      "editor/context": [
        {
          "submenu": "cody.submenu",
          "group": "7_modification"
        }
      ],
      "cody.submenu": [
        {
          "command": "cody.recipe.explain-code",
          "when": "cody.activated"
        },
        {
          "command": "cody.recipe.explain-code-high-level",
          "when": "cody.activated"
        },
        {
          "command": "cody.recipe.generate-unit-test",
          "when": "cody.activated"
        },
        {
          "command": "cody.recipe.generate-docstring",
          "when": "cody.activated"
        },
        {
          "command": "cody.recipe.improve-variable-names",
          "when": "cody.activated"
        },
        {
          "command": "cody.recipe.translate-to-language",
          "when": "cody.activated"
        },
        {
          "command": "cody.recipe.fixup",
          "when": "cody.activated"
        },
        {
          "command": "cody.focus",
          "when": "!cody.activated"
        },
        {
          "command": "cody.guardrails.debug",
          "when": "config.cody.debug && config.cody.experimental.guardrails && editorHasSelection"
        }
      ],
      "view/title": [
        {
          "command": "cody.interactive.clear",
          "when": "view == cody.chat && cody.activated",
          "group": "navigation@1"
        },
        {
          "command": "cody.settings",
          "when": "view == cody.chat && cody.activated",
          "group": "navigation@3"
        },
        {
          "command": "cody.history",
          "when": "view == cody.chat && cody.activated",
          "group": "navigation@2"
        }
      ],
      "comments/commentThread/context": [
        {
          "command": "cody.comment.add",
          "group": "inline",
          "when": "cody.activated && commentController =~ /^cody-inline/"
        },
        {
          "command": "cody.focus",
          "group": "inline",
          "when": "!cody.activated && commentController =~ /^cody-inline/"
        }
      ],
      "comments/commentThread/title": [
        {
          "command": "cody.comment.delete",
          "group": "inline@1",
          "when": "cody.activated && commentController =~ /^cody-inline/ && cody.replied && !commentThreadIsEmpty"
        },
        {
          "command": "cody.comment.load",
          "group": "inline@2",
          "when": "cody.activated && commentController =~ /^cody-inline/ && cody.reply.pending"
        }
      ]
    },
    "configuration": {
      "type": "object",
      "title": "Cody",
      "properties": {
        "cody.serverEndpoint": {
          "order": 1,
          "type": "string",
          "default": "https://sourcegraph.com",
          "example": "https://example.sourcegraph.com",
          "description": "URL to the Sourcegraph instance."
        },
        "cody.codebase": {
          "order": 2,
          "type": "string",
          "markdownDescription": "The name of the embedded repository that Cody will use to gather context for its responses. This is automatically inferred from your Git metadata, but you can use this option if you need to override the default.",
          "example": "github.com/sourcegraph/sourcegraph"
        },
        "cody.useContext": {
          "order": 3,
          "type": "string",
          "enum": [
            "embeddings",
            "keyword",
            "none",
            "blended"
          ],
          "default": "embeddings",
          "markdownDescription": "If 'embeddings' is selected, Cody will prefer to use an embeddings-based index when fetching context to generate responses to user requests. If no such index is found, it will fall back to using keyword-based local context fetching. If 'keyword' is selected, Cody will use keyword context. Selecting 'none' will limit Cody to using only the currently open file."
        },
        "cody.customHeaders": {
          "order": 4,
          "type": "object",
          "markdownDescription": "Adds custom HTTP headers to all network requests to the Sourcegraph endpoint. Defining required headers here ensures requests are properly forwarded through intermediary proxy servers, which may mandate certain custom headers for internal or external communication.",
          "default": {},
          "examples": [
            {
              "Cache-Control": "no-cache",
              "Proxy-Authenticate": "Basic"
            }
          ]
        },
        "cody.experimental.suggestions": {
          "order": 5,
          "type": "boolean",
          "markdownDescription": "Enables experimental Cody completions in your editor.",
          "default": false
        },
        "cody.experimental.chatPredictions": {
          "order": 6,
          "type": "boolean",
          "default": false,
          "markdownDescription": "Adds suggestions of possible relevant messages in the chat window."
        },
        "cody.experimental.inline": {
          "order": 7,
          "type": "boolean",
          "markdownDescription": "Enables Cody Inline Assist, an inline way to explicitly ask questions and propose modifications to code.",
          "default": false
        },
        "cody.experimental.guardrails": {
          "order": 8,
          "type": "boolean",
          "default": false
        },
        "cody.debug.enable": {
          "order": 99,
          "type": "boolean",
          "markdownDescription": "Turns on debug output (visible in the VS Code Output panel under \"Cody AI by Sourcegraph\")"
        },
        "cody.debug.verbose": {
          "order": 99,
          "type": "boolean",
          "markdownDescription": "Enables verbose debug output. Debug messages may contain more details if the invocation includes verbose information."
        },
        "cody.debug.filter": {
          "order": 99,
          "type": "string",
          "markdownDescription": "Regular expression to filter debug output. If empty, defaults to '.*', which prints all messages."
        }
      }
    }
  },
  "dependencies": {
    "@anthropic-ai/sdk": "^0.4.2",
    "@sourcegraph/cody-shared": "workspace:*",
    "@sourcegraph/cody-ui": "workspace:*",
    "lru-cache": "^9.1.1",
    "openai": "^3.2.1",
    "wink-eng-lite-web-model": "^1.5.0",
    "wink-nlp": "^1.13.1",
    "wink-nlp-utils": "^2.1.0"
  },
  "devDependencies": {
    "@playwright/test": "^1.33.0",
    "playwright": "^1.33.0"
  }
}
