{
  "name": "kodj",
  "displayName": "Kodj",
  "version": "0.0.6",
  "publisher": "hpargecruos",
  "license": "Apache-2.0",
  "icon": "resources/cody.png",
  "description": "",
  "categories": [
    "Other"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/sourcegraph/sourcegraph.git",
    "directory": "client/cody/vscode-codegen"
  },
  "bugs": {
    "url": "https://github.com/sourcegraph/sourcegraph/issues"
  },
  "homepage": "https://github.com/sourcegraph/sourcegraph#readme",
  "engines": {
    "vscode": "^1.74.0"
  },
  "scripts": {
    "build": "pnpm esbuild --minify && vite build --mode production",
    "build:dev": "pnpm esbuild --sourcemap && vite build --mode development",
    "download-rg": "scripts/download-rg.sh",
    "esbuild": "esbuild ./src/extension.ts --bundle --outfile=dist/extension.js --external:vscode --format=cjs --platform=node",
    "test": "pnpm compile:test && node ./dist/test/src/test/runTest.js",
    "test:deps": "scripts/check-rg.sh && pnpm --silent build && vsce package patch --pre-release --no-dependencies -o dist/kodj.vsix",
    "vsce:package": "scripts/check-rg.sh && pnpm --silent build && vsce package --no-dependencies -o dist/kodj.vsix",
    "watch": "concurrently \"pnpm watch:esbuild\" \"pnpm watch:webview\"",
    "watch:esbuild": "pnpm esbuild --sourcemap --watch",
    "watch:webview": "vite build --mode development --watch",
    "compile:test": "tsc -p tsconfig.test.json"
  },
  "main": "./dist/extension.js",
  "activationEvents": [
    "onStartupFinished"
  ],
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "cody",
          "title": "Cody",
          "icon": "resources/cody.svg",
          "when": "sourcegraph.cody.activated"
        }
      ]
    },
    "views": {
      "cody": [
        {
          "type": "webview",
          "id": "cody.chat",
          "name": "Chat",
          "when": "sourcegraph.cody.activated"
        }
      ]
    },
    "commands": [
      {
        "command": "sourcegraph.cody.toggleEnabled",
        "title": "Cody: Toggle Enabled/Disabled"
      },
      {
        "command": "cody.experimental.suggest",
        "title": "Ask Cody: View Suggestions"
      },
      {
        "command": "cody.recipe.explain-code",
        "title": "Ask Cody: Explain Code in Detail"
      },
      {
        "command": "cody.recipe.explain-code-high-level",
        "title": "Ask Cody: Explain Code at a High Level"
      },
      {
        "command": "cody.recipe.generate-unit-test",
        "title": "Ask Cody: Generate Unit Test"
      },
      {
        "command": "cody.recipe.generate-docstring",
        "title": "Ask Cody: Generate Docstring"
      },
      {
        "command": "cody.recipe.translate-to-language",
        "title": "Ask Cody: Translate to Language"
      },
      {
        "command": "cody.recipe.git-history",
        "title": "Cody: Recent History"
      },
      {
        "command": "cody.recipe.improve-variable-names",
        "title": "Ask Cody: Improve Variable Names"
      },
      {
        "command": "cody.set-access-token",
        "title": "Cody: Set Access Token"
      },
      {
        "command": "cody.delete-access-token",
        "title": "Cody: Delete Access Token"
      }
    ],
    "keybindings": [
      {
        "command": "cody.recipe.explain-code-high-level",
        "key": "ctrl+alt+c",
        "mac": "ctrl+alt+c",
        "when": "sourcegraph.cody.activated"
      }
    ],
    "submenus": [
      {
        "label": "Ask Cody",
        "id": "cody.submenu"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "sourcegraph.cody.toggleEnabled"
        },
        {
          "command": "cody.experimental.suggest",
          "when": "config.cody.experimental.suggest && sourcegraph.cody.activated"
        },
        {
          "command": "cody.recipe.explain-code",
          "when": "sourcegraph.cody.activated"
        },
        {
          "command": "cody.recipe.explain-code-high-level",
          "when": "sourcegraph.cody.activated"
        },
        {
          "command": "cody.recipe.generate-unit-test",
          "when": "sourcegraph.cody.activated"
        },
        {
          "command": "cody.recipe.generate-docstring",
          "when": "sourcegraph.cody.activated"
        },
        {
          "command": "cody.recipe.translate-to-language",
          "when": "sourcegraph.cody.activated"
        },
        {
          "command": "cody.recipe.git-history",
          "when": "sourcegraph.cody.activated"
        },
        {
          "command": "cody.set-access-token"
        },
        {
          "command": "cody.delete-access-token"
        }
      ],
      "editor/context": [
        {
          "submenu": "cody.submenu",
          "group": "7_modification",
          "when": "sourcegraph.cody.activated"
        }
      ],
      "cody.submenu": [
        {
          "command": "cody.recipe.explain-code"
        },
        {
          "command": "cody.recipe.explain-code-high-level"
        },
        {
          "command": "cody.recipe.generate-unit-test"
        },
        {
          "command": "cody.recipe.generate-docstring"
        },
        {
          "command": "cody.recipe.improve-variable-names"
        },
        {
          "command": "cody.recipe.translate-to-language"
        }
      ]
    },
    "configuration": {
      "type": "object",
      "title": "Cody settings",
      "properties": {
        "sourcegraph.cody.enable": {
          "type": "boolean",
          "default": true,
          "description": "Enable Cody"
        },
        "cody.serverEndpoint": {
          "type": "string",
          "default": "https://cody.sgdev.org",
          "example": "https://cody.sgdev.org",
          "description": "URL to the Cody server"
        },
        "cody.embeddingsEndpoint": {
          "type": "string",
          "default": "https://cody.sgdev.org",
          "example": "https://cody.sgdev.org",
          "description": "URL to the Cody embeddings API"
        },
        "cody.codebase": {
          "type": "string",
          "example": "github.com/sourcegraph/sourcegraph"
        },
        "cody.debug": {
          "type": "boolean"
        },
        "cody.useContext": {
          "type": "string",
          "enum": [
            "embeddings",
            "keyword",
            "none",
            "blended"
          ],
          "default": "embeddings"
        },
        "cody.experimental.suggest": {
          "type": "boolean",
          "default": false
        }
      }
    }
  },
  "dependencies": {
    "@sourcegraph/cody-common": "workspace:*"
  }
}
