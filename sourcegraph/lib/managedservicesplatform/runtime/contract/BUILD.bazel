load("//dev:go_defs.bzl", "go_test")
load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "contract",
    srcs = [
        "bigquery.go",
        "contract.go",
        "diagnostics.go",
        "env.go",
        "postgresql.go",
    ],
    importpath = "github.com/sourcegraph/sourcegraph/lib/managedservicesplatform/runtime/contract",
    visibility = ["//visibility:public"],
    deps = [
        "//lib/errors",
        "//lib/managedservicesplatform/bigquerywriter",
        "//lib/managedservicesplatform/cloudsql",
        "//lib/managedservicesplatform/runtime/internal/opentelemetry",
        "//lib/pointers",
        "@com_github_getsentry_sentry_go//:sentry-go",
        "@com_github_google_uuid//:uuid",
        "@com_github_jackc_pgx_v5//:pgx",
        "@com_github_jackc_pgx_v5//stdlib",
        "@com_github_prometheus_client_golang//prometheus/promhttp",
        "@com_github_sourcegraph_log//:log",
        "@com_google_cloud_go_bigquery//:bigquery",
        "@com_google_cloud_go_cloudsqlconn//:cloudsqlconn",
        "@io_opentelemetry_go_otel_trace//:trace",
    ],
)

go_test(
    name = "contract_test",
    srcs = [
        "contract_test.go",
        "diagnostics_test.go",
    ],
    embed = [":contract"],
    deps = [
        "//lib/errors",
        "//lib/pointers",
        "@com_github_hexops_autogold_v2//:autogold",
        "@com_github_sourcegraph_log//logtest",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//require",
        "@io_opentelemetry_go_otel_sdk//trace",
    ],
)
