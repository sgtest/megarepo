openapi: 3.0.0
info:
  title: LSIF API Server
  description: An internal Sourcegraph microservice that serves LSIF-powered code intelligence.
  version: 1.0.0
  contact:
    name: Eric Fritz
    email: eric@sourcegraph.com
    url: https://sourcegraph.com
servers:
  - url: http://localhost:3186
tags:
  - name: LSIF
    description: LSIF operations
  - name: Uploads
    description: Upload operations
  - name: Internal
    description: Internal operations
paths:
  /upload:
    post:
      description: Upload LSIF data for a particular commit and directory. Exactly one file must be uploaded, and it is assumed to be the gzipped output of an LSIF indexer.
      tags:
        - LSIF
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      parameters:
        - name: repositoryId
          in: query
          description: The repository identifier.
          required: true
          schema:
            type: number
        - name: commit
          in: query
          description: The 40-character commit hash.
          required: true
          schema:
            type: string
        - name: root
          in: query
          description: The path to the directory associated with the upload, relative to the repository root.
          example: cmd/project1
          required: false
          schema:
            type: string
        - name: indexerName
          in: query
          description: The name of the indexer that generated the payload. This is required only if there is no tool info supplied in the payload's metadata vertex.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Processed (synchronously)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnqueueResponse'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnqueueResponse'
  /exists:
    get:
      description: Determine if LSIF data exists for a file within a particular commit. This endpoint will return the LSIF upload for which definitions, references, and hover queries will use.
      tags:
        - LSIF
      parameters:
        - name: repositoryId
          in: query
          description: The repository identifier.
          required: true
          schema:
            type: number
        - name: commit
          in: query
          description: The 40-character commit hash.
          required: true
          schema:
            type: string
        - name: path
          in: query
          description: The file path within the repository (relative to the repository root).
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                - $ref: '#/components/schemas/Uploads'
    post:
      description: Determine if LSIF data exists for a file within a particular commit. This endpoint will return true if there is a nearby commit (direct ancestor or descendant) with LSIF data for the same file if the exact commit does not have available LSIF data.
      tags:
        - LSIF
      parameters:
        - name: repositoryId
          in: query
          description: The repository identifier.
          required: true
          schema:
            type: number
        - name: commit
          in: query
          description: The 40-character commit hash.
          required: true
          schema:
            type: string
        - name: file
          in: query
          description: The file path within the repository (relative to the repository root).
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
  /definitions:
    get:
      description: Get definitions for the symbol at a source position.
      tags:
        - LSIF
      parameters:
        - name: repositoryId
          in: query
          description: The repository identifier.
          required: true
          schema:
            type: number
        - name: commit
          in: query
          description: The 40-character commit hash.
          required: true
          schema:
            type: number
        - name: path
          in: query
          description: The file path within the repository (relative to the repository root).
          required: true
          schema:
            type: string
        - name: line
          in: query
          description: The line index (zero-indexed).
          required: true
          schema:
            type: number
        - name: character
          in: query
          description: The character index (zero-indexed).
          required: true
          schema:
            type: number
        - name: uploadId
          in: query
          description: The identifier of the upload to load. If not supplied, the upload nearest to the given commit will be loaded.
          required: true
          schema:
            type: number
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Locations'
        '404':
          description: Not found
  /references:
    get:
      description: Get references for the symbol at a source position.
      tags:
        - LSIF
      parameters:
        - name: repositoryId
          in: query
          description: The repository identifier.
          required: true
          schema:
            type: number
        - name: commit
          in: query
          description: The 40-character commit hash.
          required: true
          schema:
            type: number
        - name: path
          in: query
          description: The file path within the repository (relative to the repository root).
          required: true
          schema:
            type: string
        - name: line
          in: query
          description: The line index (zero-indexed).
          required: true
          schema:
            type: number
        - name: character
          in: query
          description: The character index (zero-indexed).
          required: true
          schema:
            type: number
        - name: uploadId
          in: query
          description: The identifier of the upload to load. If not supplied, the upload nearest to the given commit will be loaded.
          required: true
          schema:
            type: number
        - name: limit
          in: query
          description: The maximum number of locations to return in one page.
          required: false
          schema:
            type: number
            default: 10
        - name: cursor
          in: query
          description: The end cursor given in the response of a previous page.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Locations'
          headers:
            Link:
              description: If there are more results, this header includes the URL of the next page with relation type *next*. See [RFC 5988](https://tools.ietf.org/html/rfc5988).
              schema:
                type: string
        '404':
          description: Not found
  /hover:
    get:
      description: Get hover data for the symbol at a source position.
      tags:
        - LSIF
      parameters:
        - name: repositoryId
          in: query
          description: The repository identifier.
          required: true
          schema:
            type: number
        - name: commit
          in: query
          description: The 40-character commit hash.
          required: true
          schema:
            type: number
        - name: path
          in: query
          description: The file path within the repository (relative to the repository root).
          required: true
          schema:
            type: string
        - name: line
          in: query
          description: The line index (zero-indexed).
          required: true
          schema:
            type: number
        - name: character
          in: query
          description: The character index (zero-indexed).
          required: true
          schema:
            type: number
        - name: uploadId
          in: query
          description: The identifier of the upload to load. If not supplied, the upload nearest to the given commit will be loaded.
          required: true
          schema:
            type: number
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hover'
        '404':
          description: Not found
  /uploads/repositories/{repositoryId}:
    get:
      description: Get LSIF uploads for a repository.
      tags:
        - Uploads
      parameters:
        - name: repositoryId
          in: query
          description: The repository identifier.
          required: true
          schema:
            type: number
        - name: query
          in: query
          description: A search query applied over commit, root, failure reason, and failure stacktrace properties.
          required: false
          schema:
            type: string
        - name: state
          in: query
          description: The target upload state.
          required: true
          schema:
            type: string
            enum:
              - processing
              - errored
              - completed
              - queued
        - name: visibleAtTip
          in: query
          description: If true, only show uploads visible at tip.
          required: false
          schema:
            type: boolean
        - name: limit
          in: query
          description: The maximum number of uploads to return in one page.
          required: false
          schema:
            type: number
            default: 50
        - name: offset
          in: query
          description: The number of uploads seen on previous pages.
          required: false
          schema:
            type: number
            default: 0
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUploads'
          headers:
            Link:
              description: If there are more results, this header includes the URL of the next page with relation type *next*. See [RFC 5988](https://tools.ietf.org/html/rfc5988).
              schema:
                type: string
  /uploads/{id}:
    get:
      description: Get an LSIF upload by its identifier.
      tags:
        - Uploads
      parameters:
        - name: id
          in: path
          description: The upload identifier.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Upload'
        '404':
          description: Not Found
    delete:
      description: Delete an LSIF upload by its identifier.
      tags:
        - Uploads
      parameters:
        - name: id
          in: path
          description: The upload identifier.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: No Content
        '404':
          description: Not Found
  /states:
    get:
      description: Retrieve the state of a set of uploads by identifier.
      tags:
        - Internal
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                ids:
                  description: The upload identifier list.
                  type: array
                  items:
                    type: number
              additionalProperties: false
              required:
                - ids
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    const: 'map'
                  values:
                    description: A list of key/value pairs.
                    type: array
                    items:
                      description: A key/value pair.
                      type: array
                      items:
                        oneOf:
                          - type: number
                          - type: string
                additionalProperties: false
                required:
                  - type
                  - values
  /prune:
    post:
      description: Remove the oldest prunable dump.
      tags:
        - Internal
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    description: The identifier of the pruned dump.
                    type: number
                additionalProperties: false
                required:
                  - id
                nullable: true
components:
  schemas:
    Position:
      type: object
      description: A cursor position in a source file.
      properties:
        line:
          type: number
          description: The (zero-index) line index.
        character:
          type: number
          description: The (zero-index) character index.
      required:
        - line
        - character
      additionalProperties: false
    Range:
      type: object
      description: A half-open range of positions in a source file.
      properties:
        start:
          $ref: '#/components/schemas/Position'
        end:
          $ref: '#/components/schemas/Position'
      required:
        - start
        - end
      additionalProperties: false
    Location:
      type: object
      description: A position in a file of a code base.
      properties:
        repositoryId:
          type: number
          description: The identifier of the repository in which the location occurs.
        commit:
          type: string
          description: The commit in which the location occurs.
        path:
          type: string
          description: The root-relative path to the file.
        range:
          $ref: '#/components/schemas/Range'
      required:
        - repositoryId
        - commit
        - path
        - range
      additionalProperties: false
    Locations:
      type: array
      description: A list of definition or reference locations.
      items:
        $ref: '#/components/schemas/Location'
    Hover:
      type: object
      description: The text associated with a position in a source file.
      properties:
        text:
          type: string
          description: The raw hover text.
      required:
        - text
      additionalProperties: false
    EnqueueResponse:
      type: object
      description: A payload indicating the enqueued upload.
      properties:
        id:
          type: number
          description: The upload identifier.
      required:
        - id
      additionalProperties: false
    Uploads:
      type: object
      description: A wrapper for a list of uploads.
      properties:
        uploads:
          type: array
          description: A list of uploads.
          items:
            $ref: '#/components/schemas/Upload'
    PaginatedUploads:
      type: object
      description: A paginated wrapper for a list of uploads.
      properties:
        uploads:
          type: array
          description: A list of uploads with a particular state.
          items:
            $ref: '#/components/schemas/Upload'
        totalCount:
          type: number
          description: The total number of uploads in this set of results.
      required:
        - uploads
      additionalProperties: false
    Upload:
      type: object
      description: An LSIF upload.
      properties:
        id:
          type: number
          description: A unique identifier.
        repositoryId:
          type: number
          description: The repository identifier argument given on upload.
        commit:
          type: string
          description: The commit argument given on upload.
        root:
          type: string
          description: The root argument given on upload.
        indexer:
          type: string
          description: The name of the indexer given on upload.
        filename:
          type: string
          description: The filename where the upload was stored before conversion.
        state:
          type: string
          description: The upload's current state.
          enum:
            - processing
            - errored
            - completed
            - queued
        failureSummary:
          type: string
          description: A brief description of why the upload conversion failed.
        failureStacktrace:
          type: string
          description: The stacktrace of the upload error.
        uploadedAt:
          type: string
          description: An RFC3339-formatted time that the upload was uploaded.
        startedAt:
          type: string
          description: An RFC3339-formatted time that the conversion started.
          nullable: true
        finishedAt:
          type: string
          description: An RFC3339-formatted time that the conversion completed or errored.
          nullable: true
        visibleAtTip:
          type: boolean
          description: Whether or not this upload can provide global reference code intelligence.
        placeInQueue:
          type: number
          description: The rank of this upload in the queue. The value of this field is null if the upload has been processed.
          nullable: true
      required:
        - id
        - repositoryId
        - commit
        - root
        - filename
        - state
        - failureSummary
        - failureStacktrace
        - uploadedAt
        - startedAt
        - finishedAt
      additionalProperties: false
