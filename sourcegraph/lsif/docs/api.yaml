openapi: 3.0.0
info:
  title: LSIF Server
  description: An internal Sourcegraph microservice that serves LSIF-powered code intelligence.
  version: 1.0.0
  contact:
    name: Eric Fritz
    email: eric@sourcegraph.com
    url: https://sourcegraph.com
servers:
  - url: http://localhost:3186
tags:
  - name: LSIF
    description: LSIF operations
  - name: Dumps
    description: Dump operations
  - name: Uploads
    description: Upload operations
paths:
  /upload:
    post:
      description: Upload LSIF data for a particular commit and directory. Exactly one file must be uploaded, and it is assumed to be the gzipped output of an LSIF indexer.
      tags:
        - LSIF
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      parameters:
        - name: repository
          in: query
          description: The repository name.
          required: true
          schema:
            type: string
        - name: commit
          in: query
          description: The 40-character commit hash.
          required: true
          schema:
            type: string
        - name: root
          in: query
          description: The path to the directory associated with the dump, relative to the repository root.
          example: cmd/project1
          required: false
          schema:
            type: string
        - name: blocking
          in: query
          description: If true, block the request until the upload is processed.
          required: false
          schema:
            type: boolean
        - name: maxWait
          in: query
          description: The maximum time (in seconds) that request will block. The conversion will continue asynchronously if this much time has elapsed.
          required: false
          schema:
            type: number
      responses:
        '200':
          description: Processed (synchronously)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnqueueResponse'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnqueueResponse'
  /exists:
    get:
      description: Determine if LSIF data exists for a file within a particular commit. This endpoint will return the LSIF dump for which definitions, references, and hover queries will use.
      tags:
        - LSIF
      parameters:
        - name: repository
          in: query
          description: The repository name.
          required: true
          schema:
            type: string
        - name: commit
          in: query
          description: The 40-character commit hash.
          required: true
          schema:
            type: string
        - name: path
          in: query
          description: The file path within the repository (relative to the repository root).
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Dump'
                  - type: null
    post:
      description: Determine if LSIF data exists for a file within a particular commit. This endpoint will return true if there is a nearby commit (direct ancestor or descendant) with LSIF data for the same file if the exact commit does not have available LSIF data.
      tags:
        - LSIF
      parameters:
        - name: repository
          in: query
          description: The repository name.
          required: true
          schema:
            type: string
        - name: commit
          in: query
          description: The 40-character commit hash.
          required: true
          schema:
            type: string
        - name: file
          in: query
          description: The file path within the repository (relative to the repository root).
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean

  /definitions:
    get:
      description: Get definitions for the symbol at a source position.
      tags:
        - LSIF
      parameters:
        - name: repository
          in: query
          description: The url-encoded repository name.
          required: true
          example: github.com%2Fsourcegraph%2Flsif-go
          schema:
            type: string
        - name: commit
          in: query
          description: The 40-character commit hash.
          required: true
          schema:
            type: number
        - name: path
          in: query
          description: The file path within the repository (relative to the repository root).
          required: true
          schema:
            type: string
        - name: line
          in: query
          description: The line index (zero-indexed).
          required: true
          schema:
            type: number
        - name: character
          in: query
          description: The character index (zero-indexed).
          required: true
          schema:
            type: number
        - name: dumpId
          in: query
          description: The identifier of the dump to load. If not supplied, the dump nearest to the given commit will be loaded.
          required: false
          schema:
            type: number
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Locations2'
        '404':
          description: Not found
  /references:
    get:
      description: Get references for the symbol at a source position.
      tags:
        - LSIF
      parameters:
        - name: repository
          in: query
          description: The url-encoded repository name.
          required: true
          example: github.com%2Fsourcegraph%2Flsif-go
          schema:
            type: string
        - name: commit
          in: query
          description: The 40-character commit hash.
          required: true
          schema:
            type: number
        - name: path
          in: query
          description: The file path within the repository (relative to the repository root).
          required: true
          schema:
            type: string
        - name: line
          in: query
          description: The line index (zero-indexed).
          required: true
          schema:
            type: number
        - name: character
          in: query
          description: The character index (zero-indexed).
          required: true
          schema:
            type: number
        - name: dumpId
          in: query
          description: The identifier of the dump to load. If not supplied, the dump nearest to the given commit will be loaded.
          required: false
          schema:
            type: number
        - name: limit
          in: query
          description: The maximum number of remote dumps to search for remote references per page. This parameter is only read on references request.
          required: false
          schema:
            type: number
            default: 10
        - name: cursor
          in: query
          description: The end cursor given in the response of a previous page.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Locations2'
          headers:
            Link:
              description: If there are more results, this header includes the URL of the next page with relation type *next*. See [RFC 5988](https://tools.ietf.org/html/rfc5988).
              schema:
                type: string
        '404':
          description: Not found
  /hover:
    get:
      description: Get hover data for the symbol at a source position.
      tags:
        - LSIF
      parameters:
        - name: repository
          in: query
          description: The url-encoded repository name.
          required: true
          example: github.com%2Fsourcegraph%2Flsif-go
          schema:
            type: string
        - name: commit
          in: query
          description: The 40-character commit hash.
          required: true
          schema:
            type: number
        - name: path
          in: query
          description: The file path within the repository (relative to the repository root).
          required: true
          schema:
            type: string
        - name: line
          in: query
          description: The line index (zero-indexed).
          required: true
          schema:
            type: number
        - name: character
          in: query
          description: The character index (zero-indexed).
          required: true
          schema:
            type: number
        - name: dumpId
          in: query
          description: The identifier of the dump to load. If not supplied, the dump nearest to the given commit will be loaded.
          required: false
          schema:
            type: number
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hover2'
        '404':
          description: Not found
  /request:
    post:
      description: Answer a definitions, references, or hover LSP request. This endpoint will use a nearby commit (direct ancestor or descendant) with LSIF data for the same file if the exact commit does not have available LSIF data.
      tags:
        - LSIF
      parameters:
        - name: repository
          in: query
          description: The repository name.
          required: true
          schema:
            type: string
        - name: commit
          in: query
          description: The 40-character commit hash.
          required: true
          schema:
            type: string
        - name: limit
          in: query
          description: The maximum number of remote dumps to search for remote references per page. This parameter is only read on references request.
          required: false
          schema:
            type: number
            default: 10
        - name: cursor
          in: query
          description: The end cursor given in the response of a previous page.
          required: false
          schema:
            type: string
      requestBody:
        description: The LSP request, including the type of data being requested and the source location.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LSPRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/Locations'
                  - $ref: '#/components/schemas/Hover'
  /dumps/{repository}:
    get:
      description: Get the LSIF dumps uploaded for a repository ordered by their upload time (newest first).
      tags:
        - Dumps
      parameters:
        - name: repository
          in: path
          description: The url-encoded repository name.
          required: true
          example: github.com%2Fsourcegraph%2Flsif-go
          schema:
            type: string
        - name: query
          in: query
          description: A search query applied over the commit and root properties.
          required: false
          schema:
            type: string
        - name: visibleAtTip
          in: query
          description: If true, only show dumps visible at tip.
          required: false
          schema:
            type: boolean
        - name: limit
          in: query
          description: The maximum number of dumps to return in one page.
          required: false
          schema:
            type: number
            default: 50
        - name: offset
          in: query
          description: The number of dumps seen on previous pages.
          required: false
          schema:
            type: number
            default: 0
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dumps'
          headers:
            Link:
              description: If there are more results, this header includes the URL of the next page with relation type *next*. See [RFC 5988](https://tools.ietf.org/html/rfc5988).
              schema:
                type: string
  /dumps/{repository}/{id}:
    get:
      description: Get an LSIF dump by its identifier.
      tags:
        - Dumps
      parameters:
        - name: repository
          in: path
          description: The url-encoded repository name.
          required: true
          example: github.com%2Fsourcegraph%2Flsif-go
          schema:
            type: string
        - name: id
          in: path
          description: The dump identifier.
          required: true
          schema:
            type: number
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dump'
        '404':
          description: Not found
    delete:
      description: Delete an LSIF dump by its identifier.
      tags:
        - Dumps
      parameters:
        - name: repository
          in: path
          description: The url-encoded repository name.
          required: true
          example: github.com%2Fsourcegraph%2Flsif-go
          schema:
            type: string
        - name: id
          in: path
          description: The dump identifier.
          required: true
          schema:
            type: number
      responses:
        '204':
          description: No content
        '404':
          description: Not found
  /uploads/stats:
    get:
      description: Get the current counts of uploads by their state.
      tags:
        - Uploads
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadStats'
  /uploads/{state}:
    get:
      description: Get LSIF uploads by state.
      tags:
        - Uploads
      parameters:
        - name: state
          in: path
          description: The target upload state.
          required: true
          schema:
            type: string
            enum:
              - processing
              - errored
              - completed
              - queued
        - name: query
          in: query
          description: A search query applied over repository, commit, root, failure reason, and failure stacktrace properties.
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: The maximum number of uploads to return in one page.
          required: false
          schema:
            type: number
            default: 50
        - name: offset
          in: query
          description: The number of uploads seen on previous pages.
          required: false
          schema:
            type: number
            default: 0
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Uploads'
          headers:
            Link:
              description: If there are more results, this header includes the URL of the next page with relation type *next*. See [RFC 5988](https://tools.ietf.org/html/rfc5988).
              schema:
                type: string
  /uploads/{id}:
    get:
      description: Get an LSIF upload by its identifier.
      tags:
        - Uploads
      parameters:
        - name: id
          in: path
          description: The upload identifier.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Upload'
        '404':
          description: Not Found
    delete:
      description: Delete an LSIF upload by its identifier.
      tags:
        - Uploads
      parameters:
        - name: id
          in: path
          description: The upload identifier.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: No Content
        '404':
          description: Not Found
  /uploads/stats:
    get:
      description: Get the current counts of uploads by their state.
      tags:
        - Uploads
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadStats'
  /uploads/{state}:
    get:
      description: Get LSIF uploads by state.
      tags:
        - Uploads
      parameters:
        - name: state
          in: path
          description: The target upload state.
          required: true
          schema:
            type: string
            enum:
              - processing
              - errored
              - completed
              - queued
        - name: query
          in: query
          description: A search query applied over repository, commit, root, failure reason, and failure stacktrace properties.
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: The maximum number of uploads to return in one page.
          required: false
          schema:
            type: number
            default: 50
        - name: offset
          in: query
          description: The number of uploads seen on previous pages.
          required: false
          schema:
            type: number
            default: 0
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Uploads'
          headers:
            Link:
              description: If there are more results, this header includes the URL of the next page with relation type *next*. See [RFC 5988](https://tools.ietf.org/html/rfc5988).
              schema:
                type: string
  /uploads/{id}:
    get:
      description: Get an LSIF upload by its identifier.
      tags:
        - Uploads
      parameters:
        - name: id
          in: path
          description: The upload identifier.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Upload'
        '404':
          description: Not Found
    delete:
      description: Delete an LSIF upload by its identifier.
      tags:
        - Uploads
      parameters:
        - name: id
          in: path
          description: The upload identifier.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: No Content
        '404':
          description: Not Found
components:
  schemas:
    Position:
      type: object
      description: A cursor position in a source file.
      properties:
        line:
          type: number
          description: The (zero-index) line index.
        character:
          type: number
          description: The (zero-index) character index.
      required:
        - line
        - character
      additionalProperties: false
    Range:
      type: object
      description: A closed range of positions in a source file.
      properties:
        start:
          $ref: '#/components/schemas/Position'
        end:
          $ref: '#/components/schemas/Position'
      required:
        - start
        - end
      additionalProperties: false
    Location:
      type: object
      description: A position in a file of a code base.
      properties:
        uri:
          type: string
          description: The root-relative path to the file.
        range:
          $ref: '#/components/schemas/Range'
      required:
        - uri
        - range
      additionalProperties: false
    Location2:
      type: object
      description: A position in a file of a code base.
      properties:
        repository:
          type: string
          description: The repository in which the location occurs.
        commit:
          type: string
          description: The commit in which the location occurs.
        path:
          type: string
          description: The root-relative path to the file.
        range:
          $ref: '#/components/schemas/Range'
      required:
        - repository
        - commit
        - path
        - range
      additionalProperties: false
    LSPRequest:
      type: object
      description: A payload indicating the type of requested LSP data.
      properties:
        method:
          type: string
          description: The request type.
          enum:
            - definitions
            - references
            - hover
        path:
          type: string
          description: The root-relative path to the file containing the hover position.
        position:
          $ref: '#/components/schemas/Position'
      required:
        - path
        - position
      additionalProperties: false
    Locations:
      type: array
      description: A list of definition or reference locations.
      items:
        $ref: '#/components/schemas/Location'
    Locations2:
      type: array
      description: A list of definition or reference locations.
      items:
        $ref: '#/components/schemas/Location2'
    Hover2:
      type: object
      description: The text associated with a position in a source file.
      properties:
        text:
          type: string
          description: The raw hover text.
      required:
        - text
      additionalProperties: false
    Hover:
      type: object
      description: The text associated with a position in a source file.
      properties:
        contents:
          type: object
          description: The hover text wrapper.
          properties:
            kind:
              type: string
              description: An indicator for the format of the value property. Currently only markdown is supported.
              enum:
                - markdown
            value:
              type: string
              description: The raw markdown text.
          required:
            - kind
            - value
          additionalProperties: false
        range:
          $ref: '#/components/schemas/Range'
      required:
        - contents
      additionalProperties: false
    Dumps:
      type: object
      description: A paginated wrapper for a list of dumps.
      properties:
        dumps:
          type: array
          description: A list of LSIF dumps for a repository.
          items:
            $ref: '#/components/schemas/Dump'
        totalCount:
          type: number
          description: The total number of dumps in this set of results.
      required:
        - dumps
        - totalCount
      additionalProperties: false
    Dump:
      type: object
      description: An LSIF dump.
      properties:
        id:
          type: number
          description: A unique identifier.
        repository:
          type: string
          description: The repository name.
        commit:
          type: string
          description: The 40-character commit hash.
        root:
          type: string
          description: The root-relative path of the dump.
        visibleAtTip:
          type: boolean
          description: Whether or not this dump can provide global reference code intelligence.
        uploadedAt:
          type: string
          description: An ISO 8601-formatted date and time that the dump was uploaded.
        processedAt:
          type: string
          description: An ISO 8601-formatted date and time that the dump became available for use.
      required:
        - id
        - repository
        - commit
        - root
        - visibleAtTip
        - uploadedAt
      additionalProperties: false
    EnqueueResponse:
      type: object
      description: A payload indicating the enqueued upload.
      properties:
        id:
          type: string
          description: The upload identifier.
      required:
        - id
      additionalProperties: false
    UploadStats:
      type: object
      description: An object containing the counts of uploads by state.
      properties:
        processingCount:
          type: number
          description: The number of uploads being processed.
        erroredCount:
          type: number
          description: The number of errored uploads.
        completedCount:
          type: number
          description: The number of completed uploads.
        queuedCount:
          type: number
          description: The number of queued uploads.
      required:
        - processingCount
        - erroredCount
        - completedCount
        - queuedCount
      additionalProperties: false
    Uploads:
      type: object
      description: A paginated wrapper for a list of uploads.
      properties:
        uploads:
          type: array
          description: A list of uploads with a particular state.
          items:
            $ref: '#/components/schemas/Upload'
        totalCount:
          type: number
          description: The total number of uploads in this set of results.
      required:
        - uploads
      additionalProperties: false
    Upload:
      type: object
      description: An LSIF upload.
      properties:
        id:
          type: string
          description: A unique identifier.
        repository:
          type: string
          description: The repository argument given on upload.
        commit:
          type: string
          description: The commit argument given on upload.
        root:
          type: string
          description: The root argument given on upload.
        filename:
          type: string
          description: The filename where the upload was stored before conversion.
        state:
          type: string
          description: The upload's current state.
          enum:
            - processing
            - errored
            - completed
            - queued
        failureSummary:
          type: string
          description: A brief description of why the upload conversion failed.
        failureStacktrace:
          type: string
          description: The stacktrace of the upload error.
        uploadedAt:
          type: string
          description: An ISO 8601-formatted time that the dump was uploaded.
        startedAt:
          type: string
          description: An ISO 8601-formatted time that the conversion started.
          nullable: true
        finishedAt:
          type: string
          description: An ISO 8601-formatted time that the conversion completed or errored.
          nullable: true
      required:
        - id
        - repository
        - commit
        - root
        - filename
        - state
        - failureSummary
        - failureStacktrace
        - uploadedAt
        - startedAt
        - finishedAt
      additionalProperties: false
