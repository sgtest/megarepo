{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "DeclarationRange": {
      "additionalProperties": false,
      "description": "A range representing a declaration.",
      "properties": {
        "end": {
          "$ref": "#/definitions/Position",
          "description": "The range's end position.",
          "title": "end"
        },
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "label": {
          "enum": ["range"],
          "title": "label",
          "type": "string"
        },
        "start": {
          "$ref": "#/definitions/Position",
          "description": "The range's start position",
          "title": "start"
        },
        "tag": {
          "$ref": "#/definitions/DeclarationTag",
          "description": "The declaration meta data.",
          "title": "tag"
        },
        "type": {
          "enum": ["vertex"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["end", "id", "label", "start", "tag", "type"],
      "type": "object"
    },
    "DeclarationResult": {
      "additionalProperties": false,
      "properties": {
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "label": {
          "description": "The label property.",
          "enum": ["declarationResult"],
          "title": "label",
          "type": "string"
        },
        "type": {
          "enum": ["vertex"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "label", "type"],
      "title": "DeclarationResult",
      "type": "object"
    },
    "DeclarationTag": {
      "additionalProperties": false,
      "description": "The range represents a declaration.",
      "properties": {
        "deprecated": {
          "description": "Indicates if this symbol is deprecated.",
          "title": "deprecated",
          "type": "boolean"
        },
        "detail": {
          "description": "Optional detail information for the declaration.",
          "title": "detail",
          "type": "string"
        },
        "fullRange": {
          "$ref": "#/definitions/Range",
          "description": "The full range of the declaration not including leading/trailing whitespace but everything else, e.g comments and code.\nThe range must be included in fullRange.",
          "title": "fullRange"
        },
        "kind": {
          "description": "The symbol kind.",
          "enum": [1, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 2, 20, 21, 22, 23, 24, 25, 26, 3, 4, 5, 6, 7, 8, 9],
          "title": "kind",
          "type": "number"
        },
        "text": {
          "description": "The text covered by the range.",
          "title": "text",
          "type": "string"
        },
        "type": {
          "description": "A type identifier for the declaration tag.",
          "enum": ["declaration"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["fullRange", "kind", "text", "type"],
      "title": "DeclarationTag",
      "type": "object"
    },
    "DefinitionRange": {
      "additionalProperties": false,
      "description": "A range representing a definition.",
      "properties": {
        "end": {
          "$ref": "#/definitions/Position",
          "description": "The range's end position.",
          "title": "end"
        },
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "label": {
          "enum": ["range"],
          "title": "label",
          "type": "string"
        },
        "start": {
          "$ref": "#/definitions/Position",
          "description": "The range's start position",
          "title": "start"
        },
        "tag": {
          "$ref": "#/definitions/DefinitionTag",
          "description": "The definition meta data.",
          "title": "tag"
        },
        "type": {
          "enum": ["vertex"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["end", "id", "label", "start", "tag", "type"],
      "type": "object"
    },
    "DefinitionResult": {
      "additionalProperties": false,
      "description": "A vertex representing a definition result.",
      "properties": {
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "label": {
          "description": "The label property.",
          "enum": ["definitionResult"],
          "title": "label",
          "type": "string"
        },
        "type": {
          "enum": ["vertex"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "label", "type"],
      "title": "DefinitionResult",
      "type": "object"
    },
    "DefinitionTag": {
      "additionalProperties": false,
      "description": "The range represents a definition",
      "properties": {
        "deprecated": {
          "description": "Indicates if this symbol is deprecated.",
          "title": "deprecated",
          "type": "boolean"
        },
        "detail": {
          "description": "Optional detail information for the definition.",
          "title": "detail",
          "type": "string"
        },
        "fullRange": {
          "$ref": "#/definitions/Range",
          "description": "The full range of the definition not including leading/trailing whitespace but everything else, e.g comments and code.\nThe range must be included in fullRange.",
          "title": "fullRange"
        },
        "kind": {
          "description": "The symbol kind.",
          "enum": [1, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 2, 20, 21, 22, 23, 24, 25, 26, 3, 4, 5, 6, 7, 8, 9],
          "title": "kind",
          "type": "number"
        },
        "text": {
          "description": "The text covered by the range",
          "title": "text",
          "type": "string"
        },
        "type": {
          "description": "A type identifier for the declaration tag.",
          "enum": ["definition"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["fullRange", "kind", "text", "type"],
      "title": "DefinitionTag",
      "type": "object"
    },
    "Diagnostic": {
      "additionalProperties": false,
      "description": "Represents a diagnostic, such as a compiler error or warning. Diagnostic objects\nare only valid in the scope of a resource.\nThe Diagnostic namespace provides helper functions to work with\n[Diagnostic](#Diagnostic) literals.",
      "properties": {
        "code": {
          "description": "The diagnostic's code, which usually appear in the user interface.",
          "title": "code",
          "type": ["string", "number"]
        },
        "message": {
          "description": "The diagnostic's message. It usually appears in the user interface",
          "title": "message",
          "type": "string"
        },
        "range": {
          "$ref": "#/definitions/Range",
          "description": "The range at which the message applies",
          "title": "range"
        },
        "relatedInformation": {
          "description": "An array of related diagnostic information, e.g. when symbol-names within\na scope collide all definitions can be marked via this property.",
          "items": {
            "$ref": "#/definitions/DiagnosticRelatedInformation"
          },
          "title": "relatedInformation",
          "type": "array"
        },
        "severity": {
          "description": "The diagnostic's severity. Can be omitted. If omitted it is up to the\nclient to interpret diagnostics as error, warning, info or hint.",
          "enum": [1, 2, 3, 4],
          "title": "severity",
          "type": "number"
        },
        "source": {
          "description": "A human-readable string describing the source of this\ndiagnostic, e.g. 'typescript' or 'super lint'. It usually\nappears in the user interface.",
          "title": "source",
          "type": "string"
        }
      },
      "required": ["message", "range"],
      "title": "Diagnostic",
      "type": "object"
    },
    "DiagnosticRelatedInformation": {
      "additionalProperties": false,
      "description": "Represents a related message and source code location for a diagnostic. This should be\nused to point to code locations that cause or related to a diagnostics, e.g when duplicating\na symbol in a scope.\nThe DiagnosticRelatedInformation namespace provides helper functions to work with\n[DiagnosticRelatedInformation](#DiagnosticRelatedInformation) literals.",
      "properties": {
        "location": {
          "$ref": "#/definitions/Location",
          "description": "The location of this related diagnostic information.",
          "title": "location"
        },
        "message": {
          "description": "The message of this related diagnostic information.",
          "title": "message",
          "type": "string"
        }
      },
      "required": ["location", "message"],
      "title": "DiagnosticRelatedInformation",
      "type": "object"
    },
    "DiagnosticResult": {
      "additionalProperties": false,
      "description": "A vertex representing a diagnostic result.",
      "properties": {
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "label": {
          "description": "The label property.",
          "enum": ["diagnosticResult"],
          "title": "label",
          "type": "string"
        },
        "result": {
          "description": "The diagnostics.",
          "items": {
            "$ref": "#/definitions/Diagnostic"
          },
          "title": "result",
          "type": "array"
        },
        "type": {
          "enum": ["vertex"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "label", "result", "type"],
      "title": "DiagnosticResult",
      "type": "object"
    },
    "Document": {
      "additionalProperties": false,
      "description": "A vertex representing a document in the project",
      "properties": {
        "contents": {
          "description": "Optional the content of the document, `based64` encoded",
          "title": "contents",
          "type": "string"
        },
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "label": {
          "description": "The label property.",
          "enum": ["document"],
          "title": "label",
          "type": "string"
        },
        "languageId": {
          "description": "The document's language Id as defined in the LSP\n(https://microsoft.github.io/language-server-protocol/specification)",
          "title": "languageId",
          "type": "string"
        },
        "type": {
          "enum": ["vertex"],
          "title": "type",
          "type": "string"
        },
        "uri": {
          "description": "The Uri of the document.",
          "title": "uri",
          "type": "string"
        }
      },
      "required": ["id", "label", "languageId", "type", "uri"],
      "title": "Document",
      "type": "object"
    },
    "DocumentEvent": {
      "additionalProperties": false,
      "properties": {
        "data": {
          "description": "The id of the document vertex.",
          "title": "data",
          "type": ["string", "number"]
        },
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "kind": {
          "$ref": "#/definitions/EventKind",
          "description": "The event kind.",
          "title": "kind"
        },
        "label": {
          "enum": ["$event"],
          "title": "label",
          "type": "string"
        },
        "scope": {
          "description": "The event scope.",
          "enum": ["document"],
          "title": "scope",
          "type": "string"
        },
        "type": {
          "enum": ["vertex"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["data", "id", "kind", "label", "scope", "type"],
      "title": "DocumentEvent",
      "type": "object"
    },
    "DocumentId": {
      "type": ["string", "number"]
    },
    "DocumentLink": {
      "additionalProperties": false,
      "description": "A document link is a range in a text document that links to an internal or external resource, like another\ntext document or a web site.\nThe DocumentLink namespace provides helper functions to work with\n[DocumentLink](#DocumentLink) literals.",
      "properties": {
        "data": {
          "description": "A data entry field that is preserved on a document link between a\nDocumentLinkRequest and a DocumentLinkResolveRequest.",
          "title": "data"
        },
        "range": {
          "$ref": "#/definitions/Range",
          "description": "The range this link applies to.",
          "title": "range"
        },
        "target": {
          "description": "The uri this link points to.",
          "title": "target",
          "type": "string"
        }
      },
      "required": ["range"],
      "title": "DocumentLink",
      "type": "object"
    },
    "DocumentLinkResult": {
      "additionalProperties": false,
      "description": "A vertex representing a document link result.",
      "properties": {
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "label": {
          "description": "The label property.",
          "enum": ["documentLinkResult"],
          "title": "label",
          "type": "string"
        },
        "result": {
          "description": "The actual document links.",
          "items": {
            "$ref": "#/definitions/DocumentLink"
          },
          "title": "result",
          "type": "array"
        },
        "type": {
          "enum": ["vertex"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "label", "result", "type"],
      "title": "DocumentLinkResult",
      "type": "object"
    },
    "DocumentSymbol": {
      "additionalProperties": false,
      "description": "Represents programming constructs like variables, classes, interfaces etc.\nthat appear in a document. Document symbols can be hierarchical and they\nhave two ranges: one that encloses its definition and one that points to\nits most interesting range, e.g. the range of an identifier.",
      "properties": {
        "children": {
          "description": "Children of this symbol, e.g. properties of a class.",
          "items": {
            "$ref": "#/definitions/DocumentSymbol"
          },
          "title": "children",
          "type": "array"
        },
        "deprecated": {
          "description": "Indicates if this symbol is deprecated.",
          "title": "deprecated",
          "type": "boolean"
        },
        "detail": {
          "description": "More detail for this symbol, e.g the signature of a function.",
          "title": "detail",
          "type": "string"
        },
        "kind": {
          "description": "The kind of this symbol.",
          "enum": [1, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 2, 20, 21, 22, 23, 24, 25, 26, 3, 4, 5, 6, 7, 8, 9],
          "title": "kind",
          "type": "number"
        },
        "name": {
          "description": "The name of this symbol.",
          "title": "name",
          "type": "string"
        },
        "range": {
          "$ref": "#/definitions/Range",
          "description": "The range enclosing this symbol not including leading/trailing whitespace but everything else\nlike comments. This information is typically used to determine if the the clients cursor is\ninside the symbol to reveal in the symbol in the UI.",
          "title": "range"
        },
        "selectionRange": {
          "$ref": "#/definitions/Range",
          "description": "The range that should be selected and revealed when this symbol is being picked, e.g the name of a function.\nMust be contained by the the `range`.",
          "title": "selectionRange"
        }
      },
      "required": ["kind", "name", "range", "selectionRange"],
      "title": "DocumentSymbol",
      "type": "object"
    },
    "DocumentSymbolResult": {
      "additionalProperties": false,
      "description": "A vertex representing the document symbol result.",
      "properties": {
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "label": {
          "enum": ["documentSymbolResult"],
          "title": "label",
          "type": "string"
        },
        "result": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/definitions/RangeBasedDocumentSymbol"
              },
              "type": "array"
            },
            {
              "items": {
                "$ref": "#/definitions/DocumentSymbol"
              },
              "type": "array"
            }
          ],
          "title": "result"
        },
        "type": {
          "enum": ["vertex"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "label", "result", "type"],
      "title": "DocumentSymbolResult",
      "type": "object"
    },
    "E": {
      "anyOf": [
        {
          "$ref": "#/definitions/E11<S,T,K>"
        },
        {
          "$ref": "#/definitions/E1N<S,T,K>"
        }
      ]
    },
    "E11": {
      "additionalProperties": false,
      "description": "A common base type of all edge types. The type parameters `S` and `T` are for typing and\ndocumentation purpose only. An edge never holds a direct reference to a vertex. They are\nreferenced by `Id`.",
      "properties": {
        "_": {
          "additionalItems": {
            "anyOf": [
              {
                "$ref": "#/definitions/S"
              },
              {
                "$ref": "#/definitions/T"
              }
            ]
          },
          "items": [
            {
              "$ref": "#/definitions/S"
            },
            {
              "$ref": "#/definitions/T"
            }
          ],
          "minItems": 2,
          "title": "_",
          "type": "array"
        },
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "inV": {
          "description": "The id of the to Vertex.",
          "title": "inV",
          "type": ["string", "number"]
        },
        "label": {
          "items": {
            "type": "string"
          },
          "title": "label",
          "type": "array"
        },
        "outV": {
          "description": "The id of the from Vertex.",
          "title": "outV",
          "type": ["string", "number"]
        },
        "type": {
          "enum": ["edge"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "inV", "label", "outV", "type"],
      "type": "object"
    },
    "E11<DeclarationResult,Moniker,EdgeLabels.moniker>": {
      "additionalProperties": false,
      "description": "A common base type of all edge types. The type parameters `S` and `T` are for typing and\ndocumentation purpose only. An edge never holds a direct reference to a vertex. They are\nreferenced by `Id`.",
      "properties": {
        "_": {
          "additionalItems": {
            "anyOf": [
              {
                "$ref": "#/definitions/DeclarationResult"
              },
              {
                "$ref": "#/definitions/Moniker"
              }
            ]
          },
          "items": [
            {
              "$ref": "#/definitions/DeclarationResult"
            },
            {
              "$ref": "#/definitions/Moniker"
            }
          ],
          "minItems": 2,
          "title": "_",
          "type": "array"
        },
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "inV": {
          "description": "The id of the to Vertex.",
          "title": "inV",
          "type": ["string", "number"]
        },
        "label": {
          "enum": ["moniker"],
          "title": "label",
          "type": "string"
        },
        "outV": {
          "description": "The id of the from Vertex.",
          "title": "outV",
          "type": ["string", "number"]
        },
        "type": {
          "enum": ["edge"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "inV", "label", "outV", "type"],
      "title": "E11<DeclarationResult,Moniker,EdgeLabels.moniker>",
      "type": "object"
    },
    "E11<DefinitionResult,Moniker,EdgeLabels.moniker>": {
      "additionalProperties": false,
      "description": "A common base type of all edge types. The type parameters `S` and `T` are for typing and\ndocumentation purpose only. An edge never holds a direct reference to a vertex. They are\nreferenced by `Id`.",
      "properties": {
        "_": {
          "additionalItems": {
            "anyOf": [
              {
                "$ref": "#/definitions/DefinitionResult"
              },
              {
                "$ref": "#/definitions/Moniker"
              }
            ]
          },
          "items": [
            {
              "$ref": "#/definitions/DefinitionResult"
            },
            {
              "$ref": "#/definitions/Moniker"
            }
          ],
          "minItems": 2,
          "title": "_",
          "type": "array"
        },
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "inV": {
          "description": "The id of the to Vertex.",
          "title": "inV",
          "type": ["string", "number"]
        },
        "label": {
          "enum": ["moniker"],
          "title": "label",
          "type": "string"
        },
        "outV": {
          "description": "The id of the from Vertex.",
          "title": "outV",
          "type": ["string", "number"]
        },
        "type": {
          "enum": ["edge"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "inV", "label", "outV", "type"],
      "title": "E11<DefinitionResult,Moniker,EdgeLabels.moniker>",
      "type": "object"
    },
    "E11<Document,DiagnosticResult,EdgeLabels.textDocument_diagnostic>": {
      "additionalProperties": false,
      "description": "A common base type of all edge types. The type parameters `S` and `T` are for typing and\ndocumentation purpose only. An edge never holds a direct reference to a vertex. They are\nreferenced by `Id`.",
      "properties": {
        "_": {
          "additionalItems": {
            "anyOf": [
              {
                "$ref": "#/definitions/Document"
              },
              {
                "$ref": "#/definitions/DiagnosticResult"
              }
            ]
          },
          "items": [
            {
              "$ref": "#/definitions/Document"
            },
            {
              "$ref": "#/definitions/DiagnosticResult"
            }
          ],
          "minItems": 2,
          "title": "_",
          "type": "array"
        },
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "inV": {
          "description": "The id of the to Vertex.",
          "title": "inV",
          "type": ["string", "number"]
        },
        "label": {
          "enum": ["textDocument/diagnostic"],
          "title": "label",
          "type": "string"
        },
        "outV": {
          "description": "The id of the from Vertex.",
          "title": "outV",
          "type": ["string", "number"]
        },
        "type": {
          "enum": ["edge"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "inV", "label", "outV", "type"],
      "title": "E11<Document,DiagnosticResult,EdgeLabels.textDocument_diagnostic>",
      "type": "object"
    },
    "E11<Document,DocumentLinkResult,EdgeLabels.textDocument_documentLink>": {
      "additionalProperties": false,
      "description": "A common base type of all edge types. The type parameters `S` and `T` are for typing and\ndocumentation purpose only. An edge never holds a direct reference to a vertex. They are\nreferenced by `Id`.",
      "properties": {
        "_": {
          "additionalItems": {
            "anyOf": [
              {
                "$ref": "#/definitions/Document"
              },
              {
                "$ref": "#/definitions/DocumentLinkResult"
              }
            ]
          },
          "items": [
            {
              "$ref": "#/definitions/Document"
            },
            {
              "$ref": "#/definitions/DocumentLinkResult"
            }
          ],
          "minItems": 2,
          "title": "_",
          "type": "array"
        },
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "inV": {
          "description": "The id of the to Vertex.",
          "title": "inV",
          "type": ["string", "number"]
        },
        "label": {
          "enum": ["textDocument/documentLink"],
          "title": "label",
          "type": "string"
        },
        "outV": {
          "description": "The id of the from Vertex.",
          "title": "outV",
          "type": ["string", "number"]
        },
        "type": {
          "enum": ["edge"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "inV", "label", "outV", "type"],
      "title": "E11<Document,DocumentLinkResult,EdgeLabels.textDocument_documentLink>",
      "type": "object"
    },
    "E11<Document,DocumentSymbolResult,EdgeLabels.textDocument_documentSymbol>": {
      "additionalProperties": false,
      "description": "A common base type of all edge types. The type parameters `S` and `T` are for typing and\ndocumentation purpose only. An edge never holds a direct reference to a vertex. They are\nreferenced by `Id`.",
      "properties": {
        "_": {
          "additionalItems": {
            "anyOf": [
              {
                "$ref": "#/definitions/Document"
              },
              {
                "$ref": "#/definitions/DocumentSymbolResult"
              }
            ]
          },
          "items": [
            {
              "$ref": "#/definitions/Document"
            },
            {
              "$ref": "#/definitions/DocumentSymbolResult"
            }
          ],
          "minItems": 2,
          "title": "_",
          "type": "array"
        },
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "inV": {
          "description": "The id of the to Vertex.",
          "title": "inV",
          "type": ["string", "number"]
        },
        "label": {
          "enum": ["textDocument/documentSymbol"],
          "title": "label",
          "type": "string"
        },
        "outV": {
          "description": "The id of the from Vertex.",
          "title": "outV",
          "type": ["string", "number"]
        },
        "type": {
          "enum": ["edge"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "inV", "label", "outV", "type"],
      "title": "E11<Document,DocumentSymbolResult,EdgeLabels.textDocument_documentSymbol>",
      "type": "object"
    },
    "E11<Document,FoldingRangeResult,EdgeLabels.textDocument_foldingRange>": {
      "additionalProperties": false,
      "description": "A common base type of all edge types. The type parameters `S` and `T` are for typing and\ndocumentation purpose only. An edge never holds a direct reference to a vertex. They are\nreferenced by `Id`.",
      "properties": {
        "_": {
          "additionalItems": {
            "anyOf": [
              {
                "$ref": "#/definitions/Document"
              },
              {
                "$ref": "#/definitions/FoldingRangeResult"
              }
            ]
          },
          "items": [
            {
              "$ref": "#/definitions/Document"
            },
            {
              "$ref": "#/definitions/FoldingRangeResult"
            }
          ],
          "minItems": 2,
          "title": "_",
          "type": "array"
        },
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "inV": {
          "description": "The id of the to Vertex.",
          "title": "inV",
          "type": ["string", "number"]
        },
        "label": {
          "enum": ["textDocument/foldingRange"],
          "title": "label",
          "type": "string"
        },
        "outV": {
          "description": "The id of the from Vertex.",
          "title": "outV",
          "type": ["string", "number"]
        },
        "type": {
          "enum": ["edge"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "inV", "label", "outV", "type"],
      "title": "E11<Document,FoldingRangeResult,EdgeLabels.textDocument_foldingRange>",
      "type": "object"
    },
    "E11<ImplementationResult,Moniker,EdgeLabels.moniker>": {
      "additionalProperties": false,
      "description": "A common base type of all edge types. The type parameters `S` and `T` are for typing and\ndocumentation purpose only. An edge never holds a direct reference to a vertex. They are\nreferenced by `Id`.",
      "properties": {
        "_": {
          "additionalItems": {
            "anyOf": [
              {
                "$ref": "#/definitions/ImplementationResult"
              },
              {
                "$ref": "#/definitions/Moniker"
              }
            ]
          },
          "items": [
            {
              "$ref": "#/definitions/ImplementationResult"
            },
            {
              "$ref": "#/definitions/Moniker"
            }
          ],
          "minItems": 2,
          "title": "_",
          "type": "array"
        },
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "inV": {
          "description": "The id of the to Vertex.",
          "title": "inV",
          "type": ["string", "number"]
        },
        "label": {
          "enum": ["moniker"],
          "title": "label",
          "type": "string"
        },
        "outV": {
          "description": "The id of the from Vertex.",
          "title": "outV",
          "type": ["string", "number"]
        },
        "type": {
          "enum": ["edge"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "inV", "label", "outV", "type"],
      "title": "E11<ImplementationResult,Moniker,EdgeLabels.moniker>",
      "type": "object"
    },
    "E11<Moniker,Moniker,EdgeLabels.nextMoniker>": {
      "additionalProperties": false,
      "description": "A common base type of all edge types. The type parameters `S` and `T` are for typing and\ndocumentation purpose only. An edge never holds a direct reference to a vertex. They are\nreferenced by `Id`.",
      "properties": {
        "_": {
          "additionalItems": {
            "anyOf": [
              {
                "$ref": "#/definitions/Moniker"
              },
              {
                "$ref": "#/definitions/Moniker"
              }
            ]
          },
          "items": [
            {
              "$ref": "#/definitions/Moniker"
            },
            {
              "$ref": "#/definitions/Moniker"
            }
          ],
          "minItems": 2,
          "title": "_",
          "type": "array"
        },
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "inV": {
          "description": "The id of the to Vertex.",
          "title": "inV",
          "type": ["string", "number"]
        },
        "label": {
          "enum": ["nextMoniker"],
          "title": "label",
          "type": "string"
        },
        "outV": {
          "description": "The id of the from Vertex.",
          "title": "outV",
          "type": ["string", "number"]
        },
        "type": {
          "enum": ["edge"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "inV", "label", "outV", "type"],
      "title": "E11<Moniker,Moniker,EdgeLabels.nextMoniker>",
      "type": "object"
    },
    "E11<Moniker,PackageInformation,EdgeLabels.packageInformation>": {
      "additionalProperties": false,
      "description": "A common base type of all edge types. The type parameters `S` and `T` are for typing and\ndocumentation purpose only. An edge never holds a direct reference to a vertex. They are\nreferenced by `Id`.",
      "properties": {
        "_": {
          "additionalItems": {
            "anyOf": [
              {
                "$ref": "#/definitions/Moniker"
              },
              {
                "$ref": "#/definitions/PackageInformation"
              }
            ]
          },
          "items": [
            {
              "$ref": "#/definitions/Moniker"
            },
            {
              "$ref": "#/definitions/PackageInformation"
            }
          ],
          "minItems": 2,
          "title": "_",
          "type": "array"
        },
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "inV": {
          "description": "The id of the to Vertex.",
          "title": "inV",
          "type": ["string", "number"]
        },
        "label": {
          "enum": ["packageInformation"],
          "title": "label",
          "type": "string"
        },
        "outV": {
          "description": "The id of the from Vertex.",
          "title": "outV",
          "type": ["string", "number"]
        },
        "type": {
          "enum": ["edge"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "inV", "label", "outV", "type"],
      "title": "E11<Moniker,PackageInformation,EdgeLabels.packageInformation>",
      "type": "object"
    },
    "E11<Project,DiagnosticResult,EdgeLabels.textDocument_diagnostic>": {
      "additionalProperties": false,
      "description": "A common base type of all edge types. The type parameters `S` and `T` are for typing and\ndocumentation purpose only. An edge never holds a direct reference to a vertex. They are\nreferenced by `Id`.",
      "properties": {
        "_": {
          "additionalItems": {
            "anyOf": [
              {
                "$ref": "#/definitions/Project"
              },
              {
                "$ref": "#/definitions/DiagnosticResult"
              }
            ]
          },
          "items": [
            {
              "$ref": "#/definitions/Project"
            },
            {
              "$ref": "#/definitions/DiagnosticResult"
            }
          ],
          "minItems": 2,
          "title": "_",
          "type": "array"
        },
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "inV": {
          "description": "The id of the to Vertex.",
          "title": "inV",
          "type": ["string", "number"]
        },
        "label": {
          "enum": ["textDocument/diagnostic"],
          "title": "label",
          "type": "string"
        },
        "outV": {
          "description": "The id of the from Vertex.",
          "title": "outV",
          "type": ["string", "number"]
        },
        "type": {
          "enum": ["edge"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "inV", "label", "outV", "type"],
      "title": "E11<Project,DiagnosticResult,EdgeLabels.textDocument_diagnostic>",
      "type": "object"
    },
    "E11<Range,DeclarationResult,EdgeLabels.textDocument_declaration>": {
      "additionalProperties": false,
      "description": "A common base type of all edge types. The type parameters `S` and `T` are for typing and\ndocumentation purpose only. An edge never holds a direct reference to a vertex. They are\nreferenced by `Id`.",
      "properties": {
        "_": {
          "additionalItems": {
            "anyOf": [
              {
                "$ref": "#/definitions/Range_1"
              },
              {
                "$ref": "#/definitions/DeclarationResult"
              }
            ]
          },
          "items": [
            {
              "$ref": "#/definitions/Range_1"
            },
            {
              "$ref": "#/definitions/DeclarationResult"
            }
          ],
          "minItems": 2,
          "title": "_",
          "type": "array"
        },
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "inV": {
          "description": "The id of the to Vertex.",
          "title": "inV",
          "type": ["string", "number"]
        },
        "label": {
          "enum": ["textDocument/declaration"],
          "title": "label",
          "type": "string"
        },
        "outV": {
          "description": "The id of the from Vertex.",
          "title": "outV",
          "type": ["string", "number"]
        },
        "type": {
          "enum": ["edge"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "inV", "label", "outV", "type"],
      "title": "E11<Range,DeclarationResult,EdgeLabels.textDocument_declaration>",
      "type": "object"
    },
    "E11<Range,DefinitionResult,EdgeLabels.textDocument_definition>": {
      "additionalProperties": false,
      "description": "A common base type of all edge types. The type parameters `S` and `T` are for typing and\ndocumentation purpose only. An edge never holds a direct reference to a vertex. They are\nreferenced by `Id`.",
      "properties": {
        "_": {
          "additionalItems": {
            "anyOf": [
              {
                "$ref": "#/definitions/Range_1"
              },
              {
                "$ref": "#/definitions/DefinitionResult"
              }
            ]
          },
          "items": [
            {
              "$ref": "#/definitions/Range_1"
            },
            {
              "$ref": "#/definitions/DefinitionResult"
            }
          ],
          "minItems": 2,
          "title": "_",
          "type": "array"
        },
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "inV": {
          "description": "The id of the to Vertex.",
          "title": "inV",
          "type": ["string", "number"]
        },
        "label": {
          "enum": ["textDocument/definition"],
          "title": "label",
          "type": "string"
        },
        "outV": {
          "description": "The id of the from Vertex.",
          "title": "outV",
          "type": ["string", "number"]
        },
        "type": {
          "enum": ["edge"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "inV", "label", "outV", "type"],
      "title": "E11<Range,DefinitionResult,EdgeLabels.textDocument_definition>",
      "type": "object"
    },
    "E11<Range,HoverResult,EdgeLabels.textDocument_hover>": {
      "additionalProperties": false,
      "description": "A common base type of all edge types. The type parameters `S` and `T` are for typing and\ndocumentation purpose only. An edge never holds a direct reference to a vertex. They are\nreferenced by `Id`.",
      "properties": {
        "_": {
          "additionalItems": {
            "anyOf": [
              {
                "$ref": "#/definitions/Range_1"
              },
              {
                "$ref": "#/definitions/HoverResult"
              }
            ]
          },
          "items": [
            {
              "$ref": "#/definitions/Range_1"
            },
            {
              "$ref": "#/definitions/HoverResult"
            }
          ],
          "minItems": 2,
          "title": "_",
          "type": "array"
        },
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "inV": {
          "description": "The id of the to Vertex.",
          "title": "inV",
          "type": ["string", "number"]
        },
        "label": {
          "enum": ["textDocument/hover"],
          "title": "label",
          "type": "string"
        },
        "outV": {
          "description": "The id of the from Vertex.",
          "title": "outV",
          "type": ["string", "number"]
        },
        "type": {
          "enum": ["edge"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "inV", "label", "outV", "type"],
      "title": "E11<Range,HoverResult,EdgeLabels.textDocument_hover>",
      "type": "object"
    },
    "E11<Range,ImplementationResult,EdgeLabels.textDocument_implementation>": {
      "additionalProperties": false,
      "description": "A common base type of all edge types. The type parameters `S` and `T` are for typing and\ndocumentation purpose only. An edge never holds a direct reference to a vertex. They are\nreferenced by `Id`.",
      "properties": {
        "_": {
          "additionalItems": {
            "anyOf": [
              {
                "$ref": "#/definitions/Range_1"
              },
              {
                "$ref": "#/definitions/ImplementationResult"
              }
            ]
          },
          "items": [
            {
              "$ref": "#/definitions/Range_1"
            },
            {
              "$ref": "#/definitions/ImplementationResult"
            }
          ],
          "minItems": 2,
          "title": "_",
          "type": "array"
        },
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "inV": {
          "description": "The id of the to Vertex.",
          "title": "inV",
          "type": ["string", "number"]
        },
        "label": {
          "enum": ["textDocument/implementation"],
          "title": "label",
          "type": "string"
        },
        "outV": {
          "description": "The id of the from Vertex.",
          "title": "outV",
          "type": ["string", "number"]
        },
        "type": {
          "enum": ["edge"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "inV", "label", "outV", "type"],
      "title": "E11<Range,ImplementationResult,EdgeLabels.textDocument_implementation>",
      "type": "object"
    },
    "E11<Range,Moniker,EdgeLabels.moniker>": {
      "additionalProperties": false,
      "description": "A common base type of all edge types. The type parameters `S` and `T` are for typing and\ndocumentation purpose only. An edge never holds a direct reference to a vertex. They are\nreferenced by `Id`.",
      "properties": {
        "_": {
          "additionalItems": {
            "anyOf": [
              {
                "$ref": "#/definitions/Range_1"
              },
              {
                "$ref": "#/definitions/Moniker"
              }
            ]
          },
          "items": [
            {
              "$ref": "#/definitions/Range_1"
            },
            {
              "$ref": "#/definitions/Moniker"
            }
          ],
          "minItems": 2,
          "title": "_",
          "type": "array"
        },
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "inV": {
          "description": "The id of the to Vertex.",
          "title": "inV",
          "type": ["string", "number"]
        },
        "label": {
          "enum": ["moniker"],
          "title": "label",
          "type": "string"
        },
        "outV": {
          "description": "The id of the from Vertex.",
          "title": "outV",
          "type": ["string", "number"]
        },
        "type": {
          "enum": ["edge"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "inV", "label", "outV", "type"],
      "title": "E11<Range,Moniker,EdgeLabels.moniker>",
      "type": "object"
    },
    "E11<Range,ReferenceResult,EdgeLabels.textDocument_references>": {
      "additionalProperties": false,
      "description": "A common base type of all edge types. The type parameters `S` and `T` are for typing and\ndocumentation purpose only. An edge never holds a direct reference to a vertex. They are\nreferenced by `Id`.",
      "properties": {
        "_": {
          "additionalItems": {
            "anyOf": [
              {
                "$ref": "#/definitions/Range_1"
              },
              {
                "$ref": "#/definitions/ReferenceResult"
              }
            ]
          },
          "items": [
            {
              "$ref": "#/definitions/Range_1"
            },
            {
              "$ref": "#/definitions/ReferenceResult"
            }
          ],
          "minItems": 2,
          "title": "_",
          "type": "array"
        },
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "inV": {
          "description": "The id of the to Vertex.",
          "title": "inV",
          "type": ["string", "number"]
        },
        "label": {
          "enum": ["textDocument/references"],
          "title": "label",
          "type": "string"
        },
        "outV": {
          "description": "The id of the from Vertex.",
          "title": "outV",
          "type": ["string", "number"]
        },
        "type": {
          "enum": ["edge"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "inV", "label", "outV", "type"],
      "title": "E11<Range,ReferenceResult,EdgeLabels.textDocument_references>",
      "type": "object"
    },
    "E11<Range,ResultSet,EdgeLabels.next>": {
      "additionalProperties": false,
      "description": "A common base type of all edge types. The type parameters `S` and `T` are for typing and\ndocumentation purpose only. An edge never holds a direct reference to a vertex. They are\nreferenced by `Id`.",
      "properties": {
        "_": {
          "additionalItems": {
            "anyOf": [
              {
                "$ref": "#/definitions/Range_1"
              },
              {
                "$ref": "#/definitions/ResultSet"
              }
            ]
          },
          "items": [
            {
              "$ref": "#/definitions/Range_1"
            },
            {
              "$ref": "#/definitions/ResultSet"
            }
          ],
          "minItems": 2,
          "title": "_",
          "type": "array"
        },
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "inV": {
          "description": "The id of the to Vertex.",
          "title": "inV",
          "type": ["string", "number"]
        },
        "label": {
          "enum": ["next"],
          "title": "label",
          "type": "string"
        },
        "outV": {
          "description": "The id of the from Vertex.",
          "title": "outV",
          "type": ["string", "number"]
        },
        "type": {
          "enum": ["edge"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "inV", "label", "outV", "type"],
      "title": "E11<Range,ResultSet,EdgeLabels.next>",
      "type": "object"
    },
    "E11<Range,TypeDefinitionResult,EdgeLabels.textDocument_typeDefinition>": {
      "additionalProperties": false,
      "description": "A common base type of all edge types. The type parameters `S` and `T` are for typing and\ndocumentation purpose only. An edge never holds a direct reference to a vertex. They are\nreferenced by `Id`.",
      "properties": {
        "_": {
          "additionalItems": {
            "anyOf": [
              {
                "$ref": "#/definitions/Range_1"
              },
              {
                "$ref": "#/definitions/TypeDefinitionResult"
              }
            ]
          },
          "items": [
            {
              "$ref": "#/definitions/Range_1"
            },
            {
              "$ref": "#/definitions/TypeDefinitionResult"
            }
          ],
          "minItems": 2,
          "title": "_",
          "type": "array"
        },
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "inV": {
          "description": "The id of the to Vertex.",
          "title": "inV",
          "type": ["string", "number"]
        },
        "label": {
          "enum": ["textDocument/typeDefinition"],
          "title": "label",
          "type": "string"
        },
        "outV": {
          "description": "The id of the from Vertex.",
          "title": "outV",
          "type": ["string", "number"]
        },
        "type": {
          "enum": ["edge"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "inV", "label", "outV", "type"],
      "title": "E11<Range,TypeDefinitionResult,EdgeLabels.textDocument_typeDefinition>",
      "type": "object"
    },
    "E11<ReferenceResult,Moniker,EdgeLabels.moniker>": {
      "additionalProperties": false,
      "description": "A common base type of all edge types. The type parameters `S` and `T` are for typing and\ndocumentation purpose only. An edge never holds a direct reference to a vertex. They are\nreferenced by `Id`.",
      "properties": {
        "_": {
          "additionalItems": {
            "anyOf": [
              {
                "$ref": "#/definitions/ReferenceResult"
              },
              {
                "$ref": "#/definitions/Moniker"
              }
            ]
          },
          "items": [
            {
              "$ref": "#/definitions/ReferenceResult"
            },
            {
              "$ref": "#/definitions/Moniker"
            }
          ],
          "minItems": 2,
          "title": "_",
          "type": "array"
        },
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "inV": {
          "description": "The id of the to Vertex.",
          "title": "inV",
          "type": ["string", "number"]
        },
        "label": {
          "enum": ["moniker"],
          "title": "label",
          "type": "string"
        },
        "outV": {
          "description": "The id of the from Vertex.",
          "title": "outV",
          "type": ["string", "number"]
        },
        "type": {
          "enum": ["edge"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "inV", "label", "outV", "type"],
      "title": "E11<ReferenceResult,Moniker,EdgeLabels.moniker>",
      "type": "object"
    },
    "E11<ResultSet,DeclarationResult,EdgeLabels.textDocument_declaration>": {
      "additionalProperties": false,
      "description": "A common base type of all edge types. The type parameters `S` and `T` are for typing and\ndocumentation purpose only. An edge never holds a direct reference to a vertex. They are\nreferenced by `Id`.",
      "properties": {
        "_": {
          "additionalItems": {
            "anyOf": [
              {
                "$ref": "#/definitions/ResultSet"
              },
              {
                "$ref": "#/definitions/DeclarationResult"
              }
            ]
          },
          "items": [
            {
              "$ref": "#/definitions/ResultSet"
            },
            {
              "$ref": "#/definitions/DeclarationResult"
            }
          ],
          "minItems": 2,
          "title": "_",
          "type": "array"
        },
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "inV": {
          "description": "The id of the to Vertex.",
          "title": "inV",
          "type": ["string", "number"]
        },
        "label": {
          "enum": ["textDocument/declaration"],
          "title": "label",
          "type": "string"
        },
        "outV": {
          "description": "The id of the from Vertex.",
          "title": "outV",
          "type": ["string", "number"]
        },
        "type": {
          "enum": ["edge"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "inV", "label", "outV", "type"],
      "title": "E11<ResultSet,DeclarationResult,EdgeLabels.textDocument_declaration>",
      "type": "object"
    },
    "E11<ResultSet,DefinitionResult,EdgeLabels.textDocument_definition>": {
      "additionalProperties": false,
      "description": "A common base type of all edge types. The type parameters `S` and `T` are for typing and\ndocumentation purpose only. An edge never holds a direct reference to a vertex. They are\nreferenced by `Id`.",
      "properties": {
        "_": {
          "additionalItems": {
            "anyOf": [
              {
                "$ref": "#/definitions/ResultSet"
              },
              {
                "$ref": "#/definitions/DefinitionResult"
              }
            ]
          },
          "items": [
            {
              "$ref": "#/definitions/ResultSet"
            },
            {
              "$ref": "#/definitions/DefinitionResult"
            }
          ],
          "minItems": 2,
          "title": "_",
          "type": "array"
        },
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "inV": {
          "description": "The id of the to Vertex.",
          "title": "inV",
          "type": ["string", "number"]
        },
        "label": {
          "enum": ["textDocument/definition"],
          "title": "label",
          "type": "string"
        },
        "outV": {
          "description": "The id of the from Vertex.",
          "title": "outV",
          "type": ["string", "number"]
        },
        "type": {
          "enum": ["edge"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "inV", "label", "outV", "type"],
      "title": "E11<ResultSet,DefinitionResult,EdgeLabels.textDocument_definition>",
      "type": "object"
    },
    "E11<ResultSet,HoverResult,EdgeLabels.textDocument_hover>": {
      "additionalProperties": false,
      "description": "A common base type of all edge types. The type parameters `S` and `T` are for typing and\ndocumentation purpose only. An edge never holds a direct reference to a vertex. They are\nreferenced by `Id`.",
      "properties": {
        "_": {
          "additionalItems": {
            "anyOf": [
              {
                "$ref": "#/definitions/ResultSet"
              },
              {
                "$ref": "#/definitions/HoverResult"
              }
            ]
          },
          "items": [
            {
              "$ref": "#/definitions/ResultSet"
            },
            {
              "$ref": "#/definitions/HoverResult"
            }
          ],
          "minItems": 2,
          "title": "_",
          "type": "array"
        },
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "inV": {
          "description": "The id of the to Vertex.",
          "title": "inV",
          "type": ["string", "number"]
        },
        "label": {
          "enum": ["textDocument/hover"],
          "title": "label",
          "type": "string"
        },
        "outV": {
          "description": "The id of the from Vertex.",
          "title": "outV",
          "type": ["string", "number"]
        },
        "type": {
          "enum": ["edge"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "inV", "label", "outV", "type"],
      "title": "E11<ResultSet,HoverResult,EdgeLabels.textDocument_hover>",
      "type": "object"
    },
    "E11<ResultSet,ImplementationResult,EdgeLabels.textDocument_implementation>": {
      "additionalProperties": false,
      "description": "A common base type of all edge types. The type parameters `S` and `T` are for typing and\ndocumentation purpose only. An edge never holds a direct reference to a vertex. They are\nreferenced by `Id`.",
      "properties": {
        "_": {
          "additionalItems": {
            "anyOf": [
              {
                "$ref": "#/definitions/ResultSet"
              },
              {
                "$ref": "#/definitions/ImplementationResult"
              }
            ]
          },
          "items": [
            {
              "$ref": "#/definitions/ResultSet"
            },
            {
              "$ref": "#/definitions/ImplementationResult"
            }
          ],
          "minItems": 2,
          "title": "_",
          "type": "array"
        },
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "inV": {
          "description": "The id of the to Vertex.",
          "title": "inV",
          "type": ["string", "number"]
        },
        "label": {
          "enum": ["textDocument/implementation"],
          "title": "label",
          "type": "string"
        },
        "outV": {
          "description": "The id of the from Vertex.",
          "title": "outV",
          "type": ["string", "number"]
        },
        "type": {
          "enum": ["edge"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "inV", "label", "outV", "type"],
      "title": "E11<ResultSet,ImplementationResult,EdgeLabels.textDocument_implementation>",
      "type": "object"
    },
    "E11<ResultSet,Moniker,EdgeLabels.moniker>": {
      "additionalProperties": false,
      "description": "A common base type of all edge types. The type parameters `S` and `T` are for typing and\ndocumentation purpose only. An edge never holds a direct reference to a vertex. They are\nreferenced by `Id`.",
      "properties": {
        "_": {
          "additionalItems": {
            "anyOf": [
              {
                "$ref": "#/definitions/ResultSet"
              },
              {
                "$ref": "#/definitions/Moniker"
              }
            ]
          },
          "items": [
            {
              "$ref": "#/definitions/ResultSet"
            },
            {
              "$ref": "#/definitions/Moniker"
            }
          ],
          "minItems": 2,
          "title": "_",
          "type": "array"
        },
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "inV": {
          "description": "The id of the to Vertex.",
          "title": "inV",
          "type": ["string", "number"]
        },
        "label": {
          "enum": ["moniker"],
          "title": "label",
          "type": "string"
        },
        "outV": {
          "description": "The id of the from Vertex.",
          "title": "outV",
          "type": ["string", "number"]
        },
        "type": {
          "enum": ["edge"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "inV", "label", "outV", "type"],
      "title": "E11<ResultSet,Moniker,EdgeLabels.moniker>",
      "type": "object"
    },
    "E11<ResultSet,ReferenceResult,EdgeLabels.textDocument_references>": {
      "additionalProperties": false,
      "description": "A common base type of all edge types. The type parameters `S` and `T` are for typing and\ndocumentation purpose only. An edge never holds a direct reference to a vertex. They are\nreferenced by `Id`.",
      "properties": {
        "_": {
          "additionalItems": {
            "anyOf": [
              {
                "$ref": "#/definitions/ResultSet"
              },
              {
                "$ref": "#/definitions/ReferenceResult"
              }
            ]
          },
          "items": [
            {
              "$ref": "#/definitions/ResultSet"
            },
            {
              "$ref": "#/definitions/ReferenceResult"
            }
          ],
          "minItems": 2,
          "title": "_",
          "type": "array"
        },
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "inV": {
          "description": "The id of the to Vertex.",
          "title": "inV",
          "type": ["string", "number"]
        },
        "label": {
          "enum": ["textDocument/references"],
          "title": "label",
          "type": "string"
        },
        "outV": {
          "description": "The id of the from Vertex.",
          "title": "outV",
          "type": ["string", "number"]
        },
        "type": {
          "enum": ["edge"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "inV", "label", "outV", "type"],
      "title": "E11<ResultSet,ReferenceResult,EdgeLabels.textDocument_references>",
      "type": "object"
    },
    "E11<ResultSet,TypeDefinitionResult,EdgeLabels.textDocument_typeDefinition>": {
      "additionalProperties": false,
      "description": "A common base type of all edge types. The type parameters `S` and `T` are for typing and\ndocumentation purpose only. An edge never holds a direct reference to a vertex. They are\nreferenced by `Id`.",
      "properties": {
        "_": {
          "additionalItems": {
            "anyOf": [
              {
                "$ref": "#/definitions/ResultSet"
              },
              {
                "$ref": "#/definitions/TypeDefinitionResult"
              }
            ]
          },
          "items": [
            {
              "$ref": "#/definitions/ResultSet"
            },
            {
              "$ref": "#/definitions/TypeDefinitionResult"
            }
          ],
          "minItems": 2,
          "title": "_",
          "type": "array"
        },
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "inV": {
          "description": "The id of the to Vertex.",
          "title": "inV",
          "type": ["string", "number"]
        },
        "label": {
          "enum": ["textDocument/typeDefinition"],
          "title": "label",
          "type": "string"
        },
        "outV": {
          "description": "The id of the from Vertex.",
          "title": "outV",
          "type": ["string", "number"]
        },
        "type": {
          "enum": ["edge"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "inV", "label", "outV", "type"],
      "title": "E11<ResultSet,TypeDefinitionResult,EdgeLabels.textDocument_typeDefinition>",
      "type": "object"
    },
    "E11<S,T,K>": {
      "additionalProperties": false,
      "description": "A common base type of all edge types. The type parameters `S` and `T` are for typing and\ndocumentation purpose only. An edge never holds a direct reference to a vertex. They are\nreferenced by `Id`.",
      "properties": {
        "_": {
          "additionalItems": {
            "anyOf": [
              {
                "$ref": "#/definitions/S_2"
              },
              {
                "$ref": "#/definitions/T_2"
              }
            ]
          },
          "items": [
            {
              "$ref": "#/definitions/S_2"
            },
            {
              "$ref": "#/definitions/T_2"
            }
          ],
          "minItems": 2,
          "title": "_",
          "type": "array"
        },
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "inV": {
          "description": "The id of the to Vertex.",
          "title": "inV",
          "type": ["string", "number"]
        },
        "label": {
          "items": {
            "type": "string"
          },
          "title": "label",
          "type": "array"
        },
        "outV": {
          "description": "The id of the from Vertex.",
          "title": "outV",
          "type": ["string", "number"]
        },
        "type": {
          "enum": ["edge"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "inV", "label", "outV", "type"],
      "title": "E11<S,T,K>",
      "type": "object"
    },
    "E11<TypeDefinitionResult,Moniker,EdgeLabels.moniker>": {
      "additionalProperties": false,
      "description": "A common base type of all edge types. The type parameters `S` and `T` are for typing and\ndocumentation purpose only. An edge never holds a direct reference to a vertex. They are\nreferenced by `Id`.",
      "properties": {
        "_": {
          "additionalItems": {
            "anyOf": [
              {
                "$ref": "#/definitions/TypeDefinitionResult"
              },
              {
                "$ref": "#/definitions/Moniker"
              }
            ]
          },
          "items": [
            {
              "$ref": "#/definitions/TypeDefinitionResult"
            },
            {
              "$ref": "#/definitions/Moniker"
            }
          ],
          "minItems": 2,
          "title": "_",
          "type": "array"
        },
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "inV": {
          "description": "The id of the to Vertex.",
          "title": "inV",
          "type": ["string", "number"]
        },
        "label": {
          "enum": ["moniker"],
          "title": "label",
          "type": "string"
        },
        "outV": {
          "description": "The id of the from Vertex.",
          "title": "outV",
          "type": ["string", "number"]
        },
        "type": {
          "enum": ["edge"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "inV", "label", "outV", "type"],
      "title": "E11<TypeDefinitionResult,Moniker,EdgeLabels.moniker>",
      "type": "object"
    },
    "E1N": {
      "additionalProperties": false,
      "properties": {
        "_": {
          "additionalItems": {
            "anyOf": [
              {
                "$ref": "#/definitions/S_1"
              },
              {
                "$ref": "#/definitions/T_1"
              }
            ]
          },
          "items": [
            {
              "$ref": "#/definitions/S_1"
            },
            {
              "$ref": "#/definitions/T_1"
            }
          ],
          "minItems": 2,
          "title": "_",
          "type": "array"
        },
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "inVs": {
          "description": "The ids of the to vertices.",
          "items": {
            "type": ["string", "number"]
          },
          "title": "inVs",
          "type": "array"
        },
        "label": {
          "items": {
            "type": "string"
          },
          "title": "label",
          "type": "array"
        },
        "outV": {
          "description": "The id of the from vertex.",
          "title": "outV",
          "type": ["string", "number"]
        },
        "type": {
          "enum": ["edge"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "inVs", "label", "outV", "type"],
      "type": "object"
    },
    "E1N<Document,Range,EdgeLabels.contains>": {
      "additionalProperties": false,
      "properties": {
        "_": {
          "additionalItems": {
            "anyOf": [
              {
                "$ref": "#/definitions/Document"
              },
              {
                "$ref": "#/definitions/Range_1"
              }
            ]
          },
          "items": [
            {
              "$ref": "#/definitions/Document"
            },
            {
              "$ref": "#/definitions/Range_1"
            }
          ],
          "minItems": 2,
          "title": "_",
          "type": "array"
        },
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "inVs": {
          "description": "The ids of the to vertices.",
          "items": {
            "type": ["string", "number"]
          },
          "title": "inVs",
          "type": "array"
        },
        "label": {
          "enum": ["contains"],
          "title": "label",
          "type": "string"
        },
        "outV": {
          "description": "The id of the from vertex.",
          "title": "outV",
          "type": ["string", "number"]
        },
        "type": {
          "enum": ["edge"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "inVs", "label", "outV", "type"],
      "title": "E1N<Document,Range,EdgeLabels.contains>",
      "type": "object"
    },
    "E1N<Project,Document,EdgeLabels.contains>": {
      "additionalProperties": false,
      "properties": {
        "_": {
          "additionalItems": {
            "anyOf": [
              {
                "$ref": "#/definitions/Project"
              },
              {
                "$ref": "#/definitions/Document"
              }
            ]
          },
          "items": [
            {
              "$ref": "#/definitions/Project"
            },
            {
              "$ref": "#/definitions/Document"
            }
          ],
          "minItems": 2,
          "title": "_",
          "type": "array"
        },
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "inVs": {
          "description": "The ids of the to vertices.",
          "items": {
            "type": ["string", "number"]
          },
          "title": "inVs",
          "type": "array"
        },
        "label": {
          "enum": ["contains"],
          "title": "label",
          "type": "string"
        },
        "outV": {
          "description": "The id of the from vertex.",
          "title": "outV",
          "type": ["string", "number"]
        },
        "type": {
          "enum": ["edge"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "inVs", "label", "outV", "type"],
      "title": "E1N<Project,Document,EdgeLabels.contains>",
      "type": "object"
    },
    "E1N<S,T,K>": {
      "additionalProperties": false,
      "properties": {
        "_": {
          "additionalItems": {
            "anyOf": [
              {
                "$ref": "#/definitions/S_2"
              },
              {
                "$ref": "#/definitions/T_2"
              }
            ]
          },
          "items": [
            {
              "$ref": "#/definitions/S_2"
            },
            {
              "$ref": "#/definitions/T_2"
            }
          ],
          "minItems": 2,
          "title": "_",
          "type": "array"
        },
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "inVs": {
          "description": "The ids of the to vertices.",
          "items": {
            "type": ["string", "number"]
          },
          "title": "inVs",
          "type": "array"
        },
        "label": {
          "items": {
            "type": "string"
          },
          "title": "label",
          "type": "array"
        },
        "outV": {
          "description": "The id of the from vertex.",
          "title": "outV",
          "type": ["string", "number"]
        },
        "type": {
          "enum": ["edge"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "inVs", "label", "outV", "type"],
      "title": "E1N<S,T,K>",
      "type": "object"
    },
    "Edge": {
      "anyOf": [
        {
          "$ref": "#/definitions/E1N<Project,Document,EdgeLabels.contains>"
        },
        {
          "$ref": "#/definitions/E1N<Document,Range,EdgeLabels.contains>"
        },
        {
          "$ref": "#/definitions/E11<Range,ResultSet,EdgeLabels.next>"
        },
        {
          "$ref": "#/definitions/ItemEdge<DeclarationResult,Range>"
        },
        {
          "$ref": "#/definitions/ItemEdge<DefinitionResult,Range>"
        },
        {
          "$ref": "#/definitions/ItemEdge<TypeDefinitionResult,Range>"
        },
        {
          "$ref": "#/definitions/ItemEdge<ReferenceResult,Range>"
        },
        {
          "$ref": "#/definitions/ItemEdge<ReferenceResult,ReferenceResult>"
        },
        {
          "$ref": "#/definitions/ItemEdge<ImplementationResult,Range>"
        },
        {
          "$ref": "#/definitions/ItemEdge<ImplementationResult,ImplementationResult>"
        },
        {
          "$ref": "#/definitions/E11<Range,Moniker,EdgeLabels.moniker>"
        },
        {
          "$ref": "#/definitions/E11<ResultSet,Moniker,EdgeLabels.moniker>"
        },
        {
          "$ref": "#/definitions/E11<DeclarationResult,Moniker,EdgeLabels.moniker>"
        },
        {
          "$ref": "#/definitions/E11<DefinitionResult,Moniker,EdgeLabels.moniker>"
        },
        {
          "$ref": "#/definitions/E11<TypeDefinitionResult,Moniker,EdgeLabels.moniker>"
        },
        {
          "$ref": "#/definitions/E11<ReferenceResult,Moniker,EdgeLabels.moniker>"
        },
        {
          "$ref": "#/definitions/E11<ImplementationResult,Moniker,EdgeLabels.moniker>"
        },
        {
          "$ref": "#/definitions/E11<Moniker,Moniker,EdgeLabels.nextMoniker>"
        },
        {
          "$ref": "#/definitions/E11<Moniker,PackageInformation,EdgeLabels.packageInformation>"
        },
        {
          "$ref": "#/definitions/E11<Document,DocumentSymbolResult,EdgeLabels.textDocument_documentSymbol>"
        },
        {
          "$ref": "#/definitions/E11<Document,FoldingRangeResult,EdgeLabels.textDocument_foldingRange>"
        },
        {
          "$ref": "#/definitions/E11<Document,DocumentLinkResult,EdgeLabels.textDocument_documentLink>"
        },
        {
          "$ref": "#/definitions/E11<Project,DiagnosticResult,EdgeLabels.textDocument_diagnostic>"
        },
        {
          "$ref": "#/definitions/E11<Document,DiagnosticResult,EdgeLabels.textDocument_diagnostic>"
        },
        {
          "$ref": "#/definitions/E11<Range,DeclarationResult,EdgeLabels.textDocument_declaration>"
        },
        {
          "$ref": "#/definitions/E11<ResultSet,DeclarationResult,EdgeLabels.textDocument_declaration>"
        },
        {
          "$ref": "#/definitions/E11<Range,DefinitionResult,EdgeLabels.textDocument_definition>"
        },
        {
          "$ref": "#/definitions/E11<ResultSet,DefinitionResult,EdgeLabels.textDocument_definition>"
        },
        {
          "$ref": "#/definitions/E11<Range,TypeDefinitionResult,EdgeLabels.textDocument_typeDefinition>"
        },
        {
          "$ref": "#/definitions/E11<ResultSet,TypeDefinitionResult,EdgeLabels.textDocument_typeDefinition>"
        },
        {
          "$ref": "#/definitions/E11<Range,HoverResult,EdgeLabels.textDocument_hover>"
        },
        {
          "$ref": "#/definitions/E11<ResultSet,HoverResult,EdgeLabels.textDocument_hover>"
        },
        {
          "$ref": "#/definitions/E11<Range,ReferenceResult,EdgeLabels.textDocument_references>"
        },
        {
          "$ref": "#/definitions/E11<ResultSet,ReferenceResult,EdgeLabels.textDocument_references>"
        },
        {
          "$ref": "#/definitions/E11<Range,ImplementationResult,EdgeLabels.textDocument_implementation>"
        },
        {
          "$ref": "#/definitions/E11<ResultSet,ImplementationResult,EdgeLabels.textDocument_implementation>"
        }
      ]
    },
    "EdgeLabels": {
      "enum": [
        "contains",
        "item",
        "moniker",
        "next",
        "nextMoniker",
        "packageInformation",
        "textDocument/declaration",
        "textDocument/definition",
        "textDocument/diagnostic",
        "textDocument/documentLink",
        "textDocument/documentSymbol",
        "textDocument/foldingRange",
        "textDocument/hover",
        "textDocument/implementation",
        "textDocument/references",
        "textDocument/typeDefinition"
      ],
      "type": "string"
    },
    "Element": {
      "additionalProperties": false,
      "description": "An element in the graph.",
      "properties": {
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "type": {
          "$ref": "#/definitions/ElementTypes",
          "title": "type"
        }
      },
      "required": ["id", "type"],
      "type": "object"
    },
    "ElementTypes": {
      "enum": ["edge", "vertex"],
      "title": "ElementTypes",
      "type": "string"
    },
    "Event": {
      "additionalProperties": false,
      "properties": {
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "kind": {
          "$ref": "#/definitions/EventKind",
          "description": "The event kind.",
          "title": "kind"
        },
        "label": {
          "enum": ["$event"],
          "title": "label",
          "type": "string"
        },
        "scope": {
          "$ref": "#/definitions/EventScope",
          "description": "The event scope.",
          "title": "scope"
        },
        "type": {
          "enum": ["vertex"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "kind", "label", "scope", "type"],
      "type": "object"
    },
    "EventKind": {
      "description": "The event kinds",
      "enum": ["begin", "end"],
      "title": "EventKind",
      "type": "string"
    },
    "EventScope": {
      "description": "The event scopes",
      "enum": ["document", "project"],
      "title": "EventScope",
      "type": "string"
    },
    "FoldingRange": {
      "additionalProperties": false,
      "description": "Represents a folding range.\nThe folding range namespace provides helper functions to work with\n[FoldingRange](#FoldingRange) literals.",
      "properties": {
        "endCharacter": {
          "description": "The zero-based character offset before the folded range ends. If not defined, defaults to the length of the end line.",
          "title": "endCharacter",
          "type": "number"
        },
        "endLine": {
          "description": "The zero-based line number where the folded range ends.",
          "title": "endLine",
          "type": "number"
        },
        "kind": {
          "description": "Describes the kind of the folding range such as `comment' or 'region'. The kind\nis used to categorize folding ranges and used by commands like 'Fold all comments'. See\n[FoldingRangeKind](#FoldingRangeKind) for an enumeration of standardized kinds.",
          "title": "kind",
          "type": "string"
        },
        "startCharacter": {
          "description": "The zero-based character offset from where the folded range starts. If not defined, defaults to the length of the start line.",
          "title": "startCharacter",
          "type": "number"
        },
        "startLine": {
          "description": "The zero-based line number from where the folded range starts.",
          "title": "startLine",
          "type": "number"
        }
      },
      "required": ["endLine", "startLine"],
      "title": "FoldingRange",
      "type": "object"
    },
    "FoldingRangeResult": {
      "additionalProperties": false,
      "description": "A vertex representing a folding range result.",
      "properties": {
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "label": {
          "description": "The label property.",
          "enum": ["foldingRangeResult"],
          "title": "label",
          "type": "string"
        },
        "result": {
          "description": "The actual folding ranges.",
          "items": {
            "$ref": "#/definitions/FoldingRange"
          },
          "title": "result",
          "type": "array"
        },
        "type": {
          "enum": ["vertex"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "label", "result", "type"],
      "title": "FoldingRangeResult",
      "type": "object"
    },
    "Hover": {
      "additionalProperties": false,
      "description": "The result of a hover request.",
      "properties": {
        "contents": {
          "anyOf": [
            {
              "$ref": "#/definitions/MarkupContent"
            },
            {
              "additionalProperties": false,
              "properties": {
                "language": {
                  "title": "language",
                  "type": "string"
                },
                "value": {
                  "title": "value",
                  "type": "string"
                }
              },
              "required": ["language", "value"],
              "type": "object"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "additionalProperties": false,
                    "properties": {
                      "language": {
                        "title": "language",
                        "type": "string"
                      },
                      "value": {
                        "title": "value",
                        "type": "string"
                      }
                    },
                    "required": ["language", "value"],
                    "type": "object"
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "description": "The hover's content",
          "title": "contents"
        },
        "range": {
          "$ref": "#/definitions/Range",
          "description": "An optional range",
          "title": "range"
        }
      },
      "required": ["contents"],
      "title": "Hover",
      "type": "object"
    },
    "HoverResult": {
      "additionalProperties": false,
      "description": "A vertex representing a Hover.\n\nExtends the `Hover` type defined in LSP.",
      "properties": {
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "label": {
          "description": "The label property.",
          "enum": ["hoverResult"],
          "title": "label",
          "type": "string"
        },
        "result": {
          "$ref": "#/definitions/Hover",
          "description": "The hover result. This is the normal LSP hover result.",
          "title": "result"
        },
        "type": {
          "enum": ["vertex"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "label", "result", "type"],
      "title": "HoverResult",
      "type": "object"
    },
    "Id": {
      "type": ["string", "number"]
    },
    "ImplementationResult": {
      "additionalProperties": false,
      "description": "A vertex representing an implementation result.",
      "properties": {
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "label": {
          "description": "The label property.",
          "enum": ["implementationResult"],
          "title": "label",
          "type": "string"
        },
        "type": {
          "enum": ["vertex"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "label", "type"],
      "title": "ImplementationResult",
      "type": "object"
    },
    "ItemEdge": {
      "additionalProperties": false,
      "properties": {
        "_": {
          "additionalItems": {
            "anyOf": [
              {
                "$ref": "#/definitions/S_3"
              },
              {
                "$ref": "#/definitions/T_3"
              }
            ]
          },
          "items": [
            {
              "$ref": "#/definitions/S_3"
            },
            {
              "$ref": "#/definitions/T_3"
            }
          ],
          "minItems": 2,
          "title": "_",
          "type": "array"
        },
        "document": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "document",
          "type": ["string", "number"]
        },
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "inVs": {
          "description": "The ids of the to vertices.",
          "items": {
            "type": ["string", "number"]
          },
          "title": "inVs",
          "type": "array"
        },
        "label": {
          "enum": ["item"],
          "title": "label",
          "type": "string"
        },
        "outV": {
          "description": "The id of the from vertex.",
          "title": "outV",
          "type": ["string", "number"]
        },
        "property": {
          "enum": ["declarations", "definitions", "implementationResults", "referenceResults", "references"],
          "title": "property",
          "type": "string"
        },
        "type": {
          "enum": ["edge"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["document", "id", "inVs", "label", "outV", "type"],
      "type": "object"
    },
    "ItemEdge<DeclarationResult,Range>": {
      "additionalProperties": false,
      "properties": {
        "_": {
          "additionalItems": {
            "anyOf": [
              {
                "$ref": "#/definitions/DeclarationResult"
              },
              {
                "$ref": "#/definitions/Range_1"
              }
            ]
          },
          "items": [
            {
              "$ref": "#/definitions/DeclarationResult"
            },
            {
              "$ref": "#/definitions/Range_1"
            }
          ],
          "minItems": 2,
          "title": "_",
          "type": "array"
        },
        "document": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "document",
          "type": ["string", "number"]
        },
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "inVs": {
          "description": "The ids of the to vertices.",
          "items": {
            "type": ["string", "number"]
          },
          "title": "inVs",
          "type": "array"
        },
        "label": {
          "enum": ["item"],
          "title": "label",
          "type": "string"
        },
        "outV": {
          "description": "The id of the from vertex.",
          "title": "outV",
          "type": ["string", "number"]
        },
        "property": {
          "enum": ["declarations", "definitions", "implementationResults", "referenceResults", "references"],
          "title": "property",
          "type": "string"
        },
        "type": {
          "enum": ["edge"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["document", "id", "inVs", "label", "outV", "type"],
      "title": "ItemEdge<DeclarationResult,Range>",
      "type": "object"
    },
    "ItemEdge<DefinitionResult,Range>": {
      "additionalProperties": false,
      "properties": {
        "_": {
          "additionalItems": {
            "anyOf": [
              {
                "$ref": "#/definitions/DefinitionResult"
              },
              {
                "$ref": "#/definitions/Range_1"
              }
            ]
          },
          "items": [
            {
              "$ref": "#/definitions/DefinitionResult"
            },
            {
              "$ref": "#/definitions/Range_1"
            }
          ],
          "minItems": 2,
          "title": "_",
          "type": "array"
        },
        "document": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "document",
          "type": ["string", "number"]
        },
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "inVs": {
          "description": "The ids of the to vertices.",
          "items": {
            "type": ["string", "number"]
          },
          "title": "inVs",
          "type": "array"
        },
        "label": {
          "enum": ["item"],
          "title": "label",
          "type": "string"
        },
        "outV": {
          "description": "The id of the from vertex.",
          "title": "outV",
          "type": ["string", "number"]
        },
        "property": {
          "enum": ["declarations", "definitions", "implementationResults", "referenceResults", "references"],
          "title": "property",
          "type": "string"
        },
        "type": {
          "enum": ["edge"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["document", "id", "inVs", "label", "outV", "type"],
      "title": "ItemEdge<DefinitionResult,Range>",
      "type": "object"
    },
    "ItemEdge<ImplementationResult,ImplementationResult>": {
      "additionalProperties": false,
      "properties": {
        "_": {
          "additionalItems": {
            "anyOf": [
              {
                "$ref": "#/definitions/ImplementationResult"
              },
              {
                "$ref": "#/definitions/ImplementationResult"
              }
            ]
          },
          "items": [
            {
              "$ref": "#/definitions/ImplementationResult"
            },
            {
              "$ref": "#/definitions/ImplementationResult"
            }
          ],
          "minItems": 2,
          "title": "_",
          "type": "array"
        },
        "document": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "document",
          "type": ["string", "number"]
        },
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "inVs": {
          "description": "The ids of the to vertices.",
          "items": {
            "type": ["string", "number"]
          },
          "title": "inVs",
          "type": "array"
        },
        "label": {
          "enum": ["item"],
          "title": "label",
          "type": "string"
        },
        "outV": {
          "description": "The id of the from vertex.",
          "title": "outV",
          "type": ["string", "number"]
        },
        "property": {
          "enum": ["declarations", "definitions", "implementationResults", "referenceResults", "references"],
          "title": "property",
          "type": "string"
        },
        "type": {
          "enum": ["edge"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["document", "id", "inVs", "label", "outV", "type"],
      "title": "ItemEdge<ImplementationResult,ImplementationResult>",
      "type": "object"
    },
    "ItemEdge<ImplementationResult,Range>": {
      "additionalProperties": false,
      "properties": {
        "_": {
          "additionalItems": {
            "anyOf": [
              {
                "$ref": "#/definitions/ImplementationResult"
              },
              {
                "$ref": "#/definitions/Range_1"
              }
            ]
          },
          "items": [
            {
              "$ref": "#/definitions/ImplementationResult"
            },
            {
              "$ref": "#/definitions/Range_1"
            }
          ],
          "minItems": 2,
          "title": "_",
          "type": "array"
        },
        "document": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "document",
          "type": ["string", "number"]
        },
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "inVs": {
          "description": "The ids of the to vertices.",
          "items": {
            "type": ["string", "number"]
          },
          "title": "inVs",
          "type": "array"
        },
        "label": {
          "enum": ["item"],
          "title": "label",
          "type": "string"
        },
        "outV": {
          "description": "The id of the from vertex.",
          "title": "outV",
          "type": ["string", "number"]
        },
        "property": {
          "enum": ["declarations", "definitions", "implementationResults", "referenceResults", "references"],
          "title": "property",
          "type": "string"
        },
        "type": {
          "enum": ["edge"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["document", "id", "inVs", "label", "outV", "type"],
      "title": "ItemEdge<ImplementationResult,Range>",
      "type": "object"
    },
    "ItemEdge<ReferenceResult,Range>": {
      "additionalProperties": false,
      "properties": {
        "_": {
          "additionalItems": {
            "anyOf": [
              {
                "$ref": "#/definitions/ReferenceResult"
              },
              {
                "$ref": "#/definitions/Range_1"
              }
            ]
          },
          "items": [
            {
              "$ref": "#/definitions/ReferenceResult"
            },
            {
              "$ref": "#/definitions/Range_1"
            }
          ],
          "minItems": 2,
          "title": "_",
          "type": "array"
        },
        "document": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "document",
          "type": ["string", "number"]
        },
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "inVs": {
          "description": "The ids of the to vertices.",
          "items": {
            "type": ["string", "number"]
          },
          "title": "inVs",
          "type": "array"
        },
        "label": {
          "enum": ["item"],
          "title": "label",
          "type": "string"
        },
        "outV": {
          "description": "The id of the from vertex.",
          "title": "outV",
          "type": ["string", "number"]
        },
        "property": {
          "enum": ["declarations", "definitions", "implementationResults", "referenceResults", "references"],
          "title": "property",
          "type": "string"
        },
        "type": {
          "enum": ["edge"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["document", "id", "inVs", "label", "outV", "type"],
      "title": "ItemEdge<ReferenceResult,Range>",
      "type": "object"
    },
    "ItemEdge<ReferenceResult,ReferenceResult>": {
      "additionalProperties": false,
      "properties": {
        "_": {
          "additionalItems": {
            "anyOf": [
              {
                "$ref": "#/definitions/ReferenceResult"
              },
              {
                "$ref": "#/definitions/ReferenceResult"
              }
            ]
          },
          "items": [
            {
              "$ref": "#/definitions/ReferenceResult"
            },
            {
              "$ref": "#/definitions/ReferenceResult"
            }
          ],
          "minItems": 2,
          "title": "_",
          "type": "array"
        },
        "document": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "document",
          "type": ["string", "number"]
        },
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "inVs": {
          "description": "The ids of the to vertices.",
          "items": {
            "type": ["string", "number"]
          },
          "title": "inVs",
          "type": "array"
        },
        "label": {
          "enum": ["item"],
          "title": "label",
          "type": "string"
        },
        "outV": {
          "description": "The id of the from vertex.",
          "title": "outV",
          "type": ["string", "number"]
        },
        "property": {
          "enum": ["declarations", "definitions", "implementationResults", "referenceResults", "references"],
          "title": "property",
          "type": "string"
        },
        "type": {
          "enum": ["edge"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["document", "id", "inVs", "label", "outV", "type"],
      "title": "ItemEdge<ReferenceResult,ReferenceResult>",
      "type": "object"
    },
    "ItemEdge<TypeDefinitionResult,Range>": {
      "additionalProperties": false,
      "properties": {
        "_": {
          "additionalItems": {
            "anyOf": [
              {
                "$ref": "#/definitions/TypeDefinitionResult"
              },
              {
                "$ref": "#/definitions/Range_1"
              }
            ]
          },
          "items": [
            {
              "$ref": "#/definitions/TypeDefinitionResult"
            },
            {
              "$ref": "#/definitions/Range_1"
            }
          ],
          "minItems": 2,
          "title": "_",
          "type": "array"
        },
        "document": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "document",
          "type": ["string", "number"]
        },
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "inVs": {
          "description": "The ids of the to vertices.",
          "items": {
            "type": ["string", "number"]
          },
          "title": "inVs",
          "type": "array"
        },
        "label": {
          "enum": ["item"],
          "title": "label",
          "type": "string"
        },
        "outV": {
          "description": "The id of the from vertex.",
          "title": "outV",
          "type": ["string", "number"]
        },
        "property": {
          "enum": ["declarations", "definitions", "implementationResults", "referenceResults", "references"],
          "title": "property",
          "type": "string"
        },
        "type": {
          "enum": ["edge"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["document", "id", "inVs", "label", "outV", "type"],
      "title": "ItemEdge<TypeDefinitionResult,Range>",
      "type": "object"
    },
    "ItemEdgeProperties": {
      "enum": ["declarations", "definitions", "implementationResults", "referenceResults", "references"],
      "type": "string"
    },
    "Location": {
      "additionalProperties": false,
      "description": "Represents a location inside a resource, such as a line\ninside a text file.\nThe Location namespace provides helper functions to work with\n[Location](#Location) literals.",
      "properties": {
        "range": {
          "$ref": "#/definitions/Range",
          "title": "range"
        },
        "uri": {
          "title": "uri",
          "type": "string"
        }
      },
      "required": ["range", "uri"],
      "title": "Location",
      "type": "object"
    },
    "MarkupContent": {
      "additionalProperties": false,
      "description": "A `MarkupContent` literal represents a string value which content is interpreted base on its\nkind flag. Currently the protocol supports `plaintext` and `markdown` as markup kinds.\n\nIf the kind is `markdown` then the value can contain fenced code blocks like in GitHub issues.\nSee https://help.github.com/articles/creating-and-highlighting-code-blocks/#syntax-highlighting\n\nHere is an example how such a string can be constructed using JavaScript / TypeScript:\n```ts\nlet markdown: MarkdownContent = {\n  kind: MarkupKind.Markdown,\nvalue: [\n\t\t'# Header',\n\t\t'Some text',\n\t\t'```typescript',\n\t\t'someCode();',\n\t\t'```'\n].join('\\n')\n};\n```\n\n*Please Note* that clients might sanitize the return markdown. A client could decide to\nremove HTML from the markdown to avoid script execution.",
      "properties": {
        "kind": {
          "$ref": "#/definitions/MarkupKind",
          "description": "The type of the Markup",
          "title": "kind"
        },
        "value": {
          "description": "The content itself",
          "title": "value",
          "type": "string"
        }
      },
      "required": ["kind", "value"],
      "title": "MarkupContent",
      "type": "object"
    },
    "MarkupKind": {
      "description": "Describes the content type that a client supports in various\nresult literals like `Hover`, `ParameterInfo` or `CompletionItem`.\n\nPlease note that `MarkupKinds` must not start with a `$`. This kinds\nare reserved for internal usage.",
      "enum": ["markdown", "plaintext"],
      "title": "MarkupKind",
      "type": "string"
    },
    "MetaData": {
      "additionalProperties": false,
      "description": "The meta data vertex.",
      "properties": {
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "label": {
          "description": "The label property.",
          "enum": ["metaData"],
          "title": "label",
          "type": "string"
        },
        "positionEncoding": {
          "description": "The string encoding used to compute line and character values in\npositions and ranges. Currently only 'utf-16' is support due to the\nlimitations in LSP.",
          "enum": ["utf-16"],
          "title": "positionEncoding",
          "type": "string"
        },
        "projectRoot": {
          "description": "The project root (in form of a URI) used to compute this dump.",
          "title": "projectRoot",
          "type": "string"
        },
        "toolInfo": {
          "additionalProperties": false,
          "description": "Information about the tool that created the dump",
          "properties": {
            "args": {
              "items": {
                "type": "string"
              },
              "title": "args",
              "type": "array"
            },
            "name": {
              "title": "name",
              "type": "string"
            },
            "version": {
              "title": "version",
              "type": "string"
            }
          },
          "required": ["name"],
          "title": "toolInfo",
          "type": "object"
        },
        "type": {
          "enum": ["vertex"],
          "title": "type",
          "type": "string"
        },
        "version": {
          "description": "The version of the LSIF format using semver notation. See https://semver.org/",
          "title": "version",
          "type": "string"
        }
      },
      "required": ["id", "label", "positionEncoding", "projectRoot", "type", "version"],
      "title": "MetaData",
      "type": "object"
    },
    "Moniker": {
      "additionalProperties": false,
      "properties": {
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "identifier": {
          "description": "The identifier of the moniker. The value is opaque in LSIF however\nschema owners are allowed to define the structure if they want.",
          "title": "identifier",
          "type": "string"
        },
        "kind": {
          "description": "The moniker kind if known.",
          "enum": ["export", "import", "local"],
          "title": "kind",
          "type": "string"
        },
        "label": {
          "enum": ["moniker"],
          "title": "label",
          "type": "string"
        },
        "scheme": {
          "description": "The scheme of the moniker. For example tsc or .Net",
          "title": "scheme",
          "type": "string"
        },
        "type": {
          "enum": ["vertex"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "identifier", "label", "scheme", "type"],
      "title": "Moniker",
      "type": "object"
    },
    "MonikerKind": {
      "description": "The moniker kind.",
      "enum": ["export", "import", "local"],
      "type": "string"
    },
    "PackageInformation": {
      "additionalProperties": false,
      "properties": {
        "contents": {
          "description": "Optional the content of the document, `based64` encoded",
          "title": "contents",
          "type": "string"
        },
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "label": {
          "enum": ["packageInformation"],
          "title": "label",
          "type": "string"
        },
        "manager": {
          "description": "The package manager",
          "title": "manager",
          "type": "string"
        },
        "name": {
          "description": "The package name",
          "title": "name",
          "type": "string"
        },
        "repository": {
          "additionalProperties": false,
          "description": "Otional information about the repository containing the source of the package",
          "properties": {
            "commitId": {
              "description": "A commitId if available.",
              "title": "commitId",
              "type": "string"
            },
            "type": {
              "description": "The repository type. For example GIT",
              "title": "type",
              "type": "string"
            },
            "url": {
              "description": "The URL to the repository",
              "title": "url",
              "type": "string"
            }
          },
          "required": ["type", "url"],
          "title": "repository",
          "type": "object"
        },
        "type": {
          "enum": ["vertex"],
          "title": "type",
          "type": "string"
        },
        "uri": {
          "description": "A uri pointing to the location of the file describing the package.",
          "title": "uri",
          "type": "string"
        },
        "version": {
          "description": "The package version if available",
          "title": "version",
          "type": "string"
        }
      },
      "required": ["id", "label", "manager", "name", "type"],
      "title": "PackageInformation",
      "type": "object"
    },
    "Position": {
      "additionalProperties": false,
      "description": "Position in a text document expressed as zero-based line and character offset.\nThe offsets are based on a UTF-16 string representation. So a string of the form\n`a𐐀b` the character offset of the character `a` is 0, the character offset of `𐐀`\nis 1 and the character offset of b is 3 since `𐐀` is represented using two code\nunits in UTF-16.\n\nPositions are line end character agnostic. So you can not specify a position that\ndenotes `\\r|\\n` or `\\n|` where `|` represents the character offset.\nThe Position namespace provides helper functions to work with\n[Position](#Position) literals.",
      "properties": {
        "character": {
          "description": "Character offset on a line in a document (zero-based). Assuming that the line is\nrepresented as a string, the `character` value represents the gap between the\n`character` and `character + 1`.\n\nIf the character value is greater than the line length it defaults back to the\nline length.\nIf a line number is negative, it defaults to 0.",
          "title": "character",
          "type": "number"
        },
        "line": {
          "description": "Line position in a document (zero-based).\nIf a line number is greater than the number of lines in a document, it defaults back to the number of lines in the document.\nIf a line number is negative, it defaults to 0.",
          "title": "line",
          "type": "number"
        }
      },
      "required": ["character", "line"],
      "title": "Position",
      "type": "object"
    },
    "Project": {
      "additionalProperties": false,
      "description": "A project vertex.",
      "properties": {
        "contents": {
          "description": "Optional the content of the project file, `base64` encoded.",
          "title": "contents",
          "type": "string"
        },
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "kind": {
          "description": "The project kind like 'typescript' or 'csharp'. See also the language ids\nin the [specification](https://microsoft.github.io/language-server-protocol/specification)",
          "title": "kind",
          "type": "string"
        },
        "label": {
          "description": "The label property.",
          "enum": ["project"],
          "title": "label",
          "type": "string"
        },
        "resource": {
          "description": "The resource URI of the project file.",
          "title": "resource",
          "type": "string"
        },
        "type": {
          "enum": ["vertex"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "kind", "label", "type"],
      "title": "Project",
      "type": "object"
    },
    "ProjectEvent": {
      "additionalProperties": false,
      "properties": {
        "data": {
          "description": "The id of the project vertex.",
          "title": "data",
          "type": ["string", "number"]
        },
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "kind": {
          "$ref": "#/definitions/EventKind",
          "description": "The event kind.",
          "title": "kind"
        },
        "label": {
          "enum": ["$event"],
          "title": "label",
          "type": "string"
        },
        "scope": {
          "description": "The event scope.",
          "enum": ["project"],
          "title": "scope",
          "type": "string"
        },
        "type": {
          "enum": ["vertex"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["data", "id", "kind", "label", "scope", "type"],
      "title": "ProjectEvent",
      "type": "object"
    },
    "Range": {
      "additionalProperties": false,
      "description": "A range in a text document expressed as (zero-based) start and end positions.\n\nIf you want to specify a range that contains a line including the line ending\ncharacter(s) then use an end position denoting the start of the next line.\nFor example:\n```ts\n{\n     start: { line: 5, character: 23 }\n     end : { line 6, character : 0 }\n}\n```\nThe Range namespace provides helper functions to work with\n[Range](#Range) literals.",
      "properties": {
        "end": {
          "$ref": "#/definitions/Position",
          "description": "The range's end position.",
          "title": "end"
        },
        "start": {
          "$ref": "#/definitions/Position",
          "description": "The range's start position",
          "title": "start"
        }
      },
      "required": ["end", "start"],
      "title": "Range",
      "type": "object"
    },
    "RangeBasedDocumentSymbol": {
      "additionalProperties": false,
      "description": "A range based document symbol. This allows to reuse already\nemitted ranges with a `declaration` tag in a document symbol\nresult.",
      "properties": {
        "children": {
          "description": "The child symbols.",
          "items": {
            "$ref": "#/definitions/RangeBasedDocumentSymbol"
          },
          "title": "children",
          "type": "array"
        },
        "id": {
          "description": "The range to reference.",
          "title": "id",
          "type": ["string", "number"]
        }
      },
      "required": ["id"],
      "title": "RangeBasedDocumentSymbol",
      "type": "object"
    },
    "RangeId": {
      "type": ["string", "number"]
    },
    "RangeTag": {
      "anyOf": [
        {
          "$ref": "#/definitions/DeclarationTag"
        },
        {
          "$ref": "#/definitions/DefinitionTag"
        },
        {
          "$ref": "#/definitions/ReferenceTag"
        },
        {
          "$ref": "#/definitions/UnknownTag"
        }
      ]
    },
    "RangeTagTypes": {
      "description": "All know range tag literal types.",
      "enum": ["declaration", "definition", "reference", "unknown"],
      "type": "string"
    },
    "Range_1": {
      "additionalProperties": false,
      "description": "A vertex representing a range inside a document.",
      "properties": {
        "end": {
          "$ref": "#/definitions/Position",
          "description": "The range's end position.",
          "title": "end"
        },
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "label": {
          "enum": ["range"],
          "title": "label",
          "type": "string"
        },
        "start": {
          "$ref": "#/definitions/Position",
          "description": "The range's start position",
          "title": "start"
        },
        "tag": {
          "anyOf": [
            {
              "$ref": "#/definitions/DeclarationTag"
            },
            {
              "$ref": "#/definitions/DefinitionTag"
            },
            {
              "$ref": "#/definitions/ReferenceTag"
            },
            {
              "$ref": "#/definitions/UnknownTag"
            }
          ],
          "description": "Some optional meta data for the range.",
          "title": "tag"
        },
        "type": {
          "enum": ["vertex"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["end", "id", "label", "start", "type"],
      "title": "Range_1",
      "type": "object"
    },
    "ReferenceRange": {
      "additionalProperties": false,
      "description": "A range representing a reference.",
      "properties": {
        "end": {
          "$ref": "#/definitions/Position",
          "description": "The range's end position.",
          "title": "end"
        },
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "label": {
          "enum": ["range"],
          "title": "label",
          "type": "string"
        },
        "start": {
          "$ref": "#/definitions/Position",
          "description": "The range's start position",
          "title": "start"
        },
        "tag": {
          "$ref": "#/definitions/ReferenceTag",
          "description": "The reference meta data.",
          "title": "tag"
        },
        "type": {
          "enum": ["vertex"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["end", "id", "label", "start", "tag", "type"],
      "type": "object"
    },
    "ReferenceResult": {
      "additionalProperties": false,
      "description": "A vertex representing a reference result.",
      "properties": {
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "label": {
          "description": "The label property.",
          "enum": ["referenceResult"],
          "title": "label",
          "type": "string"
        },
        "type": {
          "enum": ["vertex"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "label", "type"],
      "title": "ReferenceResult",
      "type": "object"
    },
    "ReferenceTag": {
      "additionalProperties": false,
      "description": "The range represents a reference.",
      "properties": {
        "text": {
          "description": "The text covered by the range.",
          "title": "text",
          "type": "string"
        },
        "type": {
          "description": "A type identifier for the reference tag.",
          "enum": ["reference"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["text", "type"],
      "title": "ReferenceTag",
      "type": "object"
    },
    "ResultSet": {
      "additionalProperties": false,
      "description": "A result set acts as a hub to share n LSP request results\nbetween different ranges.",
      "properties": {
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "label": {
          "enum": ["resultSet"],
          "title": "label",
          "type": "string"
        },
        "type": {
          "enum": ["vertex"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "label", "type"],
      "title": "ResultSet",
      "type": "object"
    },
    "S": {
      "additionalProperties": false,
      "properties": {
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "label": {
          "$ref": "#/definitions/VertexLabels",
          "title": "label"
        },
        "type": {
          "enum": ["vertex"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "label", "type"],
      "title": "S",
      "type": "object"
    },
    "S_1": {
      "additionalProperties": false,
      "properties": {
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "label": {
          "$ref": "#/definitions/VertexLabels",
          "title": "label"
        },
        "type": {
          "enum": ["vertex"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "label", "type"],
      "title": "S_1",
      "type": "object"
    },
    "S_2": {
      "additionalProperties": false,
      "properties": {
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "label": {
          "$ref": "#/definitions/VertexLabels",
          "title": "label"
        },
        "type": {
          "enum": ["vertex"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "label", "type"],
      "title": "S_2",
      "type": "object"
    },
    "S_3": {
      "additionalProperties": false,
      "properties": {
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "label": {
          "$ref": "#/definitions/VertexLabels",
          "title": "label"
        },
        "type": {
          "enum": ["vertex"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "label", "type"],
      "title": "S_3",
      "type": "object"
    },
    "T": {
      "additionalProperties": false,
      "properties": {
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "label": {
          "$ref": "#/definitions/VertexLabels",
          "title": "label"
        },
        "type": {
          "enum": ["vertex"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "label", "type"],
      "title": "T",
      "type": "object"
    },
    "T_1": {
      "additionalProperties": false,
      "properties": {
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "label": {
          "$ref": "#/definitions/VertexLabels",
          "title": "label"
        },
        "type": {
          "enum": ["vertex"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "label", "type"],
      "title": "T_1",
      "type": "object"
    },
    "T_2": {
      "additionalProperties": false,
      "properties": {
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "label": {
          "$ref": "#/definitions/VertexLabels",
          "title": "label"
        },
        "type": {
          "enum": ["vertex"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "label", "type"],
      "title": "T_2",
      "type": "object"
    },
    "T_3": {
      "additionalProperties": false,
      "properties": {
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "label": {
          "$ref": "#/definitions/VertexLabels",
          "title": "label"
        },
        "type": {
          "enum": ["vertex"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "label", "type"],
      "title": "T_3",
      "type": "object"
    },
    "TypeDefinitionResult": {
      "additionalProperties": false,
      "description": "A vertex representing a type definition result.",
      "properties": {
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "label": {
          "description": "The label property.",
          "enum": ["typeDefinitionResult"],
          "title": "label",
          "type": "string"
        },
        "type": {
          "enum": ["vertex"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "label", "type"],
      "title": "TypeDefinitionResult",
      "type": "object"
    },
    "UnknownTag": {
      "additionalProperties": false,
      "description": "The type of the range is unknown.",
      "properties": {
        "text": {
          "description": "The text covered by the range.",
          "title": "text",
          "type": "string"
        },
        "type": {
          "description": "A type identifier for the unknown tag.",
          "enum": ["unknown"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["text", "type"],
      "title": "UnknownTag",
      "type": "object"
    },
    "Uri": {
      "description": "Uris are currently stored as strings.",
      "type": "string"
    },
    "V": {
      "additionalProperties": false,
      "properties": {
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "label": {
          "$ref": "#/definitions/VertexLabels",
          "title": "label"
        },
        "type": {
          "enum": ["vertex"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "label", "type"],
      "type": "object"
    },
    "Vertex": {
      "anyOf": [
        {
          "$ref": "#/definitions/ProjectEvent"
        },
        {
          "$ref": "#/definitions/DocumentEvent"
        },
        {
          "$ref": "#/definitions/ResultSet"
        },
        {
          "$ref": "#/definitions/Range_1"
        },
        {
          "$ref": "#/definitions/MetaData"
        },
        {
          "$ref": "#/definitions/Project"
        },
        {
          "$ref": "#/definitions/Document"
        },
        {
          "$ref": "#/definitions/Moniker"
        },
        {
          "$ref": "#/definitions/PackageInformation"
        },
        {
          "$ref": "#/definitions/DocumentSymbolResult"
        },
        {
          "$ref": "#/definitions/DiagnosticResult"
        },
        {
          "$ref": "#/definitions/FoldingRangeResult"
        },
        {
          "$ref": "#/definitions/DocumentLinkResult"
        },
        {
          "$ref": "#/definitions/DeclarationResult"
        },
        {
          "$ref": "#/definitions/DefinitionResult"
        },
        {
          "$ref": "#/definitions/TypeDefinitionResult"
        },
        {
          "$ref": "#/definitions/ReferenceResult"
        },
        {
          "$ref": "#/definitions/ImplementationResult"
        },
        {
          "$ref": "#/definitions/HoverResult"
        }
      ]
    },
    "VertexLabels": {
      "description": "All know vertices label values.",
      "enum": [
        "$event",
        "declarationResult",
        "definitionResult",
        "diagnosticResult",
        "document",
        "documentLinkResult",
        "documentSymbolResult",
        "foldingRangeResult",
        "hoverResult",
        "implementationResult",
        "location",
        "metaData",
        "moniker",
        "packageInformation",
        "project",
        "range",
        "referenceResult",
        "resultSet",
        "typeDefinitionResult"
      ],
      "title": "VertexLabels",
      "type": "string"
    },
    "contains": {
      "anyOf": [
        {
          "$ref": "#/definitions/E1N<Project,Document,EdgeLabels.contains>"
        },
        {
          "$ref": "#/definitions/E1N<Document,Range,EdgeLabels.contains>"
        }
      ]
    },
    "item": {
      "anyOf": [
        {
          "$ref": "#/definitions/ItemEdge<DeclarationResult,Range>"
        },
        {
          "$ref": "#/definitions/ItemEdge<DefinitionResult,Range>"
        },
        {
          "$ref": "#/definitions/ItemEdge<TypeDefinitionResult,Range>"
        },
        {
          "$ref": "#/definitions/ItemEdge<ReferenceResult,Range>"
        },
        {
          "$ref": "#/definitions/ItemEdge<ReferenceResult,ReferenceResult>"
        },
        {
          "$ref": "#/definitions/ItemEdge<ImplementationResult,Range>"
        },
        {
          "$ref": "#/definitions/ItemEdge<ImplementationResult,ImplementationResult>"
        }
      ]
    },
    "moniker": {
      "anyOf": [
        {
          "$ref": "#/definitions/E11<Range,Moniker,EdgeLabels.moniker>"
        },
        {
          "$ref": "#/definitions/E11<ResultSet,Moniker,EdgeLabels.moniker>"
        },
        {
          "$ref": "#/definitions/E11<DeclarationResult,Moniker,EdgeLabels.moniker>"
        },
        {
          "$ref": "#/definitions/E11<DefinitionResult,Moniker,EdgeLabels.moniker>"
        },
        {
          "$ref": "#/definitions/E11<TypeDefinitionResult,Moniker,EdgeLabels.moniker>"
        },
        {
          "$ref": "#/definitions/E11<ReferenceResult,Moniker,EdgeLabels.moniker>"
        },
        {
          "$ref": "#/definitions/E11<ImplementationResult,Moniker,EdgeLabels.moniker>"
        }
      ]
    },
    "next": {
      "additionalProperties": false,
      "description": "A common base type of all edge types. The type parameters `S` and `T` are for typing and\ndocumentation purpose only. An edge never holds a direct reference to a vertex. They are\nreferenced by `Id`.",
      "properties": {
        "_": {
          "additionalItems": {
            "anyOf": [
              {
                "$ref": "#/definitions/Range_1"
              },
              {
                "$ref": "#/definitions/ResultSet"
              }
            ]
          },
          "items": [
            {
              "$ref": "#/definitions/Range_1"
            },
            {
              "$ref": "#/definitions/ResultSet"
            }
          ],
          "minItems": 2,
          "title": "_",
          "type": "array"
        },
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "inV": {
          "description": "The id of the to Vertex.",
          "title": "inV",
          "type": ["string", "number"]
        },
        "label": {
          "enum": ["next"],
          "title": "label",
          "type": "string"
        },
        "outV": {
          "description": "The id of the from Vertex.",
          "title": "outV",
          "type": ["string", "number"]
        },
        "type": {
          "enum": ["edge"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "inV", "label", "outV", "type"],
      "type": "object"
    },
    "nextMoniker": {
      "additionalProperties": false,
      "description": "A common base type of all edge types. The type parameters `S` and `T` are for typing and\ndocumentation purpose only. An edge never holds a direct reference to a vertex. They are\nreferenced by `Id`.",
      "properties": {
        "_": {
          "additionalItems": {
            "anyOf": [
              {
                "$ref": "#/definitions/Moniker"
              },
              {
                "$ref": "#/definitions/Moniker"
              }
            ]
          },
          "items": [
            {
              "$ref": "#/definitions/Moniker"
            },
            {
              "$ref": "#/definitions/Moniker"
            }
          ],
          "minItems": 2,
          "title": "_",
          "type": "array"
        },
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "inV": {
          "description": "The id of the to Vertex.",
          "title": "inV",
          "type": ["string", "number"]
        },
        "label": {
          "enum": ["nextMoniker"],
          "title": "label",
          "type": "string"
        },
        "outV": {
          "description": "The id of the from Vertex.",
          "title": "outV",
          "type": ["string", "number"]
        },
        "type": {
          "enum": ["edge"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "inV", "label", "outV", "type"],
      "type": "object"
    },
    "packageInformation": {
      "additionalProperties": false,
      "description": "A common base type of all edge types. The type parameters `S` and `T` are for typing and\ndocumentation purpose only. An edge never holds a direct reference to a vertex. They are\nreferenced by `Id`.",
      "properties": {
        "_": {
          "additionalItems": {
            "anyOf": [
              {
                "$ref": "#/definitions/Moniker"
              },
              {
                "$ref": "#/definitions/PackageInformation"
              }
            ]
          },
          "items": [
            {
              "$ref": "#/definitions/Moniker"
            },
            {
              "$ref": "#/definitions/PackageInformation"
            }
          ],
          "minItems": 2,
          "title": "_",
          "type": "array"
        },
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "inV": {
          "description": "The id of the to Vertex.",
          "title": "inV",
          "type": ["string", "number"]
        },
        "label": {
          "enum": ["packageInformation"],
          "title": "label",
          "type": "string"
        },
        "outV": {
          "description": "The id of the from Vertex.",
          "title": "outV",
          "type": ["string", "number"]
        },
        "type": {
          "enum": ["edge"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "inV", "label", "outV", "type"],
      "type": "object"
    },
    "textDocument_declaration": {
      "anyOf": [
        {
          "$ref": "#/definitions/E11<Range,DeclarationResult,EdgeLabels.textDocument_declaration>"
        },
        {
          "$ref": "#/definitions/E11<ResultSet,DeclarationResult,EdgeLabels.textDocument_declaration>"
        }
      ]
    },
    "textDocument_definition": {
      "anyOf": [
        {
          "$ref": "#/definitions/E11<Range,DefinitionResult,EdgeLabels.textDocument_definition>"
        },
        {
          "$ref": "#/definitions/E11<ResultSet,DefinitionResult,EdgeLabels.textDocument_definition>"
        }
      ]
    },
    "textDocument_diagnostic": {
      "anyOf": [
        {
          "$ref": "#/definitions/E11<Project,DiagnosticResult,EdgeLabels.textDocument_diagnostic>"
        },
        {
          "$ref": "#/definitions/E11<Document,DiagnosticResult,EdgeLabels.textDocument_diagnostic>"
        }
      ]
    },
    "textDocument_documentLink": {
      "additionalProperties": false,
      "description": "A common base type of all edge types. The type parameters `S` and `T` are for typing and\ndocumentation purpose only. An edge never holds a direct reference to a vertex. They are\nreferenced by `Id`.",
      "properties": {
        "_": {
          "additionalItems": {
            "anyOf": [
              {
                "$ref": "#/definitions/Document"
              },
              {
                "$ref": "#/definitions/DocumentLinkResult"
              }
            ]
          },
          "items": [
            {
              "$ref": "#/definitions/Document"
            },
            {
              "$ref": "#/definitions/DocumentLinkResult"
            }
          ],
          "minItems": 2,
          "title": "_",
          "type": "array"
        },
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "inV": {
          "description": "The id of the to Vertex.",
          "title": "inV",
          "type": ["string", "number"]
        },
        "label": {
          "enum": ["textDocument/documentLink"],
          "title": "label",
          "type": "string"
        },
        "outV": {
          "description": "The id of the from Vertex.",
          "title": "outV",
          "type": ["string", "number"]
        },
        "type": {
          "enum": ["edge"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "inV", "label", "outV", "type"],
      "type": "object"
    },
    "textDocument_documentSymbol": {
      "additionalProperties": false,
      "description": "A common base type of all edge types. The type parameters `S` and `T` are for typing and\ndocumentation purpose only. An edge never holds a direct reference to a vertex. They are\nreferenced by `Id`.",
      "properties": {
        "_": {
          "additionalItems": {
            "anyOf": [
              {
                "$ref": "#/definitions/Document"
              },
              {
                "$ref": "#/definitions/DocumentSymbolResult"
              }
            ]
          },
          "items": [
            {
              "$ref": "#/definitions/Document"
            },
            {
              "$ref": "#/definitions/DocumentSymbolResult"
            }
          ],
          "minItems": 2,
          "title": "_",
          "type": "array"
        },
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "inV": {
          "description": "The id of the to Vertex.",
          "title": "inV",
          "type": ["string", "number"]
        },
        "label": {
          "enum": ["textDocument/documentSymbol"],
          "title": "label",
          "type": "string"
        },
        "outV": {
          "description": "The id of the from Vertex.",
          "title": "outV",
          "type": ["string", "number"]
        },
        "type": {
          "enum": ["edge"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "inV", "label", "outV", "type"],
      "type": "object"
    },
    "textDocument_foldingRange": {
      "additionalProperties": false,
      "description": "A common base type of all edge types. The type parameters `S` and `T` are for typing and\ndocumentation purpose only. An edge never holds a direct reference to a vertex. They are\nreferenced by `Id`.",
      "properties": {
        "_": {
          "additionalItems": {
            "anyOf": [
              {
                "$ref": "#/definitions/Document"
              },
              {
                "$ref": "#/definitions/FoldingRangeResult"
              }
            ]
          },
          "items": [
            {
              "$ref": "#/definitions/Document"
            },
            {
              "$ref": "#/definitions/FoldingRangeResult"
            }
          ],
          "minItems": 2,
          "title": "_",
          "type": "array"
        },
        "id": {
          "description": "An `Id` to identify a vertex or an edge.",
          "title": "id",
          "type": ["string", "number"]
        },
        "inV": {
          "description": "The id of the to Vertex.",
          "title": "inV",
          "type": ["string", "number"]
        },
        "label": {
          "enum": ["textDocument/foldingRange"],
          "title": "label",
          "type": "string"
        },
        "outV": {
          "description": "The id of the from Vertex.",
          "title": "outV",
          "type": ["string", "number"]
        },
        "type": {
          "enum": ["edge"],
          "title": "type",
          "type": "string"
        }
      },
      "required": ["id", "inV", "label", "outV", "type"],
      "type": "object"
    },
    "textDocument_hover": {
      "anyOf": [
        {
          "$ref": "#/definitions/E11<Range,HoverResult,EdgeLabels.textDocument_hover>"
        },
        {
          "$ref": "#/definitions/E11<ResultSet,HoverResult,EdgeLabels.textDocument_hover>"
        }
      ]
    },
    "textDocument_implementation": {
      "anyOf": [
        {
          "$ref": "#/definitions/E11<Range,ImplementationResult,EdgeLabels.textDocument_implementation>"
        },
        {
          "$ref": "#/definitions/E11<ResultSet,ImplementationResult,EdgeLabels.textDocument_implementation>"
        }
      ]
    },
    "textDocument_references": {
      "anyOf": [
        {
          "$ref": "#/definitions/E11<Range,ReferenceResult,EdgeLabels.textDocument_references>"
        },
        {
          "$ref": "#/definitions/E11<ResultSet,ReferenceResult,EdgeLabels.textDocument_references>"
        }
      ]
    },
    "textDocument_typeDefinition": {
      "anyOf": [
        {
          "$ref": "#/definitions/E11<Range,TypeDefinitionResult,EdgeLabels.textDocument_typeDefinition>"
        },
        {
          "$ref": "#/definitions/E11<ResultSet,TypeDefinitionResult,EdgeLabels.textDocument_typeDefinition>"
        }
      ]
    }
  }
}
