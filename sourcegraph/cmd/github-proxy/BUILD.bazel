load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
load("@rules_oci//oci:defs.bzl", "oci_image", "oci_push", "oci_tarball")
load("@rules_pkg//:pkg.bzl", "pkg_tar")
load("@container_structure_test//:defs.bzl", "container_structure_test")
load("//dev:oci_defs.bzl", "image_repository")

go_library(
    name = "github-proxy_lib",
    srcs = ["github-proxy.go"],
    importpath = "github.com/sourcegraph/sourcegraph/cmd/github-proxy",
    visibility = ["//visibility:private"],
    x_defs = {
        "github.com/sourcegraph/sourcegraph/internal/version.version": "{STABLE_VERSION}",
        "github.com/sourcegraph/sourcegraph/internal/version.timestamp": "{VERSION_TIMESTAMP}",
    },
    deps = [
        "//cmd/github-proxy/shared",
        "//cmd/sourcegraph-oss/osscmd",
        "//internal/sanitycheck",
    ],
)

go_binary(
    name = "github-proxy",
    embed = [":github-proxy_lib"],
    visibility = ["//visibility:public"],
)

pkg_tar(
    name = "tar_github-proxy",
    srcs = [":github-proxy"],
)

oci_image(
    name = "image",
    base = "@wolfi_base",
    entrypoint = [
        "/sbin/tini",
        "--",
        "/github-proxy",
    ],
    env = {
        "LOG_REQUEST": "true",
    },
    tars = [":tar_github-proxy"],
    user = "sourcegraph",
)

oci_tarball(
    name = "image_tarball",
    image = ":image",
    repo_tags = ["github-proxy:candidate"],
)

container_structure_test(
    name = "image_test",
    timeout = "short",
    configs = ["image_test.yaml"],
    driver = "docker",
    image = ":image",
    tags = ["requires-network"],
)

oci_push(
    name = "candidate_push",
    image = ":image",
    repository = image_repository("github-proxy"),
)
