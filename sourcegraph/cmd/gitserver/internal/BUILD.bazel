load("@io_bazel_rules_go//go:def.bzl", "go_library")
load("//dev:go_defs.bzl", "go_test")

go_library(
    name = "internal",
    srcs = [
        "cleanup.go",
        "clone.go",
        "disk.go",
        "ensurerevision.go",
        "gitservice.go",
        "list_gitolite.go",
        "lock.go",
        "observability.go",
        "p4exec.go",
        "patch.go",
        "repo_info.go",
        "search.go",
        "server.go",
        "server_grpc.go",
        "servermetrics.go",
        "serverutil.go",
        "statesyncer.go",
    ],
    embedsrcs = ["sg_maintenance.sh"],
    importpath = "github.com/sourcegraph/sourcegraph/cmd/gitserver/internal",
    visibility = ["//cmd/gitserver:__subpackages__"],
    deps = [
        "//cmd/frontend/envvar",
        "//cmd/gitserver/internal/accesslog",
        "//cmd/gitserver/internal/common",
        "//cmd/gitserver/internal/executil",
        "//cmd/gitserver/internal/git",
        "//cmd/gitserver/internal/gitserverfs",
        "//cmd/gitserver/internal/perforce",
        "//cmd/gitserver/internal/sshagent",
        "//cmd/gitserver/internal/urlredactor",
        "//cmd/gitserver/internal/vcssyncer",
        "//internal/actor",
        "//internal/api",
        "//internal/conf",
        "//internal/conf/deploy",
        "//internal/database",
        "//internal/database/dbutil",
        "//internal/diskusage",
        "//internal/env",
        "//internal/errcode",
        "//internal/extsvc/gitolite",
        "//internal/featureflag",
        "//internal/fileutil",
        "//internal/gitserver",
        "//internal/gitserver/gitdomain",
        "//internal/gitserver/protocol",
        "//internal/gitserver/search",
        "//internal/gitserver/v1:gitserver",
        "//internal/goroutine",
        "//internal/grpc/streamio",
        "//internal/honey",
        "//internal/hostname",
        "//internal/lazyregexp",
        "//internal/limiter",
        "//internal/metrics",
        "//internal/observation",
        "//internal/perforce",
        "//internal/ratelimit",
        "//internal/search/streaming/http",
        "//internal/security",
        "//internal/syncx",
        "//internal/trace",
        "//internal/types",
        "//internal/unpack",
        "//internal/vcs",
        "//internal/wrexec",
        "//lib/errors",
        "//lib/gitservice",
        "@com_github_mxk_go_flowrate//flowrate",
        "@com_github_prometheus_client_golang//prometheus",
        "@com_github_prometheus_client_golang//prometheus/promauto",
        "@com_github_sourcegraph_conc//:conc",
        "@com_github_sourcegraph_log//:log",
        "@com_github_sourcegraph_mountinfo//:mountinfo",
        "@io_opentelemetry_go_otel//attribute",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//status",
        "@org_golang_google_protobuf//encoding/protojson",
        "@org_golang_x_sync//errgroup",
        "@org_golang_x_sync//semaphore",
        "@org_golang_x_time//rate",
    ],
)

go_test(
    name = "internal_test",
    timeout = "moderate",
    srcs = [
        "cleanup_test.go",
        "list_gitolite_test.go",
        "main_test.go",
        "p4exec_test.go",
        "server_test.go",
        "serverutil_test.go",
    ],
    data = glob(["testdata/**"]),
    embed = [":internal"],
    # This test loads coursier as a side effect, so we ensure the
    # path is sandboxed properly.
    env = {"COURSIER_CACHE_DIR": "/tmp"},
    tags = [
        # Test requires localhost database
        "requires-network",
    ],
    deps = [
        "//cmd/gitserver/internal/common",
        "//cmd/gitserver/internal/executil",
        "//cmd/gitserver/internal/git",
        "//cmd/gitserver/internal/gitserverfs",
        "//cmd/gitserver/internal/perforce",
        "//cmd/gitserver/internal/vcssyncer",
        "//internal/actor",
        "//internal/api",
        "//internal/database",
        "//internal/database/dbmocks",
        "//internal/database/dbtest",
        "//internal/extsvc/gitolite",
        "//internal/gitserver",
        "//internal/gitserver/protocol",
        "//internal/gitserver/v1:gitserver",
        "//internal/grpc",
        "//internal/grpc/defaults",
        "//internal/limiter",
        "//internal/observation",
        "//internal/ratelimit",
        "//internal/types",
        "//internal/vcs",
        "//internal/wrexec",
        "//lib/errors",
        "//schema",
        "@com_github_google_go_cmp//cmp",
        "@com_github_google_go_cmp//cmp/cmpopts",
        "@com_github_sourcegraph_log//:log",
        "@com_github_sourcegraph_log//logtest",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//require",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//status",
        "@org_golang_x_sync//semaphore",
        "@org_golang_x_time//rate",
    ],
)
