load("@io_bazel_rules_go//go:def.bzl", "go_library")
load("//dev:go_defs.bzl", "go_test")

go_library(
    name = "vcssyncer",
    srcs = [
        "customfetch.go",
        "mock.go",
        "refspecoverrides.go",
        "vcs_packages_syncer.go",
        "vcs_syncer.go",
        "vcs_syncer_git.go",
        "vcs_syncer_go_modules.go",
        "vcs_syncer_jvm_packages.go",
        "vcs_syncer_npm_packages.go",
        "vcs_syncer_perforce.go",
        "vcs_syncer_python_packages.go",
        "vcs_syncer_ruby_packages.go",
        "vcs_syncer_rust_packages.go",
    ],
    importpath = "github.com/sourcegraph/sourcegraph/cmd/gitserver/internal/vcssyncer",
    visibility = ["//cmd/gitserver:__subpackages__"],
    deps = [
        "//cmd/gitserver/internal/common",
        "//cmd/gitserver/internal/executil",
        "//cmd/gitserver/internal/gitserverfs",
        "//cmd/gitserver/internal/perforce",
        "//cmd/gitserver/internal/urlredactor",
        "//internal/actor",
        "//internal/api",
        "//internal/codeintel/dependencies",
        "//internal/conf",
        "//internal/conf/reposource",
        "//internal/database",
        "//internal/env",
        "//internal/errcode",
        "//internal/extsvc",
        "//internal/extsvc/crates",
        "//internal/extsvc/gomodproxy",
        "//internal/extsvc/jvmpackages/coursier",
        "//internal/extsvc/npm",
        "//internal/extsvc/pypi",
        "//internal/extsvc/rubygems",
        "//internal/httpcli",
        "//internal/jsonc",
        "//internal/observation",
        "//internal/unpack",
        "//internal/vcs",
        "//internal/wrexec",
        "//lib/errors",
        "//schema",
        "@com_github_json_iterator_go//:go",
        "@com_github_sourcegraph_log//:log",
        "@org_golang_x_mod//module",
        "@org_golang_x_mod//zip",
    ],
)

go_test(
    name = "vcssyncer_test",
    srcs = [
        "customfetch_test.go",
        "vcs_packages_syncer_test.go",
        "vcs_syncer_go_modules_test.go",
        "vcs_syncer_jvm_packages_test.go",
        "vcs_syncer_npm_packages_test.go",
        "vcs_syncer_perforce_test.go",
        "vcs_syncer_python_packages_test.go",
        "vcs_syncer_test.go",
    ],
    data = glob(["testdata/**"]),
    embed = [":vcssyncer"],
    # This test loads coursier as a side effect, so we ensure the
    # path is sandboxed properly.
    env = {"COURSIER_CACHE_DIR": "/tmp"},
    tags = [
        # Test requires localhost database
        "requires-network",
    ],
    deps = [
        "//cmd/gitserver/internal/common",
        "//internal/api",
        "//internal/codeintel/dependencies",
        "//internal/conf/reposource",
        "//internal/database",
        "//internal/database/dbmocks",
        "//internal/database/dbtest",
        "//internal/extsvc",
        "//internal/extsvc/jvmpackages/coursier",
        "//internal/extsvc/npm",
        "//internal/extsvc/npm/npmtest",
        "//internal/extsvc/pypi",
        "//internal/httpcli",
        "//internal/httptestutil",
        "//internal/observation",
        "//internal/ratelimit",
        "//internal/testutil",
        "//internal/types",
        "//internal/vcs",
        "//lib/errors",
        "//schema",
        "@com_github_google_go_cmp//cmp",
        "@com_github_grafana_regexp//:regexp",
        "@com_github_sourcegraph_log//logtest",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//require",
        "@org_golang_x_exp//slices",
        "@org_golang_x_mod//module",
    ],
)
