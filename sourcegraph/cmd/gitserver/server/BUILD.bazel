load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "server",
    srcs = [
        "cleanup.go",
        "clone.go",
        "commands.go",
        "customfetch.go",
        "gitservice.go",
        "list_gitolite.go",
        "lock.go",
        "observability.go",
        "patch.go",
        "refspecoverrides.go",
        "repo_info.go",
        "server.go",
        "server_grpc.go",
        "servermetrics.go",
        "serverutil.go",
        "ssh_agent.go",
        "vcs_packages_syncer.go",
        "vcs_syncer.go",
        "vcs_syncer_git.go",
        "vcs_syncer_go_modules.go",
        "vcs_syncer_jvm_packages.go",
        "vcs_syncer_npm_packages.go",
        "vcs_syncer_perforce.go",
        "vcs_syncer_python_packages.go",
        "vcs_syncer_ruby_packages.go",
        "vcs_syncer_rust_packages.go",
    ],
    embedsrcs = ["sg_maintenance.sh"],
    importpath = "github.com/sourcegraph/sourcegraph/cmd/gitserver/server",
    visibility = ["//visibility:public"],
    deps = [
        "//cmd/gitserver/server/accesslog",
        "//cmd/gitserver/server/common",
        "//cmd/gitserver/server/internal/cacert",
        "//internal/actor",
        "//internal/api",
        "//internal/codeintel/dependencies",
        "//internal/conf",
        "//internal/conf/deploy",
        "//internal/conf/reposource",
        "//internal/database",
        "//internal/database/dbutil",
        "//internal/env",
        "//internal/errcode",
        "//internal/extsvc/crates",
        "//internal/extsvc/gitolite",
        "//internal/extsvc/gomodproxy",
        "//internal/extsvc/jvmpackages/coursier",
        "//internal/extsvc/npm",
        "//internal/extsvc/pypi",
        "//internal/extsvc/rubygems",
        "//internal/featureflag",
        "//internal/fileutil",
        "//internal/gitserver",
        "//internal/gitserver/adapters",
        "//internal/gitserver/gitdomain",
        "//internal/gitserver/protocol",
        "//internal/gitserver/search",
        "//internal/gitserver/v1:gitserver",
        "//internal/grpc/streamio",
        "//internal/honey",
        "//internal/hostname",
        "//internal/lazyregexp",
        "//internal/limiter",
        "//internal/metrics",
        "//internal/observation",
        "//internal/ratelimit",
        "//internal/search/streaming/http",
        "//internal/security",
        "//internal/syncx",
        "//internal/trace",
        "//internal/trace/ot",
        "//internal/types",
        "//internal/unpack",
        "//internal/vcs",
        "//internal/wrexec",
        "//lib/errors",
        "//lib/gitservice",
        "//schema",
        "@com_github_mxk_go_flowrate//flowrate",
        "@com_github_opentracing_opentracing_go//ext",
        "@com_github_opentracing_opentracing_go//log",
        "@com_github_prometheus_client_golang//prometheus",
        "@com_github_prometheus_client_golang//prometheus/promauto",
        "@com_github_sourcegraph_conc//:conc",
        "@com_github_sourcegraph_log//:log",
        "@com_github_sourcegraph_mountinfo//:mountinfo",
        "@io_opentelemetry_go_otel//attribute",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//status",
        "@org_golang_x_crypto//ssh",
        "@org_golang_x_crypto//ssh/agent",
        "@org_golang_x_mod//module",
        "@org_golang_x_mod//zip",
        "@org_golang_x_sync//errgroup",
        "@org_golang_x_sync//semaphore",
        "@org_golang_x_time//rate",
    ],
)

go_test(
    name = "server_test",
    srcs = [
        "cleanup_test.go",
        "customfetch_test.go",
        "list_gitolite_test.go",
        "server_test.go",
        "serverutil_test.go",
        "ssh_agent_test.go",
        "vcs_packages_syncer_test.go",
        "vcs_syncer_go_modules_test.go",
        "vcs_syncer_jvm_packages_test.go",
        "vcs_syncer_mock_test.go",
        "vcs_syncer_npm_packages_test.go",
        "vcs_syncer_perforce_test.go",
        "vcs_syncer_python_packages_test.go",
    ],
    data = glob(["testdata/**"]),
    embed = [":server"],
    # This test loads coursier as a side effect, so we ensure the
    # path is sandboxed properly.
    env = {"COURSIER_CACHE_DIR": "/tmp"},
    tags = [
        # Test requires localhost database
        "requires-network",
    ],
    deps = [
        "//cmd/gitserver/server/common",
        "//internal/actor",
        "//internal/api",
        "//internal/codeintel/dependencies",
        "//internal/conf",
        "//internal/conf/reposource",
        "//internal/database",
        "//internal/database/dbtest",
        "//internal/encryption",
        "//internal/extsvc/gitolite",
        "//internal/extsvc/jvmpackages/coursier",
        "//internal/extsvc/npm",
        "//internal/extsvc/npm/npmtest",
        "//internal/extsvc/pypi",
        "//internal/gitserver",
        "//internal/gitserver/protocol",
        "//internal/httpcli",
        "//internal/httptestutil",
        "//internal/limiter",
        "//internal/observation",
        "//internal/ratelimit",
        "//internal/testutil",
        "//internal/types",
        "//internal/vcs",
        "//internal/wrexec",
        "//lib/errors",
        "//schema",
        "@com_github_google_go_cmp//cmp",
        "@com_github_google_go_cmp//cmp/cmpopts",
        "@com_github_grafana_regexp//:regexp",
        "@com_github_sourcegraph_log//:log",
        "@com_github_sourcegraph_log//logtest",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//require",
        "@org_golang_x_crypto//ssh",
        "@org_golang_x_crypto//ssh/agent",
        "@org_golang_x_exp//slices",
        "@org_golang_x_mod//module",
        "@org_golang_x_sync//semaphore",
        "@org_golang_x_time//rate",
    ],
)
