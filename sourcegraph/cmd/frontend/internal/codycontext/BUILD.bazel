load("@io_bazel_rules_go//go:def.bzl", "go_library")
load("//dev:go_defs.bzl", "go_test")

go_library(
    name = "codycontext",
    srcs = [
        "context.go",
        "dotcom.go",
        "enterprise.go",
        "filter.go",
        "init.go",
    ],
    importpath = "github.com/sourcegraph/sourcegraph/cmd/frontend/internal/codycontext",
    visibility = ["//cmd/frontend:__subpackages__"],
    deps = [
        "//cmd/frontend/enterprise",
        "//cmd/frontend/internal/cody",
        "//internal/api",
        "//internal/codeintel",
        "//internal/conf",
        "//internal/conf/conftypes",
        "//internal/database",
        "//internal/dotcom",
        "//internal/embeddings",
        "//internal/gitserver",
        "//internal/metrics",
        "//internal/observation",
        "//internal/search",
        "//internal/search/client",
        "//internal/search/query",
        "//internal/search/result",
        "//internal/search/streaming",
        "//internal/types",
        "//lib/errors",
        "//lib/pointers",
        "//schema",
        "@com_github_grafana_regexp//:regexp",
        "@com_github_hashicorp_golang_lru_v2//:golang-lru",
        "@com_github_prometheus_client_golang//prometheus",
        "@com_github_prometheus_client_golang//prometheus/promauto",
        "@com_github_sourcegraph_conc//pool",
        "@com_github_sourcegraph_log//:log",
        "@com_github_sourcegraph_zoekt//ignore",
        "@io_opentelemetry_go_otel//attribute",
    ],
)

go_test(
    name = "codycontext_test",
    srcs = [
        "context_test.go",
        "dotcom_test.go",
        "enterprise_test.go",
    ],
    data = glob(["testdata/**"]),
    embed = [":codycontext"],
    deps = [
        "//internal/api",
        "//internal/conf",
        "//internal/database/dbmocks",
        "//internal/featureflag",
        "//internal/gitserver",
        "//internal/search/result",
        "//internal/types",
        "//lib/errors",
        "//lib/pointers",
        "//schema",
        "@com_github_google_go_cmp//cmp",
        "@com_github_sourcegraph_log//logtest",
        "@com_github_stretchr_testify//require",
    ],
)
