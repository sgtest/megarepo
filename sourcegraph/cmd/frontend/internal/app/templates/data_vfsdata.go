// Code generated by vfsgen; DO NOT EDIT.

// +build dist

package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// Data statically implements the virtual filesystem provided to vfsgen.
var Data = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Date(2018, 1, 1, 1, 1, 1, 1, time.UTC),
		},
		"/gen": &vfsgen۰DirInfo{
			name:    "gen",
			modTime: time.Date(2018, 1, 1, 1, 1, 1, 1, time.UTC),
		},
		"/styles.css": &vfsgen۰CompressedFileInfo{
			name:             "styles.css",
			modTime:          time.Date(2018, 1, 1, 1, 1, 1, 1, time.UTC),
			uncompressedSize: 5262,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\xc4\x98\x59\x8f\xe3\xb8\x11\x80\x9f\xad\x5f\x51\x30\x10\xf4\x01\x49\xad\xc3\xee\x43\xfd\xb2\xd8\xd9\x4c\x12\x60\x76\x11\x4c\xef\xe4\x9d\x92\x68\x9b\x68\x9a\x54\x48\xaa\x6d\xaf\xe1\xff\x1e\x14\x75\x51\x3e\xa6\x7b\x1e\x82\x99\x81\x0d\x90\xfc\x58\x55\xac\x2a\xb2\xaa\xbd\xdf\x97\x74\xc1\x04\x85\xe9\x8b\xd9\x71\xaa\xa7\x87\x83\x77\x77\xeb\xc1\x2d\xfc\xb9\x62\x1a\xb4\x9d\x5c\x51\x6a\xa0\xe5\x9a\x19\x58\x48\x05\x66\x45\x01\xb7\xfb\x8a\x56\xf2\x10\x70\x22\x4a\x26\x96\x50\x91\x25\xd5\xa1\x07\xb7\x77\x9e\xe7\x01\x0a\x9b\xfc\x87\x28\x46\x72\x4e\xb5\x87\x93\xb7\xb0\xf7\x26\x41\x90\xf3\x9a\x06\xf1\x64\x32\x81\x0c\xd4\x32\xbf\x8e\x7c\x78\x4c\x7c\x88\x67\xd1\xcd\x73\xbf\x9e\x8c\xd6\xe3\xd9\xbd\x0f\x49\x92\x38\x40\x3a\x00\xf1\xdc\x87\x18\x45\x24\x33\x97\x98\x39\x44\xfc\xe4\x43\x12\x3d\x1d\x23\x73\x07\x79\x42\x01\xe9\xdc\x87\x64\x8e\x86\x20\x53\xd5\xaa\xe2\xd6\xd6\x0e\x4a\x52\x1f\x62\xfc\x3c\xb4\x62\x5a\x24\x19\x90\x87\x07\x54\x85\x9a\x1e\x46\x48\x3a\x20\xb3\xa4\x45\xe6\xf3\x56\x93\x54\x44\x2c\x5d\x4d\x49\x1a\xf9\x70\xff\xe4\x43\xeb\x94\x16\x18\xf4\x24\xb3\x47\x1f\x9e\xee\xf1\xe4\x23\x62\x50\x93\xcc\xd1\x2f\xf7\xf8\x95\x74\x27\x5a\x2a\x4a\x85\x55\x03\x2d\x65\x97\x1f\xed\x57\x23\xa7\x41\x12\x07\x41\x53\xe3\x7b\x54\x35\x1b\x31\xa9\xc3\xa0\x53\x92\xc8\x9a\x93\xb6\xba\x14\x2d\x9b\x30\xf7\x72\x30\x8a\x71\xd4\x7c\x35\x82\x90\x49\xc6\x4c\xe2\xc3\x43\x8a\x9f\x56\x4c\x21\x25\x0f\x96\x8a\xec\x82\xb8\x3f\xd9\xbd\x0f\x78\xfc\x87\xd6\xc3\x03\x92\x74\xc8\xbc\x15\x13\x47\xc9\x31\x93\x8e\xb2\x22\x9e\x3d\x60\x38\x67\x27\x54\xaf\x8e\x8c\x41\x1f\xa2\x30\x3e\xa5\x93\xcb\xf4\x89\x05\xb3\xfe\x20\xd6\x6d\x49\x9f\x97\x8d\x6f\xc9\x6e\x32\x71\xa2\x68\x13\x25\x72\xf3\xd2\xd0\xad\x81\xee\xdf\x79\x97\x70\x26\x5e\x8f\x90\xfe\x1e\xc5\xb3\x81\x09\x56\xf2\x8d\x2a\x97\x19\xee\x22\x32\x9a\x08\x1d\x68\xaa\xd8\x22\x83\x69\xc1\x54\x51\x73\xa2\x02\x6d\xca\xa9\x0f\x01\xa9\x30\xb1\xf5\x4e\x1b\xba\xf6\xe1\x57\x94\xf7\x3b\x29\x5e\xec\xf8\xb3\x14\xc6\x87\x69\xf8\xf2\xf9\x8f\x97\x3f\xe9\xd6\x04\x5f\xe9\x12\xf7\x4e\x7d\x98\xbe\x10\x01\x9f\x15\x11\x05\xd3\x85\xb4\x13\x9f\xff\x78\x81\xdf\x98\xae\x38\xd9\x4d\x7d\xf8\x2a\x73\x69\xa4\x0f\xd3\x2f\x75\xc1\x4a\x02\xff\x50\x44\x94\x14\x41\xf2\x46\x05\x53\x20\xe8\xd6\x4c\x7d\x68\x46\x3e\xfc\x93\xf2\x37\x6a\x58\x41\x7c\xf8\x96\xd7\xc2\xd4\x3e\x4c\x35\x5d\x4a\x0a\x35\x43\x4c\x31\xc2\x7d\x18\x8e\x62\x4f\xbf\x96\x42\xea\x8a\x14\x34\xeb\xf5\x7c\x92\x42\x4b\x8e\x8a\x7e\x97\x82\x14\xd2\x87\x1e\x6a\xbc\x91\x13\x4d\x83\x85\x14\x26\xd0\xec\x2f\x9a\x41\x3c\xaf\xb6\xcf\xfd\x02\x67\x82\x06\x2b\xca\x96\x2b\x93\x41\x1c\xce\xbb\xfc\x2d\x47\x7b\xa2\xf0\x89\xae\x9f\xfb\x95\xa3\x4d\x8f\xed\xdd\x21\x25\xab\x75\x06\x29\xca\xf7\x0e\x9e\xf7\x8b\x95\xb0\x20\x05\x85\xbd\x07\xd0\x8e\xd6\x8c\xef\x32\xb8\x72\xe3\x72\xf5\xec\x01\x68\x55\x64\x50\x2b\x7e\x7d\xb5\xdf\x13\xad\xa9\xf9\xf6\xf5\x0b\x4c\xef\x70\x97\xbe\x73\xe9\x40\xd7\xb9\xa6\xc6\xd0\xf2\x0e\x0d\x31\x32\xe8\x57\x73\x29\x5f\xc3\x8d\x5c\x2c\xa6\x87\xc3\xd5\x0d\x3e\xfc\x6b\x62\xae\xaf\x70\xe6\xea\xe6\xd9\x3b\xfc\x24\x93\xfe\x65\x08\x67\xc5\x77\x0c\x9b\x34\xbe\xc6\x72\x95\x81\xcc\x39\xfb\x6f\x4d\x7f\x96\xb9\xbc\x7c\xd7\xd0\x4d\x1b\x7a\x84\x7f\x9e\x99\x1f\xf4\xea\xd8\xd8\x4b\x9e\x6e\x1b\x89\x4f\x92\x4b\xd5\xb6\x03\x61\x53\xf4\x61\x0f\x05\xce\x66\xf0\x46\xd4\x75\xd7\x0a\xdc\x3c\xc3\xa1\x25\x92\xb3\x44\xe2\x10\xe9\x59\x22\xb5\x84\x17\x76\x15\xfb\x18\xea\xe6\x1b\x41\x5d\xd1\xbe\x40\x25\x23\x2a\xbd\x40\x75\x2a\x37\x2b\x66\xe8\xc0\xd8\x61\xb3\xe2\x54\xae\x63\x19\xce\x52\xa3\xcc\x29\x61\x97\xd9\xe4\x98\x4d\x2f\xb3\xe9\x31\x3b\xbb\xcc\xce\xda\xa3\xe4\xcb\xa0\x8f\x53\x4e\x8a\xd7\xa5\x92\xb5\x28\x83\xcb\x21\x6b\xf9\xe4\x3d\x3e\x19\xf3\xe9\x7b\x7c\x3a\x18\xd4\xb9\xf7\x94\xef\x3d\x8d\x18\x9e\xe3\x3b\x52\x71\xb9\x91\xd9\x36\xb9\xbb\x4a\x2e\x15\xa9\x56\xbb\x26\x41\x73\x59\xee\xb0\x3b\x1d\x6d\xc2\x32\xdb\xa7\x7e\x77\x07\x9b\xa5\xa1\x96\x0c\x2f\x8e\x7d\xdd\xdb\x43\x8c\xea\x04\x22\xa3\x67\xde\x81\x9c\x79\x5b\x94\x37\x34\x7f\x65\xa6\xdd\xbb\x96\xd2\xac\x98\x58\x66\x40\x84\x61\x84\x33\xa2\xa9\x7d\x24\xbc\x4a\x51\xdf\xc3\xfa\xe1\x63\x88\x4b\x7c\x2b\xce\x99\xd9\x97\xaf\xb3\x56\x8e\x2b\xd3\x05\x2b\x8f\x8b\xd4\x77\xad\xac\x8d\xb4\xe6\x91\x13\x5f\x62\x6f\x80\x5b\xd1\xa7\x41\x49\x0b\xa9\x88\x61\x52\x64\x20\xa4\xa0\x8e\x48\xa3\x88\xd0\xac\x59\x22\x9c\x43\x14\xa6\x1a\x97\xd7\xf2\xaf\x4b\x6b\xe7\xa7\xd1\x8a\xac\x69\x6e\xce\xd9\xd2\xf4\x3d\xb6\x8e\x79\xa1\x9d\xd0\x75\x6e\x38\x75\x60\x26\x56\x54\x31\x73\xce\xe8\x5a\x94\x54\xa1\x53\x4e\xf6\x77\x2a\xe1\xfc\x41\x31\x03\x2b\xd8\xc3\x9a\xa8\x25\x13\x41\x2e\x8d\x91\x6b\xdb\x2c\x28\xba\xb6\x29\xcf\x57\x11\xec\x61\x14\x88\xc8\x49\xdc\x6f\x86\x71\x66\x18\xd5\x4d\xde\x86\xb9\x54\x25\x55\xe3\x4e\x14\xef\x41\x37\x7d\xfe\x6d\xe8\x2f\xe4\xf1\xee\xd9\xbb\x7b\xbb\xb7\x42\xaf\x48\x29\x37\xe8\xae\x5c\x6e\x83\x66\x94\x41\x04\x71\xb5\x85\xfb\x6a\x0b\xd1\x19\xad\xb6\x6d\xbe\xbb\xed\x62\xed\x6c\xc4\x08\x6b\x77\x02\x4f\x67\xd5\x54\x4c\x74\x3e\x9d\x10\xc1\xd6\xad\x37\x71\x1e\xa2\x70\xae\x81\xe2\x35\x62\x22\x90\xb5\x81\xd8\xda\xf6\xcb\x2b\xdd\x2d\x14\x59\x53\xdd\x60\x7b\x6f\x32\x8f\xfe\x86\x31\xc1\x4c\xc1\xca\x96\x81\x92\x86\x18\x7a\x1d\x3f\x46\x25\x5d\xde\x80\x2e\x08\xa7\xd7\x71\x98\xdc\xc0\xc1\x9b\xc4\xd1\xc7\x70\x84\xfb\xc8\xfc\x9d\xd3\x35\x15\xa6\x0d\xcc\xdd\x2d\x7c\x61\xda\x68\x3b\xe0\xac\x0f\x79\x06\x31\x46\xba\x0b\x29\xfc\x5a\x1b\x23\x85\x6e\x83\x69\x44\xe3\x50\x1b\x80\xae\x07\x6c\xfc\xd8\x8c\xd0\x81\xa3\xe7\xcf\x9b\x94\x4d\xdb\x8c\xf9\x6a\xb3\x26\xe7\xb2\x78\xbd\x50\xb0\x2b\x52\x96\xf6\xa6\x3e\x56\x5b\x88\xef\x9b\xe6\xf5\xff\x71\xf3\x9a\xa3\x4c\x4e\x6b\x62\x6e\x84\x7d\xe2\x3f\x56\x01\x7a\xbc\xbf\x56\x1f\x28\x33\xe8\xd6\x7f\x2b\x0a\x77\xf0\x5b\xbd\xce\xe1\x13\x3e\x8f\x5a\xb0\xaa\xa2\xc6\xba\xb9\x52\xf6\x96\x0f\x92\x06\x5f\xbe\xe3\xf9\x66\x39\xb3\x39\xae\x25\x67\xe5\xb9\xdb\x71\xf4\xd8\x74\xf5\xd2\x9b\x9c\xbd\xf3\xc3\xbc\x91\x95\x33\xd9\x47\x2a\xb6\xe3\xe6\x54\x27\x47\x09\xbb\xc1\xde\x9b\xa0\x83\x16\x5c\x6e\x82\x6d\xf7\x10\x03\xb8\x17\x8a\x09\x4d\x0d\x04\xb1\xbd\x9b\xb3\x6a\xdb\xfc\xb1\x1a\xf9\xf6\x7f\x18\xcf\xdd\x87\xfd\x87\xf7\x61\x92\xfc\xe0\xa6\xc3\x60\xbe\x3f\x1c\x24\xac\xb8\x18\x0d\xeb\xd1\x50\x56\xa3\x61\xc1\xe5\xc9\xeb\xde\x3b\xdc\x51\x00\x04\xf6\x97\x1f\x64\x47\x9e\x5c\x9f\xc8\x1b\xb5\x54\xe3\x9e\x97\xd9\xae\x79\xac\x29\xe4\x6c\x74\x1e\x6d\x4e\x0b\x50\xf7\x63\xce\xb1\x91\xee\xbe\xd7\x4d\xe9\x0e\x0d\x59\xba\xc3\x45\x2d\x4e\xa4\x0e\xdd\xeb\xd8\x20\x62\x46\x3e\x33\xbb\xea\xbc\xcf\x4e\x36\x96\xb4\x70\x37\xbe\x11\xe5\x8f\xc4\xbe\x9d\xc8\x69\x7f\x17\x6a\x05\x6d\x14\xb1\xaa\x36\x52\x95\x01\x0e\x32\xc8\x15\x25\xaf\x01\x4e\x58\x64\xbf\xa7\xa2\x3c\x1c\xbc\xff\x05\x00\x00\xff\xff\x31\x76\xd8\x1c\x8e\x14\x00\x00"),
		},
		"/ui": &vfsgen۰DirInfo{
			name:    "ui",
			modTime: time.Date(2018, 1, 1, 1, 1, 1, 1, time.UTC),
		},
		"/ui/app.html": &vfsgen۰CompressedFileInfo{
			name:             "app.html",
			modTime:          time.Date(2018, 1, 1, 1, 1, 1, 1, time.UTC),
			uncompressedSize: 2673,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\xac\x56\xdf\x6f\xdb\x36\x10\x7e\xb6\xff\x0a\x56\x0f\x93\x8d\xe8\x47\x1f\x06\x6c\xb0\x25\x17\x4b\xd3\x75\x1b\x92\x62\x58\x32\x0c\x43\xd1\x07\x9a\x3c\x49\x74\x28\x52\x23\xcf\x52\x0d\x55\xff\xfb\x40\x31\x8e\xe5\x34\xdd\x56\x60\x2f\xb6\x44\x7e\x77\xf7\xf1\xbe\xe3\x9d\xb2\x17\x5c\x33\x3c\x34\x40\x2a\xac\xe5\x66\x9e\xb9\x3f\x22\xa9\x2a\xf3\x00\x54\x40\x98\xa4\xd6\xe6\xc1\x96\x5a\x08\x36\xf3\x79\x56\x01\xe5\x9b\xf9\xac\xef\x93\x9f\xd5\x0e\x18\x02\x4f\x7e\x02\xca\xef\x74\x33\x0c\xf3\x59\x56\x03\x52\xc2\x2a\x6a\x2c\x60\x1e\xec\xb1\x88\xbf\x0f\x36\xc7\xf5\x0a\xb1\x89\xe1\xaf\xbd\x68\xf3\xe0\x63\xbc\xa7\x31\xd3\x75\x43\x51\x6c\x25\x04\x84\x69\x85\xa0\x30\x0f\x04\xe4\xc0\x4b\x38\x99\x29\x5a\x43\x1e\x94\x5a\x97\x67\x38\xa5\xd1\x50\x65\x25\x45\x78\x3e\xc4\x6b\x8f\x8c\xaf\xa9\x2a\xf7\xb4\x9c\xda\x82\x7a\xea\xbe\x15\xd0\x35\xda\xe0\x04\xd4\x09\x8e\x55\xce\xa1\x15\x0c\xe2\xf1\x25\x22\x47\x58\x5c\x08\xcc\x99\x6e\xc1\x04\x24\x7d\xe2\xca\x40\x01\xc6\xb8\x9d\x47\x57\xda\x88\x52\xa8\xb8\xab\x40\xc5\xcc\x68\x6b\x63\xbf\x12\x3c\xb5\x65\x5a\x6a\x13\x5b\x56\x41\x3d\xe5\x2b\x45\x59\x21\xe1\xd4\xdc\x8f\x16\x7d\xdf\x09\xac\x48\x72\x03\x48\x39\x45\x7a\x4a\xfd\xe8\x25\xe4\x60\x99\x11\x0d\x0a\xad\xc2\x93\x93\xbe\x4f\xae\x4e\x1b\xc3\xe0\x99\xcf\xfa\x5e\x14\x24\xb9\xad\x74\xf7\xab\x01\x77\x3e\xe7\xed\xcc\x1d\x76\x02\x11\xcc\x0a\x05\x4a\x38\x77\x78\xe7\x96\x1e\x5d\x3d\x67\xc4\xa8\xe1\x27\x9b\xd0\xee\xeb\x9a\x9a\x43\xf8\x65\x83\xaf\x22\xef\x1d\x34\x46\x37\x60\xf0\x90\x07\xba\x5c\xb9\x62\x9e\xaa\x08\x5b\x2b\x10\x9e\xc7\x87\x0e\xff\xdf\x4e\x75\x66\xf3\x95\x09\x06\xc5\x5d\x52\x1f\x1f\xb2\x31\xe6\xe6\x14\x29\x4b\xfd\xca\xdc\xab\xa1\x34\x92\xe4\x0f\xd8\x36\x94\xdd\x5f\x41\x7b\x0b\xa6\x05\x33\x0c\x99\x14\xea\x9e\x18\x90\x79\x60\xf1\x20\xc1\x56\x00\x18\x90\xca\x40\x31\x06\xff\xc1\x5a\xc0\xdf\x7f\xbb\x1e\x86\xd4\xef\xa7\xb4\x69\x92\xed\x5e\x71\x09\x09\xb3\xf6\x55\xdf\xb7\x60\xac\xd0\x8a\x04\xcf\x02\x82\x61\x08\x36\x27\x96\x63\x38\xc1\xf3\xd0\xea\xbd\x61\x50\x1a\xda\x54\x31\xab\x8c\xae\x21\x76\x69\x45\x6d\x20\x16\x08\x75\xe8\x49\x3d\xb7\x75\xa4\xe7\x2e\xa6\x5d\xa5\xa9\xc7\x24\xfe\x36\x27\x4c\xd7\xe9\x11\x9e\x72\x40\x2a\x64\xca\xcb\x5d\x55\xe8\x7a\x27\x80\x52\xde\x68\xb9\x93\x4a\xf0\x7a\x5b\xde\xf3\xa2\x70\x09\x19\x6f\xee\x24\x13\x40\x0d\xab\x8e\x61\x52\xdd\x80\xf2\x4b\xc9\xc7\x5a\x06\xc4\x55\x43\x1e\xd0\xa6\x91\x82\x51\x27\xcb\x04\x31\x51\xf1\xc2\x83\x9d\x08\x79\x70\x7b\x3a\x2e\xb9\xf5\xee\x47\x65\x88\xbb\x28\x63\x57\xf9\x88\xc9\x04\x74\xa5\xf1\xb5\xae\x6f\x34\x07\x32\xe6\xed\x45\x1c\x93\xb7\xe3\x01\xc9\x1d\x2d\xc9\x0d\x55\xb4\x04\x43\xe2\xd8\x31\xf7\x21\x89\x28\x95\x4b\x11\xb3\xcd\x66\x51\xec\x15\x73\x24\x16\x5d\xc4\x23\x1b\xc9\x48\x2c\xfb\xee\xbd\xfc\x90\xbb\x9f\x4f\x9f\xde\x7f\x58\xbb\x87\xa4\xd9\xdb\x6a\xd1\x87\x25\xd6\x89\x45\x6a\x30\x5c\xcd\x67\x0a\x3a\x72\x45\x11\x16\xcb\xa4\x04\xbc\x13\x35\x2c\x96\x11\xb4\xa0\x70\x35\x02\x77\x36\x1c\x96\xeb\x96\x1a\x52\xe4\xdc\x41\xde\x48\xa8\x41\xa1\xbd\x3c\xdc\xd1\xf2\x1d\xad\x61\x61\x97\xef\x5f\x7e\x88\xe6\xb3\x5d\xce\x13\x66\x80\x22\x3c\x60\x16\x76\x19\x71\x99\xcb\x17\x79\xe8\x9a\xcc\x35\x3d\x80\x09\x5f\x85\xdf\xc8\x3c\xbc\x90\xab\x30\x5c\xef\x12\x6a\x0f\x8a\xe5\x68\xf6\xb0\xde\x25\xd6\xb0\x7c\x3e\x0b\x8f\x4a\x77\x5d\xf7\x20\x33\xd2\xb2\xf6\x39\x18\x05\xf7\xbc\x5e\xb9\xc2\xba\x10\x17\x5c\xae\x8b\xa4\xa1\x06\x14\xbe\xd3\x1c\x12\xa1\x2c\x18\xbc\x84\x42\x1b\x58\xec\xa2\x62\xb9\x9e\xcf\x86\xe5\xa2\x13\x8a\xeb\x2e\xe2\x9a\xed\x1d\xb7\x28\xf4\x79\x0c\xa3\x09\xb7\x28\x7c\x7b\x77\x13\xdf\x5d\x7e\xfb\xee\xfa\xf6\xbb\x70\xb9\xce\x52\x0f\xda\x3c\x68\xf2\x46\xf1\x2f\xea\xd2\xf7\x04\x14\xf7\xfa\x7d\x2e\xd1\x7c\x36\xf3\x04\x12\xe6\xe5\x27\x39\xe9\xfb\x63\x2d\x8c\x56\x47\x40\x43\x4b\x78\x63\x8c\x36\x1e\xe2\x1f\x47\xb7\x27\x36\x4f\xa7\xe7\xa5\x46\xd4\xf5\x30\xcc\xb3\xd4\xcf\xd7\x79\xb6\xd5\xfc\xf0\x7f\x14\xdd\x42\x69\x1f\x76\xf9\x50\x7f\xc7\xf7\x4d\x26\x0a\x43\x6b\x98\x1c\x93\x38\x05\x83\x7f\xd5\x4f\xd9\xc4\x7d\x24\x38\x01\x27\xf9\x0e\x48\x05\x6e\x4a\xe5\xc1\xcb\x80\xf8\xd1\xe9\x9e\xc6\x3e\x93\x07\x5c\xd8\x46\xd2\xc3\x4a\x69\x05\xeb\x56\x58\xb1\x15\x52\xe0\x61\x55\x09\xce\xdd\x30\xce\x52\xcf\x66\x93\xa5\x8f\x04\xff\x59\xb5\xa7\x07\x9b\x08\x38\x4d\xef\xa5\xe6\x87\xe3\xc7\x09\x17\xad\x6b\x67\x81\xd1\x1a\x5d\x48\x2e\xda\xb3\x8c\xb8\x5e\xdf\x6c\xa6\xb7\x5f\x58\x42\x49\x07\xdb\xd8\x7d\xff\x70\xc2\x5c\xb6\x7d\xef\x20\x54\x71\xa2\x68\x2b\xca\xb1\xab\x10\xd4\x5a\x92\x42\x1b\xc2\xa1\x25\x08\xb4\xb6\xc9\x43\xef\x88\x8e\x30\x88\x46\x23\x3f\x64\x47\x5f\x09\xf9\x51\x28\x4e\xa8\xb2\x1d\x18\x9b\x64\x69\xb3\x99\x3b\x12\x5b\xb3\xf9\xec\xef\x4f\xbd\x27\x0a\x80\x13\xd4\x04\x14\xdd\x4a\x20\xbf\xd0\x96\xde\xfa\x5a\x45\x4d\xcc\x5e\x11\xac\x1c\xe3\xa6\x49\x5c\xb9\x4d\x13\xf9\x50\xd2\xa3\xc0\x4f\x26\xc5\xb8\x73\x36\x09\x76\xe7\x93\xe2\x39\xc0\x38\x29\xbe\x50\xd1\x2e\xe5\x93\x8a\xf6\x95\xec\x4a\x7b\xfc\xc0\xfc\x3b\x00\x00\xff\xff\x4e\x6a\xb9\x58\x71\x0a\x00\x00"),
		},
		"/ui/error.html": &vfsgen۰CompressedFileInfo{
			name:             "error.html",
			modTime:          time.Date(2018, 1, 1, 1, 1, 1, 1, time.UTC),
			uncompressedSize: 1214,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x74\x54\xc1\x6e\xe3\x46\x0c\x3d\x4b\x5f\xc1\xf5\xa5\x6d\xe0\x48\xe8\xad\x08\x26\x46\x17\xbb\x3d\xf8\xd0\xed\xa2\xf1\xa5\x47\x4a\x43\x59\x83\x8c\x66\x54\x92\xb2\x23\x18\xfa\xf7\x62\x46\x59\x3b\x1b\x74\x4f\xc6\x50\x7c\x7c\x8f\xef\x11\xbe\x5c\xea\xbb\xb2\xd8\xff\xf9\xf5\xaf\xbf\x0f\x1f\xbf\x1c\x3e\xc0\xa1\x27\x26\x40\x26\xd0\x73\x04\x62\x8e\x0c\x4a\xc3\xe8\x51\x49\x1e\xca\xb2\xb8\x5f\x8b\x55\xaf\x83\x4f\xaf\x0e\x43\x3b\xbf\x29\x95\xc5\xed\x01\x4e\xc0\x92\xb8\x63\x20\x0b\x1a\xa1\x21\x40\x81\xc1\x05\x37\xa0\x07\x0c\x16\x98\xbc\xc3\xc6\xe7\xfa\x18\x45\x5c\xe3\xa9\x82\xbd\x82\x8d\x24\x65\x11\xa2\x82\x0b\xad\x9f\x2c\xc1\xc7\x2f\xff\x40\xd4\x9e\xde\xe8\xd9\x26\x98\xf6\x34\xc3\x80\x33\x30\xfd\x3b\x39\x26\xb0\xa8\x08\xda\xa3\x26\xfa\x10\xb5\x2c\x46\x26\xa1\xa0\xf0\x33\x55\xc7\x0a\xee\x3e\xc5\x61\x88\x21\xf7\x6d\xe1\xdc\xbb\xb6\xcf\xf8\x44\x46\x2f\x4e\x14\x5c\x07\xb9\xf3\xe8\x54\x88\x4f\xc4\x10\x79\xe5\x2e\x8b\xa4\x98\x2c\x4c\x63\x0c\xb0\x7e\x94\x6c\x97\xa5\x23\xa3\x25\xfb\x4b\x05\x87\xde\xc9\x55\x24\x48\x1f\x27\x9f\x36\x0d\x96\x18\xe8\x44\x01\xce\x3d\x85\xb2\xd0\x9e\x40\x66\x51\x1a\x92\x50\xa1\x13\x31\xf9\x19\x1a\x8e\xcf\x14\xaa\xb2\x2c\xde\x59\xfb\x3f\x6e\x0e\x91\x09\x26\x21\x86\x8e\x1d\x05\xeb\xe7\x6d\xb6\xf5\x4c\x80\xfe\x8c\xb3\x80\xf2\x0c\x1a\x93\xec\x4c\xef\x14\x3a\xc7\xa2\xd9\xe3\x49\x48\x56\xb7\x3a\x8e\xc3\xd5\x17\xd2\x76\x9d\xd2\x62\xb8\xba\xff\xba\xfd\xd5\x7a\xf0\xee\x99\xa0\x41\xa1\xac\xad\x82\x7d\x48\x49\xe4\xfd\xf4\xd5\x7d\x85\x0e\x9d\x97\xa4\x75\xa5\xdf\x7e\x77\x3b\x2e\x67\x07\x1d\x7a\xdf\x60\xfb\x7c\x8d\x6c\x12\xb2\x55\x79\x57\x2f\x4b\x69\x3e\xd8\xd8\xea\x3c\x12\x24\xc8\xae\x34\xd9\x07\x8f\xe1\xf8\xb8\xa1\xb0\x49\x05\x42\xbb\x2b\x0b\x33\x90\x22\xb4\x3d\xb2\x90\x3e\x6e\x26\xed\xee\x7f\xdb\xa4\xba\x3a\xf5\xb4\xbb\x5c\xaa\x27\x45\x9d\xe4\x53\xb4\xb4\x2c\x70\x7d\x1f\xe8\x45\x97\x05\xee\xe1\x29\x4e\xdc\xa6\x08\xc7\xde\xd4\x2b\xa8\x34\xf5\x3a\xdd\x34\xd1\xce\x69\x98\x75\x27\x68\x3d\x8a\x3c\x6e\xf2\x22\x89\xa1\x30\xfd\xaf\xe9\xa7\x30\x32\x62\xf8\xf6\x59\xf2\xf4\xfb\x36\x5a\xda\xbc\x67\x37\x75\xea\xfc\x21\x46\xe9\x45\xdf\x60\x56\x85\x37\x8c\xa9\x57\xbe\xcb\xc5\x75\x50\xfd\x91\x64\x2c\x4b\x9e\x35\x32\x7d\xa7\xee\x36\xe9\xb5\xcb\xd4\x23\xd3\x8a\xa5\x60\x33\xca\xf4\x0c\x75\x1e\x3b\xee\x9e\x22\xf3\xbc\x4d\x99\x30\xfd\x24\xd0\x10\x05\x40\x18\x39\x36\x9e\x86\x0a\xbe\x7a\x42\x21\x30\x08\x3d\x53\xf7\xb8\x19\xd0\x79\x8d\x0f\x32\x8d\x63\x64\xfd\x5d\x6e\x06\x56\x6d\x1c\x36\xbb\x36\x06\xc5\x36\x5d\x99\xa9\x71\x97\x0f\xea\xdb\x31\xe5\x43\xc9\x7f\x2d\xfb\xcf\x0f\x60\x44\x39\x86\xe3\x55\xe8\xfe\x73\xde\x77\x2d\x9a\x7a\x4c\xce\xd7\xd6\x9d\x52\x20\x6b\x12\xa6\x5e\xcf\xe1\xbf\x00\x00\x00\xff\xff\x84\x89\xd8\xf0\xbe\x04\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/gen"].(os.FileInfo),
		fs["/styles.css"].(os.FileInfo),
		fs["/ui"].(os.FileInfo),
	}
	fs["/ui"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/ui/app.html"].(os.FileInfo),
		fs["/ui/error.html"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
