extend type Query {
    """
    Return known vulnerabilities.
    """
    vulnerabilities(
        """
        The maximum number of results to return.
        """
        first: Int

        """
        If supplied, indicates which results to skip over during pagination.
        """
        after: String
    ): VulnerabilityConnection!

    """
    Return known vulnerability matches.
    """
    vulnerabilityMatches(
        """
        The maximum number of results to return.
        """
        first: Int

        """
        If supplied, indicates which results to skip over during pagination.
        """
        after: String

        """
        Programming language of the vulnerability.
        """
        language: String

        """
        Severity of the vulnerability.
        """
        severity: String

        """
        The name of the repository to filter by.
        """
        repositoryName: String
    ): VulnerabilityMatchConnection!

    """
    Return known vulnerability matches grouped by repository.
    """
    vulnerabilityMatchesCountByRepository(
        """
        The maximum number of results to return.
        """
        first: Int

        """
        If supplied, indicates which results to skip over during pagination.
        """
        after: String

        """
        A string pattern that could match the name of a repository.
        """
        repositoryName: String
    ): VulnerabilityMatchCountByRepositoryConnection!

    """
    Returns a count of the vulnerability matches grouped by severity.
    """
    vulnerabilityMatchesSummaryCounts: VulnerabilityMatchesSummaryCount!
}

"""
A page of vulnerabilities.
"""
type VulnerabilityConnection {
    """
    The vulnerabilities on the page.
    """
    nodes: [Vulnerability!]!

    """
    The total number of vulnerabilities across all pages.
    """
    totalCount: Int

    """
    Information on how to fetch the next page.
    """
    pageInfo: PageInfo!
}

"""
Vulnerabilities synced from the GitHub Advisory Database.
"""
type Vulnerability implements Node {
    """
    The ID of the vulnerability.
    """
    id: ID!

    """
    The CVE identifier of the vulnerability (e.g., CVE-2023-123).
    """
    sourceID: String!

    """
    A short summary of the vulnerability.
    """
    summary: String!

    """
    A longer description of the vulnerability.
    """
    details: String!

    """
    Common Platform Enumeration identifiers related to this vulnerability.
    """
    cpes: [String!]!

    """
    Common Weakness Enumeration identifiers related to this vulnerability.
    """
    cwes: [String!]!

    """
    Other names this vulnerability is known by.
    """
    aliases: [String!]!

    """
    Names of related vulnerabilities.
    """
    related: [String!]!

    """
    The data source of this vulnerability.
    """
    dataSource: String!

    """
    URLs indicating the source of this vulnerability.
    """
    urls: [String!]!

    """
    A human-readable severity string.
    """
    severity: String!

    """
    The Common Vulnerability Scoring System severity vector.
    """
    cvssVector: String!

    """
    The Common Vulnerability Scoring System severity score.
    """
    cvssScore: String!

    """
    The time this vulnerability was published.
    """
    published: DateTime!

    """
    The last time this vulnerability was modified.
    """
    modified: DateTime

    """
    The time this vulnerability was withdrawn.
    """
    withdrawn: DateTime

    """
    A list of packages that are affected by this vulnerability.
    """
    affectedPackages: [VulnerabilityAffectedPackage!]!
}

"""
A package affected by a vulnerability.
"""
type VulnerabilityAffectedPackage {
    """
    The name of the package.
    """
    packageName: String!

    """
    The language ecosystem.
    """
    language: String!

    """
    A package namespace.
    """
    namespace: String!

    """
    A list of constraints that identify affected versions of the package.
    """
    versionConstraint: [String!]!

    """
    Whether or not there is a known fix.
    """
    fixed: Boolean!

    """
    The version in which the fix was applied.
    """
    fixedIn: String

    """
    A list of specific symbols affected by the vulnerability.
    """
    affectedSymbols: [VulnerabilityAffectedSymbol!]!
}

"""
A specific symbol affected by a vulnerability.
"""
type VulnerabilityAffectedSymbol {
    """
    A path to the document within the package source.
    """
    path: String!

    """
    A list of symbols defined in that path.
    """
    symbols: [String!]!
}

"""
A page of vulnerability matches.
"""
type VulnerabilityMatchConnection {
    """
    The vulnerability matches on the page.
    """
    nodes: [VulnerabilityMatch!]!

    """
    The total number of vulnerability matches across all pages.
    """
    totalCount: Int

    """
    Information on how to fetch the next page.
    """
    pageInfo: PageInfo!
}

"""
A use of a known vulnerable-affected package.e
"""
type VulnerabilityMatch implements Node {
    """
    The match ID.
    """
    id: ID!

    """
    The vulnerability.
    """
    vulnerability: Vulnerability!

    """
    The affected package that is used by the associated index.
    """
    affectedPackage: VulnerabilityAffectedPackage!

    """
    The index record that contains a direct use of the affected package.
    """
    preciseIndex: PreciseIndex!
}

"""
A count of the severities of vulnerability matches.
"""
type VulnerabilityMatchesSummaryCount {
    """
    The number of matches with a severity of "CRITICAL".
    """
    critical: Int!

    """
    The number of matches with a severity of "HIGH".
    """
    high: Int!

    """
    The number of matches with a severity of "MEDIUM".
    """
    medium: Int!

    """
    The number of matches with a severity of "LOW".
    """
    low: Int!

    """
    The number of repos with a severity
    """
    repository: Int!
}

"""
A page of vulnerability matches grouped by repository.
"""
type VulnerabilityMatchCountByRepositoryConnection {
    """
    The vulnerability matches on the page.
    """
    nodes: [VulnerabilityMatchCountByRepository!]!

    """
    The total number of vulnerability matches across all pages.
    """
    totalCount: Int

    """
    Information on how to fetch the next page.
    """
    pageInfo: PageInfo!
}

"""
Vulnerability matches count group by repository.
"""
type VulnerabilityMatchCountByRepository {
    """
    The id of the grouping.
    """
    id: ID!
    """
    The repository name.
    """
    repositoryName: String!

    """
    The vulnerability matches count.
    """
    matchCount: Int!
}
