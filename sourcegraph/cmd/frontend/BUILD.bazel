load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
load("//dev:oci_defs.bzl", "image_repository", "oci_image", "oci_push", "oci_tarball")
load("@rules_pkg//:pkg.bzl", "pkg_tar")
load("@container_structure_test//:defs.bzl", "container_structure_test")
load("//cmd/server:macro.bzl", "go_binary_nobundle")

go_library(
    name = "frontend_lib",
    srcs = ["main.go"],
    importpath = "github.com/sourcegraph/sourcegraph/cmd/frontend",
    visibility = ["//visibility:private"],
    deps = [
        "//cmd/frontend/shared",
        "//internal/sanitycheck",
    ],
)

go_binary(
    name = "frontend",
    embed = [":frontend_lib"],
    visibility = ["//visibility:public"],
)

pkg_tar(
    name = "tar_frontend",
    srcs = [":frontend"],
)

oci_image(
    name = "image",
    base = "//wolfi-images/sourcegraph-base:base_image",
    cmd = ["serve"],
    entrypoint = [
        "/sbin/tini",
        "--",
        "/frontend",
    ],
    env = {
        "CONFIGURATION_MODE": "server",
        "PGDATABASE": "sg",
        "PGHOST": "pgsql",
        "PGPORT": "5432",
        "PGSSLMODE": "disable",
        "PGUSER": "sg",
        "CODEINTEL_PGDATABASE": "sg",
        "CODEINTEL_PGHOST": "codeintel-db",
        "CODEINTEL_PGPORT": "5432",
        "CODEINTEL_PGSSLMODE": "disable",
        "CODEINTEL_PGUSER": "sg",
    },
    tars = [
        ":tar_frontend",
        # Needed so the "Upgrade readiness" page in the site-admin
        # can find locally the current schema.
        "//cmd/migrator:tar_current_schema_descriptions",
    ],
    user = "sourcegraph",
)

oci_tarball(
    name = "image_tarball",
    image = ":image",
    repo_tags = ["frontend:candidate"],
    visibility = ["//testing/tools/upgradetest:__pkg__"],
)

container_structure_test(
    name = "image_test",
    timeout = "short",
    configs = ["image_test.yaml"],
    driver = "docker",
    image = ":image",
    tags = [
        "exclusive",
        "requires-network",
    ],
)

oci_push(
    name = "candidate_push",
    image = ":image",
    repository = image_repository("frontend"),
)

# No client bundle targets

go_binary_nobundle(
    name = "frontend_nobundle",
    # We can't set `out` here to `frontend` because it would conflict with the
    # :frontend target's outputs, hence we remap the path in the `pkg_tar` as part of
    # creating the image.
    # file 'cmd/frontend/frontend' is generated by these conflicting actions:
    # Label: //cmd/frontend:frontend_nobundle_underlying, //cmd/frontend:frontend_nobundle
    embed = [":frontend_lib"],
    visibility = ["//visibility:public"],
)

pkg_tar(
    name = "no_client_bundle.tar",
    srcs = [":frontend_nobundle"],
    remap_paths = {"/frontend_nobundle": "/frontend"},
    visibility = ["//visibility:public"],
)

oci_image(
    name = "no_client_bundle.image",
    base = "//wolfi-images/sourcegraph-base:base_image",
    cmd = ["serve"],
    entrypoint = [
        "/sbin/tini",
        "--",
        "/frontend",
    ],
    env = {
        "CONFIGURATION_MODE": "server",
        "PGDATABASE": "sg",
        "PGHOST": "pgsql",
        "PGPORT": "5432",
        "PGSSLMODE": "disable",
        "PGUSER": "sg",
        "CODEINTEL_PGDATABASE": "sg",
        "CODEINTEL_PGHOST": "codeintel-db",
        "CODEINTEL_PGPORT": "5432",
        "CODEINTEL_PGSSLMODE": "disable",
        "CODEINTEL_PGUSER": "sg",
    },
    tars = [
        ":no_client_bundle.tar",
        # Needed so the "Upgrade readiness" page in the site-admin
        # can find locally the current schema.
        "//cmd/migrator:tar_current_schema_descriptions",
    ],
    user = "sourcegraph",
)

oci_tarball(
    name = "no_client_bundle.image_tarball",
    image = ":no_client_bundle.image",
    repo_tags = ["frontend:candidate"],
    visibility = ["//testing/tools/upgradetest:__pkg__"],
)
