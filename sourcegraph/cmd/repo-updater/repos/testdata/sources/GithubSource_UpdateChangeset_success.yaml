---
version: 1
interactions:
- request:
    body: '{"query":"\nfragment actor on Actor {\n  avatarUrl\n  login\n  url\n}\n\nfragment
      label on Label {\n  name\n  color\n  description\n  id\n}\n\nfragment commit
      on Commit {\n  oid\n  message\n  messageHeadline\n  committedDate\n  pushedDate\n  url\n  committer
      {\n    avatarUrl\n    email\n    name\n    user {\n      ...actor\n    }\n  }\n}\n\nfragment
      commitWithChecks on Commit {\n  oid\n  status {\n    state\n    contexts {\n      id\n      context\n      state\n      description\n    }\n  }\n  checkSuites(last:
      20){\n    nodes {\n      id\n      status\n      conclusion\n      checkRuns(last:
      20){\n        nodes{\n          id\n          status\n          conclusion\n        }\n      }\n    }\n  }\n  committedDate\n}\n\nfragment
      prCommit on PullRequestCommit {\n  commit {\n    ...commitWithChecks\n  }\n}\n\nfragment
      review on PullRequestReview {\n  databaseId\n  author {\n    ...actor\n  }\n  authorAssociation\n  body\n  state\n  url\n  createdAt\n  updatedAt\n  commit
      {\n    ...commit\n  }\n  includesCreatedEdit\n}\n\nfragment pr on PullRequest
      {\n  id\n  title\n  body\n  state\n  url\n  number\n  createdAt\n  updatedAt\n  headRefOid\n  baseRefOid\n  headRefName\n  baseRefName\n  author
      {\n    ...actor\n  }\n  participants(first: 100) {\n    nodes {\n      ...actor\n    }\n  }\n  labels(first:
      100) {\n    nodes {\n      ...label\n    }\n  }\n  commits(last: 1) {\n    nodes
      {\n      ...prCommit\n    }\n  }\n  timelineItems(first: 250, itemTypes: [ASSIGNED_EVENT,
      CLOSED_EVENT, ISSUE_COMMENT, RENAMED_TITLE_EVENT, MERGED_EVENT, PULL_REQUEST_REVIEW,
      PULL_REQUEST_REVIEW_THREAD, REOPENED_EVENT, REVIEW_DISMISSED_EVENT, REVIEW_REQUEST_REMOVED_EVENT,
      REVIEW_REQUESTED_EVENT, UNASSIGNED_EVENT, LABELED_EVENT, UNLABELED_EVENT, PULL_REQUEST_COMMIT])
      {\n    nodes {\n      __typename\n      ... on AssignedEvent {\n        actor
      {\n          ...actor\n        }\n        assignee {\n          ...actor\n        }\n        createdAt\n      }\n      ...
      on ClosedEvent {\n        actor {\n          ...actor\n        }\n        createdAt\n        url\n      }\n      ...
      on IssueComment {\n        databaseId\n        author {\n          ...actor\n        }\n        authorAssociation\n        body\n        createdAt\n        editor
      {\n          ...actor\n        }\n        url\n        updatedAt\n        includesCreatedEdit\n        publishedAt\n      }\n      ...
      on RenamedTitleEvent {\n        actor {\n          ...actor\n        }\n        previousTitle\n        currentTitle\n        createdAt\n      }\n      ...
      on MergedEvent {\n        actor {\n          ...actor\n        }\n        mergeRefName\n        url\n        commit
      {\n          ...commit\n        }\n        createdAt\n      }\n      ... on
      PullRequestReview {\n        ...review\n      }\n      ... on PullRequestReviewThread
      {\n        comments(last: 100) {\n          nodes {\n            databaseId\n            author
      {\n              ...actor\n            }\n            authorAssociation\n            editor
      {\n              ...actor\n            }\n            commit {\n              ...commit\n            }\n            body\n            state\n            url\n            createdAt\n            updatedAt\n            includesCreatedEdit\n          }\n        }\n      }\n      ...
      on ReopenedEvent {\n        actor {\n          ...actor\n        }\n        createdAt\n      }\n      ...
      on ReviewDismissedEvent {\n        actor {\n          ...actor\n        }\n        review
      {\n          ...review\n        }\n        dismissalMessage\n        createdAt\n      }\n      ...
      on ReviewRequestRemovedEvent {\n        actor {\n          ...actor\n        }\n        requestedReviewer
      {\n          ...actor\n        }\n        requestedTeam: requestedReviewer {\n          ...
      on Team {\n            name\n            url\n            avatarUrl\n          }\n        }\n        createdAt\n      }\n      ...
      on ReviewRequestedEvent {\n        actor {\n          ...actor\n        }\n        requestedReviewer
      {\n          ...actor\n        }\n        requestedTeam: requestedReviewer {\n          ...
      on Team {\n            name\n            url\n            avatarUrl\n          }\n        }\n        createdAt\n      }\n      ...
      on UnassignedEvent {\n        actor {\n          ...actor\n        }\n        assignee
      {\n          ...actor\n        }\n        createdAt\n      }\n      ... on LabeledEvent
      {\n        actor {\n          ...actor\n        }\n        label {\n          ...label\n        }\n        createdAt\n      }\n      ...
      on UnlabeledEvent {\n        actor {\n          ...actor\n        }\n        label
      {\n          ...label\n        }\n        createdAt\n      }\n      ... on PullRequestCommit
      {\n        commit {\n          ...commit\n        }\n      }\n    }\n  }\n}\nmutation\tUpdatePullRequest($input:UpdatePullRequestInput!)
      {\n  updatePullRequest(input:$input) {\n    pullRequest {\n      ... pr\n    }\n  }\n}","variables":{"input":{"pullRequestId":"MDExOlB1bGxSZXF1ZXN0MzYwNTI5NzI0","baseRefName":"master","title":"This
      is a new title","body":"This is a new body"}}}'
    form: {}
    headers:
      Accept:
      - application/vnd.github.antiope-preview+json
      Content-Type:
      - application/json; charset=utf-8
    url: https://api.github.com/graphql
    method: POST
  response:
    body: '{"data":{"updatePullRequest":{"pullRequest":{"id":"MDExOlB1bGxSZXF1ZXN0MzYwNTI5NzI0","title":"This
      is a new title","body":"This is a new body","state":"OPEN","url":"https://github.com/sourcegraph/automation-testing/pull/91","number":91,"createdAt":"2020-01-08T15:59:11Z","updatedAt":"2020-03-13T20:27:27Z","headRefOid":"2ee6f96506c75f1851a6d6be8f4b11e6bd3fd6a1","baseRefOid":"97f8a75319760990c187710c50a957358f663366","headRefName":"sourcegraph/campaign-1578499147","baseRefName":"master","author":{"avatarUrl":"https://avatars1.githubusercontent.com/u/1185253?u=35f048c505007991433b46c9c0616ccbcfbd4bff&v=4","login":"mrnugget","url":"https://github.com/mrnugget"},"participants":{"nodes":[{"avatarUrl":"https://avatars1.githubusercontent.com/u/1185253?u=35f048c505007991433b46c9c0616ccbcfbd4bff&v=4","login":"mrnugget","url":"https://github.com/mrnugget"},{"avatarUrl":"https://avatars3.githubusercontent.com/u/25610?u=416aa7bd7c7a97c714ea0a503c90a0e7e21c5e56&v=4","login":"ryanslade","url":"https://github.com/ryanslade"},{"avatarUrl":"https://avatars0.githubusercontent.com/u/19534377?v=4","login":"eseliger","url":"https://github.com/eseliger"},{"avatarUrl":"https://avatars3.githubusercontent.com/u/40544396?u=fbd0a7c41d014ee0892e21e845165ce6d6db1c0b&v=4","login":"imtommyroberts","url":"https://github.com/imtommyroberts"}]},"labels":{"nodes":[{"name":"enhancement","color":"a2eeef","description":"New
      feature or request","id":"MDU6TGFiZWwxNjcxNTU2OTI5"},{"name":"good first issue","color":"7057ff","description":"Good
      for newcomers","id":"MDU6TGFiZWwxNjcxNTU2OTMw"},{"name":"help wanted","color":"008672","description":"Extra
      attention is needed","id":"MDU6TGFiZWwxNjcxNTU2OTMx"}]},"commits":{"nodes":[{"commit":{"oid":"2ee6f96506c75f1851a6d6be8f4b11e6bd3fd6a1","status":null,"checkSuites":{"nodes":[{"id":"MDEwOkNoZWNrU3VpdGUzOTAzMDI4MzY=","status":"QUEUED","conclusion":null,"checkRuns":{"nodes":[]}},{"id":"MDEwOkNoZWNrU3VpdGUzOTAzMDI4Mzc=","status":"QUEUED","conclusion":null,"checkRuns":{"nodes":[]}}]},"committedDate":"2020-01-08T15:59:07Z"}}]},"timelineItems":{"nodes":[{"__typename":"PullRequestCommit","commit":{"oid":"2ee6f96506c75f1851a6d6be8f4b11e6bd3fd6a1","message":"AMAZING
      NAME!","messageHeadline":"AMAZING NAME!","committedDate":"2020-01-08T15:59:07Z","pushedDate":"2020-01-08T16:00:34Z","url":"https://github.com/sourcegraph/automation-testing/commit/2ee6f96506c75f1851a6d6be8f4b11e6bd3fd6a1","committer":{"avatarUrl":"https://camo.githubusercontent.com/97f6ffc1c0b03232b87028c819835b02845716d7/68747470733a2f2f302e67726176617461722e636f6d2f6176617461722f30643331613261376238376230333666386532626332623138663165356436393f643d68747470732533412532462532466769746875622e6769746875626173736574732e636f6d253246696d6167657325324667726176617461727325324667726176617461722d757365722d3432302e706e6726723d67","email":"support@sourcegraph.com","name":"sourcegraph-committer","user":null}}},{"__typename":"RenamedTitleEvent","actor":{"avatarUrl":"https://avatars1.githubusercontent.com/u/1185253?u=35f048c505007991433b46c9c0616ccbcfbd4bff&v=4","login":"mrnugget","url":"https://github.com/mrnugget"},"previousTitle":"boring
      title","currentTitle":"AMAZING NAME!","createdAt":"2020-01-08T16:00:35Z"},{"__typename":"RenamedTitleEvent","actor":{"avatarUrl":"https://avatars1.githubusercontent.com/u/1185253?u=35f048c505007991433b46c9c0616ccbcfbd4bff&v=4","login":"mrnugget","url":"https://github.com/mrnugget"},"previousTitle":"AMAZING
      NAME!","currentTitle":"This is a new title","createdAt":"2020-01-08T16:24:43Z"},{"__typename":"LabeledEvent","actor":{"avatarUrl":"https://avatars0.githubusercontent.com/u/19534377?v=4","login":"eseliger","url":"https://github.com/eseliger"},"label":{"name":"enhancement","color":"a2eeef","description":"New
      feature or request","id":"MDU6TGFiZWwxNjcxNTU2OTI5"},"createdAt":"2020-02-01T22:33:58Z"},{"__typename":"LabeledEvent","actor":{"avatarUrl":"https://avatars0.githubusercontent.com/u/19534377?v=4","login":"eseliger","url":"https://github.com/eseliger"},"label":{"name":"good
      first issue","color":"7057ff","description":"Good for newcomers","id":"MDU6TGFiZWwxNjcxNTU2OTMw"},"createdAt":"2020-02-01T22:33:58Z"},{"__typename":"LabeledEvent","actor":{"avatarUrl":"https://avatars0.githubusercontent.com/u/19534377?v=4","login":"eseliger","url":"https://github.com/eseliger"},"label":{"name":"help
      wanted","color":"008672","description":"Extra attention is needed","id":"MDU6TGFiZWwxNjcxNTU2OTMx"},"createdAt":"2020-02-01T22:33:58Z"},{"__typename":"ClosedEvent","actor":{"avatarUrl":"https://avatars3.githubusercontent.com/u/40544396?u=fbd0a7c41d014ee0892e21e845165ce6d6db1c0b&v=4","login":"imtommyroberts","url":"https://github.com/imtommyroberts"},"createdAt":"2020-03-13T13:00:19Z","url":"https://github.com/sourcegraph/automation-testing/pull/91#event-3126634205"},{"__typename":"ReopenedEvent","actor":{"avatarUrl":"https://avatars3.githubusercontent.com/u/25610?u=416aa7bd7c7a97c714ea0a503c90a0e7e21c5e56&v=4","login":"ryanslade","url":"https://github.com/ryanslade"},"createdAt":"2020-03-13T20:27:03Z"}]}}}}}'
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Access-Control-Expose-Headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval,
        X-GitHub-Media-Type, Deprecation, Sunset
      Cache-Control:
      - no-cache
      Content-Security-Policy:
      - default-src 'none'
      Content-Type:
      - application/json; charset=utf-8
      Date:
      - Fri, 13 Mar 2020 20:27:28 GMT
      Referrer-Policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      Server:
      - GitHub.com
      Status:
      - 200 OK
      Strict-Transport-Security:
      - max-age=31536000; includeSubdomains; preload
      Vary:
      - Accept-Encoding, Accept, X-Requested-With
      X-Accepted-Oauth-Scopes:
      - repo
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      X-Github-Media-Type:
      - github.antiope-preview; format=json
      X-Github-Request-Id:
      - 6417:47B45:1C3EC7A:2159219:5E6BECAE
      X-Oauth-Scopes:
      - read:org, repo
      X-Xss-Protection:
      - 1; mode=block
    status: 200 OK
    code: 200
    duration: ""
