load("//dev:go_defs.bzl", "go_test")
load("@io_bazel_rules_go//go:def.bzl", "go_library")

# gazelle:resolve go google.golang.org/genproto/googleapis/api/metric @go_googleapis//google/api:metric_go_proto
# gazelle:resolve go google.golang.org/genproto/googleapis/api/monitoredres @go_googleapis//google/api:monitoredres_go_proto

go_library(
    name = "executorqueue",
    srcs = [
        "aws_reporter.go",
        "config.go",
        "external_emitter.go",
        "gcp_reporter.go",
        "prometheus.go",
        "queue_allocation.go",
        "reporter.go",
    ],
    importpath = "github.com/sourcegraph/sourcegraph/cmd/worker/internal/executorqueue",
    visibility = ["//cmd/worker:__subpackages__"],
    deps = [
        "//internal/codeintel/uploads/shared",
        "//internal/env",
        "//internal/executor/types",
        "//internal/executor/util",
        "//internal/goroutine",
        "//internal/memo",
        "//internal/observation",
        "//internal/timeutil",
        "//internal/workerutil",
        "//internal/workerutil/dbworker",
        "//internal/workerutil/dbworker/store",
        "//lib/errors",
        "@com_github_aws_aws_sdk_go_v2//aws",
        "@com_github_aws_aws_sdk_go_v2_config//:config",
        "@com_github_aws_aws_sdk_go_v2_credentials//:credentials",
        "@com_github_aws_aws_sdk_go_v2_service_cloudwatch//:cloudwatch",
        "@com_github_aws_aws_sdk_go_v2_service_cloudwatch//types",
        "@com_github_inconshreveable_log15//:log15",
        "@com_google_cloud_go_monitoring//apiv3/v2:apiv3",
        "@com_google_cloud_go_monitoring//apiv3/v2/monitoringpb",
        "@go_googleapis//google/api:metric_go_proto",
        "@go_googleapis//google/api:monitoredres_go_proto",
        "@org_golang_google_api//option",
        "@org_golang_google_protobuf//types/known/timestamppb",
    ],
)

go_test(
    name = "executorqueue_test",
    timeout = "short",
    srcs = ["queue_allocation_test.go"],
    embed = [":executorqueue"],
)
