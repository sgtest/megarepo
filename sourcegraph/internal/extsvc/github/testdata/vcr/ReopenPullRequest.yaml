---
version: 1
interactions:
- request:
    body: '{"query":"\nfragment commit on Commit {\n  oid\n  message\n  messageHeadline\n  committedDate\n  pushedDate\n  url\n  committer
      {\n    avatarUrl\n    email\n    name\n    user {\n      ...actor\n    }\n  }\n}\n\nfragment
      review on PullRequestReview {\n  databaseId\n  author {\n    ...actor\n  }\n  authorAssociation\n  body\n  state\n  url\n  createdAt\n  updatedAt\n  commit
      {\n    ...commit\n  }\n  includesCreatedEdit\n}\n\nfragment timelineItems on
      PullRequestTimelineItems {\n  ... on AssignedEvent {\n    actor {\n      ...actor\n    }\n    assignee
      {\n      ...actor\n    }\n    createdAt\n  }\n  ... on ClosedEvent {\n    actor
      {\n      ...actor\n    }\n    createdAt\n    url\n  }\n  ... on IssueComment
      {\n    databaseId\n    author {\n      ...actor\n    }\n    authorAssociation\n    body\n    createdAt\n    editor
      {\n      ...actor\n    }\n    url\n    updatedAt\n    includesCreatedEdit\n    publishedAt\n  }\n  ...
      on RenamedTitleEvent {\n    actor {\n      ...actor\n    }\n    previousTitle\n    currentTitle\n    createdAt\n  }\n  ...
      on MergedEvent {\n    actor {\n      ...actor\n    }\n    mergeRefName\n    url\n    commit
      {\n      ...commit\n    }\n    createdAt\n  }\n  ... on PullRequestReview {\n    ...review\n  }\n  ...
      on PullRequestReviewThread {\n    comments(last: 100) {\n      nodes {\n        databaseId\n        author
      {\n          ...actor\n        }\n        authorAssociation\n        editor
      {\n          ...actor\n        }\n        commit {\n          ...commit\n        }\n        body\n        state\n        url\n        createdAt\n        updatedAt\n        includesCreatedEdit\n      }\n    }\n  }\n  ...
      on ReopenedEvent {\n    actor {\n      ...actor\n    }\n    createdAt\n  }\n  ...
      on ReviewDismissedEvent {\n    actor {\n      ...actor\n    }\n    review {\n      ...review\n    }\n    dismissalMessage\n    createdAt\n  }\n  ...
      on ReviewRequestRemovedEvent {\n    actor {\n      ...actor\n    }\n    requestedReviewer
      {\n      ...actor\n    }\n    requestedTeam: requestedReviewer {\n      ...
      on Team {\n        name\n        url\n        avatarUrl\n      }\n    }\n    createdAt\n  }\n  ...
      on ReviewRequestedEvent {\n    actor {\n      ...actor\n    }\n    requestedReviewer
      {\n      ...actor\n    }\n    requestedTeam: requestedReviewer {\n      ...
      on Team {\n        name\n        url\n        avatarUrl\n      }\n    }\n    createdAt\n  }\n  ...
      on ReadyForReviewEvent {\n    actor {\n      ...actor\n    }\n    createdAt\n  }\n  ...
      on UnassignedEvent {\n    actor {\n      ...actor\n    }\n    assignee {\n      ...actor\n    }\n    createdAt\n  }\n  ...
      on LabeledEvent {\n    actor {\n      ...actor\n    }\n    label {\n      ...label\n    }\n    createdAt\n  }\n  ...
      on UnlabeledEvent {\n    actor {\n      ...actor\n    }\n    label {\n      ...label\n    }\n    createdAt\n  }\n  ...
      on PullRequestCommit {\n    commit {\n      ...commit\n    }\n  }\n  \n  ...
      on ConvertToDraftEvent {\n    actor {\n\t  ...actor\n\t}\n\tcreatedAt\n  }\n\n}\n\nfragment
      actor on Actor {\n  avatarUrl\n  login\n  url\n}\n\nfragment label on Label
      {\n  name\n  color\n  description\n  id\n}\n\nfragment commitWithChecks on Commit
      {\n  oid\n  status {\n    state\n    contexts {\n      id\n      context\n      state\n      description\n    }\n  }\n  checkSuites(last:
      20) {\n    nodes {\n      id\n      status\n      conclusion\n      checkRuns(last:
      20) {\n        nodes {\n          id\n          status\n          conclusion\n        }\n      }\n    }\n  }\n  committedDate\n}\n\nfragment
      prCommit on PullRequestCommit {\n  commit {\n    ...commitWithChecks\n  }\n}\n\nfragment
      repo on Repository {\n  id\n  name\n  owner {\n    login\n  }\n}\n\nfragment
      pr on PullRequest {\n  id\n  title\n  body\n  state\n  url\n  number\n  createdAt\n  updatedAt\n  headRefOid\n  baseRefOid\n  headRefName\n  baseRefName\n  reviewDecision\n  isDraft\n  author
      {\n    ...actor\n  }\n  baseRepository {\n    ...repo\n  }\n  headRepository
      {\n    ...repo\n  }\n  participants(first: 100) {\n    nodes {\n      ...actor\n    }\n  }\n  labels(first:
      100) {\n    nodes {\n      ...label\n    }\n  }\n  commits(last: 1) {\n    nodes
      {\n      ...prCommit\n    }\n  }\n  timelineItems(first: 250, itemTypes: [ASSIGNED_EVENT,
      CLOSED_EVENT, ISSUE_COMMENT, RENAMED_TITLE_EVENT, MERGED_EVENT, PULL_REQUEST_REVIEW,
      PULL_REQUEST_REVIEW_THREAD, REOPENED_EVENT, REVIEW_DISMISSED_EVENT, REVIEW_REQUEST_REMOVED_EVENT,
      REVIEW_REQUESTED_EVENT, UNASSIGNED_EVENT, LABELED_EVENT, UNLABELED_EVENT, PULL_REQUEST_COMMIT,
      READY_FOR_REVIEW_EVENT, CONVERT_TO_DRAFT_EVENT]) {\n    pageInfo {\n      hasNextPage\n      endCursor\n    }\n    nodes
      {\n      __typename\n      ...timelineItems\n    }\n  }\n}\nmutation\tReopenPullRequest($input:ReopenPullRequestInput!)
      {\n  reopenPullRequest(input:$input) {\n    pullRequest {\n      ... pr\n    }\n  }\n}","variables":{"input":{"pullRequestId":"MDExOlB1bGxSZXF1ZXN0NDg4NjEzODA3"}}}'
    form: {}
    headers:
      Accept:
      - application/vnd.github.antiope-preview+json
      Cache-Control:
      - max-age=0
      Content-Type:
      - application/json; charset=utf-8
    url: https://api.github.com/graphql
    method: POST
  response:
    body: '{"data":{"reopenPullRequest":{"pullRequest":{"id":"MDExOlB1bGxSZXF1ZXN0NDg4NjEzODA3","title":"Test
      reopening 1","body":"This is just one of _many_ pull requests. Is it useless?
      Yes. But is it cool? Yes.","state":"OPEN","url":"https://github.com/sourcegraph/automation-testing/pull/356","number":356,"createdAt":"2020-09-17T11:53:51Z","updatedAt":"2023-06-23T19:29:16Z","headRefOid":"4fc28c316ec75bd1c6f71938a7b285f41cd3ef96","baseRefOid":"58dd8da9d9099a823c814c528b29b72c9b2ac98b","headRefName":"demo/267-in-2","baseRefName":"master","reviewDecision":"REVIEW_REQUIRED","isDraft":false,"author":{"avatarUrl":"https://avatars.githubusercontent.com/u/1185253?u=35f048c505007991433b46c9c0616ccbcfbd4bff&v=4","login":"mrnugget","url":"https://github.com/mrnugget"},"baseRepository":{"id":"MDEwOlJlcG9zaXRvcnkyMjExNDc1MTM=","name":"automation-testing","owner":{"login":"sourcegraph"}},"headRepository":{"id":"MDEwOlJlcG9zaXRvcnkyMjExNDc1MTM=","name":"automation-testing","owner":{"login":"sourcegraph"}},"participants":{"nodes":[{"avatarUrl":"https://avatars.githubusercontent.com/u/1185253?u=35f048c505007991433b46c9c0616ccbcfbd4bff&v=4","login":"mrnugget","url":"https://github.com/mrnugget"},{"avatarUrl":"https://avatars.githubusercontent.com/u/229984?v=4","login":"LawnGnome","url":"https://github.com/LawnGnome"},{"avatarUrl":"https://avatars.githubusercontent.com/u/2067825?u=c2e97ecd6b800634cf59ed862168e20c9fa7b57e&v=4","login":"davejrt","url":"https://github.com/davejrt"},{"avatarUrl":"https://avatars.githubusercontent.com/u/23356519?u=314e3cc368638ce1f8117c4377b62ce158127302&v=4","login":"bobheadxi","url":"https://github.com/bobheadxi"},{"avatarUrl":"https://avatars.githubusercontent.com/u/63290851?v=4","login":"sourcegraph-vcr","url":"https://github.com/sourcegraph-vcr"}]},"labels":{"nodes":[]},"commits":{"nodes":[{"commit":{"oid":"4fc28c316ec75bd1c6f71938a7b285f41cd3ef96","status":null,"checkSuites":{"nodes":[]},"committedDate":"2020-09-17T11:50:07Z"}}]},"timelineItems":{"pageInfo":{"hasNextPage":false,"endCursor":"Y3Vyc29yOnYyOpPPAAABiOm7cuABqjk2MjE0MTEyNTc="},"nodes":[{"__typename":"PullRequestCommit","commit":{"oid":"4fc28c316ec75bd1c6f71938a7b285f41cd3ef96","message":"Append
      Hello World to all README.md files","messageHeadline":"Append Hello World to
      all README.md files","committedDate":"2020-09-17T11:50:07Z","pushedDate":"2020-09-17T11:53:51Z","url":"https://github.com/sourcegraph/automation-testing/commit/4fc28c316ec75bd1c6f71938a7b285f41cd3ef96","committer":{"avatarUrl":"https://camo.githubusercontent.com/3e3eb4d10714f844caf76fb37fd9d457c037d5dbd300f25f56c519ab743bb78e/68747470733a2f2f322e67726176617461722e636f6d2f6176617461722f34366333653536396163366530356264326136366339313661396666343934633f643d68747470732533412532462532466769746875622e6769746875626173736574732e636f6d253246696d6167657325324667726176617461727325324667726176617461722d757365722d3432302e706e6726723d67","email":"campaigns@sourcegraph.com","name":"Sourcegraph","user":null}}},{"__typename":"ClosedEvent","actor":{"avatarUrl":"https://avatars.githubusercontent.com/u/1185253?u=35f048c505007991433b46c9c0616ccbcfbd4bff&v=4","login":"mrnugget","url":"https://github.com/mrnugget"},"createdAt":"2020-09-24T08:12:22Z","url":"https://github.com/sourcegraph/automation-testing/pull/356#event-3801951041"},{"__typename":"RenamedTitleEvent","actor":{"avatarUrl":"https://avatars.githubusercontent.com/u/1185253?u=35f048c505007991433b46c9c0616ccbcfbd4bff&v=4","login":"mrnugget","url":"https://github.com/mrnugget"},"previousTitle":"Hello
      Viewers!","currentTitle":"Test reopening 1","createdAt":"2020-09-24T08:12:32Z"},{"__typename":"ReopenedEvent","actor":{"avatarUrl":"https://avatars.githubusercontent.com/u/1185253?u=35f048c505007991433b46c9c0616ccbcfbd4bff&v=4","login":"mrnugget","url":"https://github.com/mrnugget"},"createdAt":"2020-09-24T08:16:19Z"},{"__typename":"ClosedEvent","actor":{"avatarUrl":"https://avatars.githubusercontent.com/u/1185253?u=35f048c505007991433b46c9c0616ccbcfbd4bff&v=4","login":"mrnugget","url":"https://github.com/mrnugget"},"createdAt":"2020-09-24T08:18:04Z","url":"https://github.com/sourcegraph/automation-testing/pull/356#event-3801974500"},{"__typename":"ReopenedEvent","actor":{"avatarUrl":"https://avatars.githubusercontent.com/u/1185253?u=35f048c505007991433b46c9c0616ccbcfbd4bff&v=4","login":"mrnugget","url":"https://github.com/mrnugget"},"createdAt":"2020-09-24T08:18:30Z"},{"__typename":"ClosedEvent","actor":{"avatarUrl":"https://avatars.githubusercontent.com/u/1185253?u=35f048c505007991433b46c9c0616ccbcfbd4bff&v=4","login":"mrnugget","url":"https://github.com/mrnugget"},"createdAt":"2020-11-10T16:48:40Z","url":"https://github.com/sourcegraph/automation-testing/pull/356#event-3979919754"},{"__typename":"ReopenedEvent","actor":{"avatarUrl":"https://avatars.githubusercontent.com/u/229984?v=4","login":"LawnGnome","url":"https://github.com/LawnGnome"},"createdAt":"2021-02-25T02:15:15Z"},{"__typename":"ClosedEvent","actor":{"avatarUrl":"https://avatars.githubusercontent.com/u/1185253?u=35f048c505007991433b46c9c0616ccbcfbd4bff&v=4","login":"mrnugget","url":"https://github.com/mrnugget"},"createdAt":"2021-03-08T15:17:59Z","url":"https://github.com/sourcegraph/automation-testing/pull/356#event-4421817196"},{"__typename":"ReopenedEvent","actor":{"avatarUrl":"https://avatars.githubusercontent.com/u/23356519?u=314e3cc368638ce1f8117c4377b62ce158127302&v=4","login":"bobheadxi","url":"https://github.com/bobheadxi"},"createdAt":"2021-08-23T15:22:55Z"},{"__typename":"ClosedEvent","actor":{"avatarUrl":"https://avatars.githubusercontent.com/u/1185253?u=35f048c505007991433b46c9c0616ccbcfbd4bff&v=4","login":"mrnugget","url":"https://github.com/mrnugget"},"createdAt":"2021-09-15T10:08:46Z","url":"https://github.com/sourcegraph/automation-testing/pull/356#event-5304887344"},{"__typename":"ReopenedEvent","actor":{"avatarUrl":"https://avatars.githubusercontent.com/u/1185253?u=35f048c505007991433b46c9c0616ccbcfbd4bff&v=4","login":"mrnugget","url":"https://github.com/mrnugget"},"createdAt":"2021-09-15T10:08:49Z"},{"__typename":"ClosedEvent","actor":{"avatarUrl":"https://avatars.githubusercontent.com/u/1185253?u=35f048c505007991433b46c9c0616ccbcfbd4bff&v=4","login":"mrnugget","url":"https://github.com/mrnugget"},"createdAt":"2021-09-15T10:08:54Z","url":"https://github.com/sourcegraph/automation-testing/pull/356#event-5304888010"},{"__typename":"ReopenedEvent","actor":{"avatarUrl":"https://avatars.githubusercontent.com/u/229984?v=4","login":"LawnGnome","url":"https://github.com/LawnGnome"},"createdAt":"2021-12-30T22:46:44Z"},{"__typename":"ClosedEvent","actor":{"avatarUrl":"https://avatars.githubusercontent.com/u/1185253?u=35f048c505007991433b46c9c0616ccbcfbd4bff&v=4","login":"mrnugget","url":"https://github.com/mrnugget"},"createdAt":"2022-02-11T09:50:47Z","url":"https://github.com/sourcegraph/automation-testing/pull/356#event-6049917860"},{"__typename":"ReopenedEvent","actor":{"avatarUrl":"https://avatars.githubusercontent.com/u/63290851?v=4","login":"sourcegraph-vcr","url":"https://github.com/sourcegraph-vcr"},"createdAt":"2023-02-07T08:15:27Z"},{"__typename":"ClosedEvent","actor":{"avatarUrl":"https://avatars.githubusercontent.com/u/1185253?u=35f048c505007991433b46c9c0616ccbcfbd4bff&v=4","login":"mrnugget","url":"https://github.com/mrnugget"},"createdAt":"2023-06-06T07:44:03Z","url":"https://github.com/sourcegraph/automation-testing/pull/356#event-9442706751"},{"__typename":"ReopenedEvent","actor":{"avatarUrl":"https://avatars.githubusercontent.com/u/2067825?u=c2e97ecd6b800634cf59ed862168e20c9fa7b57e&v=4","login":"davejrt","url":"https://github.com/davejrt"},"createdAt":"2023-06-23T19:29:16Z"}]}}}},"extensions":{"warnings":[{"type":"DEPRECATION","message":"The
      id MDExOlB1bGxSZXF1ZXN0NDg4NjEzODA3 is deprecated. Update your cache to use
      the next_global_id from the data payload.","data":{"legacy_global_id":"MDExOlB1bGxSZXF1ZXN0NDg4NjEzODA3","next_global_id":"PR_kwDODS5xec4dH6ev"},"link":"https://docs.github.com"}]}}'
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Access-Control-Expose-Headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      Content-Security-Policy:
      - default-src 'none'
      Content-Type:
      - application/json; charset=utf-8
      Date:
      - Fri, 23 Jun 2023 19:29:17 GMT
      Referrer-Policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      Server:
      - GitHub.com
      Strict-Transport-Security:
      - max-age=31536000; includeSubdomains; preload
      Vary:
      - Accept-Encoding, Accept, X-Requested-With
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      X-Github-Media-Type:
      - github.v4; param=antiope-preview; format=json
      X-Github-Request-Id:
      - E1DF:26BA:1D5766:3BEA59:6495F28B
      X-Ratelimit-Limit:
      - "5000"
      X-Ratelimit-Remaining:
      - "4889"
      X-Ratelimit-Reset:
      - "1687551677"
      X-Ratelimit-Resource:
      - graphql
      X-Ratelimit-Used:
      - "111"
      X-Xss-Protection:
      - "0"
    status: 200 OK
    code: 200
    duration: ""
- request:
    body: '{"query":"\nfragment commit on Commit {\n  oid\n  message\n  messageHeadline\n  committedDate\n  pushedDate\n  url\n  committer
      {\n    avatarUrl\n    email\n    name\n    user {\n      ...actor\n    }\n  }\n}\n\nfragment
      review on PullRequestReview {\n  databaseId\n  author {\n    ...actor\n  }\n  authorAssociation\n  body\n  state\n  url\n  createdAt\n  updatedAt\n  commit
      {\n    ...commit\n  }\n  includesCreatedEdit\n}\n\nfragment timelineItems on
      PullRequestTimelineItems {\n  ... on AssignedEvent {\n    actor {\n      ...actor\n    }\n    assignee
      {\n      ...actor\n    }\n    createdAt\n  }\n  ... on ClosedEvent {\n    actor
      {\n      ...actor\n    }\n    createdAt\n    url\n  }\n  ... on IssueComment
      {\n    databaseId\n    author {\n      ...actor\n    }\n    authorAssociation\n    body\n    createdAt\n    editor
      {\n      ...actor\n    }\n    url\n    updatedAt\n    includesCreatedEdit\n    publishedAt\n  }\n  ...
      on RenamedTitleEvent {\n    actor {\n      ...actor\n    }\n    previousTitle\n    currentTitle\n    createdAt\n  }\n  ...
      on MergedEvent {\n    actor {\n      ...actor\n    }\n    mergeRefName\n    url\n    commit
      {\n      ...commit\n    }\n    createdAt\n  }\n  ... on PullRequestReview {\n    ...review\n  }\n  ...
      on PullRequestReviewThread {\n    comments(last: 100) {\n      nodes {\n        databaseId\n        author
      {\n          ...actor\n        }\n        authorAssociation\n        editor
      {\n          ...actor\n        }\n        commit {\n          ...commit\n        }\n        body\n        state\n        url\n        createdAt\n        updatedAt\n        includesCreatedEdit\n      }\n    }\n  }\n  ...
      on ReopenedEvent {\n    actor {\n      ...actor\n    }\n    createdAt\n  }\n  ...
      on ReviewDismissedEvent {\n    actor {\n      ...actor\n    }\n    review {\n      ...review\n    }\n    dismissalMessage\n    createdAt\n  }\n  ...
      on ReviewRequestRemovedEvent {\n    actor {\n      ...actor\n    }\n    requestedReviewer
      {\n      ...actor\n    }\n    requestedTeam: requestedReviewer {\n      ...
      on Team {\n        name\n        url\n        avatarUrl\n      }\n    }\n    createdAt\n  }\n  ...
      on ReviewRequestedEvent {\n    actor {\n      ...actor\n    }\n    requestedReviewer
      {\n      ...actor\n    }\n    requestedTeam: requestedReviewer {\n      ...
      on Team {\n        name\n        url\n        avatarUrl\n      }\n    }\n    createdAt\n  }\n  ...
      on ReadyForReviewEvent {\n    actor {\n      ...actor\n    }\n    createdAt\n  }\n  ...
      on UnassignedEvent {\n    actor {\n      ...actor\n    }\n    assignee {\n      ...actor\n    }\n    createdAt\n  }\n  ...
      on LabeledEvent {\n    actor {\n      ...actor\n    }\n    label {\n      ...label\n    }\n    createdAt\n  }\n  ...
      on UnlabeledEvent {\n    actor {\n      ...actor\n    }\n    label {\n      ...label\n    }\n    createdAt\n  }\n  ...
      on PullRequestCommit {\n    commit {\n      ...commit\n    }\n  }\n  \n  ...
      on ConvertToDraftEvent {\n    actor {\n\t  ...actor\n\t}\n\tcreatedAt\n  }\n\n}\n\nfragment
      actor on Actor {\n  avatarUrl\n  login\n  url\n}\n\nfragment label on Label
      {\n  name\n  color\n  description\n  id\n}\n\nfragment commitWithChecks on Commit
      {\n  oid\n  status {\n    state\n    contexts {\n      id\n      context\n      state\n      description\n    }\n  }\n  checkSuites(last:
      20) {\n    nodes {\n      id\n      status\n      conclusion\n      checkRuns(last:
      20) {\n        nodes {\n          id\n          status\n          conclusion\n        }\n      }\n    }\n  }\n  committedDate\n}\n\nfragment
      prCommit on PullRequestCommit {\n  commit {\n    ...commitWithChecks\n  }\n}\n\nfragment
      repo on Repository {\n  id\n  name\n  owner {\n    login\n  }\n}\n\nfragment
      pr on PullRequest {\n  id\n  title\n  body\n  state\n  url\n  number\n  createdAt\n  updatedAt\n  headRefOid\n  baseRefOid\n  headRefName\n  baseRefName\n  reviewDecision\n  isDraft\n  author
      {\n    ...actor\n  }\n  baseRepository {\n    ...repo\n  }\n  headRepository
      {\n    ...repo\n  }\n  participants(first: 100) {\n    nodes {\n      ...actor\n    }\n  }\n  labels(first:
      100) {\n    nodes {\n      ...label\n    }\n  }\n  commits(last: 1) {\n    nodes
      {\n      ...prCommit\n    }\n  }\n  timelineItems(first: 250, itemTypes: [ASSIGNED_EVENT,
      CLOSED_EVENT, ISSUE_COMMENT, RENAMED_TITLE_EVENT, MERGED_EVENT, PULL_REQUEST_REVIEW,
      PULL_REQUEST_REVIEW_THREAD, REOPENED_EVENT, REVIEW_DISMISSED_EVENT, REVIEW_REQUEST_REMOVED_EVENT,
      REVIEW_REQUESTED_EVENT, UNASSIGNED_EVENT, LABELED_EVENT, UNLABELED_EVENT, PULL_REQUEST_COMMIT,
      READY_FOR_REVIEW_EVENT, CONVERT_TO_DRAFT_EVENT]) {\n    pageInfo {\n      hasNextPage\n      endCursor\n    }\n    nodes
      {\n      __typename\n      ...timelineItems\n    }\n  }\n}\nmutation\tReopenPullRequest($input:ReopenPullRequestInput!)
      {\n  reopenPullRequest(input:$input) {\n    pullRequest {\n      ... pr\n    }\n  }\n}","variables":{"input":{"pullRequestId":"MDExOlB1bGxSZXF1ZXN0NDg4NjA0NTQ5"}}}'
    form: {}
    headers:
      Accept:
      - application/vnd.github.antiope-preview+json
      Cache-Control:
      - max-age=0
      Content-Type:
      - application/json; charset=utf-8
    url: https://api.github.com/graphql
    method: POST
  response:
    body: '{"data":{"reopenPullRequest":{"pullRequest":{"id":"MDExOlB1bGxSZXF1ZXN0NDg4NjA0NTQ5","title":"Hello
      Viewers!","body":"This is just one of _many_ pull requests. Is it useless? Yes.
      But is it cool? Yes.","state":"OPEN","url":"https://github.com/sourcegraph/automation-testing/pull/355","number":355,"createdAt":"2020-09-17T11:37:38Z","updatedAt":"2023-06-23T19:28:53Z","headRefOid":"55dc5cf08fad39e41973cd384ffe0ea5d5e958d3","baseRefOid":"58dd8da9d9099a823c814c528b29b72c9b2ac98b","headRefName":"demo/200-in-2","baseRefName":"master","reviewDecision":"REVIEW_REQUIRED","isDraft":false,"author":{"avatarUrl":"https://avatars.githubusercontent.com/u/1185253?u=35f048c505007991433b46c9c0616ccbcfbd4bff&v=4","login":"mrnugget","url":"https://github.com/mrnugget"},"baseRepository":{"id":"MDEwOlJlcG9zaXRvcnkyMjExNDc1MTM=","name":"automation-testing","owner":{"login":"sourcegraph"}},"headRepository":{"id":"MDEwOlJlcG9zaXRvcnkyMjExNDc1MTM=","name":"automation-testing","owner":{"login":"sourcegraph"}},"participants":{"nodes":[{"avatarUrl":"https://avatars.githubusercontent.com/u/1185253?u=35f048c505007991433b46c9c0616ccbcfbd4bff&v=4","login":"mrnugget","url":"https://github.com/mrnugget"},{"avatarUrl":"https://avatars.githubusercontent.com/u/229984?v=4","login":"LawnGnome","url":"https://github.com/LawnGnome"},{"avatarUrl":"https://avatars.githubusercontent.com/u/2067825?u=c2e97ecd6b800634cf59ed862168e20c9fa7b57e&v=4","login":"davejrt","url":"https://github.com/davejrt"},{"avatarUrl":"https://avatars.githubusercontent.com/u/23356519?u=314e3cc368638ce1f8117c4377b62ce158127302&v=4","login":"bobheadxi","url":"https://github.com/bobheadxi"},{"avatarUrl":"https://avatars.githubusercontent.com/u/63290851?v=4","login":"sourcegraph-vcr","url":"https://github.com/sourcegraph-vcr"}]},"labels":{"nodes":[]},"commits":{"nodes":[{"commit":{"oid":"55dc5cf08fad39e41973cd384ffe0ea5d5e958d3","status":null,"checkSuites":{"nodes":[]},"committedDate":"2020-09-17T11:35:44Z"}}]},"timelineItems":{"pageInfo":{"hasNextPage":false,"endCursor":"Y3Vyc29yOnYyOpPPAAABiOm7GQgBqjk2MjE0MDYzODA="},"nodes":[{"__typename":"PullRequestCommit","commit":{"oid":"55dc5cf08fad39e41973cd384ffe0ea5d5e958d3","message":"Append
      Hello World to all README.md files","messageHeadline":"Append Hello World to
      all README.md files","committedDate":"2020-09-17T11:35:44Z","pushedDate":"2020-09-17T11:37:38Z","url":"https://github.com/sourcegraph/automation-testing/commit/55dc5cf08fad39e41973cd384ffe0ea5d5e958d3","committer":{"avatarUrl":"https://camo.githubusercontent.com/3e3eb4d10714f844caf76fb37fd9d457c037d5dbd300f25f56c519ab743bb78e/68747470733a2f2f322e67726176617461722e636f6d2f6176617461722f34366333653536396163366530356264326136366339313661396666343934633f643d68747470732533412532462532466769746875622e6769746875626173736574732e636f6d253246696d6167657325324667726176617461727325324667726176617461722d757365722d3432302e706e6726723d67","email":"campaigns@sourcegraph.com","name":"Sourcegraph","user":null}}},{"__typename":"ClosedEvent","actor":{"avatarUrl":"https://avatars.githubusercontent.com/u/1185253?u=35f048c505007991433b46c9c0616ccbcfbd4bff&v=4","login":"mrnugget","url":"https://github.com/mrnugget"},"createdAt":"2020-11-10T16:48:37Z","url":"https://github.com/sourcegraph/automation-testing/pull/355#event-3979919464"},{"__typename":"ReopenedEvent","actor":{"avatarUrl":"https://avatars.githubusercontent.com/u/229984?v=4","login":"LawnGnome","url":"https://github.com/LawnGnome"},"createdAt":"2021-02-25T02:15:16Z"},{"__typename":"ClosedEvent","actor":{"avatarUrl":"https://avatars.githubusercontent.com/u/1185253?u=35f048c505007991433b46c9c0616ccbcfbd4bff&v=4","login":"mrnugget","url":"https://github.com/mrnugget"},"createdAt":"2021-03-08T15:17:58Z","url":"https://github.com/sourcegraph/automation-testing/pull/355#event-4421817053"},{"__typename":"ReopenedEvent","actor":{"avatarUrl":"https://avatars.githubusercontent.com/u/23356519?u=314e3cc368638ce1f8117c4377b62ce158127302&v=4","login":"bobheadxi","url":"https://github.com/bobheadxi"},"createdAt":"2021-08-23T15:22:56Z"},{"__typename":"ClosedEvent","actor":{"avatarUrl":"https://avatars.githubusercontent.com/u/1185253?u=35f048c505007991433b46c9c0616ccbcfbd4bff&v=4","login":"mrnugget","url":"https://github.com/mrnugget"},"createdAt":"2021-09-15T10:08:57Z","url":"https://github.com/sourcegraph/automation-testing/pull/355#event-5304888305"},{"__typename":"ReopenedEvent","actor":{"avatarUrl":"https://avatars.githubusercontent.com/u/229984?v=4","login":"LawnGnome","url":"https://github.com/LawnGnome"},"createdAt":"2021-12-30T22:46:15Z"},{"__typename":"ClosedEvent","actor":{"avatarUrl":"https://avatars.githubusercontent.com/u/1185253?u=35f048c505007991433b46c9c0616ccbcfbd4bff&v=4","login":"mrnugget","url":"https://github.com/mrnugget"},"createdAt":"2022-02-11T09:50:41Z","url":"https://github.com/sourcegraph/automation-testing/pull/355#event-6049917188"},{"__typename":"ReopenedEvent","actor":{"avatarUrl":"https://avatars.githubusercontent.com/u/63290851?v=4","login":"sourcegraph-vcr","url":"https://github.com/sourcegraph-vcr"},"createdAt":"2023-02-07T08:14:54Z"},{"__typename":"ClosedEvent","actor":{"avatarUrl":"https://avatars.githubusercontent.com/u/1185253?u=35f048c505007991433b46c9c0616ccbcfbd4bff&v=4","login":"mrnugget","url":"https://github.com/mrnugget"},"createdAt":"2023-06-06T07:44:01Z","url":"https://github.com/sourcegraph/automation-testing/pull/355#event-9442706403"},{"__typename":"ReopenedEvent","actor":{"avatarUrl":"https://avatars.githubusercontent.com/u/2067825?u=c2e97ecd6b800634cf59ed862168e20c9fa7b57e&v=4","login":"davejrt","url":"https://github.com/davejrt"},"createdAt":"2023-06-23T19:28:53Z"}]}}}},"extensions":{"warnings":[{"type":"DEPRECATION","message":"The
      id MDExOlB1bGxSZXF1ZXN0NDg4NjA0NTQ5 is deprecated. Update your cache to use
      the next_global_id from the data payload.","data":{"legacy_global_id":"MDExOlB1bGxSZXF1ZXN0NDg4NjA0NTQ5","next_global_id":"PR_kwDODS5xec4dH4OF"},"link":"https://docs.github.com"}]}}'
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Access-Control-Expose-Headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      Content-Security-Policy:
      - default-src 'none'
      Content-Type:
      - application/json; charset=utf-8
      Date:
      - Fri, 23 Jun 2023 19:29:17 GMT
      Referrer-Policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      Server:
      - GitHub.com
      Strict-Transport-Security:
      - max-age=31536000; includeSubdomains; preload
      Vary:
      - Accept-Encoding, Accept, X-Requested-With
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      X-Github-Media-Type:
      - github.v4; param=antiope-preview; format=json
      X-Github-Request-Id:
      - E1DF:26BA:1D58E2:3BED54:6495F28C
      X-Ratelimit-Limit:
      - "5000"
      X-Ratelimit-Remaining:
      - "4886"
      X-Ratelimit-Reset:
      - "1687551677"
      X-Ratelimit-Resource:
      - graphql
      X-Ratelimit-Used:
      - "114"
      X-Xss-Protection:
      - "0"
    status: 200 OK
    code: 200
    duration: ""
