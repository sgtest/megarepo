---
version: 1
interactions:
- request:
    body: '{"query":"\nfragment commit on Commit {\n  oid\n  message\n  messageHeadline\n  committedDate\n  pushedDate\n  url\n  committer
      {\n    avatarUrl\n    email\n    name\n    user {\n      ...actor\n    }\n  }\n}\n\nfragment
      review on PullRequestReview {\n  databaseId\n  author {\n    ...actor\n  }\n  authorAssociation\n  body\n  state\n  url\n  createdAt\n  updatedAt\n  commit
      {\n    ...commit\n  }\n  includesCreatedEdit\n}\n\nfragment timelineItems on
      PullRequestTimelineItems {\n  ... on AssignedEvent {\n    actor {\n      ...actor\n    }\n    assignee
      {\n      ...actor\n    }\n    createdAt\n  }\n  ... on ClosedEvent {\n    actor
      {\n      ...actor\n    }\n    createdAt\n    url\n  }\n  ... on IssueComment
      {\n    databaseId\n    author {\n      ...actor\n    }\n    authorAssociation\n    body\n    createdAt\n    editor
      {\n      ...actor\n    }\n    url\n    updatedAt\n    includesCreatedEdit\n    publishedAt\n  }\n  ...
      on RenamedTitleEvent {\n    actor {\n      ...actor\n    }\n    previousTitle\n    currentTitle\n    createdAt\n  }\n  ...
      on MergedEvent {\n    actor {\n      ...actor\n    }\n    mergeRefName\n    url\n    commit
      {\n      ...commit\n    }\n    createdAt\n  }\n  ... on PullRequestReview {\n    ...review\n  }\n  ...
      on PullRequestReviewThread {\n    comments(last: 100) {\n      nodes {\n        databaseId\n        author
      {\n          ...actor\n        }\n        authorAssociation\n        editor
      {\n          ...actor\n        }\n        commit {\n          ...commit\n        }\n        body\n        state\n        url\n        createdAt\n        updatedAt\n        includesCreatedEdit\n      }\n    }\n  }\n  ...
      on ReopenedEvent {\n    actor {\n      ...actor\n    }\n    createdAt\n  }\n  ...
      on ReviewDismissedEvent {\n    actor {\n      ...actor\n    }\n    review {\n      ...review\n    }\n    dismissalMessage\n    createdAt\n  }\n  ...
      on ReviewRequestRemovedEvent {\n    actor {\n      ...actor\n    }\n    requestedReviewer
      {\n      ...actor\n    }\n    requestedTeam: requestedReviewer {\n      ...
      on Team {\n        name\n        url\n        avatarUrl\n      }\n    }\n    createdAt\n  }\n  ...
      on ReviewRequestedEvent {\n    actor {\n      ...actor\n    }\n    requestedReviewer
      {\n      ...actor\n    }\n    requestedTeam: requestedReviewer {\n      ...
      on Team {\n        name\n        url\n        avatarUrl\n      }\n    }\n    createdAt\n  }\n  ...
      on ReadyForReviewEvent {\n    actor {\n      ...actor\n    }\n    createdAt\n  }\n  ...
      on UnassignedEvent {\n    actor {\n      ...actor\n    }\n    assignee {\n      ...actor\n    }\n    createdAt\n  }\n  ...
      on LabeledEvent {\n    actor {\n      ...actor\n    }\n    label {\n      ...label\n    }\n    createdAt\n  }\n  ...
      on UnlabeledEvent {\n    actor {\n      ...actor\n    }\n    label {\n      ...label\n    }\n    createdAt\n  }\n  ...
      on PullRequestCommit {\n    commit {\n      ...commit\n    }\n  }\n  \n  ...
      on ConvertToDraftEvent {\n    actor {\n\t  ...actor\n\t}\n\tcreatedAt\n  }\n\n}\n\nfragment
      actor on Actor {\n  avatarUrl\n  login\n  url\n}\n\nfragment label on Label
      {\n  name\n  color\n  description\n  id\n}\n\nfragment commitWithChecks on Commit
      {\n  oid\n  status {\n    state\n    contexts {\n      id\n      context\n      state\n      description\n    }\n  }\n  checkSuites(last:
      20) {\n    nodes {\n      id\n      status\n      conclusion\n      checkRuns(last:
      20) {\n        nodes {\n          id\n          status\n          conclusion\n        }\n      }\n    }\n  }\n  committedDate\n}\n\nfragment
      prCommit on PullRequestCommit {\n  commit {\n    ...commitWithChecks\n  }\n}\n\nfragment
      repo on Repository {\n  id\n  name\n  owner {\n    login\n  }\n}\n\nfragment
      pr on PullRequest {\n  id\n  title\n  body\n  state\n  url\n  number\n  createdAt\n  updatedAt\n  headRefOid\n  baseRefOid\n  headRefName\n  baseRefName\n  reviewDecision\n  isDraft\n  author
      {\n    ...actor\n  }\n  baseRepository {\n    ...repo\n  }\n  headRepository
      {\n    ...repo\n  }\n  participants(first: 100) {\n    nodes {\n      ...actor\n    }\n  }\n  labels(first:
      100) {\n    nodes {\n      ...label\n    }\n  }\n  commits(last: 1) {\n    nodes
      {\n      ...prCommit\n    }\n  }\n  timelineItems(first: 250, itemTypes: [ASSIGNED_EVENT,
      CLOSED_EVENT, ISSUE_COMMENT, RENAMED_TITLE_EVENT, MERGED_EVENT, PULL_REQUEST_REVIEW,
      PULL_REQUEST_REVIEW_THREAD, REOPENED_EVENT, REVIEW_DISMISSED_EVENT, REVIEW_REQUEST_REMOVED_EVENT,
      REVIEW_REQUESTED_EVENT, UNASSIGNED_EVENT, LABELED_EVENT, UNLABELED_EVENT, PULL_REQUEST_COMMIT,
      READY_FOR_REVIEW_EVENT, CONVERT_TO_DRAFT_EVENT]) {\n    pageInfo {\n      hasNextPage\n      endCursor\n    }\n    nodes
      {\n      __typename\n      ...timelineItems\n    }\n  }\n}\nmutation\tMarkPullRequestReadyForReview($input:MarkPullRequestReadyForReviewInput!)
      {\n  markPullRequestReadyForReview(input:$input) {\n    pullRequest {\n      ...
      pr\n    }\n  }\n}","variables":{"input":{"pullRequestId":"PR_kwDODS5xec4waL43"}}}'
    form: {}
    headers:
      Accept:
      - application/vnd.github.antiope-preview+json
      Cache-Control:
      - max-age=0
      Content-Type:
      - application/json; charset=utf-8
    url: https://api.github.com/graphql
    method: POST
  response:
    body: '{"data":{"markPullRequestReadyForReview":{"pullRequest":{"id":"PR_kwDODS5xec4waL43","title":"This
      is a test PR, feel free to ignore","body":"I''m opening this PR to test something.
      Please ignore.","state":"OPEN","url":"https://github.com/sourcegraph/automation-testing/pull/467","number":467,"createdAt":"2021-12-30T22:43:31Z","updatedAt":"2023-06-23T19:30:16Z","headRefOid":"c447ff8dabfd39e88ff99fe1cd69089dbdec4b72","baseRefOid":"36f6827a9ac62710ca5fb3df18000b9e7eb9b6ea","headRefName":"test-pr-9","baseRefName":"master","reviewDecision":"REVIEW_REQUIRED","isDraft":false,"author":{"avatarUrl":"https://avatars.githubusercontent.com/u/229984?v=4","login":"LawnGnome","url":"https://github.com/LawnGnome"},"baseRepository":{"id":"MDEwOlJlcG9zaXRvcnkyMjExNDc1MTM=","name":"automation-testing","owner":{"login":"sourcegraph"}},"headRepository":{"id":"MDEwOlJlcG9zaXRvcnkyMjExNDc1MTM=","name":"automation-testing","owner":{"login":"sourcegraph"}},"participants":{"nodes":[{"avatarUrl":"https://avatars.githubusercontent.com/u/229984?v=4","login":"LawnGnome","url":"https://github.com/LawnGnome"}]},"labels":{"nodes":[]},"commits":{"nodes":[{"commit":{"oid":"c447ff8dabfd39e88ff99fe1cd69089dbdec4b72","status":null,"checkSuites":{"nodes":[{"id":"CS_kwDODS5xec8AAAABHenIlg","status":"QUEUED","conclusion":null,"checkRuns":{"nodes":[]}},{"id":"CS_kwDODS5xec8AAAABHenIlw","status":"QUEUED","conclusion":null,"checkRuns":{"nodes":[]}},{"id":"CS_kwDODS5xec8AAAABHenImg","status":"QUEUED","conclusion":null,"checkRuns":{"nodes":[]}}]},"committedDate":"2021-12-30T22:41:59Z"}}]},"timelineItems":{"pageInfo":{"hasNextPage":false,"endCursor":"Y3Vyc29yOnYyOpPPAAABiOm8XUABqjk2MjE0MjQyNDQ="},"nodes":[{"__typename":"PullRequestCommit","commit":{"oid":"c447ff8dabfd39e88ff99fe1cd69089dbdec4b72","message":"Test
      commit.","messageHeadline":"Test commit.","committedDate":"2021-12-30T22:41:59Z","pushedDate":"2021-12-30T22:43:11Z","url":"https://github.com/sourcegraph/automation-testing/commit/c447ff8dabfd39e88ff99fe1cd69089dbdec4b72","committer":{"avatarUrl":"https://avatars.githubusercontent.com/u/229984?v=4","email":"adam@adamharvey.name","name":"Adam
      Harvey","user":{"avatarUrl":"https://avatars.githubusercontent.com/u/229984?v=4","login":"LawnGnome","url":"https://github.com/LawnGnome"}}}},{"__typename":"ReadyForReviewEvent","actor":{"avatarUrl":"https://avatars.githubusercontent.com/u/229984?v=4","login":"LawnGnome","url":"https://github.com/LawnGnome"},"createdAt":"2021-12-30T22:53:14Z"},{"__typename":"ConvertToDraftEvent","actor":{"avatarUrl":"https://avatars.githubusercontent.com/u/8942601?u=d2ce1e7fb6b3178eefa92abc9e8a7eb835597466&v=4","login":"courier-new","url":"https://github.com/courier-new"},"createdAt":"2023-02-07T08:38:12Z"},{"__typename":"ReadyForReviewEvent","actor":{"avatarUrl":"https://avatars.githubusercontent.com/u/63290851?v=4","login":"sourcegraph-vcr","url":"https://github.com/sourcegraph-vcr"},"createdAt":"2023-02-07T08:39:23Z"},{"__typename":"ConvertToDraftEvent","actor":{"avatarUrl":"https://avatars.githubusercontent.com/u/2067825?u=c2e97ecd6b800634cf59ed862168e20c9fa7b57e&v=4","login":"davejrt","url":"https://github.com/davejrt"},"createdAt":"2023-06-23T19:29:53Z"},{"__typename":"ReadyForReviewEvent","actor":{"avatarUrl":"https://avatars.githubusercontent.com/u/2067825?u=c2e97ecd6b800634cf59ed862168e20c9fa7b57e&v=4","login":"davejrt","url":"https://github.com/davejrt"},"createdAt":"2023-06-23T19:30:16Z"}]}}}}}'
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Access-Control-Expose-Headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      Content-Security-Policy:
      - default-src 'none'
      Content-Type:
      - application/json; charset=utf-8
      Date:
      - Fri, 23 Jun 2023 19:30:17 GMT
      Referrer-Policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      Server:
      - GitHub.com
      Strict-Transport-Security:
      - max-age=31536000; includeSubdomains; preload
      Vary:
      - Accept-Encoding, Accept, X-Requested-With
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      X-Github-Media-Type:
      - github.v4; param=antiope-preview; format=json
      X-Github-Request-Id:
      - E1F2:0F6C:181055:314A27:6495F2C8
      X-Ratelimit-Limit:
      - "5000"
      X-Ratelimit-Remaining:
      - "4880"
      X-Ratelimit-Reset:
      - "1687551677"
      X-Ratelimit-Resource:
      - graphql
      X-Ratelimit-Used:
      - "120"
      X-Xss-Protection:
      - "0"
    status: 200 OK
    code: 200
    duration: ""
- request:
    body: '{"query":"\nfragment commit on Commit {\n  oid\n  message\n  messageHeadline\n  committedDate\n  pushedDate\n  url\n  committer
      {\n    avatarUrl\n    email\n    name\n    user {\n      ...actor\n    }\n  }\n}\n\nfragment
      review on PullRequestReview {\n  databaseId\n  author {\n    ...actor\n  }\n  authorAssociation\n  body\n  state\n  url\n  createdAt\n  updatedAt\n  commit
      {\n    ...commit\n  }\n  includesCreatedEdit\n}\n\nfragment timelineItems on
      PullRequestTimelineItems {\n  ... on AssignedEvent {\n    actor {\n      ...actor\n    }\n    assignee
      {\n      ...actor\n    }\n    createdAt\n  }\n  ... on ClosedEvent {\n    actor
      {\n      ...actor\n    }\n    createdAt\n    url\n  }\n  ... on IssueComment
      {\n    databaseId\n    author {\n      ...actor\n    }\n    authorAssociation\n    body\n    createdAt\n    editor
      {\n      ...actor\n    }\n    url\n    updatedAt\n    includesCreatedEdit\n    publishedAt\n  }\n  ...
      on RenamedTitleEvent {\n    actor {\n      ...actor\n    }\n    previousTitle\n    currentTitle\n    createdAt\n  }\n  ...
      on MergedEvent {\n    actor {\n      ...actor\n    }\n    mergeRefName\n    url\n    commit
      {\n      ...commit\n    }\n    createdAt\n  }\n  ... on PullRequestReview {\n    ...review\n  }\n  ...
      on PullRequestReviewThread {\n    comments(last: 100) {\n      nodes {\n        databaseId\n        author
      {\n          ...actor\n        }\n        authorAssociation\n        editor
      {\n          ...actor\n        }\n        commit {\n          ...commit\n        }\n        body\n        state\n        url\n        createdAt\n        updatedAt\n        includesCreatedEdit\n      }\n    }\n  }\n  ...
      on ReopenedEvent {\n    actor {\n      ...actor\n    }\n    createdAt\n  }\n  ...
      on ReviewDismissedEvent {\n    actor {\n      ...actor\n    }\n    review {\n      ...review\n    }\n    dismissalMessage\n    createdAt\n  }\n  ...
      on ReviewRequestRemovedEvent {\n    actor {\n      ...actor\n    }\n    requestedReviewer
      {\n      ...actor\n    }\n    requestedTeam: requestedReviewer {\n      ...
      on Team {\n        name\n        url\n        avatarUrl\n      }\n    }\n    createdAt\n  }\n  ...
      on ReviewRequestedEvent {\n    actor {\n      ...actor\n    }\n    requestedReviewer
      {\n      ...actor\n    }\n    requestedTeam: requestedReviewer {\n      ...
      on Team {\n        name\n        url\n        avatarUrl\n      }\n    }\n    createdAt\n  }\n  ...
      on ReadyForReviewEvent {\n    actor {\n      ...actor\n    }\n    createdAt\n  }\n  ...
      on UnassignedEvent {\n    actor {\n      ...actor\n    }\n    assignee {\n      ...actor\n    }\n    createdAt\n  }\n  ...
      on LabeledEvent {\n    actor {\n      ...actor\n    }\n    label {\n      ...label\n    }\n    createdAt\n  }\n  ...
      on UnlabeledEvent {\n    actor {\n      ...actor\n    }\n    label {\n      ...label\n    }\n    createdAt\n  }\n  ...
      on PullRequestCommit {\n    commit {\n      ...commit\n    }\n  }\n  \n  ...
      on ConvertToDraftEvent {\n    actor {\n\t  ...actor\n\t}\n\tcreatedAt\n  }\n\n}\n\nfragment
      actor on Actor {\n  avatarUrl\n  login\n  url\n}\n\nfragment label on Label
      {\n  name\n  color\n  description\n  id\n}\n\nfragment commitWithChecks on Commit
      {\n  oid\n  status {\n    state\n    contexts {\n      id\n      context\n      state\n      description\n    }\n  }\n  checkSuites(last:
      20) {\n    nodes {\n      id\n      status\n      conclusion\n      checkRuns(last:
      20) {\n        nodes {\n          id\n          status\n          conclusion\n        }\n      }\n    }\n  }\n  committedDate\n}\n\nfragment
      prCommit on PullRequestCommit {\n  commit {\n    ...commitWithChecks\n  }\n}\n\nfragment
      repo on Repository {\n  id\n  name\n  owner {\n    login\n  }\n}\n\nfragment
      pr on PullRequest {\n  id\n  title\n  body\n  state\n  url\n  number\n  createdAt\n  updatedAt\n  headRefOid\n  baseRefOid\n  headRefName\n  baseRefName\n  reviewDecision\n  isDraft\n  author
      {\n    ...actor\n  }\n  baseRepository {\n    ...repo\n  }\n  headRepository
      {\n    ...repo\n  }\n  participants(first: 100) {\n    nodes {\n      ...actor\n    }\n  }\n  labels(first:
      100) {\n    nodes {\n      ...label\n    }\n  }\n  commits(last: 1) {\n    nodes
      {\n      ...prCommit\n    }\n  }\n  timelineItems(first: 250, itemTypes: [ASSIGNED_EVENT,
      CLOSED_EVENT, ISSUE_COMMENT, RENAMED_TITLE_EVENT, MERGED_EVENT, PULL_REQUEST_REVIEW,
      PULL_REQUEST_REVIEW_THREAD, REOPENED_EVENT, REVIEW_DISMISSED_EVENT, REVIEW_REQUEST_REMOVED_EVENT,
      REVIEW_REQUESTED_EVENT, UNASSIGNED_EVENT, LABELED_EVENT, UNLABELED_EVENT, PULL_REQUEST_COMMIT,
      READY_FOR_REVIEW_EVENT, CONVERT_TO_DRAFT_EVENT]) {\n    pageInfo {\n      hasNextPage\n      endCursor\n    }\n    nodes
      {\n      __typename\n      ...timelineItems\n    }\n  }\n}\nmutation\tMarkPullRequestReadyForReview($input:MarkPullRequestReadyForReviewInput!)
      {\n  markPullRequestReadyForReview(input:$input) {\n    pullRequest {\n      ...
      pr\n    }\n  }\n}","variables":{"input":{"pullRequestId":"PR_kwDODS5xec4waL4w"}}}'
    form: {}
    headers:
      Accept:
      - application/vnd.github.antiope-preview+json
      Cache-Control:
      - max-age=0
      Content-Type:
      - application/json; charset=utf-8
    url: https://api.github.com/graphql
    method: POST
  response:
    body: '{"data":{"markPullRequestReadyForReview":{"pullRequest":{"id":"PR_kwDODS5xec4waL4w","title":"This
      is a test PR, feel free to ignore","body":"I''m opening this PR to test something.
      Please ignore.","state":"OPEN","url":"https://github.com/sourcegraph/automation-testing/pull/466","number":466,"createdAt":"2021-12-30T22:43:30Z","updatedAt":"2021-12-30T22:43:30Z","headRefOid":"10b4269455ca0f834f8b0e7c4cc197392cddc717","baseRefOid":"36f6827a9ac62710ca5fb3df18000b9e7eb9b6ea","headRefName":"test-pr-8","baseRefName":"master","reviewDecision":"REVIEW_REQUIRED","isDraft":false,"author":{"avatarUrl":"https://avatars.githubusercontent.com/u/229984?v=4","login":"LawnGnome","url":"https://github.com/LawnGnome"},"baseRepository":{"id":"MDEwOlJlcG9zaXRvcnkyMjExNDc1MTM=","name":"automation-testing","owner":{"login":"sourcegraph"}},"headRepository":{"id":"MDEwOlJlcG9zaXRvcnkyMjExNDc1MTM=","name":"automation-testing","owner":{"login":"sourcegraph"}},"participants":{"nodes":[{"avatarUrl":"https://avatars.githubusercontent.com/u/229984?v=4","login":"LawnGnome","url":"https://github.com/LawnGnome"}]},"labels":{"nodes":[]},"commits":{"nodes":[{"commit":{"oid":"10b4269455ca0f834f8b0e7c4cc197392cddc717","status":null,"checkSuites":{"nodes":[{"id":"CS_kwDODS5xec8AAAABHenIqA","status":"QUEUED","conclusion":null,"checkRuns":{"nodes":[]}},{"id":"CS_kwDODS5xec8AAAABHenIrA","status":"QUEUED","conclusion":null,"checkRuns":{"nodes":[]}},{"id":"CS_kwDODS5xec8AAAABHenIrw","status":"QUEUED","conclusion":null,"checkRuns":{"nodes":[]}}]},"committedDate":"2021-12-30T22:41:48Z"}}]},"timelineItems":{"pageInfo":{"hasNextPage":false,"endCursor":"Y3Vyc29yOnYyOpPPAAABfg2Bp-AH2gAyODEyMTcwODAwOjEwYjQyNjk0NTVjYTBmODM0ZjhiMGU3YzRjYzE5NzM5MmNkZGM3MTc="},"nodes":[{"__typename":"PullRequestCommit","commit":{"oid":"10b4269455ca0f834f8b0e7c4cc197392cddc717","message":"Test
      commit.","messageHeadline":"Test commit.","committedDate":"2021-12-30T22:41:48Z","pushedDate":"2021-12-30T22:43:11Z","url":"https://github.com/sourcegraph/automation-testing/commit/10b4269455ca0f834f8b0e7c4cc197392cddc717","committer":{"avatarUrl":"https://avatars.githubusercontent.com/u/229984?v=4","email":"adam@adamharvey.name","name":"Adam
      Harvey","user":{"avatarUrl":"https://avatars.githubusercontent.com/u/229984?v=4","login":"LawnGnome","url":"https://github.com/LawnGnome"}}}}]}}}}}'
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Access-Control-Expose-Headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      Content-Security-Policy:
      - default-src 'none'
      Content-Type:
      - application/json; charset=utf-8
      Date:
      - Fri, 23 Jun 2023 19:30:18 GMT
      Referrer-Policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      Server:
      - GitHub.com
      Strict-Transport-Security:
      - max-age=31536000; includeSubdomains; preload
      Vary:
      - Accept-Encoding, Accept, X-Requested-With
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      X-Github-Media-Type:
      - github.v4; param=antiope-preview; format=json
      X-Github-Request-Id:
      - E1F2:0F6C:1811EB:314D80:6495F2C8
      X-Ratelimit-Limit:
      - "5000"
      X-Ratelimit-Remaining:
      - "4877"
      X-Ratelimit-Reset:
      - "1687551677"
      X-Ratelimit-Resource:
      - graphql
      X-Ratelimit-Used:
      - "123"
      X-Xss-Protection:
      - "0"
    status: 200 OK
    code: 200
    duration: ""
