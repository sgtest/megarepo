// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.1
// 	protoc        (unknown)
// source: weather.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Temperature_Unit int32

const (
	Temperature_UNIT_UNSPECIFIED Temperature_Unit = 0
	Temperature_UNIT_CELSIUS     Temperature_Unit = 1
	Temperature_UNIT_FAHRENHEIT  Temperature_Unit = 2
	Temperature_UNIT_KELVIN      Temperature_Unit = 3
)

// Enum value maps for Temperature_Unit.
var (
	Temperature_Unit_name = map[int32]string{
		0: "UNIT_UNSPECIFIED",
		1: "UNIT_CELSIUS",
		2: "UNIT_FAHRENHEIT",
		3: "UNIT_KELVIN",
	}
	Temperature_Unit_value = map[string]int32{
		"UNIT_UNSPECIFIED": 0,
		"UNIT_CELSIUS":     1,
		"UNIT_FAHRENHEIT":  2,
		"UNIT_KELVIN":      3,
	}
)

func (x Temperature_Unit) Enum() *Temperature_Unit {
	p := new(Temperature_Unit)
	*p = x
	return p
}

func (x Temperature_Unit) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Temperature_Unit) Descriptor() protoreflect.EnumDescriptor {
	return file_weather_proto_enumTypes[0].Descriptor()
}

func (Temperature_Unit) Type() protoreflect.EnumType {
	return &file_weather_proto_enumTypes[0]
}

func (x Temperature_Unit) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Temperature_Unit.Descriptor instead.
func (Temperature_Unit) EnumDescriptor() ([]byte, []int) {
	return file_weather_proto_rawDescGZIP(), []int{2, 0}
}

type GetCurrentWeatherRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location string `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *GetCurrentWeatherRequest) Reset() {
	*x = GetCurrentWeatherRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weather_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCurrentWeatherRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentWeatherRequest) ProtoMessage() {}

func (x *GetCurrentWeatherRequest) ProtoReflect() protoreflect.Message {
	mi := &file_weather_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrentWeatherRequest.ProtoReflect.Descriptor instead.
func (*GetCurrentWeatherRequest) Descriptor() ([]byte, []int) {
	return file_weather_proto_rawDescGZIP(), []int{0}
}

func (x *GetCurrentWeatherRequest) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

type GetCurrentWeatherResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description string       `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	Temperature *Temperature `protobuf:"bytes,2,opt,name=temperature,proto3" json:"temperature,omitempty"`
}

func (x *GetCurrentWeatherResponse) Reset() {
	*x = GetCurrentWeatherResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weather_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCurrentWeatherResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentWeatherResponse) ProtoMessage() {}

func (x *GetCurrentWeatherResponse) ProtoReflect() protoreflect.Message {
	mi := &file_weather_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrentWeatherResponse.ProtoReflect.Descriptor instead.
func (*GetCurrentWeatherResponse) Descriptor() ([]byte, []int) {
	return file_weather_proto_rawDescGZIP(), []int{1}
}

func (x *GetCurrentWeatherResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetCurrentWeatherResponse) GetTemperature() *Temperature {
	if x != nil {
		return x.Temperature
	}
	return nil
}

type Temperature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value float64          `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
	Unit  Temperature_Unit `protobuf:"varint,2,opt,name=unit,proto3,enum=grpc.example.weather.v1.Temperature_Unit" json:"unit,omitempty"`
}

func (x *Temperature) Reset() {
	*x = Temperature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weather_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Temperature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Temperature) ProtoMessage() {}

func (x *Temperature) ProtoReflect() protoreflect.Message {
	mi := &file_weather_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Temperature.ProtoReflect.Descriptor instead.
func (*Temperature) Descriptor() ([]byte, []int) {
	return file_weather_proto_rawDescGZIP(), []int{2}
}

func (x *Temperature) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *Temperature) GetUnit() Temperature_Unit {
	if x != nil {
		return x.Unit
	}
	return Temperature_UNIT_UNSPECIFIED
}

type SensorOfflineError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SensorId string `protobuf:"bytes,1,opt,name=sensor_id,json=sensorId,proto3" json:"sensor_id,omitempty"`
	Message  string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SensorOfflineError) Reset() {
	*x = SensorOfflineError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weather_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SensorOfflineError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensorOfflineError) ProtoMessage() {}

func (x *SensorOfflineError) ProtoReflect() protoreflect.Message {
	mi := &file_weather_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SensorOfflineError.ProtoReflect.Descriptor instead.
func (*SensorOfflineError) Descriptor() ([]byte, []int) {
	return file_weather_proto_rawDescGZIP(), []int{3}
}

func (x *SensorOfflineError) GetSensorId() string {
	if x != nil {
		return x.SensorId
	}
	return ""
}

func (x *SensorOfflineError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UploadWeatherPhotoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Content:
	//
	//	*UploadWeatherPhotoRequest_Metadata_
	//	*UploadWeatherPhotoRequest_Payload_
	Content isUploadWeatherPhotoRequest_Content `protobuf_oneof:"content"`
}

func (x *UploadWeatherPhotoRequest) Reset() {
	*x = UploadWeatherPhotoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weather_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadWeatherPhotoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadWeatherPhotoRequest) ProtoMessage() {}

func (x *UploadWeatherPhotoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_weather_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadWeatherPhotoRequest.ProtoReflect.Descriptor instead.
func (*UploadWeatherPhotoRequest) Descriptor() ([]byte, []int) {
	return file_weather_proto_rawDescGZIP(), []int{4}
}

func (m *UploadWeatherPhotoRequest) GetContent() isUploadWeatherPhotoRequest_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (x *UploadWeatherPhotoRequest) GetMetadata() *UploadWeatherPhotoRequest_Metadata {
	if x, ok := x.GetContent().(*UploadWeatherPhotoRequest_Metadata_); ok {
		return x.Metadata
	}
	return nil
}

func (x *UploadWeatherPhotoRequest) GetPayload() *UploadWeatherPhotoRequest_Payload {
	if x, ok := x.GetContent().(*UploadWeatherPhotoRequest_Payload_); ok {
		return x.Payload
	}
	return nil
}

type isUploadWeatherPhotoRequest_Content interface {
	isUploadWeatherPhotoRequest_Content()
}

type UploadWeatherPhotoRequest_Metadata_ struct {
	Metadata *UploadWeatherPhotoRequest_Metadata `protobuf:"bytes,1,opt,name=metadata,proto3,oneof"`
}

type UploadWeatherPhotoRequest_Payload_ struct {
	Payload *UploadWeatherPhotoRequest_Payload `protobuf:"bytes,2,opt,name=payload,proto3,oneof"`
}

func (*UploadWeatherPhotoRequest_Metadata_) isUploadWeatherPhotoRequest_Content() {}

func (*UploadWeatherPhotoRequest_Payload_) isUploadWeatherPhotoRequest_Content() {}

type UploadWeatherDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UploadWeatherDataResponse) Reset() {
	*x = UploadWeatherDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weather_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadWeatherDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadWeatherDataResponse) ProtoMessage() {}

func (x *UploadWeatherDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_weather_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadWeatherDataResponse.ProtoReflect.Descriptor instead.
func (*UploadWeatherDataResponse) Descriptor() ([]byte, []int) {
	return file_weather_proto_rawDescGZIP(), []int{5}
}

func (x *UploadWeatherDataResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SubscribeWeatherAlertsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
}

func (x *SubscribeWeatherAlertsRequest) Reset() {
	*x = SubscribeWeatherAlertsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weather_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeWeatherAlertsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeWeatherAlertsRequest) ProtoMessage() {}

func (x *SubscribeWeatherAlertsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_weather_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeWeatherAlertsRequest.ProtoReflect.Descriptor instead.
func (*SubscribeWeatherAlertsRequest) Descriptor() ([]byte, []int) {
	return file_weather_proto_rawDescGZIP(), []int{6}
}

func (x *SubscribeWeatherAlertsRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

type SubscribeWeatherAlertsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alert string `protobuf:"bytes,1,opt,name=alert,proto3" json:"alert,omitempty"`
}

func (x *SubscribeWeatherAlertsResponse) Reset() {
	*x = SubscribeWeatherAlertsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weather_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeWeatherAlertsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeWeatherAlertsResponse) ProtoMessage() {}

func (x *SubscribeWeatherAlertsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_weather_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeWeatherAlertsResponse.ProtoReflect.Descriptor instead.
func (*SubscribeWeatherAlertsResponse) Descriptor() ([]byte, []int) {
	return file_weather_proto_rawDescGZIP(), []int{7}
}

func (x *SubscribeWeatherAlertsResponse) GetAlert() string {
	if x != nil {
		return x.Alert
	}
	return ""
}

type UploadWeatherDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SensorId    string       `protobuf:"bytes,1,opt,name=sensor_id,json=sensorId,proto3" json:"sensor_id,omitempty"`
	Temperature *Temperature `protobuf:"bytes,2,opt,name=temperature,proto3" json:"temperature,omitempty"`
	Humidity    float64      `protobuf:"fixed64,3,opt,name=humidity,proto3" json:"humidity,omitempty"`
}

func (x *UploadWeatherDataRequest) Reset() {
	*x = UploadWeatherDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weather_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadWeatherDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadWeatherDataRequest) ProtoMessage() {}

func (x *UploadWeatherDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_weather_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadWeatherDataRequest.ProtoReflect.Descriptor instead.
func (*UploadWeatherDataRequest) Descriptor() ([]byte, []int) {
	return file_weather_proto_rawDescGZIP(), []int{8}
}

func (x *UploadWeatherDataRequest) GetSensorId() string {
	if x != nil {
		return x.SensorId
	}
	return ""
}

func (x *UploadWeatherDataRequest) GetTemperature() *Temperature {
	if x != nil {
		return x.Temperature
	}
	return nil
}

func (x *UploadWeatherDataRequest) GetHumidity() float64 {
	if x != nil {
		return x.Humidity
	}
	return 0
}

type UploadWeatherPhotoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UploadWeatherPhotoResponse) Reset() {
	*x = UploadWeatherPhotoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weather_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadWeatherPhotoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadWeatherPhotoResponse) ProtoMessage() {}

func (x *UploadWeatherPhotoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_weather_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadWeatherPhotoResponse.ProtoReflect.Descriptor instead.
func (*UploadWeatherPhotoResponse) Descriptor() ([]byte, []int) {
	return file_weather_proto_rawDescGZIP(), []int{9}
}

func (x *UploadWeatherPhotoResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type RealTimeWeatherRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location string `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *RealTimeWeatherRequest) Reset() {
	*x = RealTimeWeatherRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weather_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RealTimeWeatherRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RealTimeWeatherRequest) ProtoMessage() {}

func (x *RealTimeWeatherRequest) ProtoReflect() protoreflect.Message {
	mi := &file_weather_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RealTimeWeatherRequest.ProtoReflect.Descriptor instead.
func (*RealTimeWeatherRequest) Descriptor() ([]byte, []int) {
	return file_weather_proto_rawDescGZIP(), []int{10}
}

func (x *RealTimeWeatherRequest) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

type RealTimeWeatherResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description string       `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	Temperature *Temperature `protobuf:"bytes,2,opt,name=temperature,proto3" json:"temperature,omitempty"`
}

func (x *RealTimeWeatherResponse) Reset() {
	*x = RealTimeWeatherResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weather_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RealTimeWeatherResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RealTimeWeatherResponse) ProtoMessage() {}

func (x *RealTimeWeatherResponse) ProtoReflect() protoreflect.Message {
	mi := &file_weather_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RealTimeWeatherResponse.ProtoReflect.Descriptor instead.
func (*RealTimeWeatherResponse) Descriptor() ([]byte, []int) {
	return file_weather_proto_rawDescGZIP(), []int{11}
}

func (x *RealTimeWeatherResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *RealTimeWeatherResponse) GetTemperature() *Temperature {
	if x != nil {
		return x.Temperature
	}
	return nil
}

type GetCurrentWeatherOldRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location string `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *GetCurrentWeatherOldRequest) Reset() {
	*x = GetCurrentWeatherOldRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weather_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCurrentWeatherOldRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentWeatherOldRequest) ProtoMessage() {}

func (x *GetCurrentWeatherOldRequest) ProtoReflect() protoreflect.Message {
	mi := &file_weather_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrentWeatherOldRequest.ProtoReflect.Descriptor instead.
func (*GetCurrentWeatherOldRequest) Descriptor() ([]byte, []int) {
	return file_weather_proto_rawDescGZIP(), []int{12}
}

func (x *GetCurrentWeatherOldRequest) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

type GetCurrentWeatherOldResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description string       `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	Temperature *Temperature `protobuf:"bytes,2,opt,name=temperature,proto3" json:"temperature,omitempty"`
}

func (x *GetCurrentWeatherOldResponse) Reset() {
	*x = GetCurrentWeatherOldResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weather_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCurrentWeatherOldResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentWeatherOldResponse) ProtoMessage() {}

func (x *GetCurrentWeatherOldResponse) ProtoReflect() protoreflect.Message {
	mi := &file_weather_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrentWeatherOldResponse.ProtoReflect.Descriptor instead.
func (*GetCurrentWeatherOldResponse) Descriptor() ([]byte, []int) {
	return file_weather_proto_rawDescGZIP(), []int{13}
}

func (x *GetCurrentWeatherOldResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetCurrentWeatherOldResponse) GetTemperature() *Temperature {
	if x != nil {
		return x.Temperature
	}
	return nil
}

type UploadWeatherPhotoRequest_Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location string `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	SensorId string `protobuf:"bytes,2,opt,name=sensor_id,json=sensorId,proto3" json:"sensor_id,omitempty"`
	FileName string `protobuf:"bytes,3,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
}

func (x *UploadWeatherPhotoRequest_Metadata) Reset() {
	*x = UploadWeatherPhotoRequest_Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weather_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadWeatherPhotoRequest_Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadWeatherPhotoRequest_Metadata) ProtoMessage() {}

func (x *UploadWeatherPhotoRequest_Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_weather_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadWeatherPhotoRequest_Metadata.ProtoReflect.Descriptor instead.
func (*UploadWeatherPhotoRequest_Metadata) Descriptor() ([]byte, []int) {
	return file_weather_proto_rawDescGZIP(), []int{4, 0}
}

func (x *UploadWeatherPhotoRequest_Metadata) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *UploadWeatherPhotoRequest_Metadata) GetSensorId() string {
	if x != nil {
		return x.SensorId
	}
	return ""
}

func (x *UploadWeatherPhotoRequest_Metadata) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

type UploadWeatherPhotoRequest_Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UploadWeatherPhotoRequest_Payload) Reset() {
	*x = UploadWeatherPhotoRequest_Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weather_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadWeatherPhotoRequest_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadWeatherPhotoRequest_Payload) ProtoMessage() {}

func (x *UploadWeatherPhotoRequest_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_weather_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadWeatherPhotoRequest_Payload.ProtoReflect.Descriptor instead.
func (*UploadWeatherPhotoRequest_Payload) Descriptor() ([]byte, []int) {
	return file_weather_proto_rawDescGZIP(), []int{4, 1}
}

func (x *UploadWeatherPhotoRequest_Payload) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_weather_proto protoreflect.FileDescriptor

var file_weather_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x17, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x77, 0x65,
	0x61, 0x74, 0x68, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x22, 0x36, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x85, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x57,
	0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x46, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x0b, 0x74, 0x65, 0x6d,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0xb8, 0x01, 0x0a, 0x0b, 0x54, 0x65, 0x6d,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3d,
	0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x77, 0x65, 0x61, 0x74,
	0x68, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x22, 0x54, 0x0a,
	0x04, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x10, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x55,
	0x4e, 0x49, 0x54, 0x5f, 0x43, 0x45, 0x4c, 0x53, 0x49, 0x55, 0x53, 0x10, 0x01, 0x12, 0x13, 0x0a,
	0x0f, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x46, 0x41, 0x48, 0x52, 0x45, 0x4e, 0x48, 0x45, 0x49, 0x54,
	0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x4b, 0x45, 0x4c, 0x56, 0x49,
	0x4e, 0x10, 0x03, 0x22, 0x4b, 0x0a, 0x12, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x4f, 0x66, 0x66,
	0x6c, 0x69, 0x6e, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6e,
	0x73, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65,
	0x6e, 0x73, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0xda, 0x02, 0x0a, 0x19, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x57, 0x65, 0x61, 0x74, 0x68,
	0x65, 0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x59,
	0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e,
	0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x56, 0x0a, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x57, 0x65, 0x61, 0x74, 0x68,
	0x65, 0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x00, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x1a, 0x60, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a,
	0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6e,
	0x73, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65,
	0x6e, 0x73, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x1a, 0x1d, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x42, 0x09, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x35, 0x0a,
	0x19, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x37, 0x0a, 0x1d, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x22, 0x36, 0x0a,
	0x1e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65,
	0x72, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x22, 0x9b, 0x01, 0x0a, 0x18, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x49, 0x64, 0x12,
	0x46, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x2e, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x75, 0x6d, 0x69, 0x64,
	0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x68, 0x75, 0x6d, 0x69, 0x64,
	0x69, 0x74, 0x79, 0x22, 0x36, 0x0a, 0x1a, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x57, 0x65, 0x61,
	0x74, 0x68, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x34, 0x0a, 0x16, 0x52,
	0x65, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x83, 0x01, 0x0a, 0x17, 0x52, 0x65, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x57, 0x65,
	0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x46, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x2e, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x39, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x4f, 0x6c, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x88, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x4f, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x46, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x32, 0xa9, 0x06,
	0x0a, 0x0e, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x7c, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x57, 0x65,
	0x61, 0x74, 0x68, 0x65, 0x72, 0x12, 0x31, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x57, 0x65, 0x61,
	0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8d,
	0x01, 0x0a, 0x16, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x57, 0x65, 0x61, 0x74,
	0x68, 0x65, 0x72, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x12, 0x36, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x57, 0x65, 0x61,
	0x74, 0x68, 0x65, 0x72, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x37, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x2e, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x7e,
	0x0a, 0x11, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x31, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x2e, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x12, 0x7a,
	0x0a, 0x0f, 0x52, 0x65, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65,
	0x72, 0x12, 0x2f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x2e, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x6c,
	0x54, 0x69, 0x6d, 0x65, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x30, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x2e, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61,
	0x6c, 0x54, 0x69, 0x6d, 0x65, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x81, 0x01, 0x0a, 0x12, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x74,
	0x6f, 0x12, 0x32, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x2e, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x50, 0x68, 0x6f,
	0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x12, 0x88,
	0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x57, 0x65, 0x61,
	0x74, 0x68, 0x65, 0x72, 0x4f, 0x6c, 0x64, 0x12, 0x34, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x65,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x57, 0x65, 0x61, 0x74,
	0x68, 0x65, 0x72, 0x4f, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x77, 0x65, 0x61,
	0x74, 0x68, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x4f, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x03, 0x88, 0x02, 0x01, 0x42, 0x45, 0x5a, 0x43, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x2f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x2f, 0x76, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_weather_proto_rawDescOnce sync.Once
	file_weather_proto_rawDescData = file_weather_proto_rawDesc
)

func file_weather_proto_rawDescGZIP() []byte {
	file_weather_proto_rawDescOnce.Do(func() {
		file_weather_proto_rawDescData = protoimpl.X.CompressGZIP(file_weather_proto_rawDescData)
	})
	return file_weather_proto_rawDescData
}

var file_weather_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_weather_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_weather_proto_goTypes = []interface{}{
	(Temperature_Unit)(0),                      // 0: grpc.example.weather.v1.Temperature.Unit
	(*GetCurrentWeatherRequest)(nil),           // 1: grpc.example.weather.v1.GetCurrentWeatherRequest
	(*GetCurrentWeatherResponse)(nil),          // 2: grpc.example.weather.v1.GetCurrentWeatherResponse
	(*Temperature)(nil),                        // 3: grpc.example.weather.v1.Temperature
	(*SensorOfflineError)(nil),                 // 4: grpc.example.weather.v1.SensorOfflineError
	(*UploadWeatherPhotoRequest)(nil),          // 5: grpc.example.weather.v1.UploadWeatherPhotoRequest
	(*UploadWeatherDataResponse)(nil),          // 6: grpc.example.weather.v1.UploadWeatherDataResponse
	(*SubscribeWeatherAlertsRequest)(nil),      // 7: grpc.example.weather.v1.SubscribeWeatherAlertsRequest
	(*SubscribeWeatherAlertsResponse)(nil),     // 8: grpc.example.weather.v1.SubscribeWeatherAlertsResponse
	(*UploadWeatherDataRequest)(nil),           // 9: grpc.example.weather.v1.UploadWeatherDataRequest
	(*UploadWeatherPhotoResponse)(nil),         // 10: grpc.example.weather.v1.UploadWeatherPhotoResponse
	(*RealTimeWeatherRequest)(nil),             // 11: grpc.example.weather.v1.RealTimeWeatherRequest
	(*RealTimeWeatherResponse)(nil),            // 12: grpc.example.weather.v1.RealTimeWeatherResponse
	(*GetCurrentWeatherOldRequest)(nil),        // 13: grpc.example.weather.v1.GetCurrentWeatherOldRequest
	(*GetCurrentWeatherOldResponse)(nil),       // 14: grpc.example.weather.v1.GetCurrentWeatherOldResponse
	(*UploadWeatherPhotoRequest_Metadata)(nil), // 15: grpc.example.weather.v1.UploadWeatherPhotoRequest.Metadata
	(*UploadWeatherPhotoRequest_Payload)(nil),  // 16: grpc.example.weather.v1.UploadWeatherPhotoRequest.Payload
}
var file_weather_proto_depIdxs = []int32{
	3,  // 0: grpc.example.weather.v1.GetCurrentWeatherResponse.temperature:type_name -> grpc.example.weather.v1.Temperature
	0,  // 1: grpc.example.weather.v1.Temperature.unit:type_name -> grpc.example.weather.v1.Temperature.Unit
	15, // 2: grpc.example.weather.v1.UploadWeatherPhotoRequest.metadata:type_name -> grpc.example.weather.v1.UploadWeatherPhotoRequest.Metadata
	16, // 3: grpc.example.weather.v1.UploadWeatherPhotoRequest.payload:type_name -> grpc.example.weather.v1.UploadWeatherPhotoRequest.Payload
	3,  // 4: grpc.example.weather.v1.UploadWeatherDataRequest.temperature:type_name -> grpc.example.weather.v1.Temperature
	3,  // 5: grpc.example.weather.v1.RealTimeWeatherResponse.temperature:type_name -> grpc.example.weather.v1.Temperature
	3,  // 6: grpc.example.weather.v1.GetCurrentWeatherOldResponse.temperature:type_name -> grpc.example.weather.v1.Temperature
	1,  // 7: grpc.example.weather.v1.WeatherService.GetCurrentWeather:input_type -> grpc.example.weather.v1.GetCurrentWeatherRequest
	7,  // 8: grpc.example.weather.v1.WeatherService.SubscribeWeatherAlerts:input_type -> grpc.example.weather.v1.SubscribeWeatherAlertsRequest
	9,  // 9: grpc.example.weather.v1.WeatherService.UploadWeatherData:input_type -> grpc.example.weather.v1.UploadWeatherDataRequest
	11, // 10: grpc.example.weather.v1.WeatherService.RealTimeWeather:input_type -> grpc.example.weather.v1.RealTimeWeatherRequest
	5,  // 11: grpc.example.weather.v1.WeatherService.UploadWeatherPhoto:input_type -> grpc.example.weather.v1.UploadWeatherPhotoRequest
	13, // 12: grpc.example.weather.v1.WeatherService.GetCurrentWeatherOld:input_type -> grpc.example.weather.v1.GetCurrentWeatherOldRequest
	2,  // 13: grpc.example.weather.v1.WeatherService.GetCurrentWeather:output_type -> grpc.example.weather.v1.GetCurrentWeatherResponse
	8,  // 14: grpc.example.weather.v1.WeatherService.SubscribeWeatherAlerts:output_type -> grpc.example.weather.v1.SubscribeWeatherAlertsResponse
	6,  // 15: grpc.example.weather.v1.WeatherService.UploadWeatherData:output_type -> grpc.example.weather.v1.UploadWeatherDataResponse
	12, // 16: grpc.example.weather.v1.WeatherService.RealTimeWeather:output_type -> grpc.example.weather.v1.RealTimeWeatherResponse
	10, // 17: grpc.example.weather.v1.WeatherService.UploadWeatherPhoto:output_type -> grpc.example.weather.v1.UploadWeatherPhotoResponse
	14, // 18: grpc.example.weather.v1.WeatherService.GetCurrentWeatherOld:output_type -> grpc.example.weather.v1.GetCurrentWeatherOldResponse
	13, // [13:19] is the sub-list for method output_type
	7,  // [7:13] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_weather_proto_init() }
func file_weather_proto_init() {
	if File_weather_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_weather_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCurrentWeatherRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weather_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCurrentWeatherResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weather_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Temperature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weather_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SensorOfflineError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weather_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadWeatherPhotoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weather_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadWeatherDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weather_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeWeatherAlertsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weather_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeWeatherAlertsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weather_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadWeatherDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weather_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadWeatherPhotoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weather_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RealTimeWeatherRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weather_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RealTimeWeatherResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weather_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCurrentWeatherOldRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weather_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCurrentWeatherOldResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weather_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadWeatherPhotoRequest_Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weather_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadWeatherPhotoRequest_Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_weather_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*UploadWeatherPhotoRequest_Metadata_)(nil),
		(*UploadWeatherPhotoRequest_Payload_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_weather_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_weather_proto_goTypes,
		DependencyIndexes: file_weather_proto_depIdxs,
		EnumInfos:         file_weather_proto_enumTypes,
		MessageInfos:      file_weather_proto_msgTypes,
	}.Build()
	File_weather_proto = out.File
	file_weather_proto_rawDesc = nil
	file_weather_proto_goTypes = nil
	file_weather_proto_depIdxs = nil
}
