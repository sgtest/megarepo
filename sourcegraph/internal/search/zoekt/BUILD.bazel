load("//dev:go_defs.bzl", "go_test")
load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "zoekt",
    srcs = [
        "indexed_search.go",
        "query.go",
        "reindex.go",
        "symbol_search.go",
        "zoekt.go",
        "zoekt_global.go",
    ],
    importpath = "github.com/sourcegraph/sourcegraph/internal/search/zoekt",
    visibility = ["//:__subpackages__"],
    deps = [
        "//cmd/frontend/envvar",
        "//internal/actor",
        "//internal/api",
        "//internal/conf",
        "//internal/database",
        "//internal/featureflag",
        "//internal/httpcli",
        "//internal/search",
        "//internal/search/backend",
        "//internal/search/filter",
        "//internal/search/job",
        "//internal/search/limits",
        "//internal/search/query",
        "//internal/search/result",
        "//internal/search/streaming",
        "//internal/trace",
        "//internal/types",
        "//lib/errors",
        "@com_github_go_enry_go_enry_v2//:go-enry",
        "@com_github_grafana_regexp//:regexp",
        "@com_github_roaringbitmap_roaring//:roaring",
        "@com_github_sourcegraph_log//:log",
        "@com_github_sourcegraph_zoekt//:zoekt",
        "@com_github_sourcegraph_zoekt//query",
        "@io_opentelemetry_go_otel//attribute",
        "@org_uber_go_atomic//:atomic",
    ],
)

go_test(
    name = "zoekt_test",
    timeout = "short",
    srcs = [
        "indexed_search_test.go",
        "query_test.go",
    ],
    embed = [":zoekt"],
    deps = [
        "//internal/api",
        "//internal/search",
        "//internal/search/backend",
        "//internal/search/filter",
        "//internal/search/job",
        "//internal/search/query",
        "//internal/search/result",
        "//internal/search/streaming",
        "//internal/trace",
        "//internal/types",
        "//lib/errors",
        "@com_github_google_go_cmp//cmp",
        "@com_github_google_go_cmp//cmp/cmpopts",
        "@com_github_grafana_regexp//:regexp",
        "@com_github_hexops_autogold_v2//:autogold",
        "@com_github_roaringbitmap_roaring//:roaring",
        "@com_github_sourcegraph_log//logtest",
        "@com_github_sourcegraph_zoekt//:zoekt",
        "@com_github_sourcegraph_zoekt//query",
        "@com_github_stretchr_testify//require",
        "@org_golang_x_exp//slices",
    ],
)
