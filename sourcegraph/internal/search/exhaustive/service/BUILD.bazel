load("@io_bazel_rules_go//go:def.bzl", "go_library")
load("//dev:go_defs.bzl", "go_test")

go_library(
    name = "service",
    srcs = [
        "matchcsv.go",
        "search.go",
        "searcher.go",
        "service.go",
    ],
    importpath = "github.com/sourcegraph/sourcegraph/internal/search/exhaustive/service",
    visibility = ["//:__subpackages__"],
    deps = [
        "//internal/actor",
        "//internal/api",
        "//internal/conf",
        "//internal/database",
        "//internal/gitserver/gitdomain",
        "//internal/metrics",
        "//internal/observation",
        "//internal/search",
        "//internal/search/client",
        "//internal/search/exhaustive/store",
        "//internal/search/exhaustive/types",
        "//internal/search/job",
        "//internal/search/job/jobutil",
        "//internal/search/query",
        "//internal/search/repos",
        "//internal/search/result",
        "//internal/search/streaming",
        "//internal/types",
        "//internal/uploadstore",
        "//lib/errors",
        "//lib/iterator",
        "@com_github_sourcegraph_log//:log",
        "@io_opentelemetry_go_otel//attribute",
    ],
)

go_test(
    name = "service_test",
    srcs = [
        "search_test.go",
        "searcher_test.go",
        "service_test.go",
    ],
    embed = [":service"],
    deps = [
        "//internal/actor",
        "//internal/api",
        "//internal/database",
        "//internal/database/dbmocks",
        "//internal/endpoint",
        "//internal/featureflag",
        "//internal/gitserver",
        "//internal/gitserver/gitdomain",
        "//internal/search",
        "//internal/search/backend",
        "//internal/search/client",
        "//internal/search/exhaustive/types",
        "//internal/search/job",
        "//internal/search/result",
        "//internal/search/searcher",
        "//internal/search/streaming",
        "//internal/types",
        "//internal/uploadstore/mocks",
        "//lib/errors",
        "//lib/iterator",
        "@com_github_hexops_autogold_v2//:autogold",
        "@com_github_sourcegraph_log//logtest",
        "@com_github_sourcegraph_zoekt//:zoekt",
        "@com_github_stretchr_testify//require",
        "@org_golang_x_exp//slices",
    ],
)
