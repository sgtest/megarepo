resources:
  - apiVersion: apps/v1
    kind: StatefulSet
    metadata:
      annotations:
        appliance.sourcegraph.com/configHash: 18dd4e4e970066ab9a3dab34f8ed6fc75edf971b75e13f569abcf7a31ec1a330
      creationTimestamp: "2024-04-19T00:00:00Z"
      generation: 1
      labels:
        app.kubernetes.io/component: codeinsights-db
        app.kubernetes.io/name: sourcegraph
        app.kubernetes.io/version: 5.3.9104
        deploy: sourcegraph
      name: codeinsights-db
      namespace: NORMALIZED_FOR_TESTING
      ownerReferences:
        - apiVersion: v1
          blockOwnerDeletion: true
          controller: true
          kind: ConfigMap
          name: sg
          uid: NORMALIZED_FOR_TESTING
      resourceVersion: NORMALIZED_FOR_TESTING
      uid: NORMALIZED_FOR_TESTING
    spec:
      minReadySeconds: 10
      persistentVolumeClaimRetentionPolicy:
        whenDeleted: Retain
        whenScaled: Retain
      podManagementPolicy: OrderedReady
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          app: codeinsights-db
      serviceName: codeinsights-db
      template:
        metadata:
          annotations:
            kubectl.kubernetes.io/default-container: codeinsights-db
          creationTimestamp: null
          labels:
            app: codeinsights-db
            deploy: sourcegraph
          name: codeinsights-db
        spec:
          containers:
            - env:
                - name: POSTGRES_DATABASE
                  valueFrom:
                    secretKeyRef:
                      key: database
                      name: codeinsights-db-auth
                - name: POSTGRES_HOST
                  valueFrom:
                    secretKeyRef:
                      key: host
                      name: codeinsights-db-auth
                - name: POSTGRES_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: password
                      name: codeinsights-db-auth
                - name: POSTGRES_PORT
                  valueFrom:
                    secretKeyRef:
                      key: port
                      name: codeinsights-db-auth
                - name: POSTGRES_USER
                  valueFrom:
                    secretKeyRef:
                      key: user
                      name: codeinsights-db-auth
                - name: POSTGRES_DB
                  value: $(POSTGRES_DATABASE)
                - name: PGDATA
                  value: /var/lib/postgresql/data/pgdata
                - name: POSTGRESQL_CONF_DIR
                  value: /conf
              image: index.docker.io/sourcegraph/codeinsights-db:5.3.9104
              imagePullPolicy: IfNotPresent
              name: codeinsights
              ports:
                - containerPort: 5432
                  name: codeinsights-db
                  protocol: TCP
              resources:
                limits:
                  cpu: "4"
                  memory: 2Gi
                requests:
                  cpu: "4"
                  memory: 2Gi
              securityContext:
                allowPrivilegeEscalation: false
                readOnlyRootFilesystem: true
                runAsGroup: 70
                runAsUser: 70
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: FallbackToLogsOnError
              volumeMounts:
                - mountPath: /var/lib/postgresql/data/
                  name: disk
                - mountPath: /conf
                  name: codeinsights-conf
                - mountPath: /var/run/postgresql
                  name: lockdir
            - env:
                - name: DATA_SOURCE_DB
                  valueFrom:
                    secretKeyRef:
                      key: database
                      name: codeinsights-db-auth
                - name: DATA_SOURCE_PASS
                  valueFrom:
                    secretKeyRef:
                      key: password
                      name: codeinsights-db-auth
                - name: DATA_SOURCE_PORT
                  valueFrom:
                    secretKeyRef:
                      key: port
                      name: codeinsights-db-auth
                - name: DATA_SOURCE_USER
                  valueFrom:
                    secretKeyRef:
                      key: user
                      name: codeinsights-db-auth
                - name: DATA_SOURCE_URI
                  value: 127.0.0.1:$(DATA_SOURCE_PORT)/$(DATA_SOURCE_DB)?sslmode=disable
                - name: PG_EXPORTER_EXTEND_QUERY_PATH
                  value: /config/code_insights_queries.yaml
              image: index.docker.io/sourcegraph/postgres_exporter:5.3.9104
              imagePullPolicy: IfNotPresent
              name: pgsql-exporter
              resources:
                limits:
                  cpu: 10m
                  memory: 50Mi
                requests:
                  cpu: 10m
                  memory: 50Mi
              securityContext:
                allowPrivilegeEscalation: false
                readOnlyRootFilesystem: true
                runAsGroup: 101
                runAsUser: 100
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: FallbackToLogsOnError
          dnsPolicy: ClusterFirst
          initContainers:
            - command:
                - sh
                - -c
                - if [ -d /var/lib/postgresql/data/pgdata ]; then chmod 750 /var/lib/postgresql/data/pgdata; fi
              image: index.docker.io/sourcegraph/alpine-3.14:5.3.9104
              imagePullPolicy: IfNotPresent
              name: correct-data-dir-permissions
              resources:
                limits:
                  cpu: 10m
                  memory: 50Mi
                requests:
                  cpu: 10m
                  memory: 50Mi
              securityContext:
                allowPrivilegeEscalation: false
                readOnlyRootFilesystem: true
                runAsGroup: 70
                runAsUser: 70
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: FallbackToLogsOnError
              volumeMounts:
                - mountPath: /var/lib/postgresql/data
                  name: disk
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext:
            fsGroup: 70
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 70
            runAsUser: 70
          serviceAccount: codeinsights-db
          serviceAccountName: codeinsights-db
          terminationGracePeriodSeconds: 120
          volumes:
            - name: disk
              persistentVolumeClaim:
                claimName: codeinsights-db
            - configMap:
                defaultMode: 511
                name: codeinsights-db-conf
              name: codeinsights-conf
            - emptyDir: {}
              name: lockdir
      updateStrategy:
        type: RollingUpdate
    status:
      availableReplicas: 0
      replicas: 0
  - apiVersion: v1
    data:
      postgresql.conf: |
        #------------------------------------------------------------------------------
        # POSTGRESQL DEFAULT CONFIGURATION
        #------------------------------------------------------------------------------

        # Below is PostgreSQL default configuration.
        # You should apply your own customization in the CUSTOMIZED OPTIONS section below
        # to avoid merge conflict in the future.

        listen_addresses = '*'
        max_connections = 100
        shared_buffers = 128MB
        dynamic_shared_memory_type = posix
        max_wal_size = 1GB
        min_wal_size = 80MB
        log_timezone = 'UTC'
        datestyle = 'iso, mdy'
        timezone = 'UTC'
        lc_messages = 'en_US.utf8'
        lc_monetary = 'en_US.utf8'
        lc_numeric = 'en_US.utf8'
        lc_time = 'en_US.utf8'
        default_text_search_config = 'pg_catalog.english'


        #------------------------------------------------------------------------------
        # SOURCEGRAPH RECOMMENDED OPTIONS
        #------------------------------------------------------------------------------

        # Below is Sourcegraph recommended Postgres configuration based on the default resource configuration.
        # You should apply your own customization in the CUSTOMIZED OPTIONS section below
        # to avoid merge conflict in the future.

        shared_buffers = 509546kB
        work_mem = 3184kB
        maintenance_work_mem = 254773kB
        effective_io_concurrency = 200
        max_worker_processes = 19
        max_parallel_workers_per_gather = 4
        max_parallel_workers = 8
        wal_buffers = 15285kB
        min_wal_size = 512MB
        checkpoint_completion_target = 0.9
        random_page_cost = 1.1
        effective_cache_size = 1492MB
        default_statistics_target = 500
        autovacuum_max_workers = 10
        autovacuum_naptime = 10
        shared_preload_libraries = ''
        max_locks_per_transaction = 64


        #------------------------------------------------------------------------------
        # CUSTOMIZED OPTIONS
        #------------------------------------------------------------------------------

        # Add your customization by using 'codeInsightsDB.additionalConfig' in your override file.
        # Learn more: https://docs.sourcegraph.com/admin/config/postgres-conf
    immutable: false
    kind: ConfigMap
    metadata:
      annotations:
        appliance.sourcegraph.com/configHash: 18dd4e4e970066ab9a3dab34f8ed6fc75edf971b75e13f569abcf7a31ec1a330
      creationTimestamp: "2024-04-19T00:00:00Z"
      labels:
        deploy: sourcegraph
      name: codeinsights-db-conf
      namespace: NORMALIZED_FOR_TESTING
      ownerReferences:
        - apiVersion: v1
          blockOwnerDeletion: true
          controller: true
          kind: ConfigMap
          name: sg
          uid: NORMALIZED_FOR_TESTING
      resourceVersion: NORMALIZED_FOR_TESTING
      uid: NORMALIZED_FOR_TESTING
  - apiVersion: v1
    data:
      spec: |
        spec:
          requestedVersion: "5.3.9104"

          blobstore:
            disabled: true

          codeInsights: {}

          codeIntel:
            disabled: true

          frontend:
            disabled: true

          gitServer:
            disabled: true

          indexedSearch:
            disabled: true

          openTelemetry:
            disabled: true

          pgsql:
            disabled: true

          postgresExporter:
            disabled: true

          preciseCodeIntel:
            disabled: true

          redisCache:
            disabled: true

          redisExporter:
            disabled: true

          redisStore:
            disabled: true

          repoUpdater:
            disabled: true

          searcher:
            disabled: true

          symbols:
            disabled: true

          syntectServer:
            disabled: true

          worker:
            disabled: true

          prometheus:
            disabled: true
    kind: ConfigMap
    metadata:
      annotations:
        appliance.sourcegraph.com/currentVersion: 5.3.9104
        appliance.sourcegraph.com/managed: "true"
      creationTimestamp: "2024-04-19T00:00:00Z"
      name: sg
      namespace: NORMALIZED_FOR_TESTING
      resourceVersion: NORMALIZED_FOR_TESTING
      uid: NORMALIZED_FOR_TESTING
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      annotations:
        appliance.sourcegraph.com/configHash: 18dd4e4e970066ab9a3dab34f8ed6fc75edf971b75e13f569abcf7a31ec1a330
      creationTimestamp: "2024-04-19T00:00:00Z"
      finalizers:
        - kubernetes.io/pvc-protection
      labels:
        deploy: sourcegraph
      name: codeinsights-db
      namespace: NORMALIZED_FOR_TESTING
      ownerReferences:
        - apiVersion: v1
          blockOwnerDeletion: true
          controller: true
          kind: ConfigMap
          name: sg
          uid: NORMALIZED_FOR_TESTING
      resourceVersion: NORMALIZED_FOR_TESTING
      uid: NORMALIZED_FOR_TESTING
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 200Gi
      volumeMode: Filesystem
    status:
      phase: Pending
  - apiVersion: v1
    data:
      database: cG9zdGdyZXM=
      host: Y29kZWluc2lnaHRzLWRi
      password: cGFzc3dvcmQ=
      port: NTQzMg==
      user: cG9zdGdyZXM=
    kind: Secret
    metadata:
      annotations:
        appliance.sourcegraph.com/configHash: 18dd4e4e970066ab9a3dab34f8ed6fc75edf971b75e13f569abcf7a31ec1a330
      creationTimestamp: "2024-04-19T00:00:00Z"
      labels:
        app.kubernetes.io/component: codeinsights-db-auth
        app.kubernetes.io/name: sourcegraph
        app.kubernetes.io/version: 5.3.9104
        deploy: sourcegraph
      name: codeinsights-db-auth
      namespace: NORMALIZED_FOR_TESTING
      ownerReferences:
        - apiVersion: v1
          blockOwnerDeletion: true
          controller: true
          kind: ConfigMap
          name: sg
          uid: NORMALIZED_FOR_TESTING
      resourceVersion: NORMALIZED_FOR_TESTING
      uid: NORMALIZED_FOR_TESTING
    type: Opaque
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      annotations:
        appliance.sourcegraph.com/configHash: 18dd4e4e970066ab9a3dab34f8ed6fc75edf971b75e13f569abcf7a31ec1a330
      creationTimestamp: "2024-04-19T00:00:00Z"
      labels:
        deploy: sourcegraph
      name: codeinsights-db
      namespace: NORMALIZED_FOR_TESTING
      ownerReferences:
        - apiVersion: v1
          blockOwnerDeletion: true
          controller: true
          kind: ConfigMap
          name: sg
          uid: NORMALIZED_FOR_TESTING
      resourceVersion: NORMALIZED_FOR_TESTING
      uid: NORMALIZED_FOR_TESTING
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        appliance.sourcegraph.com/configHash: 18dd4e4e970066ab9a3dab34f8ed6fc75edf971b75e13f569abcf7a31ec1a330
        prometheus.io/port: "9187"
        sourcegraph.prometheus/scrape: "true"
      creationTimestamp: "2024-04-19T00:00:00Z"
      labels:
        app: codeinsights-db
        app.kubernetes.io/component: codeinsights-db
        deploy: sourcegraph
      name: codeinsights-db
      namespace: NORMALIZED_FOR_TESTING
      ownerReferences:
        - apiVersion: v1
          blockOwnerDeletion: true
          controller: true
          kind: ConfigMap
          name: sg
          uid: NORMALIZED_FOR_TESTING
      resourceVersion: NORMALIZED_FOR_TESTING
      uid: NORMALIZED_FOR_TESTING
    spec:
      clusterIP: NORMALIZED_FOR_TESTING
      clusterIPs:
        - NORMALIZED_FOR_TESTING
      internalTrafficPolicy: Cluster
      ipFamilies:
        - IPv4
      ipFamilyPolicy: SingleStack
      ports:
        - name: codeinsights-db
          port: 5432
          protocol: TCP
          targetPort: codeinsights-db
      selector:
        app: codeinsights-db
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
