resources:
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        appliance.sourcegraph.com/configHash: bcc1b9d741c7408fd8b5bd4ce468f028528e0884fce1b4b33bc62053f4d0ffc3
      creationTimestamp: "2024-04-19T00:00:00Z"
      generation: 1
      labels:
        app.kubernetes.io/component: syntect-server
        app.kubernetes.io/name: sourcegraph
        app.kubernetes.io/version: 5.3.9104
        deploy: sourcegraph
      name: syntect-server
      namespace: NORMALIZED_FOR_TESTING
      ownerReferences:
        - apiVersion: v1
          blockOwnerDeletion: true
          controller: true
          kind: ConfigMap
          name: sg
          uid: NORMALIZED_FOR_TESTING
      resourceVersion: NORMALIZED_FOR_TESTING
      uid: NORMALIZED_FOR_TESTING
    spec:
      minReadySeconds: 10
      progressDeadlineSeconds: 600
      replicas: 3
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          app: syntect-server
      strategy:
        rollingUpdate:
          maxSurge: 1
          maxUnavailable: 0
        type: RollingUpdate
      template:
        metadata:
          annotations:
            kubectl.kubernetes.io/default-container: syntect-server
          creationTimestamp: null
          labels:
            app: syntect-server
            deploy: sourcegraph
          name: syntect-server
        spec:
          containers:
            - image: index.docker.io/sourcegraph/syntax-highlighter:5.3.9104
              imagePullPolicy: IfNotPresent
              livenessProbe:
                failureThreshold: 3
                httpGet:
                  path: /health
                  port: http
                  scheme: HTTP
                initialDelaySeconds: 5
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 5
              name: syntect-server
              ports:
                - containerPort: 9238
                  name: http
                  protocol: TCP
              readinessProbe:
                failureThreshold: 3
                periodSeconds: 10
                successThreshold: 1
                tcpSocket:
                  port: http
                timeoutSeconds: 1
              resources:
                limits:
                  cpu: "4"
                  memory: 6G
                requests:
                  cpu: 250m
                  memory: 2G
              securityContext:
                allowPrivilegeEscalation: false
                readOnlyRootFilesystem: true
                runAsGroup: 101
                runAsUser: 100
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: FallbackToLogsOnError
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext:
            fsGroup: 101
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 101
            runAsUser: 100
          serviceAccount: syntect-server
          serviceAccountName: syntect-server
          terminationGracePeriodSeconds: 30
    status: {}
  - apiVersion: v1
    data:
      spec: |
        spec:
          requestedVersion: "5.3.9104"

          blobstore:
            disabled: true

          codeInsights:
            disabled: true

          codeIntel:
            disabled: true

          frontend:
            disabled: true

          gitServer:
            disabled: true

          indexedSearch:
            disabled: true

          indexedSearchIndexer:
            disabled: true

          pgsql:
            disabled: true

          postgresExporter:
            disabled: true

          preciseCodeIntel:
            disabled: true

          redisCache:
            disabled: true

          redisStore:
            disabled: true

          repoUpdater:
            disabled: true

          searcher:
            disabled: true

          symbols:
            disabled: true

          syntectServer:
            replicas: 3

          worker:
            disabled: true

          prometheus:
            disabled: true
    kind: ConfigMap
    metadata:
      annotations:
        appliance.sourcegraph.com/currentVersion: 5.3.9104
        appliance.sourcegraph.com/managed: "true"
      creationTimestamp: "2024-04-19T00:00:00Z"
      name: sg
      namespace: NORMALIZED_FOR_TESTING
      resourceVersion: NORMALIZED_FOR_TESTING
      uid: NORMALIZED_FOR_TESTING
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      annotations:
        appliance.sourcegraph.com/configHash: bcc1b9d741c7408fd8b5bd4ce468f028528e0884fce1b4b33bc62053f4d0ffc3
      creationTimestamp: "2024-04-19T00:00:00Z"
      labels:
        deploy: sourcegraph
      name: syntect-server
      namespace: NORMALIZED_FOR_TESTING
      ownerReferences:
        - apiVersion: v1
          blockOwnerDeletion: true
          controller: true
          kind: ConfigMap
          name: sg
          uid: NORMALIZED_FOR_TESTING
      resourceVersion: NORMALIZED_FOR_TESTING
      uid: NORMALIZED_FOR_TESTING
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        appliance.sourcegraph.com/configHash: bcc1b9d741c7408fd8b5bd4ce468f028528e0884fce1b4b33bc62053f4d0ffc3
        prometheus.io/port: "6060"
        sourcegraph.prometheus/scrape: "true"
      creationTimestamp: "2024-04-19T00:00:00Z"
      labels:
        app: syntect-server
        app.kubernetes.io/component: syntect-server
        deploy: sourcegraph
      name: syntect-server
      namespace: NORMALIZED_FOR_TESTING
      ownerReferences:
        - apiVersion: v1
          blockOwnerDeletion: true
          controller: true
          kind: ConfigMap
          name: sg
          uid: NORMALIZED_FOR_TESTING
      resourceVersion: NORMALIZED_FOR_TESTING
      uid: NORMALIZED_FOR_TESTING
    spec:
      clusterIP: NORMALIZED_FOR_TESTING
      clusterIPs:
        - NORMALIZED_FOR_TESTING
      internalTrafficPolicy: Cluster
      ipFamilies:
        - IPv4
      ipFamilyPolicy: SingleStack
      ports:
        - name: http
          port: 9238
          protocol: TCP
          targetPort: http
      selector:
        app: syntect-server
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
