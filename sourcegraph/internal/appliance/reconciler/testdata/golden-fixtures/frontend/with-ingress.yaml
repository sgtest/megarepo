resources:
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        appliance.sourcegraph.com/configHash: d3eb623947fedba566dfc56adc4733ff5ef1b2887a5cb63d75dbc1df452b0b5c
      creationTimestamp: "2024-04-19T00:00:00Z"
      generation: 1
      labels:
        app.kubernetes.io/component: sourcegraph-frontend
        app.kubernetes.io/name: sourcegraph
        app.kubernetes.io/version: 5.3.9104
        deploy: sourcegraph
      name: sourcegraph-frontend
      namespace: NORMALIZED_FOR_TESTING
      ownerReferences:
        - apiVersion: v1
          blockOwnerDeletion: true
          controller: true
          kind: ConfigMap
          name: sg
          uid: NORMALIZED_FOR_TESTING
      resourceVersion: NORMALIZED_FOR_TESTING
      uid: NORMALIZED_FOR_TESTING
    spec:
      minReadySeconds: 10
      progressDeadlineSeconds: 600
      replicas: 2
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          app: sourcegraph-frontend
      strategy:
        rollingUpdate:
          maxSurge: 2
          maxUnavailable: 0
        type: RollingUpdate
      template:
        metadata:
          annotations:
            kubectl.kubernetes.io/default-container: sourcegraph-frontend
          creationTimestamp: null
          labels:
            app: sourcegraph-frontend
            deploy: sourcegraph
          name: sourcegraph-frontend
        spec:
          containers:
            - args:
                - serve
              env:
                - name: DEPLOY_TYPE
                  value: appliance
                - name: PGDATABASE
                  valueFrom:
                    secretKeyRef:
                      key: database
                      name: pgsql-auth
                - name: PGHOST
                  valueFrom:
                    secretKeyRef:
                      key: host
                      name: pgsql-auth
                - name: PGPASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: password
                      name: pgsql-auth
                - name: PGPORT
                  valueFrom:
                    secretKeyRef:
                      key: port
                      name: pgsql-auth
                - name: PGUSER
                  valueFrom:
                    secretKeyRef:
                      key: user
                      name: pgsql-auth
                - name: CODEINTEL_PGDATABASE
                  valueFrom:
                    secretKeyRef:
                      key: database
                      name: codeintel-db-auth
                - name: CODEINTEL_PGHOST
                  valueFrom:
                    secretKeyRef:
                      key: host
                      name: codeintel-db-auth
                - name: CODEINTEL_PGPASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: password
                      name: codeintel-db-auth
                - name: CODEINTEL_PGPORT
                  valueFrom:
                    secretKeyRef:
                      key: port
                      name: codeintel-db-auth
                - name: CODEINTEL_PGUSER
                  valueFrom:
                    secretKeyRef:
                      key: user
                      name: codeintel-db-auth
                - name: CODEINSIGHTS_PGDATABASE
                  valueFrom:
                    secretKeyRef:
                      key: database
                      name: codeinsights-db-auth
                - name: CODEINSIGHTS_PGHOST
                  valueFrom:
                    secretKeyRef:
                      key: host
                      name: codeinsights-db-auth
                - name: CODEINSIGHTS_PGPASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: password
                      name: codeinsights-db-auth
                - name: CODEINSIGHTS_PGPORT
                  valueFrom:
                    secretKeyRef:
                      key: port
                      name: codeinsights-db-auth
                - name: CODEINSIGHTS_PGUSER
                  valueFrom:
                    secretKeyRef:
                      key: user
                      name: codeinsights-db-auth
                - name: REDIS_CACHE_ENDPOINT
                  valueFrom:
                    secretKeyRef:
                      key: endpoint
                      name: redis-cache
                - name: REDIS_STORE_ENDPOINT
                  valueFrom:
                    secretKeyRef:
                      key: endpoint
                      name: redis-store
                - name: OTEL_AGENT_HOST
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: status.hostIP
                - name: OTEL_EXPORTER_OTLP_ENDPOINT
                  value: http://$(OTEL_AGENT_HOST):4317
              image: index.docker.io/sourcegraph/frontend:5.3.9104
              imagePullPolicy: IfNotPresent
              livenessProbe:
                failureThreshold: 3
                httpGet:
                  path: /healthz
                  port: debug
                  scheme: HTTP
                initialDelaySeconds: 300
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 5
              name: frontend
              ports:
                - containerPort: 3080
                  name: http
                  protocol: TCP
                - containerPort: 3090
                  name: http-internal
                  protocol: TCP
                - containerPort: 6060
                  name: debug
                  protocol: TCP
              readinessProbe:
                failureThreshold: 3
                httpGet:
                  path: /ready
                  port: debug
                  scheme: HTTP
                periodSeconds: 5
                successThreshold: 1
                timeoutSeconds: 5
              resources:
                limits:
                  cpu: "2"
                  ephemeral-storage: 8Gi
                  memory: 4G
                requests:
                  cpu: "2"
                  ephemeral-storage: 4Gi
                  memory: 2G
              securityContext:
                allowPrivilegeEscalation: false
                readOnlyRootFilesystem: true
                runAsGroup: 101
                runAsUser: 100
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: FallbackToLogsOnError
              volumeMounts:
                - mountPath: /home/sourcegraph
                  name: home-dir
          dnsPolicy: ClusterFirst
          initContainers:
            - args:
                - up
              env:
                - name: DEPLOY_TYPE
                  value: appliance
                - name: PGDATABASE
                  valueFrom:
                    secretKeyRef:
                      key: database
                      name: pgsql-auth
                - name: PGHOST
                  valueFrom:
                    secretKeyRef:
                      key: host
                      name: pgsql-auth
                - name: PGPASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: password
                      name: pgsql-auth
                - name: PGPORT
                  valueFrom:
                    secretKeyRef:
                      key: port
                      name: pgsql-auth
                - name: PGUSER
                  valueFrom:
                    secretKeyRef:
                      key: user
                      name: pgsql-auth
                - name: CODEINTEL_PGDATABASE
                  valueFrom:
                    secretKeyRef:
                      key: database
                      name: codeintel-db-auth
                - name: CODEINTEL_PGHOST
                  valueFrom:
                    secretKeyRef:
                      key: host
                      name: codeintel-db-auth
                - name: CODEINTEL_PGPASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: password
                      name: codeintel-db-auth
                - name: CODEINTEL_PGPORT
                  valueFrom:
                    secretKeyRef:
                      key: port
                      name: codeintel-db-auth
                - name: CODEINTEL_PGUSER
                  valueFrom:
                    secretKeyRef:
                      key: user
                      name: codeintel-db-auth
                - name: CODEINSIGHTS_PGDATABASE
                  valueFrom:
                    secretKeyRef:
                      key: database
                      name: codeinsights-db-auth
                - name: CODEINSIGHTS_PGHOST
                  valueFrom:
                    secretKeyRef:
                      key: host
                      name: codeinsights-db-auth
                - name: CODEINSIGHTS_PGPASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: password
                      name: codeinsights-db-auth
                - name: CODEINSIGHTS_PGPORT
                  valueFrom:
                    secretKeyRef:
                      key: port
                      name: codeinsights-db-auth
                - name: CODEINSIGHTS_PGUSER
                  valueFrom:
                    secretKeyRef:
                      key: user
                      name: codeinsights-db-auth
              image: index.docker.io/sourcegraph/migrator:5.3.9104
              imagePullPolicy: IfNotPresent
              name: migrator
              resources:
                limits:
                  cpu: 500m
                  memory: 100M
                requests:
                  cpu: 100m
                  memory: 50M
              securityContext:
                allowPrivilegeEscalation: false
                readOnlyRootFilesystem: true
                runAsGroup: 101
                runAsUser: 100
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: FallbackToLogsOnError
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext:
            fsGroup: 101
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 101
            runAsUser: 100
          serviceAccount: sourcegraph-frontend
          serviceAccountName: sourcegraph-frontend
          terminationGracePeriodSeconds: 30
          volumes:
            - emptyDir: {}
              name: home-dir
    status: {}
  - apiVersion: v1
    data:
      spec: |
        spec:
          requestedVersion: "5.3.9104"

          blobstore:
            disabled: true

          codeInsights:
            disabled: true

          codeIntel:
            disabled: true

          frontend:
            ingress: {}

          gitServer:
            disabled: true

          indexedSearch:
            disabled: true

          pgsql:
            disabled: true

          postgresExporter:
            disabled: true

          preciseCodeIntel:
            disabled: true

          redisCache:
            disabled: true

          redisStore:
            disabled: true

          repoUpdater:
            disabled: true

          searcher:
            disabled: true

          symbols:
            disabled: true

          syntectServer:
            disabled: true

          worker:
            disabled: true

          prometheus:
            disabled: true
    kind: ConfigMap
    metadata:
      annotations:
        appliance.sourcegraph.com/currentVersion: 5.3.9104
        appliance.sourcegraph.com/managed: "true"
      creationTimestamp: "2024-04-19T00:00:00Z"
      name: sg
      namespace: NORMALIZED_FOR_TESTING
      resourceVersion: NORMALIZED_FOR_TESTING
      uid: NORMALIZED_FOR_TESTING
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: Role
    metadata:
      annotations:
        appliance.sourcegraph.com/configHash: d3eb623947fedba566dfc56adc4733ff5ef1b2887a5cb63d75dbc1df452b0b5c
      creationTimestamp: "2024-04-19T00:00:00Z"
      labels:
        deploy: sourcegraph
      name: sourcegraph-frontend
      namespace: NORMALIZED_FOR_TESTING
      ownerReferences:
        - apiVersion: v1
          blockOwnerDeletion: true
          controller: true
          kind: ConfigMap
          name: sg
          uid: NORMALIZED_FOR_TESTING
      resourceVersion: NORMALIZED_FOR_TESTING
      uid: NORMALIZED_FOR_TESTING
    rules:
      - apiGroups:
          - ""
        resources:
          - endpoints
          - services
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - apps
        resources:
          - statefulsets
        verbs:
          - get
          - list
          - watch
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      annotations:
        appliance.sourcegraph.com/configHash: d3eb623947fedba566dfc56adc4733ff5ef1b2887a5cb63d75dbc1df452b0b5c
      creationTimestamp: "2024-04-19T00:00:00Z"
      labels:
        deploy: sourcegraph
      name: sourcegraph-frontend
      namespace: NORMALIZED_FOR_TESTING
      ownerReferences:
        - apiVersion: v1
          blockOwnerDeletion: true
          controller: true
          kind: ConfigMap
          name: sg
          uid: NORMALIZED_FOR_TESTING
      resourceVersion: NORMALIZED_FOR_TESTING
      uid: NORMALIZED_FOR_TESTING
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: Role
      name: sourcegraph-frontend
    subjects:
      - kind: ServiceAccount
        name: sourcegraph-frontend
        namespace: NORMALIZED_FOR_TESTING
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      annotations:
        appliance.sourcegraph.com/configHash: d3eb623947fedba566dfc56adc4733ff5ef1b2887a5cb63d75dbc1df452b0b5c
      creationTimestamp: "2024-04-19T00:00:00Z"
      labels:
        deploy: sourcegraph
      name: sourcegraph-frontend
      namespace: NORMALIZED_FOR_TESTING
      ownerReferences:
        - apiVersion: v1
          blockOwnerDeletion: true
          controller: true
          kind: ConfigMap
          name: sg
          uid: NORMALIZED_FOR_TESTING
      resourceVersion: NORMALIZED_FOR_TESTING
      uid: NORMALIZED_FOR_TESTING
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        appliance.sourcegraph.com/configHash: d3eb623947fedba566dfc56adc4733ff5ef1b2887a5cb63d75dbc1df452b0b5c
        prometheus.io/port: "6060"
        sourcegraph.prometheus/scrape: "true"
      creationTimestamp: "2024-04-19T00:00:00Z"
      labels:
        app: sourcegraph-frontend
        app.kubernetes.io/component: sourcegraph-frontend
        deploy: sourcegraph
      name: sourcegraph-frontend
      namespace: NORMALIZED_FOR_TESTING
      ownerReferences:
        - apiVersion: v1
          blockOwnerDeletion: true
          controller: true
          kind: ConfigMap
          name: sg
          uid: NORMALIZED_FOR_TESTING
      resourceVersion: NORMALIZED_FOR_TESTING
      uid: NORMALIZED_FOR_TESTING
    spec:
      clusterIP: NORMALIZED_FOR_TESTING
      clusterIPs:
        - NORMALIZED_FOR_TESTING
      internalTrafficPolicy: Cluster
      ipFamilies:
        - IPv4
      ipFamilyPolicy: SingleStack
      ports:
        - name: http
          port: 30080
          protocol: TCP
          targetPort: http
      selector:
        app: sourcegraph-frontend
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        appliance.sourcegraph.com/configHash: d3eb623947fedba566dfc56adc4733ff5ef1b2887a5cb63d75dbc1df452b0b5c
      creationTimestamp: "2024-04-19T00:00:00Z"
      labels:
        app: sourcegraph-frontend-internal
        app.kubernetes.io/component: sourcegraph-frontend-internal
        deploy: sourcegraph
      name: sourcegraph-frontend-internal
      namespace: NORMALIZED_FOR_TESTING
      ownerReferences:
        - apiVersion: v1
          blockOwnerDeletion: true
          controller: true
          kind: ConfigMap
          name: sg
          uid: NORMALIZED_FOR_TESTING
      resourceVersion: NORMALIZED_FOR_TESTING
      uid: NORMALIZED_FOR_TESTING
    spec:
      clusterIP: NORMALIZED_FOR_TESTING
      clusterIPs:
        - NORMALIZED_FOR_TESTING
      internalTrafficPolicy: Cluster
      ipFamilies:
        - IPv4
      ipFamilyPolicy: SingleStack
      ports:
        - name: http-internal
          port: 80
          protocol: TCP
          targetPort: http-internal
      selector:
        app: sourcegraph-frontend
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: networking.k8s.io/v1
    kind: Ingress
    metadata:
      annotations:
        appliance.sourcegraph.com/configHash: d3eb623947fedba566dfc56adc4733ff5ef1b2887a5cb63d75dbc1df452b0b5c
      creationTimestamp: "2024-04-19T00:00:00Z"
      generation: 1
      labels:
        deploy: sourcegraph
      name: sourcegraph-frontend
      namespace: NORMALIZED_FOR_TESTING
      ownerReferences:
        - apiVersion: v1
          blockOwnerDeletion: true
          controller: true
          kind: ConfigMap
          name: sg
          uid: NORMALIZED_FOR_TESTING
      resourceVersion: NORMALIZED_FOR_TESTING
      uid: NORMALIZED_FOR_TESTING
    spec:
      rules:
        - http:
            paths:
              - backend:
                  service:
                    name: sourcegraph-frontend
                    port:
                      number: 30080
                path: /
                pathType: Prefix
    status:
      loadBalancer: {}
