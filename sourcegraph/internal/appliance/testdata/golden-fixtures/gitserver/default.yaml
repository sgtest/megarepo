resources:
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      appliance.sourcegraph.com/configHash: 83479964f6f3f84d669035db9422f03b10c7543d344f6c222c1d1698eb3acb6a
    creationTimestamp: "2024-04-19T00:00:00Z"
    generation: 1
    labels:
      app.kubernetes.io/component: gitserver
      app.kubernetes.io/name: sourcegraph
      app.kubernetes.io/version: 5.3.9104
      deploy: sourcegraph
    name: gitserver
    namespace: NORMALIZED_FOR_TESTING
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: true
      controller: true
      kind: ConfigMap
      name: sg
      uid: NORMALIZED_FOR_TESTING
    resourceVersion: NORMALIZED_FOR_TESTING
    uid: NORMALIZED_FOR_TESTING
  spec:
    minReadySeconds: 10
    persistentVolumeClaimRetentionPolicy:
      whenDeleted: Retain
      whenScaled: Retain
    podManagementPolicy: OrderedReady
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: gitserver
    serviceName: gitserver
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/default-container: gitserver
        creationTimestamp: null
        labels:
          app: gitserver
          deploy: sourcegraph
        name: gitserver
      spec:
        containers:
        - args:
          - run
          env:
          - name: REDIS_CACHE_ENDPOINT
            valueFrom:
              secretKeyRef:
                key: endpoint
                name: redis-cache
          - name: REDIS_STORE_ENDPOINT
            valueFrom:
              secretKeyRef:
                key: endpoint
                name: redis-store
          - name: OTEL_AGENT_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: http://$(OTEL_AGENT_HOST):4317
          image: index.docker.io/sourcegraph/gitserver:5.3.2@sha256:6c6042cf3e5f3f16de9b82e3d4ab1647f8bb924cd315245bd7a3162f5489e8c4
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: rpc
            timeoutSeconds: 5
          name: gitserver
          ports:
          - containerPort: 3178
            name: rpc
            protocol: TCP
          resources:
            limits:
              cpu: "4"
              memory: 8Gi
            requests:
              cpu: "4"
              memory: 8Gi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 101
            runAsUser: 100
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /tmp
            name: tmpdir
          - mountPath: /data/repos
            name: repos
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 101
          fsGroupChangePolicy: OnRootMismatch
          runAsGroup: 101
          runAsUser: 100
        serviceAccount: gitserver
        serviceAccountName: gitserver
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: repos
        - emptyDir: {}
          name: tmpdir
    updateStrategy:
      type: RollingUpdate
    volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        creationTimestamp: null
        labels:
          deploy: sourcegraph
        name: repos
        namespace: NORMALIZED_FOR_TESTING
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 200Gi
        storageClassName: sourcegraph
        volumeMode: Filesystem
      status:
        phase: Pending
  status:
    availableReplicas: 0
    replicas: 0
- apiVersion: v1
  data:
    spec: |
      spec:
        requestedVersion: "5.3.9104"

        blobstore:
          disabled: true

        codeInsights:
          disabled: true

        codeIntel:
          disabled: true

        frontend:
          disabled: true

        gitServer: {}

        indexedSearch:
          disabled: true

        indexedSearchIndexer:
          disabled: true

        pgsql:
          disabled: true

        postgresExporter:
          disabled: true

        preciseCodeIntel:
          disabled: true

        redisCache:
          disabled: true

        redisStore:
          disabled: true

        repoUpdater:
          disabled: true

        searcher:
          disabled: true

        symbols:
          disabled: true

        syntectServer:
          disabled: true

        worker:
          disabled: true
  kind: ConfigMap
  metadata:
    annotations:
      appliance.sourcegraph.com/currentVersion: 5.3.9104
      appliance.sourcegraph.com/managed: "true"
    creationTimestamp: "2024-04-19T00:00:00Z"
    name: sg
    namespace: NORMALIZED_FOR_TESTING
    resourceVersion: NORMALIZED_FOR_TESTING
    uid: NORMALIZED_FOR_TESTING
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    annotations:
      appliance.sourcegraph.com/configHash: 83479964f6f3f84d669035db9422f03b10c7543d344f6c222c1d1698eb3acb6a
    creationTimestamp: "2024-04-19T00:00:00Z"
    labels:
      deploy: sourcegraph
    name: gitserver
    namespace: NORMALIZED_FOR_TESTING
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: true
      controller: true
      kind: ConfigMap
      name: sg
      uid: NORMALIZED_FOR_TESTING
    resourceVersion: NORMALIZED_FOR_TESTING
    uid: NORMALIZED_FOR_TESTING
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      appliance.sourcegraph.com/configHash: 83479964f6f3f84d669035db9422f03b10c7543d344f6c222c1d1698eb3acb6a
      prometheus.io/port: "6060"
      sourcegraph.prometheus/scrape: "true"
    creationTimestamp: "2024-04-19T00:00:00Z"
    labels:
      app: gitserver
      app.kubernetes.io/component: gitserver
      deploy: sourcegraph
    name: gitserver
    namespace: NORMALIZED_FOR_TESTING
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: true
      controller: true
      kind: ConfigMap
      name: sg
      uid: NORMALIZED_FOR_TESTING
    resourceVersion: NORMALIZED_FOR_TESTING
    uid: NORMALIZED_FOR_TESTING
  spec:
    clusterIP: NORMALIZED_FOR_TESTING
    clusterIPs:
    - NORMALIZED_FOR_TESTING
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: unused
      port: 10811
      protocol: TCP
      targetPort: 10811
    selector:
      app: gitserver
      type: gitserver
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
