load("//dev:go_mockgen.bzl", "go_mockgen")
load("//dev:go_defs.bzl", "go_test")
load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "gitserver",
    srcs = [
        "addrs.go",
        "client.go",
        "commands.go",
        "errwrap.go",
        "git_command.go",
        "mock.go",
        "mocks_temp.go",
        "observability.go",
        "retry.go",
        "stream_client.go",
        "test_utils.go",
    ],
    importpath = "github.com/sourcegraph/sourcegraph/internal/gitserver",
    visibility = ["//:__subpackages__"],
    deps = [
        "//internal/actor",
        "//internal/api",
        "//internal/authz",
        "//internal/conf",
        "//internal/conf/conftypes",
        "//internal/extsvc/gitolite",
        "//internal/fileutil",
        "//internal/gitserver/connection",
        "//internal/gitserver/gitdomain",
        "//internal/gitserver/protocol",
        "//internal/gitserver/v1:gitserver",
        "//internal/grpc/defaults",
        "//internal/grpc/streamio",
        "//internal/metrics",
        "//internal/observation",
        "//internal/perforce",
        "//internal/search/streaming/http",
        "//lib/errors",
        "//lib/pointers",
        "@com_github_go_git_go_git_v5//plumbing/format/config",
        "@com_github_golang_groupcache//lru",
        "@com_github_sourcegraph_conc//pool",
        "@com_github_sourcegraph_go_diff//diff",
        "@com_github_sourcegraph_log//:log",
        "@com_github_sourcegraph_log//logtest",
        "@io_opentelemetry_go_otel//attribute",
        "@org_golang_google_grpc//:go_default_library",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//metadata",
        "@org_golang_google_grpc//status",
        "@org_golang_google_protobuf//types/known/timestamppb",
    ],
)

go_test(
    name = "gitserver_test",
    timeout = "short",
    srcs = [
        "client_test.go",
        "commands_test.go",
        "grpc_test.go",
    ],
    data = glob(["testdata/**"]),
    embed = [":gitserver"],
    # This test loads coursier as a side effect, so we ensure the
    # path is sandboxed properly.
    env = {"COURSIER_CACHE_DIR": "/tmp"},
    deps = [
        "//internal/actor",
        "//internal/api",
        "//internal/authz",
        "//internal/conf",
        "//internal/conf/conftypes",
        "//internal/extsvc/gitolite",
        "//internal/gitserver/gitdomain",
        "//internal/gitserver/protocol",
        "//internal/gitserver/v1:gitserver",
        "//internal/grpc",
        "//lib/errors",
        "//schema",
        "@com_github_google_go_cmp//cmp",
        "@com_github_google_go_cmp//cmp/cmpopts",
        "@com_github_sourcegraph_go_diff//diff",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//require",
        "@org_golang_google_grpc//:go_default_library",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//status",
        "@org_golang_google_protobuf//types/known/timestamppb",
    ],
)

go_mockgen(
    name = "generate_mocks",
    out = "mock.go",
    manifests = [
        "//:mockgen.yaml",
        "//:mockgen.test.yaml",
        "//:mockgen.temp.yaml",
    ],
    deps = ["//internal/gitserver/v1:gitserver"],
)
