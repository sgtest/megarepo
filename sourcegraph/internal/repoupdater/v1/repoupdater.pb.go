// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.1
// 	protoc        (unknown)
// source: repoupdater.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RepoUpdateSchedulerInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the repo to lookup the schedule for.
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RepoUpdateSchedulerInfoRequest) Reset() {
	*x = RepoUpdateSchedulerInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_repoupdater_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepoUpdateSchedulerInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepoUpdateSchedulerInfoRequest) ProtoMessage() {}

func (x *RepoUpdateSchedulerInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_repoupdater_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepoUpdateSchedulerInfoRequest.ProtoReflect.Descriptor instead.
func (*RepoUpdateSchedulerInfoRequest) Descriptor() ([]byte, []int) {
	return file_repoupdater_proto_rawDescGZIP(), []int{0}
}

func (x *RepoUpdateSchedulerInfoRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RepoUpdateSchedulerInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Schedule *RepoScheduleState `protobuf:"bytes,1,opt,name=schedule,proto3" json:"schedule,omitempty"`
	Queue    *RepoQueueState    `protobuf:"bytes,2,opt,name=queue,proto3" json:"queue,omitempty"`
}

func (x *RepoUpdateSchedulerInfoResponse) Reset() {
	*x = RepoUpdateSchedulerInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_repoupdater_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepoUpdateSchedulerInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepoUpdateSchedulerInfoResponse) ProtoMessage() {}

func (x *RepoUpdateSchedulerInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_repoupdater_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepoUpdateSchedulerInfoResponse.ProtoReflect.Descriptor instead.
func (*RepoUpdateSchedulerInfoResponse) Descriptor() ([]byte, []int) {
	return file_repoupdater_proto_rawDescGZIP(), []int{1}
}

func (x *RepoUpdateSchedulerInfoResponse) GetSchedule() *RepoScheduleState {
	if x != nil {
		return x.Schedule
	}
	return nil
}

func (x *RepoUpdateSchedulerInfoResponse) GetQueue() *RepoQueueState {
	if x != nil {
		return x.Queue
	}
	return nil
}

type RepoScheduleState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index           int64                  `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Total           int64                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	IntervalSeconds int64                  `protobuf:"varint,3,opt,name=interval_seconds,json=intervalSeconds,proto3" json:"interval_seconds,omitempty"`
	Due             *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=due,proto3" json:"due,omitempty"`
}

func (x *RepoScheduleState) Reset() {
	*x = RepoScheduleState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_repoupdater_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepoScheduleState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepoScheduleState) ProtoMessage() {}

func (x *RepoScheduleState) ProtoReflect() protoreflect.Message {
	mi := &file_repoupdater_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepoScheduleState.ProtoReflect.Descriptor instead.
func (*RepoScheduleState) Descriptor() ([]byte, []int) {
	return file_repoupdater_proto_rawDescGZIP(), []int{2}
}

func (x *RepoScheduleState) GetIndex() int64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *RepoScheduleState) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *RepoScheduleState) GetIntervalSeconds() int64 {
	if x != nil {
		return x.IntervalSeconds
	}
	return 0
}

func (x *RepoScheduleState) GetDue() *timestamppb.Timestamp {
	if x != nil {
		return x.Due
	}
	return nil
}

type RepoQueueState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index    int64 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Total    int64 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Updating bool  `protobuf:"varint,3,opt,name=updating,proto3" json:"updating,omitempty"`
	Priority int64 `protobuf:"varint,4,opt,name=priority,proto3" json:"priority,omitempty"`
}

func (x *RepoQueueState) Reset() {
	*x = RepoQueueState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_repoupdater_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepoQueueState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepoQueueState) ProtoMessage() {}

func (x *RepoQueueState) ProtoReflect() protoreflect.Message {
	mi := &file_repoupdater_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepoQueueState.ProtoReflect.Descriptor instead.
func (*RepoQueueState) Descriptor() ([]byte, []int) {
	return file_repoupdater_proto_rawDescGZIP(), []int{3}
}

func (x *RepoQueueState) GetIndex() int64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *RepoQueueState) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *RepoQueueState) GetUpdating() bool {
	if x != nil {
		return x.Updating
	}
	return false
}

func (x *RepoQueueState) GetPriority() int64 {
	if x != nil {
		return x.Priority
	}
	return 0
}

type RepoLookupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Repo is the repository name to look up.
	Repo string `protobuf:"bytes,1,opt,name=repo,proto3" json:"repo,omitempty"`
	// Update will enqueue a high priority git update for this repo if it
	// exists and this field is true.
	Update bool `protobuf:"varint,2,opt,name=update,proto3" json:"update,omitempty"`
}

func (x *RepoLookupRequest) Reset() {
	*x = RepoLookupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_repoupdater_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepoLookupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepoLookupRequest) ProtoMessage() {}

func (x *RepoLookupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_repoupdater_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepoLookupRequest.ProtoReflect.Descriptor instead.
func (*RepoLookupRequest) Descriptor() ([]byte, []int) {
	return file_repoupdater_proto_rawDescGZIP(), []int{4}
}

func (x *RepoLookupRequest) GetRepo() string {
	if x != nil {
		return x.Repo
	}
	return ""
}

func (x *RepoLookupRequest) GetUpdate() bool {
	if x != nil {
		return x.Update
	}
	return false
}

type RepoLookupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Repo contains information about the repository, if it is found. If an error occurred, it is nil.
	Repo *RepoInfo `protobuf:"bytes,1,opt,name=repo,proto3" json:"repo,omitempty"`
	// the repository host reported that the repository was not found
	ErrorNotFound bool `protobuf:"varint,2,opt,name=error_not_found,json=errorNotFound,proto3" json:"error_not_found,omitempty"`
	// the repository host rejected the client's authorization
	ErrorUnauthorized bool `protobuf:"varint,3,opt,name=error_unauthorized,json=errorUnauthorized,proto3" json:"error_unauthorized,omitempty"`
	// the repository host was temporarily unavailable (e.g., rate limit exceeded)
	ErrorTemporarilyUnavailable bool `protobuf:"varint,4,opt,name=error_temporarily_unavailable,json=errorTemporarilyUnavailable,proto3" json:"error_temporarily_unavailable,omitempty"`
}

func (x *RepoLookupResponse) Reset() {
	*x = RepoLookupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_repoupdater_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepoLookupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepoLookupResponse) ProtoMessage() {}

func (x *RepoLookupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_repoupdater_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepoLookupResponse.ProtoReflect.Descriptor instead.
func (*RepoLookupResponse) Descriptor() ([]byte, []int) {
	return file_repoupdater_proto_rawDescGZIP(), []int{5}
}

func (x *RepoLookupResponse) GetRepo() *RepoInfo {
	if x != nil {
		return x.Repo
	}
	return nil
}

func (x *RepoLookupResponse) GetErrorNotFound() bool {
	if x != nil {
		return x.ErrorNotFound
	}
	return false
}

func (x *RepoLookupResponse) GetErrorUnauthorized() bool {
	if x != nil {
		return x.ErrorUnauthorized
	}
	return false
}

func (x *RepoLookupResponse) GetErrorTemporarilyUnavailable() bool {
	if x != nil {
		return x.ErrorTemporarilyUnavailable
	}
	return false
}

type RepoInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID is the unique numeric ID for this repository.
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Name the canonical name of the repository. Its case (uppercase/lowercase) may differ from the name arg used
	// in the lookup. If the repository was renamed on the external service, this name is the new name.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// repository description (from the external service)
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// whether this repository is a fork of another repository (from the external service)
	Fork bool `protobuf:"varint,4,opt,name=fork,proto3" json:"fork,omitempty"`
	// whether this repository is archived (from the external service)
	Archived bool `protobuf:"varint,5,opt,name=archived,proto3" json:"archived,omitempty"`
	// whether this repository is private (from the external service)
	Private bool `protobuf:"varint,6,opt,name=private,proto3" json:"private,omitempty"`
	// VCS-related information (for cloning/updating)
	VcsInfo *VCSInfo `protobuf:"bytes,7,opt,name=vcs_info,json=vcsInfo,proto3" json:"vcs_info,omitempty"`
	// link URLs related to this repository
	Links *RepoLinks `protobuf:"bytes,8,opt,name=links,proto3" json:"links,omitempty"`
	// ExternalRepo specifies this repository's ID on the external service where it resides (and the external
	// service itself).
	ExternalRepo *ExternalRepoSpec `protobuf:"bytes,9,opt,name=external_repo,json=externalRepo,proto3" json:"external_repo,omitempty"`
}

func (x *RepoInfo) Reset() {
	*x = RepoInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_repoupdater_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepoInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepoInfo) ProtoMessage() {}

func (x *RepoInfo) ProtoReflect() protoreflect.Message {
	mi := &file_repoupdater_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepoInfo.ProtoReflect.Descriptor instead.
func (*RepoInfo) Descriptor() ([]byte, []int) {
	return file_repoupdater_proto_rawDescGZIP(), []int{6}
}

func (x *RepoInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RepoInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RepoInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *RepoInfo) GetFork() bool {
	if x != nil {
		return x.Fork
	}
	return false
}

func (x *RepoInfo) GetArchived() bool {
	if x != nil {
		return x.Archived
	}
	return false
}

func (x *RepoInfo) GetPrivate() bool {
	if x != nil {
		return x.Private
	}
	return false
}

func (x *RepoInfo) GetVcsInfo() *VCSInfo {
	if x != nil {
		return x.VcsInfo
	}
	return nil
}

func (x *RepoInfo) GetLinks() *RepoLinks {
	if x != nil {
		return x.Links
	}
	return nil
}

func (x *RepoInfo) GetExternalRepo() *ExternalRepoSpec {
	if x != nil {
		return x.ExternalRepo
	}
	return nil
}

// VCSInfo describes how to access an external repository's Git data (to clone or update it).
type VCSInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the Git remote URL
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *VCSInfo) Reset() {
	*x = VCSInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_repoupdater_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VCSInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VCSInfo) ProtoMessage() {}

func (x *VCSInfo) ProtoReflect() protoreflect.Message {
	mi := &file_repoupdater_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VCSInfo.ProtoReflect.Descriptor instead.
func (*VCSInfo) Descriptor() ([]byte, []int) {
	return file_repoupdater_proto_rawDescGZIP(), []int{7}
}

func (x *VCSInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// RepoLinks contains URLs and URL patterns for objects in this repository.
type RepoLinks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the repository's main (root) page URL
	Root string `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"`
	// the URL to a tree, with {rev} and {path} substitution variables
	Tree string `protobuf:"bytes,2,opt,name=tree,proto3" json:"tree,omitempty"`
	// the URL to a blob, with {rev} and {path} substitution variables
	Blob string `protobuf:"bytes,3,opt,name=blob,proto3" json:"blob,omitempty"`
	// the URL to a commit, with {commit} substitution variable
	Commit string `protobuf:"bytes,4,opt,name=commit,proto3" json:"commit,omitempty"`
}

func (x *RepoLinks) Reset() {
	*x = RepoLinks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_repoupdater_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepoLinks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepoLinks) ProtoMessage() {}

func (x *RepoLinks) ProtoReflect() protoreflect.Message {
	mi := &file_repoupdater_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepoLinks.ProtoReflect.Descriptor instead.
func (*RepoLinks) Descriptor() ([]byte, []int) {
	return file_repoupdater_proto_rawDescGZIP(), []int{8}
}

func (x *RepoLinks) GetRoot() string {
	if x != nil {
		return x.Root
	}
	return ""
}

func (x *RepoLinks) GetTree() string {
	if x != nil {
		return x.Tree
	}
	return ""
}

func (x *RepoLinks) GetBlob() string {
	if x != nil {
		return x.Blob
	}
	return ""
}

func (x *RepoLinks) GetCommit() string {
	if x != nil {
		return x.Commit
	}
	return ""
}

// ExternalRepoSpec specifies a repository on an external service (such as GitHub or GitLab).
type ExternalRepoSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID is the repository's ID on the external service. Its value is opaque except to the repo-updater.
	//
	// For GitHub, this is the GitHub GraphQL API's node ID for the repository.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// ServiceType is the type of external service. Its value is opaque except to the repo-updater.
	//
	// Example: "github", "gitlab", etc.
	ServiceType string `protobuf:"bytes,2,opt,name=service_type,json=serviceType,proto3" json:"service_type,omitempty"`
	// ServiceID is the particular instance of the external service where this repository resides. Its value is
	// opaque but typically consists of the canonical base URL to the service.
	//
	// Implementations must take care to normalize this URL. For example, if different GitHub.com repository code
	// paths used slightly different values here (such as "https://github.com/" and "https://github.com", note the
	// lack of trailing slash), then the same logical repository would be incorrectly treated as multiple distinct
	// repositories depending on the code path that provided its ServiceID value.
	//
	// Example: "https://github.com/", "https://github-enterprise.example.com/"
	ServiceId string `protobuf:"bytes,3,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
}

func (x *ExternalRepoSpec) Reset() {
	*x = ExternalRepoSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_repoupdater_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalRepoSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalRepoSpec) ProtoMessage() {}

func (x *ExternalRepoSpec) ProtoReflect() protoreflect.Message {
	mi := &file_repoupdater_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalRepoSpec.ProtoReflect.Descriptor instead.
func (*ExternalRepoSpec) Descriptor() ([]byte, []int) {
	return file_repoupdater_proto_rawDescGZIP(), []int{9}
}

func (x *ExternalRepoSpec) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ExternalRepoSpec) GetServiceType() string {
	if x != nil {
		return x.ServiceType
	}
	return ""
}

func (x *ExternalRepoSpec) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

type EnqueueRepoUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Repo string `protobuf:"bytes,1,opt,name=repo,proto3" json:"repo,omitempty"`
}

func (x *EnqueueRepoUpdateRequest) Reset() {
	*x = EnqueueRepoUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_repoupdater_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnqueueRepoUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnqueueRepoUpdateRequest) ProtoMessage() {}

func (x *EnqueueRepoUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_repoupdater_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnqueueRepoUpdateRequest.ProtoReflect.Descriptor instead.
func (*EnqueueRepoUpdateRequest) Descriptor() ([]byte, []int) {
	return file_repoupdater_proto_rawDescGZIP(), []int{10}
}

func (x *EnqueueRepoUpdateRequest) GetRepo() string {
	if x != nil {
		return x.Repo
	}
	return ""
}

// EnqueueRepoUpdateResponse is a response type to a EnqueueRepoUpdateResponse
type EnqueueRepoUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the repo that got an update request.
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Name of the repo that got an update request.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *EnqueueRepoUpdateResponse) Reset() {
	*x = EnqueueRepoUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_repoupdater_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnqueueRepoUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnqueueRepoUpdateResponse) ProtoMessage() {}

func (x *EnqueueRepoUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_repoupdater_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnqueueRepoUpdateResponse.ProtoReflect.Descriptor instead.
func (*EnqueueRepoUpdateResponse) Descriptor() ([]byte, []int) {
	return file_repoupdater_proto_rawDescGZIP(), []int{11}
}

func (x *EnqueueRepoUpdateResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EnqueueRepoUpdateResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type EnqueueChangesetSyncRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *EnqueueChangesetSyncRequest) Reset() {
	*x = EnqueueChangesetSyncRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_repoupdater_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnqueueChangesetSyncRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnqueueChangesetSyncRequest) ProtoMessage() {}

func (x *EnqueueChangesetSyncRequest) ProtoReflect() protoreflect.Message {
	mi := &file_repoupdater_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnqueueChangesetSyncRequest.ProtoReflect.Descriptor instead.
func (*EnqueueChangesetSyncRequest) Descriptor() ([]byte, []int) {
	return file_repoupdater_proto_rawDescGZIP(), []int{12}
}

func (x *EnqueueChangesetSyncRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type EnqueueChangesetSyncResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EnqueueChangesetSyncResponse) Reset() {
	*x = EnqueueChangesetSyncResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_repoupdater_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnqueueChangesetSyncResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnqueueChangesetSyncResponse) ProtoMessage() {}

func (x *EnqueueChangesetSyncResponse) ProtoReflect() protoreflect.Message {
	mi := &file_repoupdater_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnqueueChangesetSyncResponse.ProtoReflect.Descriptor instead.
func (*EnqueueChangesetSyncResponse) Descriptor() ([]byte, []int) {
	return file_repoupdater_proto_rawDescGZIP(), []int{13}
}

type FetchPermsOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvalidateCaches bool `protobuf:"varint,1,opt,name=invalidate_caches,json=invalidateCaches,proto3" json:"invalidate_caches,omitempty"`
}

func (x *FetchPermsOptions) Reset() {
	*x = FetchPermsOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_repoupdater_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchPermsOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchPermsOptions) ProtoMessage() {}

func (x *FetchPermsOptions) ProtoReflect() protoreflect.Message {
	mi := &file_repoupdater_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchPermsOptions.ProtoReflect.Descriptor instead.
func (*FetchPermsOptions) Descriptor() ([]byte, []int) {
	return file_repoupdater_proto_rawDescGZIP(), []int{14}
}

func (x *FetchPermsOptions) GetInvalidateCaches() bool {
	if x != nil {
		return x.InvalidateCaches
	}
	return false
}

type SyncExternalServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExternalServiceId int64 `protobuf:"varint,1,opt,name=external_service_id,json=externalServiceId,proto3" json:"external_service_id,omitempty"`
}

func (x *SyncExternalServiceRequest) Reset() {
	*x = SyncExternalServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_repoupdater_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncExternalServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncExternalServiceRequest) ProtoMessage() {}

func (x *SyncExternalServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_repoupdater_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncExternalServiceRequest.ProtoReflect.Descriptor instead.
func (*SyncExternalServiceRequest) Descriptor() ([]byte, []int) {
	return file_repoupdater_proto_rawDescGZIP(), []int{15}
}

func (x *SyncExternalServiceRequest) GetExternalServiceId() int64 {
	if x != nil {
		return x.ExternalServiceId
	}
	return 0
}

type SyncExternalServiceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SyncExternalServiceResponse) Reset() {
	*x = SyncExternalServiceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_repoupdater_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncExternalServiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncExternalServiceResponse) ProtoMessage() {}

func (x *SyncExternalServiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_repoupdater_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncExternalServiceResponse.ProtoReflect.Descriptor instead.
func (*SyncExternalServiceResponse) Descriptor() ([]byte, []int) {
	return file_repoupdater_proto_rawDescGZIP(), []int{16}
}

type ExternalServiceNamespacesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExternalServiceId *int64 `protobuf:"varint,1,opt,name=external_service_id,json=externalServiceId,proto3,oneof" json:"external_service_id,omitempty"`
	Kind              string `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Config            string `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *ExternalServiceNamespacesRequest) Reset() {
	*x = ExternalServiceNamespacesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_repoupdater_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalServiceNamespacesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalServiceNamespacesRequest) ProtoMessage() {}

func (x *ExternalServiceNamespacesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_repoupdater_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalServiceNamespacesRequest.ProtoReflect.Descriptor instead.
func (*ExternalServiceNamespacesRequest) Descriptor() ([]byte, []int) {
	return file_repoupdater_proto_rawDescGZIP(), []int{17}
}

func (x *ExternalServiceNamespacesRequest) GetExternalServiceId() int64 {
	if x != nil && x.ExternalServiceId != nil {
		return *x.ExternalServiceId
	}
	return 0
}

func (x *ExternalServiceNamespacesRequest) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *ExternalServiceNamespacesRequest) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

type ExternalServiceNamespacesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespaces []*ExternalServiceNamespace `protobuf:"bytes,1,rep,name=namespaces,proto3" json:"namespaces,omitempty"`
}

func (x *ExternalServiceNamespacesResponse) Reset() {
	*x = ExternalServiceNamespacesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_repoupdater_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalServiceNamespacesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalServiceNamespacesResponse) ProtoMessage() {}

func (x *ExternalServiceNamespacesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_repoupdater_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalServiceNamespacesResponse.ProtoReflect.Descriptor instead.
func (*ExternalServiceNamespacesResponse) Descriptor() ([]byte, []int) {
	return file_repoupdater_proto_rawDescGZIP(), []int{18}
}

func (x *ExternalServiceNamespacesResponse) GetNamespaces() []*ExternalServiceNamespace {
	if x != nil {
		return x.Namespaces
	}
	return nil
}

// ExternalServiceNamespace represents a namespace on an external service that can have ownership over repositories
type ExternalServiceNamespace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ExternalId string `protobuf:"bytes,3,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
}

func (x *ExternalServiceNamespace) Reset() {
	*x = ExternalServiceNamespace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_repoupdater_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalServiceNamespace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalServiceNamespace) ProtoMessage() {}

func (x *ExternalServiceNamespace) ProtoReflect() protoreflect.Message {
	mi := &file_repoupdater_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalServiceNamespace.ProtoReflect.Descriptor instead.
func (*ExternalServiceNamespace) Descriptor() ([]byte, []int) {
	return file_repoupdater_proto_rawDescGZIP(), []int{19}
}

func (x *ExternalServiceNamespace) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ExternalServiceNamespace) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ExternalServiceNamespace) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

type ExternalServiceRepositoriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExternalServiceId *int64   `protobuf:"varint,1,opt,name=external_service_id,json=externalServiceId,proto3,oneof" json:"external_service_id,omitempty"`
	Kind              string   `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Query             string   `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
	Config            string   `protobuf:"bytes,4,opt,name=config,proto3" json:"config,omitempty"`
	First             int32    `protobuf:"varint,5,opt,name=first,proto3" json:"first,omitempty"`
	ExcludeRepos      []string `protobuf:"bytes,6,rep,name=exclude_repos,json=excludeRepos,proto3" json:"exclude_repos,omitempty"`
}

func (x *ExternalServiceRepositoriesRequest) Reset() {
	*x = ExternalServiceRepositoriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_repoupdater_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalServiceRepositoriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalServiceRepositoriesRequest) ProtoMessage() {}

func (x *ExternalServiceRepositoriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_repoupdater_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalServiceRepositoriesRequest.ProtoReflect.Descriptor instead.
func (*ExternalServiceRepositoriesRequest) Descriptor() ([]byte, []int) {
	return file_repoupdater_proto_rawDescGZIP(), []int{20}
}

func (x *ExternalServiceRepositoriesRequest) GetExternalServiceId() int64 {
	if x != nil && x.ExternalServiceId != nil {
		return *x.ExternalServiceId
	}
	return 0
}

func (x *ExternalServiceRepositoriesRequest) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *ExternalServiceRepositoriesRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *ExternalServiceRepositoriesRequest) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

func (x *ExternalServiceRepositoriesRequest) GetFirst() int32 {
	if x != nil {
		return x.First
	}
	return 0
}

func (x *ExternalServiceRepositoriesRequest) GetExcludeRepos() []string {
	if x != nil {
		return x.ExcludeRepos
	}
	return nil
}

type ExternalServiceRepositoriesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Repos []*ExternalServiceRepository `protobuf:"bytes,1,rep,name=repos,proto3" json:"repos,omitempty"`
}

func (x *ExternalServiceRepositoriesResponse) Reset() {
	*x = ExternalServiceRepositoriesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_repoupdater_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalServiceRepositoriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalServiceRepositoriesResponse) ProtoMessage() {}

func (x *ExternalServiceRepositoriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_repoupdater_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalServiceRepositoriesResponse.ProtoReflect.Descriptor instead.
func (*ExternalServiceRepositoriesResponse) Descriptor() ([]byte, []int) {
	return file_repoupdater_proto_rawDescGZIP(), []int{21}
}

func (x *ExternalServiceRepositoriesResponse) GetRepos() []*ExternalServiceRepository {
	if x != nil {
		return x.Repos
	}
	return nil
}

// ExternalServiceRepository represents a repository on an external service that may not necessarily be sync'd with sourcegraph
type ExternalServiceRepository struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ExternalId string `protobuf:"bytes,3,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
}

func (x *ExternalServiceRepository) Reset() {
	*x = ExternalServiceRepository{}
	if protoimpl.UnsafeEnabled {
		mi := &file_repoupdater_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalServiceRepository) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalServiceRepository) ProtoMessage() {}

func (x *ExternalServiceRepository) ProtoReflect() protoreflect.Message {
	mi := &file_repoupdater_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalServiceRepository.ProtoReflect.Descriptor instead.
func (*ExternalServiceRepository) Descriptor() ([]byte, []int) {
	return file_repoupdater_proto_rawDescGZIP(), []int{22}
}

func (x *ExternalServiceRepository) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ExternalServiceRepository) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ExternalServiceRepository) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

var File_repoupdater_proto protoreflect.FileDescriptor

var file_repoupdater_proto_rawDesc = []byte{
	0x0a, 0x11, 0x72, 0x65, 0x70, 0x6f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x72, 0x65, 0x70, 0x6f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x30, 0x0a, 0x1e, 0x52, 0x65, 0x70, 0x6f, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x96, 0x01, 0x0a, 0x1f, 0x52, 0x65, 0x70, 0x6f, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x72,
	0x65, 0x70, 0x6f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x70, 0x6f, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x34, 0x0a, 0x05, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x71, 0x75, 0x65, 0x75, 0x65, 0x22,
	0x98, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x70, 0x6f, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x29, 0x0a, 0x10, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x5f, 0x73, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x2c, 0x0a, 0x03,
	0x64, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x64, 0x75, 0x65, 0x22, 0x74, 0x0a, 0x0e, 0x52, 0x65,
	0x70, 0x6f, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x22, 0x3f, 0x0a, 0x11, 0x52, 0x65, 0x70, 0x6f, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x22, 0xdd, 0x01, 0x0a, 0x12, 0x52, 0x65, 0x70, 0x6f, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x72, 0x65, 0x70, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x12, 0x26, 0x0a, 0x0f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x6e, 0x6f, 0x74, 0x5f, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x2d,
	0x0a, 0x12, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x75, 0x6e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x55, 0x6e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x42, 0x0a,
	0x1d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x72, 0x69,
	0x6c, 0x79, 0x5f, 0x75, 0x6e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x1b, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x6f,
	0x72, 0x61, 0x72, 0x69, 0x6c, 0x79, 0x55, 0x6e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x22, 0xc6, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x70, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6f, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x04, 0x66, 0x6f, 0x72, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x61, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x32,
	0x0a, 0x08, 0x76, 0x63, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x43, 0x53, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x76, 0x63, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x2f, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x05, 0x6c, 0x69,
	0x6e, 0x6b, 0x73, 0x12, 0x45, 0x0a, 0x0d, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f,
	0x72, 0x65, 0x70, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72, 0x65, 0x70,
	0x6f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x53, 0x70, 0x65, 0x63, 0x52, 0x0c, 0x65, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x22, 0x1b, 0x0a, 0x07, 0x56, 0x43,
	0x53, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x5f, 0x0a, 0x09, 0x52, 0x65, 0x70, 0x6f, 0x4c,
	0x69, 0x6e, 0x6b, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x72, 0x65, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x72, 0x65, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x62, 0x6c, 0x6f, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6c, 0x6f, 0x62,
	0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x22, 0x64, 0x0a, 0x10, 0x45, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x53, 0x70, 0x65, 0x63, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0x2e,
	0x0a, 0x18, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65,
	0x70, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x22, 0x3f,
	0x0a, 0x19, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x2f, 0x0a, 0x1b, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73,
	0x22, 0x1e, 0x0a, 0x1c, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x40, 0x0a, 0x11, 0x46, 0x65, 0x74, 0x63, 0x68, 0x50, 0x65, 0x72, 0x6d, 0x73, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x10, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x73, 0x22, 0x4c, 0x0a, 0x1a, 0x53, 0x79, 0x6e, 0x63, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2e, 0x0a, 0x13, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x65,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x22, 0x1d, 0x0a, 0x1b, 0x53, 0x79, 0x6e, 0x63, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x9b, 0x01, 0x0a, 0x20, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x13, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x00, 0x52, 0x11, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x22, 0x6d, 0x0a,
	0x21, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x48, 0x0a, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x52, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x22, 0x5f, 0x0a, 0x18,
	0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x22, 0xee, 0x01,
	0x0a, 0x22, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x13, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x00, 0x52, 0x11, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x72, 0x65, 0x70,
	0x6f, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x22, 0x66,
	0x0a, 0x23, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x05, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x22, 0x60, 0x0a, 0x19, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x32, 0xbe, 0x06, 0x0a, 0x12, 0x52, 0x65, 0x70,
	0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x7a, 0x0a, 0x17, 0x52, 0x65, 0x70, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2e, 0x2e, 0x72, 0x65, 0x70,
	0x6f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x72, 0x65, 0x70,
	0x6f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x0a, 0x52,
	0x65, 0x70, 0x6f, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x12, 0x21, 0x2e, 0x72, 0x65, 0x70, 0x6f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x4c,
	0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x72,
	0x65, 0x70, 0x6f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x70, 0x6f, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x68, 0x0a, 0x11, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x28, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65,
	0x70, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x29, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a, 0x14, 0x45, 0x6e,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65, 0x74, 0x53, 0x79,
	0x6e, 0x63, 0x12, 0x2b, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2c, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x65,
	0x74, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e, 0x0a,
	0x13, 0x53, 0x79, 0x6e, 0x63, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x2a, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2b, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x80, 0x01,
	0x0a, 0x19, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x12, 0x30, 0x2e, 0x72, 0x65,
	0x70, 0x6f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e,
	0x72, 0x65, 0x70, 0x6f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x86, 0x01, 0x0a, 0x1b, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x12, 0x32, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x3c, 0x5a, 0x3a, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x2f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_repoupdater_proto_rawDescOnce sync.Once
	file_repoupdater_proto_rawDescData = file_repoupdater_proto_rawDesc
)

func file_repoupdater_proto_rawDescGZIP() []byte {
	file_repoupdater_proto_rawDescOnce.Do(func() {
		file_repoupdater_proto_rawDescData = protoimpl.X.CompressGZIP(file_repoupdater_proto_rawDescData)
	})
	return file_repoupdater_proto_rawDescData
}

var file_repoupdater_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_repoupdater_proto_goTypes = []interface{}{
	(*RepoUpdateSchedulerInfoRequest)(nil),      // 0: repoupdater.v1.RepoUpdateSchedulerInfoRequest
	(*RepoUpdateSchedulerInfoResponse)(nil),     // 1: repoupdater.v1.RepoUpdateSchedulerInfoResponse
	(*RepoScheduleState)(nil),                   // 2: repoupdater.v1.RepoScheduleState
	(*RepoQueueState)(nil),                      // 3: repoupdater.v1.RepoQueueState
	(*RepoLookupRequest)(nil),                   // 4: repoupdater.v1.RepoLookupRequest
	(*RepoLookupResponse)(nil),                  // 5: repoupdater.v1.RepoLookupResponse
	(*RepoInfo)(nil),                            // 6: repoupdater.v1.RepoInfo
	(*VCSInfo)(nil),                             // 7: repoupdater.v1.VCSInfo
	(*RepoLinks)(nil),                           // 8: repoupdater.v1.RepoLinks
	(*ExternalRepoSpec)(nil),                    // 9: repoupdater.v1.ExternalRepoSpec
	(*EnqueueRepoUpdateRequest)(nil),            // 10: repoupdater.v1.EnqueueRepoUpdateRequest
	(*EnqueueRepoUpdateResponse)(nil),           // 11: repoupdater.v1.EnqueueRepoUpdateResponse
	(*EnqueueChangesetSyncRequest)(nil),         // 12: repoupdater.v1.EnqueueChangesetSyncRequest
	(*EnqueueChangesetSyncResponse)(nil),        // 13: repoupdater.v1.EnqueueChangesetSyncResponse
	(*FetchPermsOptions)(nil),                   // 14: repoupdater.v1.FetchPermsOptions
	(*SyncExternalServiceRequest)(nil),          // 15: repoupdater.v1.SyncExternalServiceRequest
	(*SyncExternalServiceResponse)(nil),         // 16: repoupdater.v1.SyncExternalServiceResponse
	(*ExternalServiceNamespacesRequest)(nil),    // 17: repoupdater.v1.ExternalServiceNamespacesRequest
	(*ExternalServiceNamespacesResponse)(nil),   // 18: repoupdater.v1.ExternalServiceNamespacesResponse
	(*ExternalServiceNamespace)(nil),            // 19: repoupdater.v1.ExternalServiceNamespace
	(*ExternalServiceRepositoriesRequest)(nil),  // 20: repoupdater.v1.ExternalServiceRepositoriesRequest
	(*ExternalServiceRepositoriesResponse)(nil), // 21: repoupdater.v1.ExternalServiceRepositoriesResponse
	(*ExternalServiceRepository)(nil),           // 22: repoupdater.v1.ExternalServiceRepository
	(*timestamppb.Timestamp)(nil),               // 23: google.protobuf.Timestamp
}
var file_repoupdater_proto_depIdxs = []int32{
	2,  // 0: repoupdater.v1.RepoUpdateSchedulerInfoResponse.schedule:type_name -> repoupdater.v1.RepoScheduleState
	3,  // 1: repoupdater.v1.RepoUpdateSchedulerInfoResponse.queue:type_name -> repoupdater.v1.RepoQueueState
	23, // 2: repoupdater.v1.RepoScheduleState.due:type_name -> google.protobuf.Timestamp
	6,  // 3: repoupdater.v1.RepoLookupResponse.repo:type_name -> repoupdater.v1.RepoInfo
	7,  // 4: repoupdater.v1.RepoInfo.vcs_info:type_name -> repoupdater.v1.VCSInfo
	8,  // 5: repoupdater.v1.RepoInfo.links:type_name -> repoupdater.v1.RepoLinks
	9,  // 6: repoupdater.v1.RepoInfo.external_repo:type_name -> repoupdater.v1.ExternalRepoSpec
	19, // 7: repoupdater.v1.ExternalServiceNamespacesResponse.namespaces:type_name -> repoupdater.v1.ExternalServiceNamespace
	22, // 8: repoupdater.v1.ExternalServiceRepositoriesResponse.repos:type_name -> repoupdater.v1.ExternalServiceRepository
	0,  // 9: repoupdater.v1.RepoUpdaterService.RepoUpdateSchedulerInfo:input_type -> repoupdater.v1.RepoUpdateSchedulerInfoRequest
	4,  // 10: repoupdater.v1.RepoUpdaterService.RepoLookup:input_type -> repoupdater.v1.RepoLookupRequest
	10, // 11: repoupdater.v1.RepoUpdaterService.EnqueueRepoUpdate:input_type -> repoupdater.v1.EnqueueRepoUpdateRequest
	12, // 12: repoupdater.v1.RepoUpdaterService.EnqueueChangesetSync:input_type -> repoupdater.v1.EnqueueChangesetSyncRequest
	15, // 13: repoupdater.v1.RepoUpdaterService.SyncExternalService:input_type -> repoupdater.v1.SyncExternalServiceRequest
	17, // 14: repoupdater.v1.RepoUpdaterService.ExternalServiceNamespaces:input_type -> repoupdater.v1.ExternalServiceNamespacesRequest
	20, // 15: repoupdater.v1.RepoUpdaterService.ExternalServiceRepositories:input_type -> repoupdater.v1.ExternalServiceRepositoriesRequest
	1,  // 16: repoupdater.v1.RepoUpdaterService.RepoUpdateSchedulerInfo:output_type -> repoupdater.v1.RepoUpdateSchedulerInfoResponse
	5,  // 17: repoupdater.v1.RepoUpdaterService.RepoLookup:output_type -> repoupdater.v1.RepoLookupResponse
	11, // 18: repoupdater.v1.RepoUpdaterService.EnqueueRepoUpdate:output_type -> repoupdater.v1.EnqueueRepoUpdateResponse
	13, // 19: repoupdater.v1.RepoUpdaterService.EnqueueChangesetSync:output_type -> repoupdater.v1.EnqueueChangesetSyncResponse
	16, // 20: repoupdater.v1.RepoUpdaterService.SyncExternalService:output_type -> repoupdater.v1.SyncExternalServiceResponse
	18, // 21: repoupdater.v1.RepoUpdaterService.ExternalServiceNamespaces:output_type -> repoupdater.v1.ExternalServiceNamespacesResponse
	21, // 22: repoupdater.v1.RepoUpdaterService.ExternalServiceRepositories:output_type -> repoupdater.v1.ExternalServiceRepositoriesResponse
	16, // [16:23] is the sub-list for method output_type
	9,  // [9:16] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_repoupdater_proto_init() }
func file_repoupdater_proto_init() {
	if File_repoupdater_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_repoupdater_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepoUpdateSchedulerInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_repoupdater_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepoUpdateSchedulerInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_repoupdater_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepoScheduleState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_repoupdater_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepoQueueState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_repoupdater_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepoLookupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_repoupdater_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepoLookupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_repoupdater_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepoInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_repoupdater_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VCSInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_repoupdater_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepoLinks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_repoupdater_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalRepoSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_repoupdater_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnqueueRepoUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_repoupdater_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnqueueRepoUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_repoupdater_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnqueueChangesetSyncRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_repoupdater_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnqueueChangesetSyncResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_repoupdater_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchPermsOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_repoupdater_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncExternalServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_repoupdater_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncExternalServiceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_repoupdater_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalServiceNamespacesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_repoupdater_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalServiceNamespacesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_repoupdater_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalServiceNamespace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_repoupdater_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalServiceRepositoriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_repoupdater_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalServiceRepositoriesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_repoupdater_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalServiceRepository); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_repoupdater_proto_msgTypes[17].OneofWrappers = []interface{}{}
	file_repoupdater_proto_msgTypes[20].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_repoupdater_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_repoupdater_proto_goTypes,
		DependencyIndexes: file_repoupdater_proto_depIdxs,
		MessageInfos:      file_repoupdater_proto_msgTypes,
	}.Build()
	File_repoupdater_proto = out.File
	file_repoupdater_proto_rawDesc = nil
	file_repoupdater_proto_goTypes = nil
	file_repoupdater_proto_depIdxs = nil
}
