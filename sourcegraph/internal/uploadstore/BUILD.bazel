load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "uploadstore",
    srcs = [
        "config.go",
        "expirer.go",
        "gcs_api.go",
        "gcs_client.go",
        "lazy_client.go",
        "observability.go",
        "pool.go",
        "s3_api.go",
        "s3_client.go",
        "store.go",
    ],
    importpath = "github.com/sourcegraph/sourcegraph/internal/uploadstore",
    visibility = ["//:__subpackages__"],
    deps = [
        "//internal/goroutine",
        "//internal/metrics",
        "//internal/observation",
        "//lib/errors",
        "@com_github_aws_aws_sdk_go_v2//aws",
        "@com_github_aws_aws_sdk_go_v2_config//:config",
        "@com_github_aws_aws_sdk_go_v2_credentials//:credentials",
        "@com_github_aws_aws_sdk_go_v2_feature_s3_manager//:manager",
        "@com_github_aws_aws_sdk_go_v2_service_s3//:s3",
        "@com_github_aws_aws_sdk_go_v2_service_s3//types",
        "@com_github_inconshreveable_log15//:log15",
        "@com_github_sourcegraph_conc//pool",
        "@com_github_sourcegraph_log//:log",
        "@com_google_cloud_go_storage//:storage",
        "@io_opentelemetry_go_otel//attribute",
        "@org_golang_google_api//iterator",
        "@org_golang_google_api//option",
    ],
)

go_test(
    name = "uploadstore_test",
    timeout = "short",
    srcs = [
        "config_test.go",
        "gcs_client_test.go",
        "mocks_test.go",
        "s3_client_test.go",
        "store_test.go",
    ],
    embed = [":uploadstore"],
    deps = [
        "//internal/observation",
        "//lib/errors",
        "@com_github_aws_aws_sdk_go_v2//aws",
        "@com_github_aws_aws_sdk_go_v2_service_s3//:s3",
        "@com_github_aws_aws_sdk_go_v2_service_s3//types",
        "@com_github_google_go_cmp//cmp",
        "@com_github_grafana_regexp//:regexp",
        "@com_github_inconshreveable_log15//:log15",
        "@com_google_cloud_go_storage//:storage",
    ],
)
