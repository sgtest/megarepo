{
  "Extensions": [
    "intarray",
    "pg_stat_statements",
    "pg_trgm"
  ],
  "Enums": null,
  "Functions": [
    {
      "Name": "get_file_extension",
      "Definition": "CREATE OR REPLACE FUNCTION public.get_file_extension(path text)\n RETURNS text\n LANGUAGE plpgsql\n IMMUTABLE\nAS $function$ BEGIN\n    RETURN substring(path FROM '\\.([^\\.]*)$');\nEND; $function$\n"
    },
    {
      "Name": "path_prefixes",
      "Definition": "CREATE OR REPLACE FUNCTION public.path_prefixes(path text)\n RETURNS text[]\n LANGUAGE plpgsql\n IMMUTABLE\nAS $function$ BEGIN\n    RETURN (\n        SELECT array_agg(array_to_string(components[:len], '/')) prefixes\n        FROM\n            (SELECT regexp_split_to_array(path, E'/') components) t,\n            generate_series(1, array_length(components, 1)) AS len\n    );\nEND; $function$\n"
    },
    {
      "Name": "singleton",
      "Definition": "CREATE OR REPLACE FUNCTION public.singleton(value text)\n RETURNS text[]\n LANGUAGE plpgsql\n IMMUTABLE\nAS $function$ BEGIN\n    RETURN ARRAY[value];\nEND; $function$\n"
    },
    {
      "Name": "singleton_integer",
      "Definition": "CREATE OR REPLACE FUNCTION public.singleton_integer(value integer)\n RETURNS integer[]\n LANGUAGE plpgsql\n IMMUTABLE\nAS $function$ BEGIN\n    RETURN ARRAY[value];\nEND; $function$\n"
    },
    {
      "Name": "update_lsif_data_definitions_schema_versions_insert",
      "Definition": "CREATE OR REPLACE FUNCTION public.update_lsif_data_definitions_schema_versions_insert()\n RETURNS trigger\n LANGUAGE plpgsql\nAS $function$ BEGIN\n    INSERT INTO\n        lsif_data_definitions_schema_versions\n    SELECT\n        dump_id,\n        MIN(schema_version) as min_schema_version,\n        MAX(schema_version) as max_schema_version\n    FROM\n        newtab\n    GROUP BY\n        dump_id\n    ON CONFLICT (dump_id) DO UPDATE SET\n        -- Update with min(old_min, new_min) and max(old_max, new_max)\n        min_schema_version = LEAST(lsif_data_definitions_schema_versions.min_schema_version, EXCLUDED.min_schema_version),\n        max_schema_version = GREATEST(lsif_data_definitions_schema_versions.max_schema_version, EXCLUDED.max_schema_version);\n\n    RETURN NULL;\nEND $function$\n"
    },
    {
      "Name": "update_lsif_data_documents_schema_versions_insert",
      "Definition": "CREATE OR REPLACE FUNCTION public.update_lsif_data_documents_schema_versions_insert()\n RETURNS trigger\n LANGUAGE plpgsql\nAS $function$ BEGIN\n    INSERT INTO\n        lsif_data_documents_schema_versions\n    SELECT\n        dump_id,\n        MIN(schema_version) as min_schema_version,\n        MAX(schema_version) as max_schema_version\n    FROM\n        newtab\n    GROUP BY\n        dump_id\n    ON CONFLICT (dump_id) DO UPDATE SET\n        -- Update with min(old_min, new_min) and max(old_max, new_max)\n        min_schema_version = LEAST(lsif_data_documents_schema_versions.min_schema_version, EXCLUDED.min_schema_version),\n        max_schema_version = GREATEST(lsif_data_documents_schema_versions.max_schema_version, EXCLUDED.max_schema_version);\n\n    RETURN NULL;\nEND $function$\n"
    },
    {
      "Name": "update_lsif_data_implementations_schema_versions_insert",
      "Definition": "CREATE OR REPLACE FUNCTION public.update_lsif_data_implementations_schema_versions_insert()\n RETURNS trigger\n LANGUAGE plpgsql\nAS $function$ BEGIN\n    INSERT INTO\n        lsif_data_implementations_schema_versions\n    SELECT\n        dump_id,\n        MIN(schema_version) as min_schema_version,\n        MAX(schema_version) as max_schema_version\n    FROM\n        newtab\n    GROUP BY\n        dump_id\n    ON CONFLICT (dump_id) DO UPDATE SET\n        -- Update with min(old_min, new_min) and max(old_max, new_max)\n        min_schema_version = LEAST   (lsif_data_implementations_schema_versions.min_schema_version, EXCLUDED.min_schema_version),\n        max_schema_version = GREATEST(lsif_data_implementations_schema_versions.max_schema_version, EXCLUDED.max_schema_version);\n\n    RETURN NULL;\nEND $function$\n"
    },
    {
      "Name": "update_lsif_data_references_schema_versions_insert",
      "Definition": "CREATE OR REPLACE FUNCTION public.update_lsif_data_references_schema_versions_insert()\n RETURNS trigger\n LANGUAGE plpgsql\nAS $function$ BEGIN\n    INSERT INTO\n        lsif_data_references_schema_versions\n    SELECT\n        dump_id,\n        MIN(schema_version) as min_schema_version,\n        MAX(schema_version) as max_schema_version\n    FROM\n        newtab\n    GROUP BY\n        dump_id\n    ON CONFLICT (dump_id) DO UPDATE SET\n        -- Update with min(old_min, new_min) and max(old_max, new_max)\n        min_schema_version = LEAST(lsif_data_references_schema_versions.min_schema_version, EXCLUDED.min_schema_version),\n        max_schema_version = GREATEST(lsif_data_references_schema_versions.max_schema_version, EXCLUDED.max_schema_version);\n\n    RETURN NULL;\nEND $function$\n"
    }
  ],
  "Sequences": [
    {
      "Name": "migration_logs_id_seq",
      "TypeName": "integer",
      "StartValue": 1,
      "MinimumValue": 1,
      "MaximumValue": 2147483647,
      "Increment": 1,
      "CycleOption": "NO"
    },
    {
      "Name": "rockskip_ancestry_id_seq",
      "TypeName": "integer",
      "StartValue": 1,
      "MinimumValue": 1,
      "MaximumValue": 2147483647,
      "Increment": 1,
      "CycleOption": "NO"
    },
    {
      "Name": "rockskip_repos_id_seq",
      "TypeName": "integer",
      "StartValue": 1,
      "MinimumValue": 1,
      "MaximumValue": 2147483647,
      "Increment": 1,
      "CycleOption": "NO"
    },
    {
      "Name": "rockskip_symbols_id_seq",
      "TypeName": "integer",
      "StartValue": 1,
      "MinimumValue": 1,
      "MaximumValue": 2147483647,
      "Increment": 1,
      "CycleOption": "NO"
    }
  ],
  "Tables": [
    {
      "Name": "codeintel_last_reconcile",
      "Comment": "Stores the last time processed LSIF data was reconciled with the other database.",
      "Columns": [
        {
          "Name": "dump_id",
          "Index": 1,
          "TypeName": "integer",
          "IsNullable": false,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": ""
        },
        {
          "Name": "last_reconcile_at",
          "Index": 2,
          "TypeName": "timestamp with time zone",
          "IsNullable": false,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": ""
        }
      ],
      "Indexes": [
        {
          "Name": "codeintel_last_reconcile_dump_id_key",
          "IsPrimaryKey": false,
          "IsUnique": true,
          "IsExclusion": false,
          "IsDeferrable": false,
          "IndexDefinition": "CREATE UNIQUE INDEX codeintel_last_reconcile_dump_id_key ON codeintel_last_reconcile USING btree (dump_id)",
          "ConstraintType": "u",
          "ConstraintDefinition": "UNIQUE (dump_id)"
        },
        {
          "Name": "codeintel_last_reconcile_last_reconcile_at_dump_id",
          "IsPrimaryKey": false,
          "IsUnique": false,
          "IsExclusion": false,
          "IsDeferrable": false,
          "IndexDefinition": "CREATE INDEX codeintel_last_reconcile_last_reconcile_at_dump_id ON codeintel_last_reconcile USING btree (last_reconcile_at, dump_id)",
          "ConstraintType": "",
          "ConstraintDefinition": ""
        }
      ],
      "Constraints": null,
      "Triggers": []
    },
    {
      "Name": "lsif_data_definitions",
      "Comment": "Associates (document, range) pairs with the import monikers attached to the range.",
      "Columns": [
        {
          "Name": "data",
          "Index": 4,
          "TypeName": "bytea",
          "IsNullable": true,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": "A gob-encoded payload conforming to an array of [LocationData](https://sourcegraph.com/github.com/sourcegraph/sourcegraph@3.26/-/blob/enterprise/lib/codeintel/semantic/types.go#L106:6) types."
        },
        {
          "Name": "dump_id",
          "Index": 1,
          "TypeName": "integer",
          "IsNullable": false,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": "The identifier of the associated dump in the lsif_uploads table (state=completed)."
        },
        {
          "Name": "identifier",
          "Index": 3,
          "TypeName": "text",
          "IsNullable": false,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": "The moniker identifier."
        },
        {
          "Name": "num_locations",
          "Index": 6,
          "TypeName": "integer",
          "IsNullable": false,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": "The number of locations stored in the data field."
        },
        {
          "Name": "schema_version",
          "Index": 5,
          "TypeName": "integer",
          "IsNullable": false,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": "The schema version of this row - used to determine presence and encoding of data."
        },
        {
          "Name": "scheme",
          "Index": 2,
          "TypeName": "text",
          "IsNullable": false,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": "The moniker scheme."
        }
      ],
      "Indexes": [
        {
          "Name": "lsif_data_definitions_pkey",
          "IsPrimaryKey": true,
          "IsUnique": true,
          "IsExclusion": false,
          "IsDeferrable": false,
          "IndexDefinition": "CREATE UNIQUE INDEX lsif_data_definitions_pkey ON lsif_data_definitions USING btree (dump_id, scheme, identifier)",
          "ConstraintType": "p",
          "ConstraintDefinition": "PRIMARY KEY (dump_id, scheme, identifier)"
        },
        {
          "Name": "lsif_data_definitions_dump_id_schema_version",
          "IsPrimaryKey": false,
          "IsUnique": false,
          "IsExclusion": false,
          "IsDeferrable": false,
          "IndexDefinition": "CREATE INDEX lsif_data_definitions_dump_id_schema_version ON lsif_data_definitions USING btree (dump_id, schema_version)",
          "ConstraintType": "",
          "ConstraintDefinition": ""
        }
      ],
      "Constraints": null,
      "Triggers": [
        {
          "Name": "lsif_data_definitions_schema_versions_insert",
          "Definition": "CREATE TRIGGER lsif_data_definitions_schema_versions_insert AFTER INSERT ON lsif_data_definitions REFERENCING NEW TABLE AS newtab FOR EACH STATEMENT EXECUTE FUNCTION update_lsif_data_definitions_schema_versions_insert()"
        }
      ]
    },
    {
      "Name": "lsif_data_definitions_schema_versions",
      "Comment": "Tracks the range of schema_versions for each upload in the lsif_data_definitions table.",
      "Columns": [
        {
          "Name": "dump_id",
          "Index": 1,
          "TypeName": "integer",
          "IsNullable": false,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": "The identifier of the associated dump in the lsif_uploads table."
        },
        {
          "Name": "max_schema_version",
          "Index": 3,
          "TypeName": "integer",
          "IsNullable": true,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": "An upper-bound on the `lsif_data_definitions.schema_version` where `lsif_data_definitions.dump_id = dump_id`."
        },
        {
          "Name": "min_schema_version",
          "Index": 2,
          "TypeName": "integer",
          "IsNullable": true,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": "A lower-bound on the `lsif_data_definitions.schema_version` where `lsif_data_definitions.dump_id = dump_id`."
        }
      ],
      "Indexes": [
        {
          "Name": "lsif_data_definitions_schema_versions_pkey",
          "IsPrimaryKey": true,
          "IsUnique": true,
          "IsExclusion": false,
          "IsDeferrable": false,
          "IndexDefinition": "CREATE UNIQUE INDEX lsif_data_definitions_schema_versions_pkey ON lsif_data_definitions_schema_versions USING btree (dump_id)",
          "ConstraintType": "p",
          "ConstraintDefinition": "PRIMARY KEY (dump_id)"
        },
        {
          "Name": "lsif_data_definitions_schema_versions_dump_id_schema_version_bo",
          "IsPrimaryKey": false,
          "IsUnique": false,
          "IsExclusion": false,
          "IsDeferrable": false,
          "IndexDefinition": "CREATE INDEX lsif_data_definitions_schema_versions_dump_id_schema_version_bo ON lsif_data_definitions_schema_versions USING btree (dump_id, min_schema_version, max_schema_version)",
          "ConstraintType": "",
          "ConstraintDefinition": ""
        }
      ],
      "Constraints": null,
      "Triggers": []
    },
    {
      "Name": "lsif_data_documents",
      "Comment": "Stores reference, hover text, moniker, and diagnostic data about a particular text document witin a dump.",
      "Columns": [
        {
          "Name": "data",
          "Index": 3,
          "TypeName": "bytea",
          "IsNullable": true,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": "A gob-encoded payload conforming to the [DocumentData](https://sourcegraph.com/github.com/sourcegraph/sourcegraph@3.26/-/blob/enterprise/lib/codeintel/semantic/types.go#L13:6) type. This field is being migrated across ranges, hovers, monikers, packages, and diagnostics columns and will be removed in a future release of Sourcegraph."
        },
        {
          "Name": "diagnostics",
          "Index": 10,
          "TypeName": "bytea",
          "IsNullable": true,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": "A gob-encoded payload conforming to the [Diagnostics](https://sourcegraph.com/github.com/sourcegraph/sourcegraph@3.26/-/blob/enterprise/lib/codeintel/semantic/types.go#L18:2) field of the DocumentDatatype."
        },
        {
          "Name": "dump_id",
          "Index": 1,
          "TypeName": "integer",
          "IsNullable": false,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": "The identifier of the associated dump in the lsif_uploads table (state=completed)."
        },
        {
          "Name": "hovers",
          "Index": 7,
          "TypeName": "bytea",
          "IsNullable": true,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": "A gob-encoded payload conforming to the [HoversResults](https://sourcegraph.com/github.com/sourcegraph/sourcegraph@3.26/-/blob/enterprise/lib/codeintel/semantic/types.go#L15:2) field of the DocumentDatatype."
        },
        {
          "Name": "monikers",
          "Index": 8,
          "TypeName": "bytea",
          "IsNullable": true,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": "A gob-encoded payload conforming to the [Monikers](https://sourcegraph.com/github.com/sourcegraph/sourcegraph@3.26/-/blob/enterprise/lib/codeintel/semantic/types.go#L16:2) field of the DocumentDatatype."
        },
        {
          "Name": "num_diagnostics",
          "Index": 5,
          "TypeName": "integer",
          "IsNullable": false,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": "The number of diagnostics stored in the data field."
        },
        {
          "Name": "packages",
          "Index": 9,
          "TypeName": "bytea",
          "IsNullable": true,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": "A gob-encoded payload conforming to the [PackageInformation](https://sourcegraph.com/github.com/sourcegraph/sourcegraph@3.26/-/blob/enterprise/lib/codeintel/semantic/types.go#L17:2) field of the DocumentDatatype."
        },
        {
          "Name": "path",
          "Index": 2,
          "TypeName": "text",
          "IsNullable": false,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": "The path of the text document relative to the associated dump root."
        },
        {
          "Name": "ranges",
          "Index": 6,
          "TypeName": "bytea",
          "IsNullable": true,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": "A gob-encoded payload conforming to the [Ranges](https://sourcegraph.com/github.com/sourcegraph/sourcegraph@3.26/-/blob/enterprise/lib/codeintel/semantic/types.go#L14:2) field of the DocumentDatatype."
        },
        {
          "Name": "schema_version",
          "Index": 4,
          "TypeName": "integer",
          "IsNullable": false,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": "The schema version of this row - used to determine presence and encoding of data."
        }
      ],
      "Indexes": [
        {
          "Name": "lsif_data_documents_pkey",
          "IsPrimaryKey": true,
          "IsUnique": true,
          "IsExclusion": false,
          "IsDeferrable": false,
          "IndexDefinition": "CREATE UNIQUE INDEX lsif_data_documents_pkey ON lsif_data_documents USING btree (dump_id, path)",
          "ConstraintType": "p",
          "ConstraintDefinition": "PRIMARY KEY (dump_id, path)"
        },
        {
          "Name": "lsif_data_documents_dump_id_schema_version",
          "IsPrimaryKey": false,
          "IsUnique": false,
          "IsExclusion": false,
          "IsDeferrable": false,
          "IndexDefinition": "CREATE INDEX lsif_data_documents_dump_id_schema_version ON lsif_data_documents USING btree (dump_id, schema_version)",
          "ConstraintType": "",
          "ConstraintDefinition": ""
        }
      ],
      "Constraints": null,
      "Triggers": [
        {
          "Name": "lsif_data_documents_schema_versions_insert",
          "Definition": "CREATE TRIGGER lsif_data_documents_schema_versions_insert AFTER INSERT ON lsif_data_documents REFERENCING NEW TABLE AS newtab FOR EACH STATEMENT EXECUTE FUNCTION update_lsif_data_documents_schema_versions_insert()"
        }
      ]
    },
    {
      "Name": "lsif_data_documents_schema_versions",
      "Comment": "Tracks the range of schema_versions for each upload in the lsif_data_documents table.",
      "Columns": [
        {
          "Name": "dump_id",
          "Index": 1,
          "TypeName": "integer",
          "IsNullable": false,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": "The identifier of the associated dump in the lsif_uploads table."
        },
        {
          "Name": "max_schema_version",
          "Index": 3,
          "TypeName": "integer",
          "IsNullable": true,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": "An upper-bound on the `lsif_data_documents.schema_version` where `lsif_data_documents.dump_id = dump_id`."
        },
        {
          "Name": "min_schema_version",
          "Index": 2,
          "TypeName": "integer",
          "IsNullable": true,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": "A lower-bound on the `lsif_data_documents.schema_version` where `lsif_data_documents.dump_id = dump_id`."
        }
      ],
      "Indexes": [
        {
          "Name": "lsif_data_documents_schema_versions_pkey",
          "IsPrimaryKey": true,
          "IsUnique": true,
          "IsExclusion": false,
          "IsDeferrable": false,
          "IndexDefinition": "CREATE UNIQUE INDEX lsif_data_documents_schema_versions_pkey ON lsif_data_documents_schema_versions USING btree (dump_id)",
          "ConstraintType": "p",
          "ConstraintDefinition": "PRIMARY KEY (dump_id)"
        },
        {
          "Name": "lsif_data_documents_schema_versions_dump_id_schema_version_boun",
          "IsPrimaryKey": false,
          "IsUnique": false,
          "IsExclusion": false,
          "IsDeferrable": false,
          "IndexDefinition": "CREATE INDEX lsif_data_documents_schema_versions_dump_id_schema_version_boun ON lsif_data_documents_schema_versions USING btree (dump_id, min_schema_version, max_schema_version)",
          "ConstraintType": "",
          "ConstraintDefinition": ""
        }
      ],
      "Constraints": null,
      "Triggers": []
    },
    {
      "Name": "lsif_data_implementations",
      "Comment": "Associates (document, range) pairs with the implementation monikers attached to the range.",
      "Columns": [
        {
          "Name": "data",
          "Index": 4,
          "TypeName": "bytea",
          "IsNullable": true,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": "A gob-encoded payload conforming to an array of [LocationData](https://sourcegraph.com/github.com/sourcegraph/sourcegraph@3.26/-/blob/enterprise/lib/codeintel/semantic/types.go#L106:6) types."
        },
        {
          "Name": "dump_id",
          "Index": 1,
          "TypeName": "integer",
          "IsNullable": false,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": "The identifier of the associated dump in the lsif_uploads table (state=completed)."
        },
        {
          "Name": "identifier",
          "Index": 3,
          "TypeName": "text",
          "IsNullable": false,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": "The moniker identifier."
        },
        {
          "Name": "num_locations",
          "Index": 6,
          "TypeName": "integer",
          "IsNullable": false,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": "The number of locations stored in the data field."
        },
        {
          "Name": "schema_version",
          "Index": 5,
          "TypeName": "integer",
          "IsNullable": false,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": "The schema version of this row - used to determine presence and encoding of data."
        },
        {
          "Name": "scheme",
          "Index": 2,
          "TypeName": "text",
          "IsNullable": false,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": "The moniker scheme."
        }
      ],
      "Indexes": [
        {
          "Name": "lsif_data_implementations_pkey",
          "IsPrimaryKey": true,
          "IsUnique": true,
          "IsExclusion": false,
          "IsDeferrable": false,
          "IndexDefinition": "CREATE UNIQUE INDEX lsif_data_implementations_pkey ON lsif_data_implementations USING btree (dump_id, scheme, identifier)",
          "ConstraintType": "p",
          "ConstraintDefinition": "PRIMARY KEY (dump_id, scheme, identifier)"
        },
        {
          "Name": "lsif_data_implementations_dump_id_schema_version",
          "IsPrimaryKey": false,
          "IsUnique": false,
          "IsExclusion": false,
          "IsDeferrable": false,
          "IndexDefinition": "CREATE INDEX lsif_data_implementations_dump_id_schema_version ON lsif_data_implementations USING btree (dump_id, schema_version)",
          "ConstraintType": "",
          "ConstraintDefinition": ""
        }
      ],
      "Constraints": null,
      "Triggers": [
        {
          "Name": "lsif_data_implementations_schema_versions_insert",
          "Definition": "CREATE TRIGGER lsif_data_implementations_schema_versions_insert AFTER INSERT ON lsif_data_implementations REFERENCING NEW TABLE AS newtab FOR EACH STATEMENT EXECUTE FUNCTION update_lsif_data_implementations_schema_versions_insert()"
        }
      ]
    },
    {
      "Name": "lsif_data_implementations_schema_versions",
      "Comment": "Tracks the range of schema_versions for each upload in the lsif_data_implementations table.",
      "Columns": [
        {
          "Name": "dump_id",
          "Index": 1,
          "TypeName": "integer",
          "IsNullable": false,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": "The identifier of the associated dump in the lsif_uploads table."
        },
        {
          "Name": "max_schema_version",
          "Index": 3,
          "TypeName": "integer",
          "IsNullable": true,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": "An upper-bound on the `lsif_data_implementations.schema_version` where `lsif_data_implementations.dump_id = dump_id`."
        },
        {
          "Name": "min_schema_version",
          "Index": 2,
          "TypeName": "integer",
          "IsNullable": true,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": "A lower-bound on the `lsif_data_implementations.schema_version` where `lsif_data_implementations.dump_id = dump_id`."
        }
      ],
      "Indexes": [
        {
          "Name": "lsif_data_implementations_schema_versions_pkey",
          "IsPrimaryKey": true,
          "IsUnique": true,
          "IsExclusion": false,
          "IsDeferrable": false,
          "IndexDefinition": "CREATE UNIQUE INDEX lsif_data_implementations_schema_versions_pkey ON lsif_data_implementations_schema_versions USING btree (dump_id)",
          "ConstraintType": "p",
          "ConstraintDefinition": "PRIMARY KEY (dump_id)"
        },
        {
          "Name": "lsif_data_implementations_schema_versions_dump_id_schema_versio",
          "IsPrimaryKey": false,
          "IsUnique": false,
          "IsExclusion": false,
          "IsDeferrable": false,
          "IndexDefinition": "CREATE INDEX lsif_data_implementations_schema_versions_dump_id_schema_versio ON lsif_data_implementations_schema_versions USING btree (dump_id, min_schema_version, max_schema_version)",
          "ConstraintType": "",
          "ConstraintDefinition": ""
        }
      ],
      "Constraints": null,
      "Triggers": []
    },
    {
      "Name": "lsif_data_metadata",
      "Comment": "Stores the number of result chunks associated with a dump.",
      "Columns": [
        {
          "Name": "dump_id",
          "Index": 1,
          "TypeName": "integer",
          "IsNullable": false,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": "The identifier of the associated dump in the lsif_uploads table (state=completed)."
        },
        {
          "Name": "num_result_chunks",
          "Index": 2,
          "TypeName": "integer",
          "IsNullable": true,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": "A bound of populated indexes in the lsif_data_result_chunks table for the associated dump. This value is used to hash identifiers into the result chunk index to which they belong."
        }
      ],
      "Indexes": [
        {
          "Name": "lsif_data_metadata_pkey",
          "IsPrimaryKey": true,
          "IsUnique": true,
          "IsExclusion": false,
          "IsDeferrable": false,
          "IndexDefinition": "CREATE UNIQUE INDEX lsif_data_metadata_pkey ON lsif_data_metadata USING btree (dump_id)",
          "ConstraintType": "p",
          "ConstraintDefinition": "PRIMARY KEY (dump_id)"
        }
      ],
      "Constraints": null,
      "Triggers": []
    },
    {
      "Name": "lsif_data_references",
      "Comment": "Associates (document, range) pairs with the export monikers attached to the range.",
      "Columns": [
        {
          "Name": "data",
          "Index": 4,
          "TypeName": "bytea",
          "IsNullable": true,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": "A gob-encoded payload conforming to an array of [LocationData](https://sourcegraph.com/github.com/sourcegraph/sourcegraph@3.26/-/blob/enterprise/lib/codeintel/semantic/types.go#L106:6) types."
        },
        {
          "Name": "dump_id",
          "Index": 1,
          "TypeName": "integer",
          "IsNullable": false,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": "The identifier of the associated dump in the lsif_uploads table (state=completed)."
        },
        {
          "Name": "identifier",
          "Index": 3,
          "TypeName": "text",
          "IsNullable": false,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": "The moniker identifier."
        },
        {
          "Name": "num_locations",
          "Index": 6,
          "TypeName": "integer",
          "IsNullable": false,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": "The number of locations stored in the data field."
        },
        {
          "Name": "schema_version",
          "Index": 5,
          "TypeName": "integer",
          "IsNullable": false,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": "The schema version of this row - used to determine presence and encoding of data."
        },
        {
          "Name": "scheme",
          "Index": 2,
          "TypeName": "text",
          "IsNullable": false,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": "The moniker scheme."
        }
      ],
      "Indexes": [
        {
          "Name": "lsif_data_references_pkey",
          "IsPrimaryKey": true,
          "IsUnique": true,
          "IsExclusion": false,
          "IsDeferrable": false,
          "IndexDefinition": "CREATE UNIQUE INDEX lsif_data_references_pkey ON lsif_data_references USING btree (dump_id, scheme, identifier)",
          "ConstraintType": "p",
          "ConstraintDefinition": "PRIMARY KEY (dump_id, scheme, identifier)"
        },
        {
          "Name": "lsif_data_references_dump_id_schema_version",
          "IsPrimaryKey": false,
          "IsUnique": false,
          "IsExclusion": false,
          "IsDeferrable": false,
          "IndexDefinition": "CREATE INDEX lsif_data_references_dump_id_schema_version ON lsif_data_references USING btree (dump_id, schema_version)",
          "ConstraintType": "",
          "ConstraintDefinition": ""
        }
      ],
      "Constraints": null,
      "Triggers": [
        {
          "Name": "lsif_data_references_schema_versions_insert",
          "Definition": "CREATE TRIGGER lsif_data_references_schema_versions_insert AFTER INSERT ON lsif_data_references REFERENCING NEW TABLE AS newtab FOR EACH STATEMENT EXECUTE FUNCTION update_lsif_data_references_schema_versions_insert()"
        }
      ]
    },
    {
      "Name": "lsif_data_references_schema_versions",
      "Comment": "Tracks the range of schema_versions for each upload in the lsif_data_references table.",
      "Columns": [
        {
          "Name": "dump_id",
          "Index": 1,
          "TypeName": "integer",
          "IsNullable": false,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": "The identifier of the associated dump in the lsif_uploads table."
        },
        {
          "Name": "max_schema_version",
          "Index": 3,
          "TypeName": "integer",
          "IsNullable": true,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": "An upper-bound on the `lsif_data_references.schema_version` where `lsif_data_references.dump_id = dump_id`."
        },
        {
          "Name": "min_schema_version",
          "Index": 2,
          "TypeName": "integer",
          "IsNullable": true,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": "A lower-bound on the `lsif_data_references.schema_version` where `lsif_data_references.dump_id = dump_id`."
        }
      ],
      "Indexes": [
        {
          "Name": "lsif_data_references_schema_versions_pkey",
          "IsPrimaryKey": true,
          "IsUnique": true,
          "IsExclusion": false,
          "IsDeferrable": false,
          "IndexDefinition": "CREATE UNIQUE INDEX lsif_data_references_schema_versions_pkey ON lsif_data_references_schema_versions USING btree (dump_id)",
          "ConstraintType": "p",
          "ConstraintDefinition": "PRIMARY KEY (dump_id)"
        },
        {
          "Name": "lsif_data_references_schema_versions_dump_id_schema_version_bou",
          "IsPrimaryKey": false,
          "IsUnique": false,
          "IsExclusion": false,
          "IsDeferrable": false,
          "IndexDefinition": "CREATE INDEX lsif_data_references_schema_versions_dump_id_schema_version_bou ON lsif_data_references_schema_versions USING btree (dump_id, min_schema_version, max_schema_version)",
          "ConstraintType": "",
          "ConstraintDefinition": ""
        }
      ],
      "Constraints": null,
      "Triggers": []
    },
    {
      "Name": "lsif_data_result_chunks",
      "Comment": "Associates result set identifiers with the (document path, range identifier) pairs that compose the set.",
      "Columns": [
        {
          "Name": "data",
          "Index": 3,
          "TypeName": "bytea",
          "IsNullable": true,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": "A gob-encoded payload conforming to the [ResultChunkData](https://sourcegraph.com/github.com/sourcegraph/sourcegraph@3.26/-/blob/enterprise/lib/codeintel/semantic/types.go#L76:6) type."
        },
        {
          "Name": "dump_id",
          "Index": 1,
          "TypeName": "integer",
          "IsNullable": false,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": "The identifier of the associated dump in the lsif_uploads table (state=completed)."
        },
        {
          "Name": "idx",
          "Index": 2,
          "TypeName": "integer",
          "IsNullable": false,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": "The unique result chunk index within the associated dump. Every result set identifier present should hash to this index (modulo lsif_data_metadata.num_result_chunks)."
        }
      ],
      "Indexes": [
        {
          "Name": "lsif_data_result_chunks_pkey",
          "IsPrimaryKey": true,
          "IsUnique": true,
          "IsExclusion": false,
          "IsDeferrable": false,
          "IndexDefinition": "CREATE UNIQUE INDEX lsif_data_result_chunks_pkey ON lsif_data_result_chunks USING btree (dump_id, idx)",
          "ConstraintType": "p",
          "ConstraintDefinition": "PRIMARY KEY (dump_id, idx)"
        }
      ],
      "Constraints": null,
      "Triggers": []
    },
    {
      "Name": "migration_logs",
      "Comment": "",
      "Columns": [
        {
          "Name": "backfilled",
          "Index": 10,
          "TypeName": "boolean",
          "IsNullable": false,
          "Default": "false",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": ""
        },
        {
          "Name": "error_message",
          "Index": 9,
          "TypeName": "text",
          "IsNullable": true,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": ""
        },
        {
          "Name": "finished_at",
          "Index": 7,
          "TypeName": "timestamp with time zone",
          "IsNullable": true,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": ""
        },
        {
          "Name": "id",
          "Index": 1,
          "TypeName": "integer",
          "IsNullable": false,
          "Default": "nextval('migration_logs_id_seq'::regclass)",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": ""
        },
        {
          "Name": "migration_logs_schema_version",
          "Index": 2,
          "TypeName": "integer",
          "IsNullable": false,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": ""
        },
        {
          "Name": "schema",
          "Index": 3,
          "TypeName": "text",
          "IsNullable": false,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": ""
        },
        {
          "Name": "started_at",
          "Index": 6,
          "TypeName": "timestamp with time zone",
          "IsNullable": false,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": ""
        },
        {
          "Name": "success",
          "Index": 8,
          "TypeName": "boolean",
          "IsNullable": true,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": ""
        },
        {
          "Name": "up",
          "Index": 5,
          "TypeName": "boolean",
          "IsNullable": false,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": ""
        },
        {
          "Name": "version",
          "Index": 4,
          "TypeName": "integer",
          "IsNullable": false,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": ""
        }
      ],
      "Indexes": [
        {
          "Name": "migration_logs_pkey",
          "IsPrimaryKey": true,
          "IsUnique": true,
          "IsExclusion": false,
          "IsDeferrable": false,
          "IndexDefinition": "CREATE UNIQUE INDEX migration_logs_pkey ON migration_logs USING btree (id)",
          "ConstraintType": "p",
          "ConstraintDefinition": "PRIMARY KEY (id)"
        }
      ],
      "Constraints": null,
      "Triggers": []
    },
    {
      "Name": "rockskip_ancestry",
      "Comment": "",
      "Columns": [
        {
          "Name": "ancestor",
          "Index": 5,
          "TypeName": "integer",
          "IsNullable": false,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": ""
        },
        {
          "Name": "commit_id",
          "Index": 3,
          "TypeName": "character varying(40)",
          "IsNullable": false,
          "Default": "",
          "CharacterMaximumLength": 40,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": ""
        },
        {
          "Name": "height",
          "Index": 4,
          "TypeName": "integer",
          "IsNullable": false,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": ""
        },
        {
          "Name": "id",
          "Index": 1,
          "TypeName": "integer",
          "IsNullable": false,
          "Default": "nextval('rockskip_ancestry_id_seq'::regclass)",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": ""
        },
        {
          "Name": "repo_id",
          "Index": 2,
          "TypeName": "integer",
          "IsNullable": false,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": ""
        }
      ],
      "Indexes": [
        {
          "Name": "rockskip_ancestry_pkey",
          "IsPrimaryKey": true,
          "IsUnique": true,
          "IsExclusion": false,
          "IsDeferrable": false,
          "IndexDefinition": "CREATE UNIQUE INDEX rockskip_ancestry_pkey ON rockskip_ancestry USING btree (id)",
          "ConstraintType": "p",
          "ConstraintDefinition": "PRIMARY KEY (id)"
        },
        {
          "Name": "rockskip_ancestry_repo_id_commit_id_key",
          "IsPrimaryKey": false,
          "IsUnique": true,
          "IsExclusion": false,
          "IsDeferrable": false,
          "IndexDefinition": "CREATE UNIQUE INDEX rockskip_ancestry_repo_id_commit_id_key ON rockskip_ancestry USING btree (repo_id, commit_id)",
          "ConstraintType": "u",
          "ConstraintDefinition": "UNIQUE (repo_id, commit_id)"
        },
        {
          "Name": "rockskip_ancestry_repo_commit_id",
          "IsPrimaryKey": false,
          "IsUnique": false,
          "IsExclusion": false,
          "IsDeferrable": false,
          "IndexDefinition": "CREATE INDEX rockskip_ancestry_repo_commit_id ON rockskip_ancestry USING btree (repo_id, commit_id)",
          "ConstraintType": "",
          "ConstraintDefinition": ""
        }
      ],
      "Constraints": null,
      "Triggers": []
    },
    {
      "Name": "rockskip_repos",
      "Comment": "",
      "Columns": [
        {
          "Name": "id",
          "Index": 1,
          "TypeName": "integer",
          "IsNullable": false,
          "Default": "nextval('rockskip_repos_id_seq'::regclass)",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": ""
        },
        {
          "Name": "last_accessed_at",
          "Index": 3,
          "TypeName": "timestamp with time zone",
          "IsNullable": false,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": ""
        },
        {
          "Name": "repo",
          "Index": 2,
          "TypeName": "text",
          "IsNullable": false,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": ""
        }
      ],
      "Indexes": [
        {
          "Name": "rockskip_repos_pkey",
          "IsPrimaryKey": true,
          "IsUnique": true,
          "IsExclusion": false,
          "IsDeferrable": false,
          "IndexDefinition": "CREATE UNIQUE INDEX rockskip_repos_pkey ON rockskip_repos USING btree (id)",
          "ConstraintType": "p",
          "ConstraintDefinition": "PRIMARY KEY (id)"
        },
        {
          "Name": "rockskip_repos_repo_key",
          "IsPrimaryKey": false,
          "IsUnique": true,
          "IsExclusion": false,
          "IsDeferrable": false,
          "IndexDefinition": "CREATE UNIQUE INDEX rockskip_repos_repo_key ON rockskip_repos USING btree (repo)",
          "ConstraintType": "u",
          "ConstraintDefinition": "UNIQUE (repo)"
        },
        {
          "Name": "rockskip_repos_last_accessed_at",
          "IsPrimaryKey": false,
          "IsUnique": false,
          "IsExclusion": false,
          "IsDeferrable": false,
          "IndexDefinition": "CREATE INDEX rockskip_repos_last_accessed_at ON rockskip_repos USING btree (last_accessed_at)",
          "ConstraintType": "",
          "ConstraintDefinition": ""
        },
        {
          "Name": "rockskip_repos_repo",
          "IsPrimaryKey": false,
          "IsUnique": false,
          "IsExclusion": false,
          "IsDeferrable": false,
          "IndexDefinition": "CREATE INDEX rockskip_repos_repo ON rockskip_repos USING btree (repo)",
          "ConstraintType": "",
          "ConstraintDefinition": ""
        }
      ],
      "Constraints": null,
      "Triggers": []
    },
    {
      "Name": "rockskip_symbols",
      "Comment": "",
      "Columns": [
        {
          "Name": "added",
          "Index": 2,
          "TypeName": "integer[]",
          "IsNullable": false,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": ""
        },
        {
          "Name": "deleted",
          "Index": 3,
          "TypeName": "integer[]",
          "IsNullable": false,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": ""
        },
        {
          "Name": "id",
          "Index": 1,
          "TypeName": "integer",
          "IsNullable": false,
          "Default": "nextval('rockskip_symbols_id_seq'::regclass)",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": ""
        },
        {
          "Name": "name",
          "Index": 6,
          "TypeName": "text",
          "IsNullable": false,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": ""
        },
        {
          "Name": "path",
          "Index": 5,
          "TypeName": "text",
          "IsNullable": false,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": ""
        },
        {
          "Name": "repo_id",
          "Index": 4,
          "TypeName": "integer",
          "IsNullable": false,
          "Default": "",
          "CharacterMaximumLength": 0,
          "IsIdentity": false,
          "IdentityGeneration": "",
          "IsGenerated": "NEVER",
          "GenerationExpression": "",
          "Comment": ""
        }
      ],
      "Indexes": [
        {
          "Name": "rockskip_symbols_pkey",
          "IsPrimaryKey": true,
          "IsUnique": true,
          "IsExclusion": false,
          "IsDeferrable": false,
          "IndexDefinition": "CREATE UNIQUE INDEX rockskip_symbols_pkey ON rockskip_symbols USING btree (id)",
          "ConstraintType": "p",
          "ConstraintDefinition": "PRIMARY KEY (id)"
        },
        {
          "Name": "rockskip_symbols_gin",
          "IsPrimaryKey": false,
          "IsUnique": false,
          "IsExclusion": false,
          "IsDeferrable": false,
          "IndexDefinition": "CREATE INDEX rockskip_symbols_gin ON rockskip_symbols USING gin (singleton_integer(repo_id) gin__int_ops, added gin__int_ops, deleted gin__int_ops, name gin_trgm_ops, singleton(name), singleton(lower(name)), path gin_trgm_ops, singleton(path), path_prefixes(path), singleton(lower(path)), path_prefixes(lower(path)), singleton(get_file_extension(path)), singleton(get_file_extension(lower(path))))",
          "ConstraintType": "",
          "ConstraintDefinition": ""
        },
        {
          "Name": "rockskip_symbols_repo_id_path_name",
          "IsPrimaryKey": false,
          "IsUnique": false,
          "IsExclusion": false,
          "IsDeferrable": false,
          "IndexDefinition": "CREATE INDEX rockskip_symbols_repo_id_path_name ON rockskip_symbols USING btree (repo_id, path, name)",
          "ConstraintType": "",
          "ConstraintDefinition": ""
        }
      ],
      "Constraints": null,
      "Triggers": []
    }
  ],
  "Views": null
}