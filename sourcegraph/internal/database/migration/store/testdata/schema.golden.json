{"public":{"extensions":null,"enums":[{"name":"mpaa_rating","labels":["G","PG","PG-13","R","NC-17"]}],"functions":[{"name":"_group_concat","definition":"CREATE OR REPLACE FUNCTION public._group_concat(text, text)\n RETURNS text\n LANGUAGE sql\n IMMUTABLE\nAS $function$\nSELECT CASE\n  WHEN $2 IS NULL THEN $1\n  WHEN $1 IS NULL THEN $2\n  ELSE $1 || ', ' || $2\nEND\n$function$\n"},{"name":"film_in_stock","definition":"CREATE OR REPLACE FUNCTION public.film_in_stock(p_film_id integer, p_store_id integer, OUT p_film_count integer)\n RETURNS SETOF integer\n LANGUAGE sql\nAS $function$\n     SELECT inventory_id\n     FROM inventory\n     WHERE film_id = $1\n     AND store_id = $2\n     AND inventory_in_stock(inventory_id);\n$function$\n"},{"name":"film_not_in_stock","definition":"CREATE OR REPLACE FUNCTION public.film_not_in_stock(p_film_id integer, p_store_id integer, OUT p_film_count integer)\n RETURNS SETOF integer\n LANGUAGE sql\nAS $function$\n    SELECT inventory_id\n    FROM inventory\n    WHERE film_id = $1\n    AND store_id = $2\n    AND NOT inventory_in_stock(inventory_id);\n$function$\n"},{"name":"get_customer_balance","definition":"CREATE OR REPLACE FUNCTION public.get_customer_balance(p_customer_id integer, p_effective_date timestamp without time zone)\n RETURNS numeric\n LANGUAGE plpgsql\nAS $function$\n       --#OK, WE NEED TO CALCULATE THE CURRENT BALANCE GIVEN A CUSTOMER_ID AND A DATE\n       --#THAT WE WANT THE BALANCE TO BE EFFECTIVE FOR. THE BALANCE IS:\n       --#   1) RENTAL FEES FOR ALL PREVIOUS RENTALS\n       --#   2) ONE DOLLAR FOR EVERY DAY THE PREVIOUS RENTALS ARE OVERDUE\n       --#   3) IF A FILM IS MORE THAN RENTAL_DURATION * 2 OVERDUE, CHARGE THE REPLACEMENT_COST\n       --#   4) SUBTRACT ALL PAYMENTS MADE BEFORE THE DATE SPECIFIED\nDECLARE\n    v_rentfees DECIMAL(5,2); --#FEES PAID TO RENT THE VIDEOS INITIALLY\n    v_overfees INTEGER;      --#LATE FEES FOR PRIOR RENTALS\n    v_payments DECIMAL(5,2); --#SUM OF PAYMENTS MADE PREVIOUSLY\nBEGIN\n    SELECT COALESCE(SUM(film.rental_rate),0) INTO v_rentfees\n    FROM film, inventory, rental\n    WHERE film.film_id = inventory.film_id\n      AND inventory.inventory_id = rental.inventory_id\n      AND rental.rental_date \u003c= p_effective_date\n      AND rental.customer_id = p_customer_id;\n    SELECT COALESCE(SUM(IF((rental.return_date - rental.rental_date) \u003e (film.rental_duration * '1 day'::interval),\n        ((rental.return_date - rental.rental_date) - (film.rental_duration * '1 day'::interval)),0)),0) INTO v_overfees\n    FROM rental, inventory, film\n    WHERE film.film_id = inventory.film_id\n      AND inventory.inventory_id = rental.inventory_id\n      AND rental.rental_date \u003c= p_effective_date\n      AND rental.customer_id = p_customer_id;\n    SELECT COALESCE(SUM(payment.amount),0) INTO v_payments\n    FROM payment\n    WHERE payment.payment_date \u003c= p_effective_date\n    AND payment.customer_id = p_customer_id;\n    RETURN v_rentfees + v_overfees - v_payments;\nEND\n$function$\n"},{"name":"inventory_held_by_customer","definition":"CREATE OR REPLACE FUNCTION public.inventory_held_by_customer(p_inventory_id integer)\n RETURNS integer\n LANGUAGE plpgsql\nAS $function$\nDECLARE\n    v_customer_id INTEGER;\nBEGIN\n  SELECT customer_id INTO v_customer_id\n  FROM rental\n  WHERE return_date IS NULL\n  AND inventory_id = p_inventory_id;\n  RETURN v_customer_id;\nEND $function$\n"},{"name":"inventory_in_stock","definition":"CREATE OR REPLACE FUNCTION public.inventory_in_stock(p_inventory_id integer)\n RETURNS boolean\n LANGUAGE plpgsql\nAS $function$\nDECLARE\n    v_rentals INTEGER;\n    v_out     INTEGER;\nBEGIN\n    -- AN ITEM IS IN-STOCK IF THERE ARE EITHER NO ROWS IN THE rental TABLE\n    -- FOR THE ITEM OR ALL ROWS HAVE return_date POPULATED\n    SELECT count(*) INTO v_rentals\n    FROM rental\n    WHERE inventory_id = p_inventory_id;\n    IF v_rentals = 0 THEN\n      RETURN TRUE;\n    END IF;\n    SELECT COUNT(rental_id) INTO v_out\n    FROM inventory LEFT JOIN rental USING(inventory_id)\n    WHERE inventory.inventory_id = p_inventory_id\n    AND rental.return_date IS NULL;\n    IF v_out \u003e 0 THEN\n      RETURN FALSE;\n    ELSE\n      RETURN TRUE;\n    END IF;\nEND $function$\n"},{"name":"last_day","definition":"CREATE OR REPLACE FUNCTION public.last_day(timestamp without time zone)\n RETURNS date\n LANGUAGE sql\n IMMUTABLE STRICT\nAS $function$\n  SELECT CASE\n    WHEN EXTRACT(MONTH FROM $1) = 12 THEN\n      (((EXTRACT(YEAR FROM $1) + 1) operator(pg_catalog.||) '-01-01')::date - INTERVAL '1 day')::date\n    ELSE\n      ((EXTRACT(YEAR FROM $1) operator(pg_catalog.||) '-' operator(pg_catalog.||) (EXTRACT(MONTH FROM $1) + 1) operator(pg_catalog.||) '-01')::date - INTERVAL '1 day')::date\n    END\n$function$\n"},{"name":"last_updated","definition":"CREATE OR REPLACE FUNCTION public.last_updated()\n RETURNS trigger\n LANGUAGE plpgsql\nAS $function$\nBEGIN\n    NEW.last_update = CURRENT_TIMESTAMP;\n    RETURN NEW;\nEND $function$\n"},{"name":"rewards_report","definition":"CREATE OR REPLACE FUNCTION public.rewards_report(min_monthly_purchases integer, min_dollar_amount_purchased numeric)\n RETURNS SETOF customer\n LANGUAGE plpgsql\n SECURITY DEFINER\nAS $function$\nDECLARE\n    last_month_start DATE;\n    last_month_end DATE;\nrr RECORD;\ntmpSQL TEXT;\nBEGIN\n    /* Some sanity checks... */\n    IF min_monthly_purchases = 0 THEN\n        RAISE EXCEPTION 'Minimum monthly purchases parameter must be \u003e 0';\n    END IF;\n    IF min_dollar_amount_purchased = 0.00 THEN\n        RAISE EXCEPTION 'Minimum monthly dollar amount purchased parameter must be \u003e $0.00';\n    END IF;\n    last_month_start := CURRENT_DATE - '3 month'::interval;\n    last_month_start := to_date((extract(YEAR FROM last_month_start) || '-' || extract(MONTH FROM last_month_start) || '-01'),'YYYY-MM-DD');\n    last_month_end := LAST_DAY(last_month_start);\n    /*\n    Create a temporary storage area for Customer IDs.\n    */\n    CREATE TEMPORARY TABLE tmpCustomer (customer_id INTEGER NOT NULL PRIMARY KEY);\n    /*\n    Find all customers meeting the monthly purchase requirements\n    */\n    tmpSQL := 'INSERT INTO tmpCustomer (customer_id)\n        SELECT p.customer_id\n        FROM payment AS p\n        WHERE DATE(p.payment_date) BETWEEN '||quote_literal(last_month_start) ||' AND '|| quote_literal(last_month_end) || '\n        GROUP BY customer_id\n        HAVING SUM(p.amount) \u003e '|| min_dollar_amount_purchased || '\n        AND COUNT(customer_id) \u003e ' ||min_monthly_purchases ;\n    EXECUTE tmpSQL;\n    /*\n    Output ALL customer information of matching rewardees.\n    Customize output as needed.\n    */\n    FOR rr IN EXECUTE 'SELECT c.* FROM tmpCustomer AS t INNER JOIN customer AS c ON t.customer_id = c.customer_id' LOOP\n        RETURN NEXT rr;\n    END LOOP;\n    /* Clean up */\n    tmpSQL := 'DROP TABLE tmpCustomer';\n    EXECUTE tmpSQL;\nRETURN;\nEND\n$function$\n"}],"sequences":[{"name":"actor_actor_id_seq","typeName":"bigint","startValue":1,"minimumValue":1,"maximumValue":9223372036854775807,"increment":1,"cycleOption":"NO"},{"name":"address_address_id_seq","typeName":"bigint","startValue":1,"minimumValue":1,"maximumValue":9223372036854775807,"increment":1,"cycleOption":"NO"},{"name":"category_category_id_seq","typeName":"bigint","startValue":1,"minimumValue":1,"maximumValue":9223372036854775807,"increment":1,"cycleOption":"NO"},{"name":"city_city_id_seq","typeName":"bigint","startValue":1,"minimumValue":1,"maximumValue":9223372036854775807,"increment":1,"cycleOption":"NO"},{"name":"country_country_id_seq","typeName":"bigint","startValue":1,"minimumValue":1,"maximumValue":9223372036854775807,"increment":1,"cycleOption":"NO"},{"name":"customer_customer_id_seq","typeName":"bigint","startValue":1,"minimumValue":1,"maximumValue":9223372036854775807,"increment":1,"cycleOption":"NO"},{"name":"film_film_id_seq","typeName":"bigint","startValue":1,"minimumValue":1,"maximumValue":9223372036854775807,"increment":1,"cycleOption":"NO"},{"name":"inventory_inventory_id_seq","typeName":"bigint","startValue":1,"minimumValue":1,"maximumValue":9223372036854775807,"increment":1,"cycleOption":"NO"},{"name":"language_language_id_seq","typeName":"bigint","startValue":1,"minimumValue":1,"maximumValue":9223372036854775807,"increment":1,"cycleOption":"NO"},{"name":"payment_payment_id_seq","typeName":"bigint","startValue":1,"minimumValue":1,"maximumValue":9223372036854775807,"increment":1,"cycleOption":"NO"},{"name":"rental_rental_id_seq","typeName":"bigint","startValue":1,"minimumValue":1,"maximumValue":9223372036854775807,"increment":1,"cycleOption":"NO"},{"name":"staff_staff_id_seq","typeName":"bigint","startValue":1,"minimumValue":1,"maximumValue":9223372036854775807,"increment":1,"cycleOption":"NO"},{"name":"store_store_id_seq","typeName":"bigint","startValue":1,"minimumValue":1,"maximumValue":9223372036854775807,"increment":1,"cycleOption":"NO"}],"tables":[{"name":"actor","comment":"","columns":[{"name":"actor_id","index":1,"typeName":"integer","isNullable":false,"default":"nextval('actor_actor_id_seq'::regclass)","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"first_name","index":2,"typeName":"character varying(45)","isNullable":false,"default":"","characterMaximumLength":45,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"last_name","index":3,"typeName":"character varying(45)","isNullable":false,"default":"","characterMaximumLength":45,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"last_update","index":4,"typeName":"timestamp without time zone","isNullable":false,"default":"now()","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""}],"indexes":[{"name":"actor_pkey","isPrimaryKey":true,"isUnique":true,"isExclusion":false,"isDeferrable":false,"indexDefinition":"CREATE UNIQUE INDEX actor_pkey ON actor USING btree (actor_id)","constraintType":"p","constraintDefinition":"PRIMARY KEY (actor_id)"},{"name":"idx_actor_last_name","isPrimaryKey":false,"isUnique":false,"isExclusion":false,"isDeferrable":false,"indexDefinition":"CREATE INDEX idx_actor_last_name ON actor USING btree (last_name)","constraintType":"","constraintDefinition":""}],"constraints":null,"triggers":[{"name":"last_updated","definition":"CREATE TRIGGER last_updated BEFORE UPDATE ON actor FOR EACH ROW EXECUTE FUNCTION last_updated()"}]},{"name":"address","comment":"","columns":[{"name":"address","index":2,"typeName":"character varying(50)","isNullable":false,"default":"","characterMaximumLength":50,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"address2","index":3,"typeName":"character varying(50)","isNullable":true,"default":"","characterMaximumLength":50,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"address_id","index":1,"typeName":"integer","isNullable":false,"default":"nextval('address_address_id_seq'::regclass)","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"city_id","index":5,"typeName":"smallint","isNullable":false,"default":"","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"district","index":4,"typeName":"character varying(20)","isNullable":false,"default":"","characterMaximumLength":20,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"last_update","index":8,"typeName":"timestamp without time zone","isNullable":false,"default":"now()","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"phone","index":7,"typeName":"character varying(20)","isNullable":false,"default":"","characterMaximumLength":20,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"postal_code","index":6,"typeName":"character varying(10)","isNullable":true,"default":"","characterMaximumLength":10,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""}],"indexes":[{"name":"address_pkey","isPrimaryKey":true,"isUnique":true,"isExclusion":false,"isDeferrable":false,"indexDefinition":"CREATE UNIQUE INDEX address_pkey ON address USING btree (address_id)","constraintType":"p","constraintDefinition":"PRIMARY KEY (address_id)"},{"name":"idx_fk_city_id","isPrimaryKey":false,"isUnique":false,"isExclusion":false,"isDeferrable":false,"indexDefinition":"CREATE INDEX idx_fk_city_id ON address USING btree (city_id)","constraintType":"","constraintDefinition":""}],"constraints":[{"name":"fk_address_city","constraintType":"f","refTableName":"city","isDeferrable":false,"constraintDefinition":"FOREIGN KEY (city_id) REFERENCES city(city_id)"}],"triggers":[{"name":"last_updated","definition":"CREATE TRIGGER last_updated BEFORE UPDATE ON address FOR EACH ROW EXECUTE FUNCTION last_updated()"}]},{"name":"category","comment":"","columns":[{"name":"category_id","index":1,"typeName":"integer","isNullable":false,"default":"nextval('category_category_id_seq'::regclass)","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"last_update","index":3,"typeName":"timestamp without time zone","isNullable":false,"default":"now()","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"name","index":2,"typeName":"character varying(25)","isNullable":false,"default":"","characterMaximumLength":25,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""}],"indexes":[{"name":"category_pkey","isPrimaryKey":true,"isUnique":true,"isExclusion":false,"isDeferrable":false,"indexDefinition":"CREATE UNIQUE INDEX category_pkey ON category USING btree (category_id)","constraintType":"p","constraintDefinition":"PRIMARY KEY (category_id)"}],"constraints":null,"triggers":[{"name":"last_updated","definition":"CREATE TRIGGER last_updated BEFORE UPDATE ON category FOR EACH ROW EXECUTE FUNCTION last_updated()"}]},{"name":"city","comment":"","columns":[{"name":"city","index":2,"typeName":"character varying(50)","isNullable":false,"default":"","characterMaximumLength":50,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"city_id","index":1,"typeName":"integer","isNullable":false,"default":"nextval('city_city_id_seq'::regclass)","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"country_id","index":3,"typeName":"smallint","isNullable":false,"default":"","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"last_update","index":4,"typeName":"timestamp without time zone","isNullable":false,"default":"now()","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""}],"indexes":[{"name":"city_pkey","isPrimaryKey":true,"isUnique":true,"isExclusion":false,"isDeferrable":false,"indexDefinition":"CREATE UNIQUE INDEX city_pkey ON city USING btree (city_id)","constraintType":"p","constraintDefinition":"PRIMARY KEY (city_id)"},{"name":"idx_fk_country_id","isPrimaryKey":false,"isUnique":false,"isExclusion":false,"isDeferrable":false,"indexDefinition":"CREATE INDEX idx_fk_country_id ON city USING btree (country_id)","constraintType":"","constraintDefinition":""}],"constraints":[{"name":"fk_city","constraintType":"f","refTableName":"country","isDeferrable":false,"constraintDefinition":"FOREIGN KEY (country_id) REFERENCES country(country_id)"}],"triggers":[{"name":"last_updated","definition":"CREATE TRIGGER last_updated BEFORE UPDATE ON city FOR EACH ROW EXECUTE FUNCTION last_updated()"}]},{"name":"country","comment":"","columns":[{"name":"country","index":2,"typeName":"character varying(50)","isNullable":false,"default":"","characterMaximumLength":50,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"country_id","index":1,"typeName":"integer","isNullable":false,"default":"nextval('country_country_id_seq'::regclass)","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"last_update","index":3,"typeName":"timestamp without time zone","isNullable":false,"default":"now()","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""}],"indexes":[{"name":"country_pkey","isPrimaryKey":true,"isUnique":true,"isExclusion":false,"isDeferrable":false,"indexDefinition":"CREATE UNIQUE INDEX country_pkey ON country USING btree (country_id)","constraintType":"p","constraintDefinition":"PRIMARY KEY (country_id)"}],"constraints":null,"triggers":[{"name":"last_updated","definition":"CREATE TRIGGER last_updated BEFORE UPDATE ON country FOR EACH ROW EXECUTE FUNCTION last_updated()"}]},{"name":"customer","comment":"","columns":[{"name":"active","index":10,"typeName":"integer","isNullable":true,"default":"","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"activebool","index":7,"typeName":"boolean","isNullable":false,"default":"true","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"address_id","index":6,"typeName":"smallint","isNullable":false,"default":"","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"create_date","index":8,"typeName":"date","isNullable":false,"default":"('now'::text)::date","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"customer_id","index":1,"typeName":"integer","isNullable":false,"default":"nextval('customer_customer_id_seq'::regclass)","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"email","index":5,"typeName":"character varying(50)","isNullable":true,"default":"","characterMaximumLength":50,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"first_name","index":3,"typeName":"character varying(45)","isNullable":false,"default":"","characterMaximumLength":45,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"last_name","index":4,"typeName":"character varying(45)","isNullable":false,"default":"","characterMaximumLength":45,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"last_update","index":9,"typeName":"timestamp without time zone","isNullable":true,"default":"now()","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"store_id","index":2,"typeName":"smallint","isNullable":false,"default":"","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""}],"indexes":[{"name":"customer_pkey","isPrimaryKey":true,"isUnique":true,"isExclusion":false,"isDeferrable":false,"indexDefinition":"CREATE UNIQUE INDEX customer_pkey ON customer USING btree (customer_id)","constraintType":"p","constraintDefinition":"PRIMARY KEY (customer_id)"},{"name":"idx_fk_address_id","isPrimaryKey":false,"isUnique":false,"isExclusion":false,"isDeferrable":false,"indexDefinition":"CREATE INDEX idx_fk_address_id ON customer USING btree (address_id)","constraintType":"","constraintDefinition":""},{"name":"idx_fk_store_id","isPrimaryKey":false,"isUnique":false,"isExclusion":false,"isDeferrable":false,"indexDefinition":"CREATE INDEX idx_fk_store_id ON customer USING btree (store_id)","constraintType":"","constraintDefinition":""},{"name":"idx_last_name","isPrimaryKey":false,"isUnique":false,"isExclusion":false,"isDeferrable":false,"indexDefinition":"CREATE INDEX idx_last_name ON customer USING btree (last_name)","constraintType":"","constraintDefinition":""}],"constraints":[{"name":"customer_address_id_fkey","constraintType":"f","refTableName":"address","isDeferrable":false,"constraintDefinition":"FOREIGN KEY (address_id) REFERENCES address(address_id) ON UPDATE CASCADE ON DELETE RESTRICT"}],"triggers":[{"name":"last_updated","definition":"CREATE TRIGGER last_updated BEFORE UPDATE ON customer FOR EACH ROW EXECUTE FUNCTION last_updated()"}]},{"name":"film","comment":"","columns":[{"name":"description","index":3,"typeName":"text","isNullable":true,"default":"","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"film_id","index":1,"typeName":"integer","isNullable":false,"default":"nextval('film_film_id_seq'::regclass)","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"fulltext","index":13,"typeName":"tsvector","isNullable":false,"default":"","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"language_id","index":5,"typeName":"smallint","isNullable":false,"default":"","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"last_update","index":11,"typeName":"timestamp without time zone","isNullable":false,"default":"now()","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"length","index":8,"typeName":"smallint","isNullable":true,"default":"","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"rating","index":10,"typeName":"mpaa_rating","isNullable":true,"default":"'G'::mpaa_rating","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"release_year","index":4,"typeName":"integer","isNullable":true,"default":"","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"rental_duration","index":6,"typeName":"smallint","isNullable":false,"default":"3","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"rental_rate","index":7,"typeName":"numeric","isNullable":false,"default":"4.99","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"replacement_cost","index":9,"typeName":"numeric","isNullable":false,"default":"19.99","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"special_features","index":12,"typeName":"text[]","isNullable":true,"default":"","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"title","index":2,"typeName":"character varying(255)","isNullable":false,"default":"","characterMaximumLength":255,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""}],"indexes":[{"name":"film_fulltext_idx","isPrimaryKey":false,"isUnique":false,"isExclusion":false,"isDeferrable":false,"indexDefinition":"CREATE INDEX film_fulltext_idx ON film USING gist (fulltext)","constraintType":"","constraintDefinition":""},{"name":"film_pkey","isPrimaryKey":true,"isUnique":true,"isExclusion":false,"isDeferrable":false,"indexDefinition":"CREATE UNIQUE INDEX film_pkey ON film USING btree (film_id)","constraintType":"p","constraintDefinition":"PRIMARY KEY (film_id)"},{"name":"idx_fk_language_id","isPrimaryKey":false,"isUnique":false,"isExclusion":false,"isDeferrable":false,"indexDefinition":"CREATE INDEX idx_fk_language_id ON film USING btree (language_id)","constraintType":"","constraintDefinition":""},{"name":"idx_title","isPrimaryKey":false,"isUnique":false,"isExclusion":false,"isDeferrable":false,"indexDefinition":"CREATE INDEX idx_title ON film USING btree (title)","constraintType":"","constraintDefinition":""}],"constraints":[{"name":"film_language_id_fkey","constraintType":"f","refTableName":"language","isDeferrable":false,"constraintDefinition":"FOREIGN KEY (language_id) REFERENCES language(language_id) ON UPDATE CASCADE ON DELETE RESTRICT"}],"triggers":[{"name":"film_fulltext_trigger","definition":"CREATE TRIGGER film_fulltext_trigger BEFORE INSERT OR UPDATE ON film FOR EACH ROW EXECUTE FUNCTION tsvector_update_trigger('fulltext', 'pg_catalog.english', 'title', 'description')"},{"name":"last_updated","definition":"CREATE TRIGGER last_updated BEFORE UPDATE ON film FOR EACH ROW EXECUTE FUNCTION last_updated()"}]},{"name":"film_actor","comment":"","columns":[{"name":"actor_id","index":1,"typeName":"smallint","isNullable":false,"default":"","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"film_id","index":2,"typeName":"smallint","isNullable":false,"default":"","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"last_update","index":3,"typeName":"timestamp without time zone","isNullable":false,"default":"now()","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""}],"indexes":[{"name":"film_actor_pkey","isPrimaryKey":true,"isUnique":true,"isExclusion":false,"isDeferrable":false,"indexDefinition":"CREATE UNIQUE INDEX film_actor_pkey ON film_actor USING btree (actor_id, film_id)","constraintType":"p","constraintDefinition":"PRIMARY KEY (actor_id, film_id)"},{"name":"idx_fk_film_id","isPrimaryKey":false,"isUnique":false,"isExclusion":false,"isDeferrable":false,"indexDefinition":"CREATE INDEX idx_fk_film_id ON film_actor USING btree (film_id)","constraintType":"","constraintDefinition":""}],"constraints":[{"name":"film_actor_actor_id_fkey","constraintType":"f","refTableName":"actor","isDeferrable":false,"constraintDefinition":"FOREIGN KEY (actor_id) REFERENCES actor(actor_id) ON UPDATE CASCADE ON DELETE RESTRICT"},{"name":"film_actor_film_id_fkey","constraintType":"f","refTableName":"film","isDeferrable":false,"constraintDefinition":"FOREIGN KEY (film_id) REFERENCES film(film_id) ON UPDATE CASCADE ON DELETE RESTRICT"}],"triggers":[{"name":"last_updated","definition":"CREATE TRIGGER last_updated BEFORE UPDATE ON film_actor FOR EACH ROW EXECUTE FUNCTION last_updated()"}]},{"name":"film_category","comment":"","columns":[{"name":"category_id","index":2,"typeName":"smallint","isNullable":false,"default":"","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"film_id","index":1,"typeName":"smallint","isNullable":false,"default":"","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"last_update","index":3,"typeName":"timestamp without time zone","isNullable":false,"default":"now()","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""}],"indexes":[{"name":"film_category_pkey","isPrimaryKey":true,"isUnique":true,"isExclusion":false,"isDeferrable":false,"indexDefinition":"CREATE UNIQUE INDEX film_category_pkey ON film_category USING btree (film_id, category_id)","constraintType":"p","constraintDefinition":"PRIMARY KEY (film_id, category_id)"}],"constraints":[{"name":"film_category_category_id_fkey","constraintType":"f","refTableName":"category","isDeferrable":false,"constraintDefinition":"FOREIGN KEY (category_id) REFERENCES category(category_id) ON UPDATE CASCADE ON DELETE RESTRICT"},{"name":"film_category_film_id_fkey","constraintType":"f","refTableName":"film","isDeferrable":false,"constraintDefinition":"FOREIGN KEY (film_id) REFERENCES film(film_id) ON UPDATE CASCADE ON DELETE RESTRICT"}],"triggers":[{"name":"last_updated","definition":"CREATE TRIGGER last_updated BEFORE UPDATE ON film_category FOR EACH ROW EXECUTE FUNCTION last_updated()"}]},{"name":"inventory","comment":"","columns":[{"name":"film_id","index":2,"typeName":"smallint","isNullable":false,"default":"","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"inventory_id","index":1,"typeName":"integer","isNullable":false,"default":"nextval('inventory_inventory_id_seq'::regclass)","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"last_update","index":4,"typeName":"timestamp without time zone","isNullable":false,"default":"now()","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"store_id","index":3,"typeName":"smallint","isNullable":false,"default":"","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""}],"indexes":[{"name":"idx_store_id_film_id","isPrimaryKey":false,"isUnique":false,"isExclusion":false,"isDeferrable":false,"indexDefinition":"CREATE INDEX idx_store_id_film_id ON inventory USING btree (store_id, film_id)","constraintType":"","constraintDefinition":""},{"name":"inventory_pkey","isPrimaryKey":true,"isUnique":true,"isExclusion":false,"isDeferrable":false,"indexDefinition":"CREATE UNIQUE INDEX inventory_pkey ON inventory USING btree (inventory_id)","constraintType":"p","constraintDefinition":"PRIMARY KEY (inventory_id)"}],"constraints":[{"name":"inventory_film_id_fkey","constraintType":"f","refTableName":"film","isDeferrable":false,"constraintDefinition":"FOREIGN KEY (film_id) REFERENCES film(film_id) ON UPDATE CASCADE ON DELETE RESTRICT"}],"triggers":[{"name":"last_updated","definition":"CREATE TRIGGER last_updated BEFORE UPDATE ON inventory FOR EACH ROW EXECUTE FUNCTION last_updated()"}]},{"name":"language","comment":"","columns":[{"name":"language_id","index":1,"typeName":"integer","isNullable":false,"default":"nextval('language_language_id_seq'::regclass)","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"last_update","index":3,"typeName":"timestamp without time zone","isNullable":false,"default":"now()","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"name","index":2,"typeName":"character(20)","isNullable":false,"default":"","characterMaximumLength":20,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""}],"indexes":[{"name":"language_pkey","isPrimaryKey":true,"isUnique":true,"isExclusion":false,"isDeferrable":false,"indexDefinition":"CREATE UNIQUE INDEX language_pkey ON language USING btree (language_id)","constraintType":"p","constraintDefinition":"PRIMARY KEY (language_id)"}],"constraints":null,"triggers":[{"name":"last_updated","definition":"CREATE TRIGGER last_updated BEFORE UPDATE ON language FOR EACH ROW EXECUTE FUNCTION last_updated()"}]},{"name":"payment","comment":"","columns":[{"name":"amount","index":5,"typeName":"numeric","isNullable":false,"default":"","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"customer_id","index":2,"typeName":"smallint","isNullable":false,"default":"","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"payment_date","index":6,"typeName":"timestamp without time zone","isNullable":false,"default":"","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"payment_id","index":1,"typeName":"integer","isNullable":false,"default":"nextval('payment_payment_id_seq'::regclass)","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"rental_id","index":4,"typeName":"integer","isNullable":false,"default":"","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"staff_id","index":3,"typeName":"smallint","isNullable":false,"default":"","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""}],"indexes":[{"name":"idx_fk_customer_id","isPrimaryKey":false,"isUnique":false,"isExclusion":false,"isDeferrable":false,"indexDefinition":"CREATE INDEX idx_fk_customer_id ON payment USING btree (customer_id)","constraintType":"","constraintDefinition":""},{"name":"idx_fk_rental_id","isPrimaryKey":false,"isUnique":false,"isExclusion":false,"isDeferrable":false,"indexDefinition":"CREATE INDEX idx_fk_rental_id ON payment USING btree (rental_id)","constraintType":"","constraintDefinition":""},{"name":"idx_fk_staff_id","isPrimaryKey":false,"isUnique":false,"isExclusion":false,"isDeferrable":false,"indexDefinition":"CREATE INDEX idx_fk_staff_id ON payment USING btree (staff_id)","constraintType":"","constraintDefinition":""},{"name":"payment_pkey","isPrimaryKey":true,"isUnique":true,"isExclusion":false,"isDeferrable":false,"indexDefinition":"CREATE UNIQUE INDEX payment_pkey ON payment USING btree (payment_id)","constraintType":"p","constraintDefinition":"PRIMARY KEY (payment_id)"}],"constraints":[{"name":"payment_customer_id_fkey","constraintType":"f","refTableName":"customer","isDeferrable":false,"constraintDefinition":"FOREIGN KEY (customer_id) REFERENCES customer(customer_id) ON UPDATE CASCADE ON DELETE RESTRICT"},{"name":"payment_rental_id_fkey","constraintType":"f","refTableName":"rental","isDeferrable":false,"constraintDefinition":"FOREIGN KEY (rental_id) REFERENCES rental(rental_id) ON UPDATE CASCADE ON DELETE SET NULL"},{"name":"payment_staff_id_fkey","constraintType":"f","refTableName":"staff","isDeferrable":false,"constraintDefinition":"FOREIGN KEY (staff_id) REFERENCES staff(staff_id) ON UPDATE CASCADE ON DELETE RESTRICT"}],"triggers":[]},{"name":"rental","comment":"","columns":[{"name":"customer_id","index":4,"typeName":"smallint","isNullable":false,"default":"","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"inventory_id","index":3,"typeName":"integer","isNullable":false,"default":"","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"last_update","index":7,"typeName":"timestamp without time zone","isNullable":false,"default":"now()","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"rental_date","index":2,"typeName":"timestamp without time zone","isNullable":false,"default":"","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"rental_id","index":1,"typeName":"integer","isNullable":false,"default":"nextval('rental_rental_id_seq'::regclass)","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"return_date","index":5,"typeName":"timestamp without time zone","isNullable":true,"default":"","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"staff_id","index":6,"typeName":"smallint","isNullable":false,"default":"","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""}],"indexes":[{"name":"idx_fk_inventory_id","isPrimaryKey":false,"isUnique":false,"isExclusion":false,"isDeferrable":false,"indexDefinition":"CREATE INDEX idx_fk_inventory_id ON rental USING btree (inventory_id)","constraintType":"","constraintDefinition":""},{"name":"idx_unq_rental_rental_date_inventory_id_customer_id","isPrimaryKey":false,"isUnique":true,"isExclusion":false,"isDeferrable":false,"indexDefinition":"CREATE UNIQUE INDEX idx_unq_rental_rental_date_inventory_id_customer_id ON rental USING btree (rental_date, inventory_id, customer_id)","constraintType":"","constraintDefinition":""},{"name":"rental_pkey","isPrimaryKey":true,"isUnique":true,"isExclusion":false,"isDeferrable":false,"indexDefinition":"CREATE UNIQUE INDEX rental_pkey ON rental USING btree (rental_id)","constraintType":"p","constraintDefinition":"PRIMARY KEY (rental_id)"}],"constraints":[{"name":"rental_customer_id_fkey","constraintType":"f","refTableName":"customer","isDeferrable":false,"constraintDefinition":"FOREIGN KEY (customer_id) REFERENCES customer(customer_id) ON UPDATE CASCADE ON DELETE RESTRICT"},{"name":"rental_inventory_id_fkey","constraintType":"f","refTableName":"inventory","isDeferrable":false,"constraintDefinition":"FOREIGN KEY (inventory_id) REFERENCES inventory(inventory_id) ON UPDATE CASCADE ON DELETE RESTRICT"},{"name":"rental_staff_id_key","constraintType":"f","refTableName":"staff","isDeferrable":false,"constraintDefinition":"FOREIGN KEY (staff_id) REFERENCES staff(staff_id)"}],"triggers":[{"name":"last_updated","definition":"CREATE TRIGGER last_updated BEFORE UPDATE ON rental FOR EACH ROW EXECUTE FUNCTION last_updated()"}]},{"name":"staff","comment":"","columns":[{"name":"active","index":7,"typeName":"boolean","isNullable":false,"default":"true","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"address_id","index":4,"typeName":"smallint","isNullable":false,"default":"","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"email","index":5,"typeName":"character varying(50)","isNullable":true,"default":"","characterMaximumLength":50,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"first_name","index":2,"typeName":"character varying(45)","isNullable":false,"default":"","characterMaximumLength":45,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"last_name","index":3,"typeName":"character varying(45)","isNullable":false,"default":"","characterMaximumLength":45,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"last_update","index":10,"typeName":"timestamp without time zone","isNullable":false,"default":"now()","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"password","index":9,"typeName":"character varying(40)","isNullable":true,"default":"","characterMaximumLength":40,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"picture","index":11,"typeName":"bytea","isNullable":true,"default":"","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"staff_id","index":1,"typeName":"integer","isNullable":false,"default":"nextval('staff_staff_id_seq'::regclass)","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"store_id","index":6,"typeName":"smallint","isNullable":false,"default":"","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"username","index":8,"typeName":"character varying(16)","isNullable":false,"default":"","characterMaximumLength":16,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""}],"indexes":[{"name":"staff_pkey","isPrimaryKey":true,"isUnique":true,"isExclusion":false,"isDeferrable":false,"indexDefinition":"CREATE UNIQUE INDEX staff_pkey ON staff USING btree (staff_id)","constraintType":"p","constraintDefinition":"PRIMARY KEY (staff_id)"}],"constraints":[{"name":"staff_address_id_fkey","constraintType":"f","refTableName":"address","isDeferrable":false,"constraintDefinition":"FOREIGN KEY (address_id) REFERENCES address(address_id) ON UPDATE CASCADE ON DELETE RESTRICT"}],"triggers":[{"name":"last_updated","definition":"CREATE TRIGGER last_updated BEFORE UPDATE ON staff FOR EACH ROW EXECUTE FUNCTION last_updated()"}]},{"name":"store","comment":"","columns":[{"name":"address_id","index":3,"typeName":"smallint","isNullable":false,"default":"","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"last_update","index":4,"typeName":"timestamp without time zone","isNullable":false,"default":"now()","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"manager_staff_id","index":2,"typeName":"smallint","isNullable":false,"default":"","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""},{"name":"store_id","index":1,"typeName":"integer","isNullable":false,"default":"nextval('store_store_id_seq'::regclass)","characterMaximumLength":0,"isIdentity":false,"identityGeneration":"","isGenerated":"NEVER","generationExpression":"","comment":""}],"indexes":[{"name":"idx_unq_manager_staff_id","isPrimaryKey":false,"isUnique":true,"isExclusion":false,"isDeferrable":false,"indexDefinition":"CREATE UNIQUE INDEX idx_unq_manager_staff_id ON store USING btree (manager_staff_id)","constraintType":"","constraintDefinition":""},{"name":"store_pkey","isPrimaryKey":true,"isUnique":true,"isExclusion":false,"isDeferrable":false,"indexDefinition":"CREATE UNIQUE INDEX store_pkey ON store USING btree (store_id)","constraintType":"p","constraintDefinition":"PRIMARY KEY (store_id)"}],"constraints":[{"name":"store_address_id_fkey","constraintType":"f","refTableName":"address","isDeferrable":false,"constraintDefinition":"FOREIGN KEY (address_id) REFERENCES address(address_id) ON UPDATE CASCADE ON DELETE RESTRICT"},{"name":"store_manager_staff_id_fkey","constraintType":"f","refTableName":"staff","isDeferrable":false,"constraintDefinition":"FOREIGN KEY (manager_staff_id) REFERENCES staff(staff_id) ON UPDATE CASCADE ON DELETE RESTRICT"}],"triggers":[{"name":"last_updated","definition":"CREATE TRIGGER last_updated BEFORE UPDATE ON store FOR EACH ROW EXECUTE FUNCTION last_updated()"}]}],"views":[{"name":"actor_info","definition":" SELECT a.actor_id,\n    a.first_name,\n    a.last_name,\n    group_concat(DISTINCT (((c.name)::text || ': '::text) || ( SELECT group_concat((f.title)::text) AS group_concat\n           FROM ((film f\n             JOIN film_category fc_1 ON ((f.film_id = fc_1.film_id)))\n             JOIN film_actor fa_1 ON ((f.film_id = fa_1.film_id)))\n          WHERE ((fc_1.category_id = c.category_id) AND (fa_1.actor_id = a.actor_id))\n          GROUP BY fa_1.actor_id))) AS film_info\n   FROM (((actor a\n     LEFT JOIN film_actor fa ON ((a.actor_id = fa.actor_id)))\n     LEFT JOIN film_category fc ON ((fa.film_id = fc.film_id)))\n     LEFT JOIN category c ON ((fc.category_id = c.category_id)))\n  GROUP BY a.actor_id, a.first_name, a.last_name;"},{"name":"customer_list","definition":" SELECT cu.customer_id AS id,\n    (((cu.first_name)::text || ' '::text) || (cu.last_name)::text) AS name,\n    a.address,\n    a.postal_code AS \"zip code\",\n    a.phone,\n    city.city,\n    country.country,\n        CASE\n            WHEN cu.activebool THEN 'active'::text\n            ELSE ''::text\n        END AS notes,\n    cu.store_id AS sid\n   FROM (((customer cu\n     JOIN address a ON ((cu.address_id = a.address_id)))\n     JOIN city ON ((a.city_id = city.city_id)))\n     JOIN country ON ((city.country_id = country.country_id)));"},{"name":"film_list","definition":" SELECT film.film_id AS fid,\n    film.title,\n    film.description,\n    category.name AS category,\n    film.rental_rate AS price,\n    film.length,\n    film.rating,\n    group_concat((((actor.first_name)::text || ' '::text) || (actor.last_name)::text)) AS actors\n   FROM ((((category\n     LEFT JOIN film_category ON ((category.category_id = film_category.category_id)))\n     LEFT JOIN film ON ((film_category.film_id = film.film_id)))\n     JOIN film_actor ON ((film.film_id = film_actor.film_id)))\n     JOIN actor ON ((film_actor.actor_id = actor.actor_id)))\n  GROUP BY film.film_id, film.title, film.description, category.name, film.rental_rate, film.length, film.rating;"},{"name":"nicer_but_slower_film_list","definition":" SELECT film.film_id AS fid,\n    film.title,\n    film.description,\n    category.name AS category,\n    film.rental_rate AS price,\n    film.length,\n    film.rating,\n    group_concat((((upper(\"substring\"((actor.first_name)::text, 1, 1)) || lower(\"substring\"((actor.first_name)::text, 2))) || upper(\"substring\"((actor.last_name)::text, 1, 1))) || lower(\"substring\"((actor.last_name)::text, 2)))) AS actors\n   FROM ((((category\n     LEFT JOIN film_category ON ((category.category_id = film_category.category_id)))\n     LEFT JOIN film ON ((film_category.film_id = film.film_id)))\n     JOIN film_actor ON ((film.film_id = film_actor.film_id)))\n     JOIN actor ON ((film_actor.actor_id = actor.actor_id)))\n  GROUP BY film.film_id, film.title, film.description, category.name, film.rental_rate, film.length, film.rating;"},{"name":"sales_by_film_category","definition":" SELECT c.name AS category,\n    sum(p.amount) AS total_sales\n   FROM (((((payment p\n     JOIN rental r ON ((p.rental_id = r.rental_id)))\n     JOIN inventory i ON ((r.inventory_id = i.inventory_id)))\n     JOIN film f ON ((i.film_id = f.film_id)))\n     JOIN film_category fc ON ((f.film_id = fc.film_id)))\n     JOIN category c ON ((fc.category_id = c.category_id)))\n  GROUP BY c.name\n  ORDER BY (sum(p.amount)) DESC;"},{"name":"sales_by_store","definition":" SELECT (((c.city)::text || ','::text) || (cy.country)::text) AS store,\n    (((m.first_name)::text || ' '::text) || (m.last_name)::text) AS manager,\n    sum(p.amount) AS total_sales\n   FROM (((((((payment p\n     JOIN rental r ON ((p.rental_id = r.rental_id)))\n     JOIN inventory i ON ((r.inventory_id = i.inventory_id)))\n     JOIN store s ON ((i.store_id = s.store_id)))\n     JOIN address a ON ((s.address_id = a.address_id)))\n     JOIN city c ON ((a.city_id = c.city_id)))\n     JOIN country cy ON ((c.country_id = cy.country_id)))\n     JOIN staff m ON ((s.manager_staff_id = m.staff_id)))\n  GROUP BY cy.country, c.city, s.store_id, m.first_name, m.last_name\n  ORDER BY cy.country, c.city;"},{"name":"staff_list","definition":" SELECT s.staff_id AS id,\n    (((s.first_name)::text || ' '::text) || (s.last_name)::text) AS name,\n    a.address,\n    a.postal_code AS \"zip code\",\n    a.phone,\n    city.city,\n    country.country,\n    s.store_id AS sid\n   FROM (((staff s\n     JOIN address a ON ((s.address_id = a.address_id)))\n     JOIN city ON ((a.city_id = city.city_id)))\n     JOIN country ON ((city.country_id = country.country_id)));"}]}}