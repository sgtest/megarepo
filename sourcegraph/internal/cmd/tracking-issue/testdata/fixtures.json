{
  "ID": "",
  "Title": "",
  "Body": "",
  "Number": 9917,
  "URL": "",
  "State": "",
  "Repository": "",
  "Private": false,
  "Labels": [
   "tracking",
   "team/code-intelligence"
  ],
  "Assignees": null,
  "Milestone": "3.21",
  "Author": "",
  "CreatedAt": "0001-01-01T00:00:00Z",
  "UpdatedAt": "0001-01-01T00:00:00Z",
  "ClosedAt": "0001-01-01T00:00:00Z",
  "Issues": [
   {
    "ID": "MDU6SXNzdWU3MDY1MTE3MzY=",
    "Title": "LSIF-JVM Research Spike",
    "Body": "### Plan\r\n\r\n~2hr research spike for a combined/aggregating lsif-jvm that provides support for multiple JVM languages under one :house: \r\nCandidate languages are: **Java, Kotlin, Scala, Groovy**. *Sorry, Clojure \u0026 Gosu.*\r\n\r\n",
    "Number": 14057,
    "URL": "https://github.com/sourcegraph/sourcegraph/issues/14057",
    "State": "OPEN",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "spike",
     "team/code-intelligence"
    ],
    "Assignees": [
     "Strum355"
    ],
    "Milestone": "3.21",
    "Author": "Strum355",
    "CreatedAt": "2020-09-22T16:05:43Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "0001-01-01T00:00:00Z"
   },
   {
    "ID": "MDU6SXNzdWU3MDY0ODE2NjY=",
    "Title": "codeintel: No longer able to upload repos which are currently cloning",
    "Body": "- **Sourcegraph version:** commit 29eabd2d\r\n\r\n#### Steps to reproduce:\r\n\r\nadd a new repo to the sourcegraph instance, and then run `src lsif upload` against that repo before sourcegraph finishes cloning it\r\n\r\n#### Expected behavior:\r\n\r\nthe lsif index is uploaded successfully\r\n\r\n#### Actual behavior:\r\n\r\nsrc-cli returns `failed to enqueue payload: pq: new row for relation \"lsif_uploads\" violates check constraint \"lsif_uploads_commit_valid_chars\"`",
    "Number": 14052,
    "URL": "https://github.com/sourcegraph/sourcegraph/issues/14052",
    "State": "OPEN",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "bug",
     "regression",
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.21",
    "Author": "gbrik",
    "CreatedAt": "2020-09-22T15:24:48Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "0001-01-01T00:00:00Z"
   },
   {
    "ID": "MDU6SXNzdWU3MDYzNTY0MTc=",
    "Title": "dbworker: Pass sql options to TransactableHandle",
    "Body": "It would be nice if there was a way to customize how the transaction is created by the worker.\r\nWe have a case where we need to change the serialization level of that transaction to `Read Committed` instead of `Serializable`.\r\nUnless perhaps the dbworker package is sensitive to transaction isolation levels?",
    "Number": 14044,
    "URL": "https://github.com/sourcegraph/sourcegraph/issues/14044",
    "State": "OPEN",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.21",
    "Author": "asdine",
    "CreatedAt": "2020-09-22T12:51:43Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "0001-01-01T00:00:00Z"
   },
   {
    "ID": "MDU6SXNzdWU3MDU5MjIyNDA=",
    "Title": "Write architecture docs for precise code intel indexer",
    "Body": "We have good documentation for the (code intel portion of the) enterprise frontend, the bundle manager, and the worker. We need similar documentation for the indexer service.",
    "Number": 14010,
    "URL": "https://github.com/sourcegraph/sourcegraph/issues/14010",
    "State": "OPEN",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.21",
    "Author": "efritz",
    "CreatedAt": "2020-09-21T21:16:16Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "0001-01-01T00:00:00Z"
   },
   {
    "ID": "MDU6SXNzdWU3MDU5MjE1MTI=",
    "Title": "Write announcement post for Postgres change",
    "Body": "There is a large-ish change coming to the distribution of Sourcegraph 3.21+: The introduction of a second database. I think it could be a good opportunity for a blog post to both document the change in architecture, our reasons for doing so, and instructions on what to do if you are already heavily involved with our own primary database (of course this is not a substitute for actual distribution instructions).",
    "Number": 14009,
    "URL": "https://github.com/sourcegraph/sourcegraph/issues/14009",
    "State": "OPEN",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.21",
    "Author": "efritz",
    "CreatedAt": "2020-09-21T21:14:54Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "0001-01-01T00:00:00Z"
   },
   {
    "ID": "MDU6SXNzdWU3MDU5MjA1OTk=",
    "Title": "Fix retries in src-cli lsif upload",
    "Body": "The retry mechanism in lsif upload will retry requests that will never be correct (400-level errors). src-cli should be updated so that users do not have to fail a handful of times before being shown the message.",
    "Number": 14008,
    "URL": "https://github.com/sourcegraph/sourcegraph/issues/14008",
    "State": "CLOSED",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.21",
    "Author": "efritz",
    "CreatedAt": "2020-09-21T21:13:13Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "2020-09-21T22:57:52Z"
   },
   {
    "ID": "MDU6SXNzdWU3MDU5MjAwODI=",
    "Title": "Update RFC 236",
    "Body": "Update thoughts for [RFC 236: Code intel federation](https://docs.google.com/document/u/1/d/1QigoTPGbc5ztGRzeqBBFVM5sD_uLfT4yOO3qxch2kGE). Will likely involve a meeting including @gbrik and @Strum355 to bash our ideas until they look pretty much the same.\r\n\r\nNote: Title of RFC is subject to change as federation is an implementation detail (and one we might not even choose).",
    "Number": 14007,
    "URL": "https://github.com/sourcegraph/sourcegraph/issues/14007",
    "State": "OPEN",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.21",
    "Author": "efritz",
    "CreatedAt": "2020-09-21T21:12:19Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "0001-01-01T00:00:00Z"
   },
   {
    "ID": "MDU6SXNzdWU3MDU3MTAxNDA=",
    "Title": "WIP: Code Intelligence 3.21 Tracking issue",
    "Body": "### Plan\r\n\r\n**Goal:** Get the top three most popular language indexers: lsif-go, lsif-java, lsif-clang stable by working directly on implementation with customers to identify and resolve any remaining issues that prevent the tool from being use in a wide release. This goal takes top priority for this milestone and each member of the team is leading the initiative on an indexer. \r\n\r\n**Goal:** Perform research spikes of features such as Bazel integration (to improve monorepos support) in order to find the best approach, and scope the development effort for adding new core capabilities to code intel platform.\r\n\r\n**Goal:** Improve the reliability and usability of code intel tools by triaging and resolving UI bugs and performance issues (i.e. the bundle manager process) for an improved developer experience.\r\n\r\n### Availability\r\n\r\nPeriod is from 2020-09-20 to 2020-10-20. Please write the days you won't be working and the number of working days for the period.\r\n\r\n* Aida: 10d\r\n* Eric: 19d (off 2020/09/28-30)\r\n* Noah: TODO\r\n* Garo: 10d (off 2020/10/05-09)\r\n\r\n### Tracked issues\r\n\r\n\u003c!-- BEGIN WORK --\u003e\n\u003c!-- BEGIN ASSIGNEE: Strum355 --\u003e\n@Strum355\n\n- [ ] üöö LSIF-Java Delivery  ([#13017](https://github.com/sourcegraph/sourcegraph/issues/13017)) \n- [ ] LSIF-JVM Research Spike ([#14057](https://github.com/sourcegraph/sourcegraph/issues/14057)) üïµÔ∏è\n- [ ] Find references to common Java class method name without false-positives ([#3418](https://github.com/sourcegraph/sourcegraph/issues/3418)) \n\u003c!-- END ASSIGNEE --\u003e\n\n\u003c!-- BEGIN ASSIGNEE: aidaeology --\u003e\n@aidaeology: __5.00d__\n\n- [ ] Create successful and reproducible indexes of 20 OSS repos ([#12](https://github.com/sourcegraph/lsif-clang/issues/12)) \n- [ ] üöö LSIF-Go Delivery ([#13015](https://github.com/sourcegraph/sourcegraph/issues/13015)) __5d__ \n- [ ] Add history of code intelligence [#1628](https://github.com/sourcegraph/about/pull/1628) :shipit:\n\u003c!-- END ASSIGNEE --\u003e\n\n\u003c!-- BEGIN ASSIGNEE: efritz --\u003e\n@efritz: __11.00d__\n\n- [ ] Write architecture docs for precise code intel indexer ([#14010](https://github.com/sourcegraph/sourcegraph/issues/14010)) \n- [ ] Write announcement post for Postgres change ([#14009](https://github.com/sourcegraph/sourcegraph/issues/14009)) \n- [ ] Update RFC 236 ([#14007](https://github.com/sourcegraph/sourcegraph/issues/14007)) \n- [ ] RFC 235: Tracking issue ([#13882](https://github.com/sourcegraph/sourcegraph/issues/13882)) __5.50d__ \n  - [x] RFC 235: Add code intel postgres image ([~#13912~](https://github.com/sourcegraph/sourcegraph/issues/13912); PRs: ~[#13913](https://github.com/sourcegraph/sourcegraph/pull/13913)~) __0.5d__ \n  - [ ] RFC 235: Cleanup ([#13890](https://github.com/sourcegraph/sourcegraph/issues/13890)) __1d__ \n  - [ ] RFC 235: Update worker to write to Postgres ([#13889](https://github.com/sourcegraph/sourcegraph/issues/13889); PRs: [#13946](https://github.com/sourcegraph/sourcegraph/pull/13946), [#13923](https://github.com/sourcegraph/sourcegraph/pull/13923)) __0.5d__ \n  - [ ] RFC 235: Migrate SQLite data to Postgres ([#13888](https://github.com/sourcegraph/sourcegraph/issues/13888); PRs: [#13932](https://github.com/sourcegraph/sourcegraph/pull/13932), [#13923](https://github.com/sourcegraph/sourcegraph/pull/13923)) __0.5d__ \n  - [ ] RFC 235: Update bundle manager to read from Postgres ([#13886](https://github.com/sourcegraph/sourcegraph/issues/13886); PRs: [#13924](https://github.com/sourcegraph/sourcegraph/pull/13924), [#13923](https://github.com/sourcegraph/sourcegraph/pull/13923)) __0.5d__ \n  - [ ] RFC 235: Add migration infrastructure to codeintel database ([#13885](https://github.com/sourcegraph/sourcegraph/issues/13885); PRs: ~[#13943](https://github.com/sourcegraph/sourcegraph/pull/13943)~, [#13903](https://github.com/sourcegraph/sourcegraph/pull/13903)) __1d__ \n  - [ ] RFC 235: Configure connection to codeintel database ([#13884](https://github.com/sourcegraph/sourcegraph/issues/13884); PRs: ~[#13952](https://github.com/sourcegraph/sourcegraph/pull/13952)~, [#13864](https://github.com/sourcegraph/sourcegraph/pull/13864)) __0.5d__ \n  - [ ] RFC 235: Add code intel postgres container ([#13883](https://github.com/sourcegraph/sourcegraph/issues/13883); PRs: [#13924](https://github.com/sourcegraph/sourcegraph/pull/13924), [#13904](https://github.com/sourcegraph/sourcegraph/pull/13904), [#13864](https://github.com/sourcegraph/sourcegraph/pull/13864)) __1d__ \n- [ ] RFC 201: Tracking issue ([#13891](https://github.com/sourcegraph/sourcegraph/issues/13891)) \n  - [ ] RFC 201: Use auto-configurator ([#13898](https://github.com/sourcegraph/sourcegraph/issues/13898)) \n  - [ ] RFC 201: Write auto-configurator ([#13897](https://github.com/sourcegraph/sourcegraph/issues/13897)) \n  - [ ] RFC 201: Create index record based on configuration file ([#13896](https://github.com/sourcegraph/sourcegraph/issues/13896)) \n  - [ ] RFC 201: Update index scheduler to publish new payload ([#13895](https://github.com/sourcegraph/sourcegraph/issues/13895)) \n  - [ ] RFC 201: Update auto indexer execution ([#13894](https://github.com/sourcegraph/sourcegraph/issues/13894)) \n  - [ ] RFC 201: Write a JSONC index configuration format parser ([#13892](https://github.com/sourcegraph/sourcegraph/issues/13892)) \n- [ ] üöö LSIF-Go Delivery ([#13015](https://github.com/sourcegraph/sourcegraph/issues/13015)) __5d__ \n- [ ] codeintel: No longer able to upload repos which are currently cloning ([#14052](https://github.com/sourcegraph/sourcegraph/issues/14052)) üêõ\n- [ ] dbworker: Pass sql options to TransactableHandle ([#14044](https://github.com/sourcegraph/sourcegraph/issues/14044); PRs: [#14063](https://github.com/sourcegraph/sourcegraph/pull/14063), [#14061](https://github.com/sourcegraph/sourcegraph/pull/14061)) \n- [ ] codeintel: git diffing fails graphql requests related to force-pushed commits ([#12588](https://github.com/sourcegraph/sourcegraph/issues/12588)) üß∂\n- [ ] codeintel: Refactor index command construction [#14105](https://github.com/sourcegraph/sourcegraph/pull/14105) :shipit:\n- [ ] codeintel: RFC 235: Soft delete upload records [#13822](https://github.com/sourcegraph/sourcegraph/pull/13822) :shipit:\n\nCompleted: __1.00d__\n- [x] RFC 235: Add code intel postgres image ([~#13912~](https://github.com/sourcegraph/sourcegraph/issues/13912); PRs: ~[#13913](https://github.com/sourcegraph/sourcegraph/pull/13913)~) __0.5d__ \n- [x] Fix retries in src-cli lsif upload ([~#14008~](https://github.com/sourcegraph/sourcegraph/issues/14008)) \n- [x] LSIF uploads fail with abbreviated OID ([~#13957~](https://github.com/sourcegraph/sourcegraph/issues/13957); PRs: ~[#14005](https://github.com/sourcegraph/sourcegraph/pull/14005)~) __0.5d__ \n- [x] 504 Gateway Timeouts when mousing over after the page has loaded for a while ([~#12930~](https://github.com/sourcegraph/sourcegraph/issues/12930)) üêõ\n- [x] tracking-issue: Fix strikethrough on closed (un-merged) PRs [#14107](https://github.com/sourcegraph/sourcegraph/pull/14107) :shipit:\n- [x] codeintel: Lower indexer output to debug level [#14103](https://github.com/sourcegraph/sourcegraph/pull/14103) :shipit:\n- [x] codeintel: Refactor command runner in indexer [#14102](https://github.com/sourcegraph/sourcegraph/pull/14102) :shipit:\n- [x] codenotify: Configure efritz's subscriptions [#14060](https://github.com/sourcegraph/sourcegraph/pull/14060) :shipit:\n- [x] tracking-issue: Better nested tracking issue estimates [#14035](https://github.com/sourcegraph/sourcegraph/pull/14035) :shipit:\n- [x] tracking-issue: Separate complete/incomplete work [#14034](https://github.com/sourcegraph/sourcegraph/pull/14034) :shipit:\n- [x] tracking-issue: List PRs for an issue inline [#14018](https://github.com/sourcegraph/sourcegraph/pull/14018) :shipit:\n- [x] tracking-issue: Break code up into files according to type/action [#14013](https://github.com/sourcegraph/sourcegraph/pull/14013) :shipit:\n- [x] tracking-issue: Parallelize writes [#14006](https://github.com/sourcegraph/sourcegraph/pull/14006) :shipit:\n- [x] codeintel: Resolve abbreviated OID [#14005](https://github.com/sourcegraph/sourcegraph/pull/14005) :shipit:\n- [x] tracking-issue: Nested tracking issues [#13998](https://github.com/sourcegraph/sourcegraph/pull/13998) :shipit:\n- [x] tracking-issue: Fix long-form linked issues [#13989](https://github.com/sourcegraph/sourcegraph/pull/13989) :shipit:\n- [x] tracking-issue: Fix timeout [#13986](https://github.com/sourcegraph/sourcegraph/pull/13986) :shipit:\n- [x] chore: Set exec bit on docker-images/codeintel-db/build.sh [#13955](https://github.com/sourcegraph/sourcegraph/pull/13955) :shipit:\n- [x] chore: Multiple database handles [#13952](https://github.com/sourcegraph/sourcegraph/pull/13952) :shipit:\n- [x] chore: Relocate frontend migrations [#13943](https://github.com/sourcegraph/sourcegraph/pull/13943) :shipit:\n- [x] chore: Co-locate dev scripts to interact with postgres [#13942](https://github.com/sourcegraph/sourcegraph/pull/13942) :shipit:\n- [x] codeintel: RFC 235: Add code intel postgres image [#13913](https://github.com/sourcegraph/sourcegraph/pull/13913) :shipit:\n\u003c!-- END ASSIGNEE --\u003e\n\n\u003c!-- BEGIN ASSIGNEE: gbrik --\u003e\n@gbrik: __1.00d__\n\n- [ ] Investigate effort for Bazel integration ([#13202](https://github.com/sourcegraph/sourcegraph/issues/13202)) __1d__ üïµÔ∏è\n- [ ] no output produced for seemingly well-formed compile_commands.json ([#4](https://github.com/sourcegraph/lsif-clang/issues/4)) üêõ\n- [ ] doesn't work on arch linux ([#1](https://github.com/sourcegraph/lsif-clang/issues/1)) üêõ\n- [ ] github.com/gabime/spdlog doesn't produce LSIF output for template definitions ([#14](https://github.com/sourcegraph/lsif-clang/issues/14)) üêõ\n- [ ] github.com/nlohmann/json on macOS fails ([#13](https://github.com/sourcegraph/lsif-clang/issues/13)) üêõ\n- [ ] infer project root automatically if not specified ([#15](https://github.com/sourcegraph/lsif-clang/issues/15)) \n- [ ] Create successful and reproducible indexes of 20 OSS repos ([#12](https://github.com/sourcegraph/lsif-clang/issues/12)) \n\u003c!-- END ASSIGNEE --\u003e\n\u003c!-- END WORK --\u003e\r\n\r\n#### Legend\r\n\r\n- üë© Customer issue\r\n- üêõ Bug\r\n- üß∂ Technical debt\r\n- üé© Quality of life\r\n- üõ†Ô∏è [Roadmap](https://docs.google.com/document/d/1cBsE9801DcBF9chZyMnxRdolqM_1c2pPyGQz15QAvYI/edit#heading=h.5nwl5fv52ess)\r\n- üïµÔ∏è [Spike](https://en.wikipedia.org/wiki/Spike_(software_development))\r\n- üîí Security issue\r\n- :shipit: Pull Request\r\n",
    "Number": 13987,
    "URL": "https://github.com/sourcegraph/sourcegraph/issues/13987",
    "State": "OPEN",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "team/code-intelligence",
     "tracking"
    ],
    "Assignees": [
     "efritz",
     "aidaeology",
     "macraig",
     "gbrik",
     "Strum355"
    ],
    "Milestone": "3.21",
    "Author": "efritz",
    "CreatedAt": "2020-09-21T15:37:09Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "0001-01-01T00:00:00Z"
   },
   {
    "ID": "MDU6SXNzdWU3MDQ0NzExMDY=",
    "Title": "LSIF uploads fail with abbreviated OID",
    "Body": "Uploading LSIF data with an abbreviated OID produces an error from src lsif upload:\r\n\r\n```\r\nfailed to enqueue payload: pq: new row for relation \"lsif_uploads\" violates check constraint \"lsif_uploads_commit_valid_chars\"\r\n```\r\n\r\nThis is the wrong error to display - we should be validating the hash before attempting to insert it. Best implementation would be able to disambiguate an abbreviated OID into a full one, as we need to ensure that the commit exists first anyway.",
    "Number": 13957,
    "URL": "https://github.com/sourcegraph/sourcegraph/issues/13957",
    "State": "CLOSED",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "estimate/0.5d",
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.21",
    "Author": "efritz",
    "CreatedAt": "2020-09-18T15:32:09Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "2020-09-21T19:59:39Z"
   },
   {
    "ID": "MDU6SXNzdWU3MDM2NTYxNDU=",
    "Title": "RFC 235: Add code intel postgres image",
    "Body": "This is part of [RFC 235: Move LSIF data to Postgres](https://docs.google.com/document/d/1Y9p29hK8xrPUTvBdWqP9uAHDg3JLV-HCaxsbCo9-YHQ).\r\n\r\nTag a new postgres image to use as the code intel database.",
    "Number": 13912,
    "URL": "https://github.com/sourcegraph/sourcegraph/issues/13912",
    "State": "CLOSED",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "RFC-235",
     "estimate/0.5d",
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.21",
    "Author": "efritz",
    "CreatedAt": "2020-09-17T14:44:30Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "2020-09-18T15:12:44Z"
   },
   {
    "ID": "MDU6SXNzdWU3MDMwNjYyNTU=",
    "Title": "RFC 201: Use auto-configurator",
    "Body": "This is part of [RFC 201: Auto-indexer build configuration](https://docs.google.com/document/d/1NPQs1s814LZjNXjPuavqC1N7hZR192DNtmSBmAeH9UY).\r\n\r\nRun the auto-indexer written in https://github.com/sourcegraph/sourcegraph/issues/13897 in the index scheduler to replace the old \"has a go.mod\" heuristic. This should only be used when there is not an explicit configuration in the repository.",
    "Number": 13898,
    "URL": "https://github.com/sourcegraph/sourcegraph/issues/13898",
    "State": "OPEN",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "RFC-201",
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.21",
    "Author": "efritz",
    "CreatedAt": "2020-09-16T20:51:50Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "0001-01-01T00:00:00Z"
   },
   {
    "ID": "MDU6SXNzdWU3MDMwNjU2Njk=",
    "Title": "RFC 201: Write auto-configurator",
    "Body": "This is part of [RFC 201: Auto-indexer build configuration](https://docs.google.com/document/d/1NPQs1s814LZjNXjPuavqC1N7hZR192DNtmSBmAeH9UY).\r\n\r\nWe'd like to continue to **auto**-index repositories that haven't been explicitly configured to go very wide in our zero-effort open-source code intelligence coverage. This requires doing better than searching for repositories with a go.mod in the root. We need to instead be able to heuristically detect how to index a repository.\r\n\r\nWrite code that will walk a repository root and determine the roots, types of indexer, and necessary arguments to index as much of the source code as we know how to index today. This should be available in a separate library as we'll likely want to bundle this with src-cli in the future.",
    "Number": 13897,
    "URL": "https://github.com/sourcegraph/sourcegraph/issues/13897",
    "State": "OPEN",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "RFC-201",
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.21",
    "Author": "efritz",
    "CreatedAt": "2020-09-16T20:50:45Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "0001-01-01T00:00:00Z"
   },
   {
    "ID": "MDU6SXNzdWU3MDMwNjA5ODk=",
    "Title": "RFC 201: Create index record based on configuration file",
    "Body": "This is part of [RFC 201: Auto-indexer build configuration](https://docs.google.com/document/d/1NPQs1s814LZjNXjPuavqC1N7hZR192DNtmSBmAeH9UY).\r\n\r\nIf a repo contains an index configuration file, this should be read and used instead of the canned configuration published for _any_ repository. This may result in many index records per repository as this will respect branches and roots, of which multiple can be defined.",
    "Number": 13896,
    "URL": "https://github.com/sourcegraph/sourcegraph/issues/13896",
    "State": "OPEN",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "RFC-201",
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.21",
    "Author": "efritz",
    "CreatedAt": "2020-09-16T20:42:57Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "0001-01-01T00:00:00Z"
   },
   {
    "ID": "MDU6SXNzdWU3MDMwNTkwNjk=",
    "Title": "RFC 201: Update index scheduler to publish new payload",
    "Body": "This is part of [RFC 201: Auto-indexer build configuration](https://docs.google.com/document/d/1NPQs1s814LZjNXjPuavqC1N7hZR192DNtmSBmAeH9UY).\r\n\r\nUpdate the index scheduler to include the payload needed to replace the _canned_ payload introduced in https://github.com/sourcegraph/sourcegraph/issues/13894. This will require a change in both the scheduler as well as the indexer itself.\r\n\r\nThe scheduler may for now still return the same payload that was hard-coded, and user-defined and more intelligent configurations will be a later enhancement.",
    "Number": 13895,
    "URL": "https://github.com/sourcegraph/sourcegraph/issues/13895",
    "State": "OPEN",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "RFC-201",
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.21",
    "Author": "efritz",
    "CreatedAt": "2020-09-16T20:39:38Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "0001-01-01T00:00:00Z"
   },
   {
    "ID": "MDU6SXNzdWU3MDMwNTY1ODk=",
    "Title": "RFC 201: Update auto indexer execution",
    "Body": "This is part of [RFC 201: Auto-indexer build configuration](https://docs.google.com/document/d/1NPQs1s814LZjNXjPuavqC1N7hZR192DNtmSBmAeH9UY).\r\n\r\nConvert the indexing process from being hard-coded to being parameterized by the types defined in https://github.com/sourcegraph/sourcegraph/issues/13892.\r\n\r\nFor the time being we will keep the effective parameters the same by only executing one instance of a configured task, which is hard-coded to behave as it does today.",
    "Number": 13894,
    "URL": "https://github.com/sourcegraph/sourcegraph/issues/13894",
    "State": "OPEN",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "RFC-201",
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.21",
    "Author": "efritz",
    "CreatedAt": "2020-09-16T20:35:23Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "0001-01-01T00:00:00Z"
   },
   {
    "ID": "MDU6SXNzdWU3MDMwNTM4ODc=",
    "Title": "RFC 201: Write a JSONC index configuration format parser",
    "Body": "This is part of [RFC 201: Auto-indexer build configuration](https://docs.google.com/document/d/1NPQs1s814LZjNXjPuavqC1N7hZR192DNtmSBmAeH9UY).\r\n\r\nWrite the datatypes for the index configuration as well as unmarshalling routines to convert from JSONC to these types.",
    "Number": 13892,
    "URL": "https://github.com/sourcegraph/sourcegraph/issues/13892",
    "State": "OPEN",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "RFC-201",
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.21",
    "Author": "efritz",
    "CreatedAt": "2020-09-16T20:31:01Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "0001-01-01T00:00:00Z"
   },
   {
    "ID": "MDU6SXNzdWU3MDMwNDM0Mjk=",
    "Title": "RFC 201: Tracking issue",
    "Body": "Tracking issue for [RFC 201: Auto-indexer build configuration](https://docs.google.com/document/d/1NPQs1s814LZjNXjPuavqC1N7hZR192DNtmSBmAeH9UY).\r\n\r\n### Tracked issues\r\n\r\n\u003c!-- BEGIN WORK --\u003e\n\u003c!-- BEGIN ASSIGNEE: efritz --\u003e\n@efritz\n\n- [ ] RFC 201: Write a JSONC index configuration format parser ([#13892](https://github.com/sourcegraph/sourcegraph/issues/13892)) \n- [ ] RFC 201: Write auto-configurator ([#13897](https://github.com/sourcegraph/sourcegraph/issues/13897)) \n- [ ] RFC 201: Use auto-configurator ([#13898](https://github.com/sourcegraph/sourcegraph/issues/13898)) \n- [ ] RFC 201: Create index record based on configuration file ([#13896](https://github.com/sourcegraph/sourcegraph/issues/13896)) \n- [ ] RFC 201: Update index scheduler to publish new payload ([#13895](https://github.com/sourcegraph/sourcegraph/issues/13895)) \n- [ ] RFC 201: Update auto indexer execution ([#13894](https://github.com/sourcegraph/sourcegraph/issues/13894)) \n- [ ] codeintel: Refactor index command construction [#14105](https://github.com/sourcegraph/sourcegraph/pull/14105) :shipit:\n\nCompleted\n- [x] codeintel: Lower indexer output to debug level [#14103](https://github.com/sourcegraph/sourcegraph/pull/14103) :shipit:\n- [x] codeintel: Refactor command runner in indexer [#14102](https://github.com/sourcegraph/sourcegraph/pull/14102) :shipit:\n\u003c!-- END ASSIGNEE --\u003e\n\u003c!-- END WORK --\u003e\r\n\r\n#### Legend\r\n\r\n- üë© Customer issue\r\n- üêõ Bug\r\n- üß∂ Technical debt\r\n- üé© Quality of life\r\n- üõ†Ô∏è [Roadmap](https://docs.google.com/document/d/1cBsE9801DcBF9chZyMnxRdolqM_1c2pPyGQz15QAvYI/edit#heading=h.5nwl5fv52ess)\r\n- üïµÔ∏è [Spike](https://en.wikipedia.org/wiki/Spike_(software_development))\r\n- üîí Security issue\r\n- :shipit: Pull Request\r\n",
    "Number": 13891,
    "URL": "https://github.com/sourcegraph/sourcegraph/issues/13891",
    "State": "OPEN",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "RFC-201",
     "team/code-intelligence",
     "tracking"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.21",
    "Author": "efritz",
    "CreatedAt": "2020-09-16T20:13:20Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "0001-01-01T00:00:00Z"
   },
   {
    "ID": "MDU6SXNzdWU3MDMwNDI2MTA=",
    "Title": "RFC 235: Cleanup",
    "Body": "This is part of [RFC 235: Move LSIF data to Postgres](https://docs.google.com/document/d/1Y9p29hK8xrPUTvBdWqP9uAHDg3JLV-HCaxsbCo9-YHQ).\r\n\r\nRemove code that is dead after all of the observable changes described in the RFC have been merged.",
    "Number": 13890,
    "URL": "https://github.com/sourcegraph/sourcegraph/issues/13890",
    "State": "OPEN",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "RFC-235",
     "estimate/1d",
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.21",
    "Author": "efritz",
    "CreatedAt": "2020-09-16T20:11:53Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "0001-01-01T00:00:00Z"
   },
   {
    "ID": "MDU6SXNzdWU3MDMwNDE4MDU=",
    "Title": "RFC 235: Update worker to write to Postgres",
    "Body": "This is part of [RFC 235: Move LSIF data to Postgres](https://docs.google.com/document/d/1Y9p29hK8xrPUTvBdWqP9uAHDg3JLV-HCaxsbCo9-YHQ).\r\n\r\nTarget postgres for writes from within the code intel worker.\r\n\r\nThis issue must follow https://github.com/sourcegraph/sourcegraph/issues/13886 and https://github.com/sourcegraph/sourcegraph/issues/13887.",
    "Number": 13889,
    "URL": "https://github.com/sourcegraph/sourcegraph/issues/13889",
    "State": "OPEN",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "RFC-235",
     "estimate/0.5d",
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.21",
    "Author": "efritz",
    "CreatedAt": "2020-09-16T20:10:31Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "0001-01-01T00:00:00Z"
   },
   {
    "ID": "MDU6SXNzdWU3MDMwNDAwNTc=",
    "Title": "RFC 235: Migrate SQLite data to Postgres",
    "Body": "This is part of [RFC 235: Move LSIF data to Postgres](https://docs.google.com/document/d/1Y9p29hK8xrPUTvBdWqP9uAHDg3JLV-HCaxsbCo9-YHQ).\r\n\r\nWrite a migration routine that will start on bundle manager startup (and run as long as necessary) that reads SQLite bundles on disk that are not yet present in Postgres and issue writes for the same data. After a SQLite bundle's data has been written to Postgres, it can be moved into a new directory. This new directory can serve as a backup directory. The operator can decide if they need to keep this data in case of a version downgrade, or explicitly delete it otherwise.\r\n\r\nThis issue must follow https://github.com/sourcegraph/sourcegraph/issues/13887.",
    "Number": 13888,
    "URL": "https://github.com/sourcegraph/sourcegraph/issues/13888",
    "State": "OPEN",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "RFC-235",
     "estimate/0.5d",
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.21",
    "Author": "efritz",
    "CreatedAt": "2020-09-16T20:07:22Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "0001-01-01T00:00:00Z"
   },
   {
    "ID": "MDU6SXNzdWU3MDMwMzgxNjU=",
    "Title": "RFC 235: Update bundle manager to read from Postgres",
    "Body": "This is part of [RFC 235: Move LSIF data to Postgres](https://docs.google.com/document/d/1Y9p29hK8xrPUTvBdWqP9uAHDg3JLV-HCaxsbCo9-YHQ).\r\n\r\nUpdate the bundle manager database layer to read from postgres, then fall back to data on disk. This should be done before actually writing to Postgres so that we can ensure that _someone_ is reading the new data instead of blackholing writes.\r\n\r\nThis issue must follow https://github.com/sourcegraph/sourcegraph/issues/13884.",
    "Number": 13886,
    "URL": "https://github.com/sourcegraph/sourcegraph/issues/13886",
    "State": "OPEN",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "RFC-235",
     "estimate/0.5d",
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.21",
    "Author": "efritz",
    "CreatedAt": "2020-09-16T20:04:01Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "0001-01-01T00:00:00Z"
   },
   {
    "ID": "MDU6SXNzdWU3MDMwMzU4NzA=",
    "Title": "RFC 235: Add migration infrastructure to codeintel database",
    "Body": "This is part of [RFC 235: Move LSIF data to Postgres](https://docs.google.com/document/d/1Y9p29hK8xrPUTvBdWqP9uAHDg3JLV-HCaxsbCo9-YHQ).\r\n\r\nCopy the infrastructure to migrate the frontend database for use on the codeintel database.",
    "Number": 13885,
    "URL": "https://github.com/sourcegraph/sourcegraph/issues/13885",
    "State": "OPEN",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "RFC-235",
     "estimate/1d",
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.21",
    "Author": "efritz",
    "CreatedAt": "2020-09-16T20:00:11Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "0001-01-01T00:00:00Z"
   },
   {
    "ID": "MDU6SXNzdWU3MDMwMzUzNTA=",
    "Title": "RFC 235: Configure connection to codeintel database",
    "Body": "This is part of [RFC 235: Move LSIF data to Postgres](https://docs.google.com/document/d/1Y9p29hK8xrPUTvBdWqP9uAHDg3JLV-HCaxsbCo9-YHQ).\r\n\r\nUpdate the database utilities to connect to _either_ the existing frontend database or the code intel database. Connect to the code intel database as well as the existing frontend database from the following services to ensure that environments configured in https://github.com/sourcegraph/sourcegraph/issues/13883 were done so correctly.\r\n\r\n- enterprise/precise-code-intel-bundle-manager\r\n- enterprise/precise-code-intel-worker\r\n- enterprise/frontend\r\n\r\nThis issue must follow https://github.com/sourcegraph/sourcegraph/issues/13883.",
    "Number": 13884,
    "URL": "https://github.com/sourcegraph/sourcegraph/issues/13884",
    "State": "OPEN",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "RFC-235",
     "estimate/0.5d",
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.21",
    "Author": "efritz",
    "CreatedAt": "2020-09-16T19:59:18Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "0001-01-01T00:00:00Z"
   },
   {
    "ID": "MDU6SXNzdWU3MDMwMzM2MDc=",
    "Title": "RFC 235: Add code intel postgres container",
    "Body": "This is part of [RFC 235: Move LSIF data to Postgres](https://docs.google.com/document/d/1Y9p29hK8xrPUTvBdWqP9uAHDg3JLV-HCaxsbCo9-YHQ).\r\n\r\nUpdate the following environments to configure a new database container, and ensure that the frontend has credentials to the new database. This needs to be done before we change code to read the new variables.\r\n\r\n- [ ] pure docker\r\n- [ ] server environment\r\n- [ ] docker-compose environment\r\n- [ ] k8s template environment\r\n- [ ] configure postgres in cloud environment\r\n\r\nThis issue must follow https://github.com/sourcegraph/sourcegraph/issues/13912.",
    "Number": 13883,
    "URL": "https://github.com/sourcegraph/sourcegraph/issues/13883",
    "State": "OPEN",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "RFC-235",
     "estimate/1d",
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.21",
    "Author": "efritz",
    "CreatedAt": "2020-09-16T19:56:21Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "0001-01-01T00:00:00Z"
   },
   {
    "ID": "MDU6SXNzdWU3MDMwMjY5MDc=",
    "Title": "RFC 235: Tracking issue",
    "Body": "Tracking issue for [RFC 235: Move LSIF data to Postgres](https://docs.google.com/document/d/1Y9p29hK8xrPUTvBdWqP9uAHDg3JLV-HCaxsbCo9-YHQ).\r\n\r\n### Tracked issues\r\n\r\n\u003c!-- BEGIN WORK --\u003e\n\u003c!-- BEGIN ASSIGNEE: efritz --\u003e\n@efritz: __5.50d__\n\n- [ ] RFC 235: Cleanup ([#13890](https://github.com/sourcegraph/sourcegraph/issues/13890)) __1d__ \n- [ ] RFC 235: Update worker to write to Postgres ([#13889](https://github.com/sourcegraph/sourcegraph/issues/13889); PRs: [#13946](https://github.com/sourcegraph/sourcegraph/pull/13946), [#13923](https://github.com/sourcegraph/sourcegraph/pull/13923)) __0.5d__ \n- [ ] RFC 235: Migrate SQLite data to Postgres ([#13888](https://github.com/sourcegraph/sourcegraph/issues/13888); PRs: [#13932](https://github.com/sourcegraph/sourcegraph/pull/13932), [#13923](https://github.com/sourcegraph/sourcegraph/pull/13923)) __0.5d__ \n- [ ] RFC 235: Update bundle manager to read from Postgres ([#13886](https://github.com/sourcegraph/sourcegraph/issues/13886); PRs: [#13924](https://github.com/sourcegraph/sourcegraph/pull/13924), [#13923](https://github.com/sourcegraph/sourcegraph/pull/13923)) __0.5d__ \n- [ ] RFC 235: Add migration infrastructure to codeintel database ([#13885](https://github.com/sourcegraph/sourcegraph/issues/13885); PRs: ~[#13943](https://github.com/sourcegraph/sourcegraph/pull/13943)~, [#13903](https://github.com/sourcegraph/sourcegraph/pull/13903)) __1d__ \n- [ ] RFC 235: Configure connection to codeintel database ([#13884](https://github.com/sourcegraph/sourcegraph/issues/13884); PRs: ~[#13952](https://github.com/sourcegraph/sourcegraph/pull/13952)~, [#13864](https://github.com/sourcegraph/sourcegraph/pull/13864)) __0.5d__ \n- [ ] RFC 235: Add code intel postgres container ([#13883](https://github.com/sourcegraph/sourcegraph/issues/13883); PRs: [#13924](https://github.com/sourcegraph/sourcegraph/pull/13924), [#13904](https://github.com/sourcegraph/sourcegraph/pull/13904), [#13864](https://github.com/sourcegraph/sourcegraph/pull/13864)) __1d__ \n- [ ] codeintel: RFC 235: Soft delete upload records [#13822](https://github.com/sourcegraph/sourcegraph/pull/13822) :shipit:\n\nCompleted: __0.50d__\n- [x] RFC 235: Add code intel postgres image ([~#13912~](https://github.com/sourcegraph/sourcegraph/issues/13912); PRs: ~[#13913](https://github.com/sourcegraph/sourcegraph/pull/13913)~) __0.5d__ \n- [x] chore: Set exec bit on docker-images/codeintel-db/build.sh [#13955](https://github.com/sourcegraph/sourcegraph/pull/13955) :shipit:\n- [x] chore: Multiple database handles [#13952](https://github.com/sourcegraph/sourcegraph/pull/13952) :shipit:\n- [x] chore: Relocate frontend migrations [#13943](https://github.com/sourcegraph/sourcegraph/pull/13943) :shipit:\n- [x] chore: Co-locate dev scripts to interact with postgres [#13942](https://github.com/sourcegraph/sourcegraph/pull/13942) :shipit:\n- [x] codeintel: RFC 235: Add code intel postgres image [#13913](https://github.com/sourcegraph/sourcegraph/pull/13913) :shipit:\n\u003c!-- END ASSIGNEE --\u003e\n\u003c!-- END WORK --\u003e\r\n\r\n#### Legend\r\n\r\n- üë© Customer issue\r\n- üêõ Bug\r\n- üß∂ Technical debt\r\n- üé© Quality of life\r\n- üõ†Ô∏è [Roadmap](https://docs.google.com/document/d/1cBsE9801DcBF9chZyMnxRdolqM_1c2pPyGQz15QAvYI/edit#heading=h.5nwl5fv52ess)\r\n- üïµÔ∏è [Spike](https://en.wikipedia.org/wiki/Spike_(software_development))\r\n- üîí Security issue\r\n- :shipit: Pull Request\r\n",
    "Number": 13882,
    "URL": "https://github.com/sourcegraph/sourcegraph/issues/13882",
    "State": "OPEN",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "RFC-235",
     "team/code-intelligence",
     "tracking"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.21",
    "Author": "efritz",
    "CreatedAt": "2020-09-16T19:44:16Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "0001-01-01T00:00:00Z"
   },
   {
    "ID": "MDU6SXNzdWU2OTI1MjY2MDc=",
    "Title": "infer project root automatically if not specified",
    "Body": "Right now users are required to specify the project root using the --project-root command line flag, but this is almost always $(pwd). If not supplied, we should use the working directory.",
    "Number": 15,
    "URL": "https://github.com/sourcegraph/lsif-clang/issues/15",
    "State": "OPEN",
    "Repository": "sourcegraph/lsif-clang",
    "Private": false,
    "Labels": [
     "enhancement",
     "team/code-intelligence"
    ],
    "Assignees": [
     "gbrik"
    ],
    "Milestone": "3.21",
    "Author": "gbrik",
    "CreatedAt": "2020-09-03T23:58:59Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "0001-01-01T00:00:00Z"
   },
   {
    "ID": "MDU6SXNzdWU2OTI0NTkxMjk=",
    "Title": "github.com/gabime/spdlog doesn't produce LSIF output for template definitions",
    "Body": "```\r\ncmake -B build -S . -DCMAKE_EXPORT_COMPILE_COMMANDS=ON\r\nln -s $(pwd)/build/compile_commands.json ./\r\nlsif-clang --project-root=$(pwd) --executor=all-TUs compile_commands.json \u003e dump.lsif\r\n```\r\nProduces a valid LSIF output, but some ranges (e.g. source/stdout_sinks.cpp line 21) don't have output. I suspect this is because they are template definitions which have no uses in the project. Resolution would be to figure out how to coax LibTooling to provide us this info, or make sure we aren't accidentally filtering it out.",
    "Number": 14,
    "URL": "https://github.com/sourcegraph/lsif-clang/issues/14",
    "State": "OPEN",
    "Repository": "sourcegraph/lsif-clang",
    "Private": false,
    "Labels": [
     "bug",
     "team/code-intelligence"
    ],
    "Assignees": [
     "gbrik"
    ],
    "Milestone": "3.21",
    "Author": "gbrik",
    "CreatedAt": "2020-09-03T22:38:41Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "0001-01-01T00:00:00Z"
   },
   {
    "ID": "MDU6SXNzdWU2OTI0NTQyOTk=",
    "Title": "github.com/nlohmann/json on macOS fails",
    "Body": "Running commands\r\n\r\n```bash\r\ncmake -B build -S . -DCMAKE_EXPORT_COMPILE_COMMANDS=ON\r\ncp ./build/compile_commands.json .\r\nlsif-clang --extra-arg='-resource-dir=/Library/Developer/CommandLineTools/usr/lib/clang/11.0.3' --executor=all-TUs compile_commands.json \u003e dump.lsif\r\n```\r\n\r\nexits with status 138.\r\n\r\n```\r\n...\r\n[40/50] Processing file /Users/efritz/Downloads/cpptest/json/test/src/unit-to_chars.cpp\r\n[41/50] Processing file /Users/efritz/Downloads/cpptest/json/test/src/unit-inspection.cpp\r\n[42/50] Processing file /Users/efritz/Downloads/cpptest/json/test/src/unit-serialization.cpp\r\n[43/50] Processing file /Users/efritz/Downloads/cpptest/json/test/src/unit-ordered_json.cpp\r\n[44/50] Processing file /Users/efritz/Downloads/cpptest/json/test/src/unit-merge_patch.cpp\r\n[45/50] Processing file /Users/efritz/Downloads/cpptest/json/test/src/unit-reference_access.cpp\r\n[46/50] Processing file /Users/efritz/Downloads/cpptest/json/test/src/unit-assert_macro.cpp\r\n[1]    93496 bus error  lsif-clang  --executor=all-TUs compile_commands.json \u003e dump.lsif\r\n```\r\nThe same process produces a successful LSIF dump on Ubuntu 20.04.",
    "Number": 13,
    "URL": "https://github.com/sourcegraph/lsif-clang/issues/13",
    "State": "OPEN",
    "Repository": "sourcegraph/lsif-clang",
    "Private": false,
    "Labels": [
     "bug",
     "team/code-intelligence"
    ],
    "Assignees": [
     "gbrik"
    ],
    "Milestone": "3.21",
    "Author": "gbrik",
    "CreatedAt": "2020-09-03T22:33:54Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "0001-01-01T00:00:00Z"
   },
   {
    "ID": "MDU6SXNzdWU2OTIxNzAzNzg=",
    "Title": "Create successful and reproducible indexes of 20 OSS repos",
    "Body": "Steps for everyone:\r\n\r\n1. Find a popular open source C++ repository which is not already documented in this thread. if you can think of one yourself, do that! otherwise here's some lists: [GitHub trending](https://github.com/trending/c++), [CodeTriage](https://www.codetriage.com/?language=C%2B%2B), [awesome-cpp](https://github.com/fffaraz/awesome-cpp).\r\n1. Follow the documentation on this repo to create an lsif index of the chosen repository. For now, use the [simplify-cmake](https://github.com/sourcegraph/lsif-clang/tree/simplify-cmake) branch. If you're unable to create an index, file a bug documenting what you tried.\r\n1. Follow the sourcegraph documentation to upload the lsif index to sourcegraph.com, and confirm that the c++ codenav works (feel free to spend lots of time here, C++ is a strange beast so click on some strange code to make sure it's getting indexed properly!)\r\n1. Document the steps from cloning to successful index creation (not including getting deps for and building lsif-clang)\r\n\r\nSteps for Garo:\r\n\r\n1. Reproduce all of the above",
    "Number": 12,
    "URL": "https://github.com/sourcegraph/lsif-clang/issues/12",
    "State": "OPEN",
    "Repository": "sourcegraph/lsif-clang",
    "Private": false,
    "Labels": [
     "enhancement",
     "help wanted",
     "team/code-intelligence"
    ],
    "Assignees": [
     "aidaeology",
     "gbrik"
    ],
    "Milestone": "3.21",
    "Author": "gbrik",
    "CreatedAt": "2020-09-03T18:04:37Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "0001-01-01T00:00:00Z"
   },
   {
    "ID": "MDU6SXNzdWU2ODMyMDM0MjI=",
    "Title": "Investigate effort for Bazel integration",
    "Body": "Many prospects and customers (such as ....) rely on Bazel broadly across their organization to build and manage their projects, and we need to build an integration that can support the more complex monorepos structures and workflows. Bazel support also opens the door to two other important features: remote development and automated refactoring. \r\n\r\nThis spike is for researching the development effort required for building integration with code intelligence tools.  To start we will limit the scope of this work to basic code intelligence. Specifically we need to know how Bazel transitive dependencies/dependents info can be used to provide cross-repository/package references in basic code intel.\r\n\r\n",
    "Number": 13202,
    "URL": "https://github.com/sourcegraph/sourcegraph/issues/13202",
    "State": "OPEN",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "estimate/1d",
     "feature-request",
     "planned/3.20",
     "spike",
     "team/code-intelligence"
    ],
    "Assignees": [
     "gbrik"
    ],
    "Milestone": "3.21",
    "Author": "aidaeology",
    "CreatedAt": "2020-08-21T02:01:54Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "0001-01-01T00:00:00Z"
   },
   {
    "ID": "MDU6SXNzdWU2ODA2MDQ2MjA=",
    "Title": "no output produced for seemingly well-formed compile_commands.json",
    "Body": "technical details are private, but the gist is that the tool builds successfully, and a compile_commands is generated by the user's distributed build system. when the tool is run, no frontend compilation occurs and the output dump.lsif contains only a meta and project vertex. nothing looks suspicious in the compile_commands.json, but some details to note:\r\n- the same file is compiled multiple times with different options\r\n- the file may not have been generated on the same machine the tool is being run on",
    "Number": 4,
    "URL": "https://github.com/sourcegraph/lsif-clang/issues/4",
    "State": "OPEN",
    "Repository": "sourcegraph/lsif-clang",
    "Private": false,
    "Labels": [
     "bug",
     "team/code-intelligence"
    ],
    "Assignees": [
     "gbrik"
    ],
    "Milestone": "3.21",
    "Author": "gbrik",
    "CreatedAt": "2020-08-18T00:30:56Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "0001-01-01T00:00:00Z"
   },
   {
    "ID": "MDU6SXNzdWU2ODA2MDExMjA=",
    "Title": "doesn't work on arch linux",
    "Body": "arch linux installation simply provides a `clang` binary and a single shared library, which doesn't work with the current CMake file. we need to modify the cmake file to also support arch linux.\r\n\r\nalso, the compile_commands generated on arch linux have a wonky system include path, which precludes any code intelligence from standard library functions.",
    "Number": 1,
    "URL": "https://github.com/sourcegraph/lsif-clang/issues/1",
    "State": "OPEN",
    "Repository": "sourcegraph/lsif-clang",
    "Private": false,
    "Labels": [
     "bug",
     "team/code-intelligence"
    ],
    "Assignees": [
     "gbrik"
    ],
    "Milestone": "3.21",
    "Author": "gbrik",
    "CreatedAt": "2020-08-18T00:19:58Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "0001-01-01T00:00:00Z"
   },
   {
    "ID": "MDU6SXNzdWU2NzkyOTQwNTk=",
    "Title": "üöö LSIF-Java Delivery ",
    "Body": "The goal of this task is to ship LSIF-java v1.0 to customers:\r\n\r\n1. Fix any [outstanding bugs and issues](https://github.com/sourcegraph/lsif-java/issues?q=is%3Aopen+is%3Aissue+label%3Abug) for LSIF-java.\r\n1. Benchmark and test LSIF-java for performance, determine if there are any bottlenecks that need to be resolved.\r\n1. Work with three existing customers below to deploy LSIF-java successfully and work out any potential technical blockers or usability issues so that LSIF-java can be used by all customers as part of a wide release.\r\n\r\n- [ ] Customer 1: https://github.com/sourcegraph/customer/issues/79\r\n- [ ] Customer 2: https://github.com/sourcegraph/customer/issues/80\r\n- [ ] Customer 3: https://github.com/sourcegraph/customer/issues/81\r\n\r\nOnce this is complete for all three we will mark LSIF-java as stable and ready for general availability.",
    "Number": 13017,
    "URL": "https://github.com/sourcegraph/sourcegraph/issues/13017",
    "State": "OPEN",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "lsif-java",
     "planned/3.20",
     "team/code-intelligence"
    ],
    "Assignees": [
     "Strum355"
    ],
    "Milestone": "3.21",
    "Author": "aidaeology",
    "CreatedAt": "2020-08-14T17:19:14Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "0001-01-01T00:00:00Z"
   },
   {
    "ID": "MDU6SXNzdWU2NzkyODc5MTc=",
    "Title": "üöö LSIF-Go Delivery",
    "Body": "The goal of this task is to ship LSIF-go v1.0 to customers:\r\n\r\n\u003c!--\r\nThis is unrelated to lsif-go, it's about dependency building\r\n1. [Index 5 OSS Go repos](https://github.com/sourcegraph/sourcegraph/issues/9746)\r\n--\u003e\r\n\r\n1. Fix any outstanding bugs and issues for LSIF-go.\r\n1. Benchmark and test LSIF-go for performance, determine if there are any bottlenecks that need to be resolved.\r\n1. Work with the three existing customers below to deploy LSIF-go successfully and work out any potential technical blockers or usability issues so that LSIF-go can be used by all customers as part of a wide release.\r\n\r\n- [ ] Customer 1:  https://github.com/sourcegraph/customer/issues/76\r\n- [ ] Customer 2: https://github.com/sourcegraph/customer/issues/77\r\n- [x] Customer 3: https://github.com/sourcegraph/customer/issues/78\r\n\r\nOnce this is complete for all three we will mark LSIF-go as stable and ready for general availability.",
    "Number": 13015,
    "URL": "https://github.com/sourcegraph/sourcegraph/issues/13015",
    "State": "OPEN",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "estimate/5d",
     "lsif-go",
     "planned/3.20",
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz",
     "aidaeology"
    ],
    "Milestone": "3.21",
    "Author": "aidaeology",
    "CreatedAt": "2020-08-14T17:06:43Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "0001-01-01T00:00:00Z"
   },
   {
    "ID": "MDU6SXNzdWU2NzcyOTc1MDE=",
    "Title": "504 Gateway Timeouts when mousing over after the page has loaded for a while",
    "Body": "- **Sourcegraph version:** 3.18.0\r\n- **Platform information:** Firefox 79.0 on macOS 10.15.5\r\n\r\n#### Steps to reproduce:\r\n\r\n1. Load a source file in Sourcegraph, and mouse over an element to get a code intelligence popup.\r\n2. Move your mouse away to dismiss the popup.\r\n3. Leave the page alone for 5 minutes.\r\n4. Go back to the page and mouse over another element.\r\n\r\n#### Expected behavior:\r\nA code intelligence popup appears.\r\n#### Actual behavior:\r\nNothing happens. Errors show up in the console, and I've attached a screenshot of one set of errors.\r\n\u003cimg width=\"1011\" alt=\"Screen Shot 2020-08-11 at 8 54 50 PM\" src=\"https://user-images.githubusercontent.com/15042336/89963449-a510ff80-dc15-11ea-8919-1d915384a6c4.png\"\u003e\r\n",
    "Number": 12930,
    "URL": "https://github.com/sourcegraph/sourcegraph/issues/12930",
    "State": "CLOSED",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "bug",
     "extensions",
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.21",
    "Author": "lawrence-tan",
    "CreatedAt": "2020-08-12T01:00:15Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "2020-09-21T17:20:24Z"
   },
   {
    "ID": "MDU6SXNzdWU2NzAwOTY3ODE=",
    "Title": "codeintel: git diffing fails graphql requests related to force-pushed commits",
    "Body": "The LSIF GraphQL resolvers have the following high-level flow:\r\n\r\n- Based on the repository, path, commit C1, and requested indexer name, determine the set of uploads/dumps that can answer these queries. Suppose this returns a single upload at commit C2 (this can return zero or more uploads in practice).\r\n- Transform the request path and position wrt C1 into the path and position wrt C2 by running it backwards through the diff of C1...C2.\r\n- Query the bundle with the adjusted path\r\n- Adjust the resulting paths and positions wrt C2 into the path and position wrt C1 by running it forwards through the diff of C1...C2.\r\n\r\nIf there was a force-push that removes commit C2 from the code host between the index and the query, we will make a request to gitserver for a commit that doesn't exist. This will cause an error to be returned by the resolver. We should instead eat this error during step 2 and move on to the next candidate bundle.",
    "Number": 12588,
    "URL": "https://github.com/sourcegraph/sourcegraph/issues/12588",
    "State": "OPEN",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "debt",
     "good first issue",
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.21",
    "Author": "efritz",
    "CreatedAt": "2020-07-31T18:33:14Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "0001-01-01T00:00:00Z"
   },
   {
    "ID": "MDU6SXNzdWU0MzM1MDg0NzY=",
    "Title": "Find references to common Java class method name without false-positives",
    "Body": "(If you already know the state of code intel today, and understand the use case here, skip to the last section for what this issue is)\r\n\r\n## Code intelligence today\r\n\r\nToday, Sourcegraph sports two types of code intelligence:\r\n\r\n- **Basic code intelligence**: Provided by smart / language aware regex-search operations.\r\n    - Pros: Very fast, works well in like 70% of cases.\r\n    - Cons: Can turn up false-positive matches when e.g. doing 'Find references' (the other 30% of cases).\r\n- **Precise code intelligence**: Supported by a separate language server, acting as e.g. a compiler would.\r\n    - Pros: Does type-checking of code as a compiler would, results are accurate in 100% of cases (effectively).\r\n    - Cons: Very resource hungry, and very slow in general (effectively waiting for the project to compile before seeing results).\r\n\r\nSourcegraph by default comes with basic code intelligence easily accessible, and precise code intelligence requiring additional setup / configuration (must deploy language server, secure it behind auth proxy, etc.)\r\n\r\n## A common use case\r\n\r\nA very common user story is asking Sourcegraph a question like:\r\n\r\n\u003e Where are all of the callers of my deprecated method `MyClass.foobar()`?\r\n\r\nBoth basic and precise code intelligence can answer this question via `Find references`, but each with different drawbacks:\r\n\r\n- basic code intelligence:\r\n    - Provides many false positives (if `foobar` is a common method name, basic code intelligence is not class-aware and does not know that e.g. `myClassInstance.foobar()` is of type `MyClass` and therefor simply finds all results where a `foobar` method is invoked).\r\n    - Many false positives are too vast when searching over thousands of repositories.\r\n- precise code intelligence:\r\n    - We don't currently have Java precise code intelligence. \r\n    - Requires extra setup on the instance administrator's part.\r\n    - Requires significantly more resources, is slow, requires additional configuration (e.g. even repo-level configuration to explain to language server how to build project).\r\n    - Deploying this is a heavy burden both for site admins and a user who asks their site admin to do it.\r\n\r\nBoth approaches _can_ solve the problem, but each have significant drawbacks.\r\n\r\n## This issue\r\n\r\n**This issue is merely to publicly track that this is a problem we want to solve.**\r\n\r\n**Possible ways we may solve the problem include:**\r\n\r\n- An experiment we may try with basic code intel in which we index all tokens and their corresponding type in order to make find refs more accurate (perhaps using tree-sitter).\r\n\r\n**Possible ways we would mitigate the issue:**\r\n\r\n- Add Java precise code intelligence, then have the option to choose between basic and precise references when you execute a `Find references` action.\r\n\r\nNone of the above are concrete and we (currently) do not have a concrete timeline for this as it is a very difficult problem to solve. We'll provide updates on this issue as we learn more.\r\n\r\nCustomers: https://app.hubspot.com/contacts/2762526/company/407948923 ",
    "Number": 3418,
    "URL": "https://github.com/sourcegraph/sourcegraph/issues/3418",
    "State": "OPEN",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "feature-request",
     "team/code-intelligence"
    ],
    "Assignees": [
     "Strum355"
    ],
    "Milestone": "3.21",
    "Author": "slimsag",
    "CreatedAt": "2019-04-15T22:41:26Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "0001-01-01T00:00:00Z"
   }
  ],
  "PRs": [
   {
    "ID": "MDExOlB1bGxSZXF1ZXN0NDkxOTMwNjI4",
    "Title": "tracking-issue: Fix strikethrough on closed (un-merged) PRs",
    "Body": "Display a strikethrough on the title of closed (but un-merged) PRs.",
    "Number": 14107,
    "URL": "https://github.com/sourcegraph/sourcegraph/pull/14107",
    "State": "MERGED",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.21",
    "Author": "efritz",
    "CreatedAt": "2020-09-23T17:27:27Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "2020-09-23T17:35:37Z",
    "BeganAt": "2020-09-23T17:26:47Z"
   },
   {
    "ID": "MDExOlB1bGxSZXF1ZXN0NDkxOTIwODY5",
    "Title": "codeintel: Refactor index command construction",
    "Body": "",
    "Number": 14105,
    "URL": "https://github.com/sourcegraph/sourcegraph/pull/14105",
    "State": "OPEN",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "RFC-201",
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.21",
    "Author": "efritz",
    "CreatedAt": "2020-09-23T17:07:35Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "0001-01-01T00:00:00Z",
    "BeganAt": "2020-09-23T15:42:38Z"
   },
   {
    "ID": "MDExOlB1bGxSZXF1ZXN0NDkxODc3ODQ5",
    "Title": "codeintel: Lower indexer output to debug level",
    "Body": "Showing all output is very noisy.",
    "Number": 14103,
    "URL": "https://github.com/sourcegraph/sourcegraph/pull/14103",
    "State": "MERGED",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "RFC-201",
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.21",
    "Author": "efritz",
    "CreatedAt": "2020-09-23T15:50:29Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "2020-09-23T16:29:29Z",
    "BeganAt": "2020-09-23T15:42:38Z"
   },
   {
    "ID": "MDExOlB1bGxSZXF1ZXN0NDkxODc3Mzg5",
    "Title": "codeintel: Refactor command runner in indexer",
    "Body": "This changes the signature of `Commander` which used to take a command and a series of arguments to take only a series of arguments. This also validates the initial command to prevent against arbitrary execution.",
    "Number": 14102,
    "URL": "https://github.com/sourcegraph/sourcegraph/pull/14102",
    "State": "MERGED",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "RFC-201",
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.21",
    "Author": "efritz",
    "CreatedAt": "2020-09-23T15:49:41Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "2020-09-23T16:11:57Z",
    "BeganAt": "2020-09-23T15:42:38Z"
   },
   {
    "ID": "MDExOlB1bGxSZXF1ZXN0NDkxMjI3NDE4",
    "Title": "Add history of code intelligence",
    "Body": "From notes I took in various discussions.",
    "Number": 1628,
    "URL": "https://github.com/sourcegraph/about/pull/1628",
    "State": "OPEN",
    "Repository": "sourcegraph/about",
    "Private": false,
    "Labels": [
     "handbook",
     "team/code-intelligence"
    ],
    "Assignees": [
     "aidaeology"
    ],
    "Milestone": "3.21",
    "Author": "aidaeology",
    "CreatedAt": "2020-09-22T22:28:33Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "0001-01-01T00:00:00Z",
    "BeganAt": "2020-09-22T22:27:35Z"
   },
   {
    "ID": "MDExOlB1bGxSZXF1ZXN0NDkxMDkwODg2",
    "Title": "workerutil: Add isolation level option to store",
    "Body": "Closes https://github.com/sourcegraph/sourcegraph/issues/14044.",
    "Number": 14063,
    "URL": "https://github.com/sourcegraph/sourcegraph/pull/14063",
    "State": "CLOSED",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.21",
    "Author": "efritz",
    "CreatedAt": "2020-09-22T17:31:19Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "2020-09-23T17:02:28Z",
    "BeganAt": "2020-09-22T17:09:23Z"
   },
   {
    "ID": "MDExOlB1bGxSZXF1ZXN0NDkxMDgxMDIx",
    "Title": "db: Add sql.TxOptions to basestore",
    "Body": "Closes https://github.com/sourcegraph/sourcegraph/issues/14044.\r\n\r\n**Updated**:\r\n\r\nPreviously this PR added sql options at the time the transaction is opened. Instead, we should be supplying them at the time the database handle is created. This seems like a more appropriate solution and should enable @asdine to choose the correct transaction options when the store powering the worker is created.",
    "Number": 14061,
    "URL": "https://github.com/sourcegraph/sourcegraph/pull/14061",
    "State": "OPEN",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.21",
    "Author": "efritz",
    "CreatedAt": "2020-09-22T17:11:02Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "0001-01-01T00:00:00Z",
    "BeganAt": "2020-09-23T16:58:31Z"
   },
   {
    "ID": "MDExOlB1bGxSZXF1ZXN0NDkxMDYxNDIz",
    "Title": "codenotify: Configure efritz's subscriptions",
    "Body": "I see @eseliger has added stuff into the root file. Should we standardize on a way to configure this (prefer subdirectory configuration over root-directory configuration)?",
    "Number": 14060,
    "URL": "https://github.com/sourcegraph/sourcegraph/pull/14060",
    "State": "MERGED",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.21",
    "Author": "efritz",
    "CreatedAt": "2020-09-22T16:32:32Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "2020-09-23T16:10:33Z",
    "BeganAt": "2020-09-22T16:30:45Z"
   },
   {
    "ID": "MDExOlB1bGxSZXF1ZXN0NDkwNjUzMzY0",
    "Title": "tracking-issue: Better nested tracking issue estimates",
    "Body": "Calculate the time required to complete all the tasks of a nested tracking issue.",
    "Number": 14035,
    "URL": "https://github.com/sourcegraph/sourcegraph/pull/14035",
    "State": "MERGED",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.21",
    "Author": "efritz",
    "CreatedAt": "2020-09-22T02:24:35Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "2020-09-22T15:10:09Z",
    "BeganAt": "2020-09-21T20:41:18Z"
   },
   {
    "ID": "MDExOlB1bGxSZXF1ZXN0NDkwNjQ4MDk1",
    "Title": "tracking-issue: Separate complete/incomplete work",
    "Body": "Display complete and incomplete work separately. I find this much easier to read at a glance (especially as I use it as a TODO/find-next-task list).\r\n\r\n\u003cimg width=\"866\" alt=\"Screen Shot 2020-09-21 at 9 01 05 PM\" src=\"https://user-images.githubusercontent.com/103087/93837943-9f173100-fc4d-11ea-8d2d-8dfad46aef28.png\"\u003e\r\n",
    "Number": 14034,
    "URL": "https://github.com/sourcegraph/sourcegraph/pull/14034",
    "State": "MERGED",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.21",
    "Author": "efritz",
    "CreatedAt": "2020-09-22T02:02:42Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "2020-09-22T15:00:10Z",
    "BeganAt": "2020-09-21T20:41:18Z"
   },
   {
    "ID": "MDExOlB1bGxSZXF1ZXN0NDkwNjMxOTY0",
    "Title": "tracking-issue: List PRs for an issue inline",
    "Body": "**Before:**\r\n\r\n\u003cimg width=\"866\" alt=\"Screen Shot 2020-09-21 at 7 48 16 PM\" src=\"https://user-images.githubusercontent.com/103087/93835091-bd782f00-fc43-11ea-942b-a3c485cc608c.png\"\u003e\r\n\r\n**After:**\r\n\r\n\u003cimg width=\"866\" alt=\"Screen Shot 2020-09-21 at 7 47 49 PM\" src=\"https://user-images.githubusercontent.com/103087/93835084-bb15d500-fc43-11ea-9b7d-bbdae88727c6.png\"\u003e\r\n",
    "Number": 14018,
    "URL": "https://github.com/sourcegraph/sourcegraph/pull/14018",
    "State": "MERGED",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.21",
    "Author": "efritz",
    "CreatedAt": "2020-09-22T00:51:28Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "2020-09-22T14:50:13Z",
    "BeganAt": "2020-09-21T20:41:18Z"
   },
   {
    "ID": "MDExOlB1bGxSZXF1ZXN0NDkwNjEzNzg1",
    "Title": "tracking-issue: Break code up into files according to type/action",
    "Body": "This PR contains only code _movement_. No code was altered except for imports.",
    "Number": 14013,
    "URL": "https://github.com/sourcegraph/sourcegraph/pull/14013",
    "State": "MERGED",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.21",
    "Author": "efritz",
    "CreatedAt": "2020-09-21T23:36:45Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "2020-09-22T14:39:58Z",
    "BeganAt": "2020-09-21T20:41:18Z"
   },
   {
    "ID": "MDExOlB1bGxSZXF1ZXN0NDkwNTQ3ODg5",
    "Title": "tracking-issue: Parallelize writes",
    "Body": "We still have timeouts if we need to update too many issues. This breaks the other expensive GraphQL request up.",
    "Number": 14006,
    "URL": "https://github.com/sourcegraph/sourcegraph/pull/14006",
    "State": "MERGED",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.21",
    "Author": "efritz",
    "CreatedAt": "2020-09-21T20:41:57Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "2020-09-22T14:30:13Z",
    "BeganAt": "2020-09-21T20:41:18Z"
   },
   {
    "ID": "MDExOlB1bGxSZXF1ZXN0NDkwNTE3MzU2",
    "Title": "codeintel: Resolve abbreviated OID",
    "Body": "Closes https://github.com/sourcegraph/sourcegraph/issues/13957.\r\n\r\nThis replaces the query string commit value with the one given back by gitserver when ensuring that commit exists. Using this value ensures that it's a 40-character revhash, which is what we require going into the database.",
    "Number": 14005,
    "URL": "https://github.com/sourcegraph/sourcegraph/pull/14005",
    "State": "MERGED",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.21",
    "Author": "efritz",
    "CreatedAt": "2020-09-21T19:40:38Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "2020-09-21T19:59:39Z",
    "BeganAt": "2020-09-21T19:38:34Z"
   },
   {
    "ID": "MDExOlB1bGxSZXF1ZXN0NDkwNDIzNTk1",
    "Title": "tracking-issue: Nested tracking issues",
    "Body": "I use tracking issues to track progress on RFC implementation. This PR nests issues tracked _more closely_ by another tracking issue under that tracking issue.\r\n\r\n\u003cimg width=\"752\" alt=\"Screen Shot 2020-09-21 at 11 47 20 AM\" src=\"https://user-images.githubusercontent.com/103087/93796300-453c4a00-fc00-11ea-99d5-0885572e15e5.png\"\u003e\r\n",
    "Number": 13998,
    "URL": "https://github.com/sourcegraph/sourcegraph/pull/13998",
    "State": "MERGED",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.21",
    "Author": "efritz",
    "CreatedAt": "2020-09-21T16:35:46Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "2020-09-21T20:03:57Z",
    "BeganAt": "2020-09-21T16:34:29Z"
   },
   {
    "ID": "MDExOlB1bGxSZXF1ZXN0NDkwMzk3MTY0",
    "Title": "tracking-issue: Fix long-form linked issues",
    "Body": "A PR and an issue were only linked if the PR contained the `#issue-number` link form, but not if you use the full URL, e.g. `https://github.com/sg/sg/issues/issue-number`. This PR adds a pattern matching for the second format.",
    "Number": 13989,
    "URL": "https://github.com/sourcegraph/sourcegraph/pull/13989",
    "State": "MERGED",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.21",
    "Author": "efritz",
    "CreatedAt": "2020-09-21T15:49:49Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "2020-09-21T16:29:37Z",
    "BeganAt": "2020-09-21T15:17:45Z"
   },
   {
    "ID": "MDExOlB1bGxSZXF1ZXN0NDkwMzg1Nzgx",
    "Title": "tracking-issue: Fix timeout",
    "Body": "This loads each tracking issue as a separate GraphQL request done concurrently rather than one giant GraphQL request that is likely to timeout as the number of active tracking issues grows.",
    "Number": 13986,
    "URL": "https://github.com/sourcegraph/sourcegraph/pull/13986",
    "State": "MERGED",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.21",
    "Author": "efritz",
    "CreatedAt": "2020-09-21T15:31:26Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "2020-09-21T16:25:15Z",
    "BeganAt": "2020-09-21T15:17:45Z"
   },
   {
    "ID": "MDExOlB1bGxSZXF1ZXN0NDg5MzgxMTQz",
    "Title": "chore: Set exec bit on docker-images/codeintel-db/build.sh",
    "Body": "The build script is not executable and is failing CI on the main branch.\r\n\r\nhttps://buildkite.com/sourcegrapSee h/sourcegraph/builds/73797#5ab928c7-ad85-4368-aec3-50b24a4afac7.",
    "Number": 13955,
    "URL": "https://github.com/sourcegraph/sourcegraph/pull/13955",
    "State": "MERGED",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "RFC-235",
     "team/code-intelligence"
    ],
    "Assignees": [],
    "Milestone": "3.21",
    "Author": "efritz",
    "CreatedAt": "2020-09-18T15:15:28Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "2020-09-18T15:22:28Z",
    "BeganAt": "2020-09-18T15:14:28Z"
   },
   {
    "ID": "MDExOlB1bGxSZXF1ZXN0NDg5MzM5MzI2",
    "Title": "chore: Multiple database handles",
    "Body": "https://github.com/sourcegraph/sourcegraph/issues/13884 requires that we connect to multiple databases in an application. This PR renames `ConnectToDB` to `SetupGlobalConnection` and creates a new version of the method `dbutil.New` that returns a Postgres handler instead of storing it in a global variable.",
    "Number": 13952,
    "URL": "https://github.com/sourcegraph/sourcegraph/pull/13952",
    "State": "MERGED",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "RFC-235",
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.21",
    "Author": "efritz",
    "CreatedAt": "2020-09-18T14:06:49Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "2020-09-18T14:57:25Z",
    "BeganAt": "2020-09-18T14:04:02Z"
   },
   {
    "ID": "MDExOlB1bGxSZXF1ZXN0NDg5MDM0Nzc1",
    "Title": "codeintel: RFC 235: Update worker to write to Postgres",
    "Body": "A step towards [RFC 235: Move LSIF data to Postgres](https://docs.google.com/document/u/1/d/1Y9p29hK8xrPUTvBdWqP9uAHDg3JLV-HCaxsbCo9-YHQ). Closes https://github.com/sourcegraph/sourcegraph/issues/13889.\r\n\r\nThis PR writes new data to the Postgres-backed bundle store introduced https://github.com/sourcegraph/sourcegraph/pull/13923. **Do not** merge this PR until https://github.com/sourcegraph/sourcegraph/pull/13924 has been completed and deployed.",
    "Number": 13946,
    "URL": "https://github.com/sourcegraph/sourcegraph/pull/13946",
    "State": "OPEN",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "RFC-235",
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.21",
    "Author": "efritz",
    "CreatedAt": "2020-09-18T02:51:53Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "0001-01-01T00:00:00Z",
    "BeganAt": "2020-09-18T17:50:51Z"
   },
   {
    "ID": "MDExOlB1bGxSZXF1ZXN0NDg5MDEyNTUx",
    "Title": "chore: Relocate frontend migrations",
    "Body": "https://github.com/sourcegraph/sourcegraph/issues/13885 requires that we duplicate the migration infrastructure used for the frontend so that we can use it independently but symmetrically in the code intel database.\r\n\r\nThis moves the frontend migrations so that we can make some room for additional migration paths. This is only split out to minimize the diff for later PRs which should not have lots of renames grabbing attention.",
    "Number": 13943,
    "URL": "https://github.com/sourcegraph/sourcegraph/pull/13943",
    "State": "MERGED",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "RFC-235",
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.21",
    "Author": "efritz",
    "CreatedAt": "2020-09-18T01:25:43Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "2020-09-18T16:05:39Z",
    "BeganAt": "2020-09-18T14:17:15Z"
   },
   {
    "ID": "MDExOlB1bGxSZXF1ZXN0NDg5MDEyMjU4",
    "Title": "chore: Co-locate dev scripts to interact with postgres",
    "Body": "Our dev directory is a mess - this groups the scripts that I'm planning to work on together making it just a little bit more cohesive and less of a junk drawer.",
    "Number": 13942,
    "URL": "https://github.com/sourcegraph/sourcegraph/pull/13942",
    "State": "MERGED",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "RFC-235",
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.21",
    "Author": "efritz",
    "CreatedAt": "2020-09-18T01:24:25Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "2020-09-18T14:42:26Z",
    "BeganAt": "2020-09-18T14:11:35Z"
   },
   {
    "ID": "MDExOlB1bGxSZXF1ZXN0NDg4OTcxMjc5",
    "Title": "codeintel: RFC 235: Migrate SQLite data to Postgres",
    "Body": "A step towards [RFC 235: Move LSIF data to Postgres](https://docs.google.com/document/u/1/d/1Y9p29hK8xrPUTvBdWqP9uAHDg3JLV-HCaxsbCo9-YHQ). Closes https://github.com/sourcegraph/sourcegraph/issues/13888.\r\n\r\nThis PR migrates existing data to the Postgres-backed bundle store introduced https://github.com/sourcegraph/sourcegraph/pull/13923. **Do not** merge this PR until https://github.com/sourcegraph/sourcegraph/pull/13924 has been completed and deployed.",
    "Number": 13932,
    "URL": "https://github.com/sourcegraph/sourcegraph/pull/13932",
    "State": "OPEN",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "RFC-235",
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.21",
    "Author": "efritz",
    "CreatedAt": "2020-09-17T22:52:19Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "0001-01-01T00:00:00Z",
    "BeganAt": "2020-09-18T17:53:21Z"
   },
   {
    "ID": "MDExOlB1bGxSZXF1ZXN0NDg4ODgzMTY3",
    "Title": "codeintel: RFC 235: Update bundle manager to read from Postgres",
    "Body": "A step towards [RFC 235: Move LSIF data to Postgres](https://docs.google.com/document/u/1/d/1Y9p29hK8xrPUTvBdWqP9uAHDg3JLV-HCaxsbCo9-YHQ). Closes https://github.com/sourcegraph/sourcegraph/issues/13886.\r\n\r\nThis PR adds a db call to the new Postgres-backed bundle store introduced https://github.com/sourcegraph/sourcegraph/pull/13923 before falling back to disk. **Do not** merge this PR until https://github.com/sourcegraph/sourcegraph/issues/13883 and https://github.com/sourcegraph/sourcegraph/pull/13903 has been completed and deployed.",
    "Number": 13924,
    "URL": "https://github.com/sourcegraph/sourcegraph/pull/13924",
    "State": "OPEN",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "RFC-235",
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.21",
    "Author": "efritz",
    "CreatedAt": "2020-09-17T19:26:25Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "0001-01-01T00:00:00Z",
    "BeganAt": "2020-09-18T17:49:36Z"
   },
   {
    "ID": "MDExOlB1bGxSZXF1ZXN0NDg4ODgzMTU4",
    "Title": "codeintel: RFC 235: Add postgres-backed store implementation",
    "Body": "A step towards [RFC 235: Move LSIF data to Postgres](https://docs.google.com/document/u/1/d/1Y9p29hK8xrPUTvBdWqP9uAHDg3JLV-HCaxsbCo9-YHQ). This a prerequisite to https://github.com/sourcegraph/sourcegraph/issues/13886, https://github.com/sourcegraph/sourcegraph/issues/13888, and https://github.com/sourcegraph/sourcegraph/issues/13889.\r\n\r\nThis PR adds a bundle store implementation that targets Postgres, but does not update any place where SQLite is currently used. These need to be added in a certain order to ensure we do not write data to a place we're not querying. **Do not** use this new code until https://github.com/sourcegraph/sourcegraph/issues/13887 has been completed and deployed.",
    "Number": 13923,
    "URL": "https://github.com/sourcegraph/sourcegraph/pull/13923",
    "State": "OPEN",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "RFC-235",
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.21",
    "Author": "efritz",
    "CreatedAt": "2020-09-17T19:26:24Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "0001-01-01T00:00:00Z",
    "BeganAt": "2020-09-18T17:40:57Z"
   },
   {
    "ID": "MDExOlB1bGxSZXF1ZXN0NDg4NzI0Mjk3",
    "Title": "codeintel: RFC 235: Add code intel postgres image",
    "Body": "A step towards [RFC 235: Move LSIF data to Postgres](https://docs.google.com/document/u/1/d/1Y9p29hK8xrPUTvBdWqP9uAHDg3JLV-HCaxsbCo9-YHQ). Closes https://github.com/sourcegraph/sourcegraph/issues/13912.\r\n\r\nThis creates a new image that can be used as the code intel Postgres database. We're giving it a name instead of using the same postgres container in order to have a more consistent and less implementation-specific name.\r\n",
    "Number": 13913,
    "URL": "https://github.com/sourcegraph/sourcegraph/pull/13913",
    "State": "MERGED",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "RFC-235",
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.21",
    "Author": "efritz",
    "CreatedAt": "2020-09-17T14:46:29Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "2020-09-18T15:12:44Z",
    "BeganAt": "2020-09-18T01:37:58Z"
   },
   {
    "ID": "MDExOlB1bGxSZXF1ZXN0NDg4MzQxMjU5",
    "Title": "codeintel: RFC 235: Add code intel postgres container",
    "Body": "A step towards [RFC 235: Move LSIF data to Postgres](https://docs.google.com/document/u/1/d/1Y9p29hK8xrPUTvBdWqP9uAHDg3JLV-HCaxsbCo9-YHQ). \r\n\r\nAdd environment variables to server and local environments to point code intel database connection environment variables at the existing postgres. The new database schema will be designed so that they can be overlays of each other without conflicts. This allows only one database instance required for local and single-container deployments, and multiple-instance deployments in production environments.\r\n\r\nPartially closes https://github.com/sourcegraph/sourcegraph/issues/13883 along with sibling PRs https://github.com/sourcegraph/deploy-sourcegraph/pull/896 and https://github.com/sourcegraph/deploy-sourcegraph-docker/pull/153.\r\n",
    "Number": 13904,
    "URL": "https://github.com/sourcegraph/sourcegraph/pull/13904",
    "State": "OPEN",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "RFC-235",
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.21",
    "Author": "efritz",
    "CreatedAt": "2020-09-17T01:09:12Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "0001-01-01T00:00:00Z",
    "BeganAt": "2020-09-18T01:37:58Z"
   },
   {
    "ID": "MDExOlB1bGxSZXF1ZXN0NDg4MzM1NjU5",
    "Title": "codeintel: RFC 235: Add migration infrastructure to codeintel database",
    "Body": "A step towards [RFC 235: Move LSIF data to Postgres](https://docs.google.com/document/u/1/d/1Y9p29hK8xrPUTvBdWqP9uAHDg3JLV-HCaxsbCo9-YHQ). Closes https://github.com/sourcegraph/sourcegraph/issues/13885.\r\n\r\nAdds initial schema for the new code intel database. Every test location that loads the frontend migrations will also load the code intel migrations.",
    "Number": 13903,
    "URL": "https://github.com/sourcegraph/sourcegraph/pull/13903",
    "State": "OPEN",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "RFC-235",
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.21",
    "Author": "efritz",
    "CreatedAt": "2020-09-17T00:46:54Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "0001-01-01T00:00:00Z",
    "BeganAt": "2020-09-18T17:35:36Z"
   },
   {
    "ID": "MDExOlB1bGxSZXF1ZXN0NDg4MTE5NjMw",
    "Title": "codeintel: RFC 235: Create connection to codeintel database",
    "Body": "Steps toward [RFC 235: Move LSIF data to Postgres](https://docs.google.com/document/u/1/d/1Y9p29hK8xrPUTvBdWqP9uAHDg3JLV-HCaxsbCo9-YHQ). Closes https://github.com/sourcegraph/sourcegraph/issues/13884. \r\n\r\nThis PR adds `CodeIntelPostgresDSN` to conftypes and connects to the configured DSN in the bundle manager and the worker. **Do not** merge this PR until https://github.com/sourcegraph/sourcegraph/issues/13883 has been completed and deployed.",
    "Number": 13864,
    "URL": "https://github.com/sourcegraph/sourcegraph/pull/13864",
    "State": "OPEN",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "RFC-235",
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.21",
    "Author": "efritz",
    "CreatedAt": "2020-09-16T16:52:57Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "0001-01-01T00:00:00Z",
    "BeganAt": "2020-09-18T17:13:07Z"
   },
   {
    "ID": "MDExOlB1bGxSZXF1ZXN0NDg3NDI1OTcy",
    "Title": "codeintel: RFC 235: Soft delete upload records",
    "Body": "In preparation for [RFC 235](https://docs.google.com/document/d/1Y9p29hK8xrPUTvBdWqP9uAHDg3JLV-HCaxsbCo9-YHQ) which migrates LSIF data to Postgres: This PR introduces a new state for lsif_uploads, `deleted`, which acts as a soft-delete marker for upload records. The janitor is now responsible for hard deleting these records after cleaning up their associated data.\r\n\r\nIn the future, this will allow the janitor to more safely delete data associated with a missing record (if it's soft deleted we know it's not an accident; if it's missing we don't know if it's a part of a database backup, a misconfiguration, etc). There should be no user-observable behavioral changes in this PR.\r\n\r\nThis also does a bit of work required by https://github.com/sourcegraph/sourcegraph/issues/12168, as detailed in the related RFC.",
    "Number": 13822,
    "URL": "https://github.com/sourcegraph/sourcegraph/pull/13822",
    "State": "OPEN",
    "Repository": "sourcegraph/sourcegraph",
    "Private": false,
    "Labels": [
     "RFC-235",
     "team/code-intelligence"
    ],
    "Assignees": [
     "efritz"
    ],
    "Milestone": "3.21",
    "Author": "efritz",
    "CreatedAt": "2020-09-15T16:48:27Z",
    "UpdatedAt": "0001-01-01T00:00:00Z",
    "ClosedAt": "0001-01-01T00:00:00Z",
    "BeganAt": "2020-09-18T01:37:08Z"
   }
  ],
  "LabelAllowlist": null
 }