load("//dev:go_mockgen.bzl", "go_mockgen")
load("//dev:go_defs.bzl", "go_test")
load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "userpasswd",
    srcs = [
        "config.go",
        "config_watch.go",
        "doc.go",
        "handlers.go",
        "lockout.go",
        "metrics.go",
        "provider.go",
        "reset_password.go",
        "set_password.go",
        "template.go",
        "verify_email.go",
    ],
    importpath = "github.com/sourcegraph/sourcegraph/internal/auth/userpasswd",
    visibility = ["//:__subpackages__"],
    deps = [
        "//cmd/frontend/backend",
        "//cmd/frontend/globals",
        "//cmd/frontend/hubspot",
        "//cmd/frontend/hubspot/hubspotutil",
        "//internal/actor",
        "//internal/auth",
        "//internal/auth/providers",
        "//internal/authz",
        "//internal/conf",
        "//internal/conf/conftypes",
        "//internal/cookie",
        "//internal/database",
        "//internal/deviceid",
        "//internal/errcode",
        "//internal/extsvc",
        "//internal/featureflag",
        "//internal/lazyregexp",
        "//internal/rcache",
        "//internal/session",
        "//internal/suspiciousnames",
        "//internal/telemetry",
        "//internal/telemetry/teestore",
        "//internal/txemail",
        "//internal/txemail/txtypes",
        "//internal/types",
        "//internal/usagestats",
        "//lib/errors",
        "//schema",
        "@com_github_golang_jwt_jwt_v4//:jwt",
        "@com_github_gorilla_mux//:mux",
        "@com_github_prometheus_client_golang//prometheus",
        "@com_github_prometheus_client_golang//prometheus/promauto",
        "@com_github_sourcegraph_log//:log",
    ],
)

go_test(
    name = "userpasswd_test",
    timeout = "short",
    srcs = [
        "config_test.go",
        "handlers_test.go",
        "lockout_test.go",
        "main_test.go",
        "mocks_test.go",
        "set_password_test.go",
        "verify_email_test.go",
    ],
    embed = [":userpasswd"],
    tags = [
        # requires localhost database
        "requires-network",
    ],
    deps = [
        "//cmd/frontend/backend",
        "//internal/actor",
        "//internal/conf",
        "//internal/database",
        "//internal/database/dbmocks",
        "//internal/rcache",
        "//internal/session",
        "//internal/telemetry",
        "//internal/telemetry/telemetrytest",
        "//internal/txemail",
        "//internal/types",
        "//lib/errors",
        "//schema",
        "@com_github_derision_test_go_mockgen_v2//testutil/require",
        "@com_github_golang_jwt_jwt_v4//:jwt",
        "@com_github_google_go_cmp//cmp",
        "@com_github_sourcegraph_log//logtest",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//require",
    ],
)

go_mockgen(
    name = "generate_mocks",
    out = "mocks_test.go",
    manifests = [
        "//:mockgen.yaml",
        "//:mockgen.test.yaml",
        "//:mockgen.temp.yaml",
    ],
    deps = [":userpasswd"],
)
