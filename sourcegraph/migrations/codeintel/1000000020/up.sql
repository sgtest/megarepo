BEGIN;

CREATE EXTENSION IF NOT EXISTS pg_trgm;

ALTER TABLE lsif_data_documentation_pages ADD COLUMN search_indexed boolean DEFAULT 'false';

-- We're going to create the new lsif_data_documentation_search_* tables. These tables will have a
-- trigram index and will be data decoded from the GOB encoded lsif_data_documentation_pages.data
-- field, hence an OOB migration is needed as that table is quite large and not decodable in SQL
-- alone.
CREATE TABLE IF NOT EXISTS lsif_data_documentation_search_public (
    -- Metadata fields
    dump_id integer NOT NULL,
    repo_id integer NOT NULL,
    path_id TEXT NOT NULL,
    detail TEXT NOT NULL,

    -- FTS-enabled fields
    lang TEXT NOT NULL,
    repo_name TEXT NOT NULL,
    search_key TEXT NOT NULL,
    label TEXT NOT NULL,
    tags TEXT NOT NULL,

    PRIMARY KEY (dump_id, path_id)
);

CREATE INDEX IF NOT EXISTS lsif_data_documentation_search_public_repo_id_idx ON lsif_data_documentation_search_public USING BTREE(repo_id);
CREATE INDEX IF NOT EXISTS lsif_data_documentation_search_public_lang_trgm ON lsif_data_documentation_search_public USING gin(lang gin_trgm_ops);
CREATE INDEX IF NOT EXISTS lsif_data_documentation_search_public_repo_name_trgm ON lsif_data_documentation_search_public USING gin(repo_name gin_trgm_ops);
CREATE INDEX IF NOT EXISTS lsif_data_documentation_search_public_search_key_trgm ON lsif_data_documentation_search_public USING gin(search_key gin_trgm_ops);
CREATE INDEX IF NOT EXISTS lsif_data_documentation_search_public_label_trgm ON lsif_data_documentation_search_public USING gin(label gin_trgm_ops);
CREATE INDEX IF NOT EXISTS lsif_data_documentation_search_public_tags_trgm ON lsif_data_documentation_search_public USING gin(tags gin_trgm_ops);

COMMENT ON TABLE lsif_data_documentation_search_public IS 'A trigram index over documentation for search (public repos only)';
COMMENT ON COLUMN lsif_data_documentation_search_public.dump_id IS 'The identifier of the associated dump in the lsif_uploads table (state=completed).';
COMMENT ON COLUMN lsif_data_documentation_search_public.repo_id IS 'The repo ID, from the main app DB repo table. Used to search over a select set of repos by ID.';
COMMENT ON COLUMN lsif_data_documentation_search_public.path_id IS 'The fully qualified documentation page path ID, e.g. including "#section". See GraphQL codeintel.schema:documentationPage for what this is.';

COMMENT ON COLUMN lsif_data_documentation_search_public.lang IS 'The lowercase language name (go, java, etc.) OR, if unknown, the LSIF indexer name';
COMMENT ON COLUMN lsif_data_documentation_search_public.repo_name IS 'The name of the repository containing this search key.';
COMMENT ON COLUMN lsif_data_documentation_search_public.search_key IS 'The search key generated by the indexer, e.g. mux.Router.ServeHTTP. It is language-specific, and likely unique within a repository (but not always.) See protocol/documentation.go:Documentation.SearchKey';
COMMENT ON COLUMN lsif_data_documentation_search_public.label IS 'The label string of the result, e.g. a one-line function signature. See protocol/documentation.go:Documentation';
COMMENT ON COLUMN lsif_data_documentation_search_public.detail IS 'The detail string (e.g. the full function signature and its docs). See protocol/documentation.go:Documentation';
COMMENT ON COLUMN lsif_data_documentation_search_public.tags IS 'A space separated list of tags from the documentation node. See protocol/documentation.go:Documentation';

-- Same exact thing as above, but for "_private" repos.
CREATE TABLE IF NOT EXISTS lsif_data_documentation_search_private (
    -- Metadata fields
    dump_id integer NOT NULL,
    repo_id integer NOT NULL,
    path_id TEXT NOT NULL,
    detail TEXT NOT NULL,

    -- FTS-enabled fields
    lang TEXT NOT NULL,
    repo_name TEXT NOT NULL,
    search_key TEXT NOT NULL,
    label TEXT NOT NULL,
    tags TEXT NOT NULL,

    PRIMARY KEY (dump_id, path_id)
);

CREATE INDEX IF NOT EXISTS lsif_data_documentation_search_private_repo_id_idx ON lsif_data_documentation_search_private USING BTREE(repo_id);
CREATE INDEX IF NOT EXISTS lsif_data_documentation_search_private_lang_trgm ON lsif_data_documentation_search_private USING gin(lang gin_trgm_ops);
CREATE INDEX IF NOT EXISTS lsif_data_documentation_search_private_repo_name_trgm ON lsif_data_documentation_search_private USING gin(repo_name gin_trgm_ops);
CREATE INDEX IF NOT EXISTS lsif_data_documentation_search_private_search_key_trgm ON lsif_data_documentation_search_private USING gin(search_key gin_trgm_ops);
CREATE INDEX IF NOT EXISTS lsif_data_documentation_search_private_label_trgm ON lsif_data_documentation_search_private USING gin(label gin_trgm_ops);
CREATE INDEX IF NOT EXISTS lsif_data_documentation_search_private_tags_trgm ON lsif_data_documentation_search_private USING gin(tags gin_trgm_ops);

COMMENT ON TABLE lsif_data_documentation_search_private IS 'A trigram index over documentation for search (private repos only)';
COMMENT ON COLUMN lsif_data_documentation_search_private.dump_id IS 'The identifier of the associated dump in the lsif_uploads table (state=completed).';
COMMENT ON COLUMN lsif_data_documentation_search_private.repo_id IS 'The repo ID, from the main app DB repo table. Used to search over a select set of repos by ID.';
COMMENT ON COLUMN lsif_data_documentation_search_private.path_id IS 'The fully qualified documentation page path ID, e.g. including "#section". See GraphQL codeintel.schema:documentationPage for what this is.';

COMMENT ON COLUMN lsif_data_documentation_search_private.lang IS 'The lowercase language name (go, java, etc.) OR, if unknown, the LSIF indexer name';
COMMENT ON COLUMN lsif_data_documentation_search_private.repo_name IS 'The name of the repository containing this search key.';
COMMENT ON COLUMN lsif_data_documentation_search_private.search_key IS 'The search key generated by the indexer, e.g. mux.Router.ServeHTTP. It is language-specific, and likely unique within a repository (but not always.) See protocol/documentation.go:Documentation.SearchKey';
COMMENT ON COLUMN lsif_data_documentation_search_private.label IS 'The label string of the result, e.g. a one-line function signature. See protocol/documentation.go:Documentation';
COMMENT ON COLUMN lsif_data_documentation_search_private.detail IS 'The detail string (e.g. the full function signature and its docs). See protocol/documentation.go:Documentation';
COMMENT ON COLUMN lsif_data_documentation_search_private.tags IS 'A space separated list of tags from the documentation node. See protocol/documentation.go:Documentation';

COMMIT;
