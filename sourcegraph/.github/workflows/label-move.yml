name: Move labeled or milestoned issue to a specific project colum
on:
  issues:
    types: [labeled]
jobs:
  move-labeled-or-milestoned-issue:
    runs-on: ubuntu-latest
    steps:
    - uses: konradpabjan/move-labeled-or-milestoned-issue@v2.0
      with:
        action-token: "${{ secrets.LABELER_GITHUB_TOKEN }}"
        project-url: "https://github.com/orgs/sourcegraph/projects/100"
        column-name: "To Triage"
        label-name: "team/code-intelligence"
        columns-to-ignore: "*"
    - uses: konradpabjan/move-labeled-or-milestoned-issue@v2.0
      with:
        action-token: ${{ secrets.LABELER_GITHUB_TOKEN }}
        project-url: "https://github.com/orgs/sourcegraph/projects/216"
        column-name: "Triage"
        label-name: "team/batchers"
        columns-to-ignore: "*"

  # Uses issues beta API - see https://docs.github.com/en/issues/trying-out-the-new-projects-experience/automating-projects#example-workflow
  # To get your PROJECT_ID, use:
  #
  #   gh api graphql --header 'GraphQL-Features: projects_next_graphql' -f query='
  # query($project: Int!) {
  #   organization(login: "sourcegraph") {
  #     projectNext(number: $project) {
  #       id
  #     }
  #   }
  #   }' -F project=212
  distribution-board:
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: MDExOlByb2plY3ROZXh0MzIxNw== # https://github.com/orgs/sourcegraph/projects/197
      GITHUB_TOKEN: ${{ secrets.GH_PROJECTS_ACTION_TOKEN }}
    steps:
    - name: Get issue if relevant
      if: ${{ contains(github.event.issue.labels.*.name, 'team/distribution') }}
      env:
        NODE_ID: ${{ github.event.issue.node_id }}
      run: echo 'NODE_ID='$NODE_ID >> $GITHUB_ENV
    - name: Get pull request if relevant
      if: ${{ contains(github.event.pull_request.labels.*.name, 'team/distribution') }}
      env:
        NODE_ID: ${{ github.event.pull_request.node_id }}
      run: echo 'NODE_ID='$NODE_ID >> $GITHUB_ENV
    - name: Add to Distribution board
      if: ${{ env.NODE_ID != '' }}
      run: |
        gh api graphql --header 'GraphQL-Features: projects_next_graphql' -f query='
          mutation($project:ID!, $node_id:ID!) {
            addProjectNextItem(input: {projectId: $project, contentId: $node_id}) {
              projectNextItem {
                id
              }
            }
          }' -f project=$PROJECT_ID -f node_id=$NODE_ID
  code-insights-board:
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: MDExOlByb2plY3ROZXh0MzI3Ng== # https://github.com/orgs/sourcegraph/projects/200
      GITHUB_TOKEN: ${{ secrets.GH_PROJECTS_ACTION_TOKEN }}
    steps:
    - name: Get issue if relevant
      if: ${{ contains(github.event.issue.labels.*.name, 'team/code-insights') }}
      env:
        NODE_ID: ${{ github.event.issue.node_id }}
      run: echo 'NODE_ID='$NODE_ID >> $GITHUB_ENV
    - name: Get pull request if relevant
      if: ${{ contains(github.event.pull_request.labels.*.name, 'team/code-insights') }}
      env:
        NODE_ID: ${{ github.event.pull_request.node_id }}
      run: echo 'NODE_ID='$NODE_ID >> $GITHUB_ENV
    - name: Add to Code Insights board
      if: ${{ env.NODE_ID != '' }}
      run: |
        gh api graphql --header 'GraphQL-Features: projects_next_graphql' -f query='
          mutation($project:ID!, $node_id:ID!) {
            addProjectNextItem(input: {projectId: $project, contentId: $node_id}) {
              projectNextItem {
                id
              }
            }
          }' -f project=$PROJECT_ID -f node_id=$NODE_ID
  code-intel-board:
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: MDExOlByb2plY3ROZXh0NDI1MA== # https://github.com/orgs/sourcegraph/projects/211
      GITHUB_TOKEN: ${{ secrets.GH_PROJECTS_ACTION_TOKEN }}
    steps:
    - name: Get issue if relevant
      if: ${{ contains(github.event.issue.labels.*.name, 'team/code-intelligence') }}
      env:
        NODE_ID: ${{ github.event.issue.node_id }}
      run: echo 'NODE_ID='$NODE_ID >> $GITHUB_ENV
    - name: Get pull request if relevant
      if: ${{ contains(github.event.pull_request.labels.*.name, 'team/code-intelligence') }}
      env:
        NODE_ID: ${{ github.event.pull_request.node_id }}
      run: echo 'NODE_ID='$NODE_ID >> $GITHUB_ENV
    - name: Add to board
      if: ${{ env.NODE_ID != '' }}
      run: |
        gh api graphql --header 'GraphQL-Features: projects_next_graphql' -f query='
          mutation($project:ID!, $node_id:ID!) {
            addProjectNextItem(input: {projectId: $project, contentId: $node_id}) {
              projectNextItem {
                id
              }
            }
          }' -f project=$PROJECT_ID -f node_id=$NODE_ID
  dev-experience-board:
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: MDExOlByb2plY3ROZXh0NDI1Nw== # https://github.com/orgs/sourcegraph/projects/212
      GITHUB_TOKEN: ${{ secrets.GH_PROJECTS_ACTION_TOKEN }}
    steps:
    - name: Get issue if relevant
      if: ${{ contains(github.event.issue.labels.*.name, 'dx') || contains(github.event.issue.labels.*.name, 'team/dev-experience') }}
      env:
        NODE_ID: ${{ github.event.issue.node_id }}
      run: echo 'NODE_ID='$NODE_ID >> $GITHUB_ENV
    - name: Get pull request if relevant
      if: ${{ contains(github.event.pull_request.labels.*.name, 'dx') || contains(github.event.pull_request.labels.*.name, 'team/dev-experience') }}
      env:
        NODE_ID: ${{ github.event.pull_request.node_id }}
      run: echo 'NODE_ID='$NODE_ID >> $GITHUB_ENV
    - name: Add to Distribution board
      if: ${{ env.NODE_ID != '' }}
      run: |
        gh api graphql --header 'GraphQL-Features: projects_next_graphql' -f query='
          mutation($project:ID!, $node_id:ID!) {
            addProjectNextItem(input: {projectId: $project, contentId: $node_id}) {
              projectNextItem {
                id
              }
            }
          }' -f project=$PROJECT_ID -f node_id=$NODE_ID
  extensibility-board:
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: MDExOlByb2plY3ROZXh0NDMyNg== # https://github.com/orgs/sourcegraph/projects/213
      GITHUB_TOKEN: ${{ secrets.GH_PROJECTS_ACTION_TOKEN }}
    steps:
    - name: Get issue if relevant
      if: ${{ contains(github.event.issue.labels.*.name, 'team/extensibility') }}
      env:
        NODE_ID: ${{ github.event.issue.node_id }}
      run: echo 'NODE_ID='$NODE_ID >> $GITHUB_ENV
    - name: Get pull request if relevant
      if: ${{ contains(github.event.pull_request.labels.*.name, 'team/extensibility') }}
      env:
        NODE_ID: ${{ github.event.pull_request.node_id }}
      run: echo 'NODE_ID='$NODE_ID >> $GITHUB_ENV
    - name: Add to Extensibility board
      if: ${{ env.NODE_ID != '' }}
      run: |
        gh api graphql --header 'GraphQL-Features: projects_next_graphql' -f query='
          mutation($project:ID!, $node_id:ID!) {
            addProjectNextItem(input: {projectId: $project, contentId: $node_id}) {
              projectNextItem {
                id
              }
            }
          }' -f project=$PROJECT_ID -f node_id=$NODE_ID
