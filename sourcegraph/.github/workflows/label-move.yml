name: Move labeled or milestoned issue to a specific project colum
on:
  issues:
    types: [labeled]
jobs:
  # Uses issues beta API - see https://docs.github.com/en/issues/trying-out-the-new-projects-experience/automating-projects#example-workflow
  # To get your PROJECT_ID, use:
  #
  #   gh api graphql --header 'GraphQL-Features: projects_next_graphql' -f query='
  # query($project: Int!) {
  #   organization(login: "sourcegraph") {
  #     projectNext(number: $project) {
  #       id
  #     }
  #   }
  #   }' -F project=212
  code-intel-board:
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: MDExOlByb2plY3ROZXh0NDI1MA== # https://github.com/orgs/sourcegraph/projects/211
      GITHUB_TOKEN: ${{ secrets.GH_PROJECTS_ACTION_TOKEN }}
    steps:
    - name: Get issue if relevant
      if: ${{ contains(github.event.issue.labels.*.name, 'team/code-intelligence') }}
      env:
        NODE_ID: ${{ github.event.issue.node_id }}
      run: echo 'NODE_ID='$NODE_ID >> $GITHUB_ENV
    - name: Get pull request if relevant
      if: ${{ contains(github.event.pull_request.labels.*.name, 'team/code-intelligence') }}
      env:
        NODE_ID: ${{ github.event.pull_request.node_id }}
      run: echo 'NODE_ID='$NODE_ID >> $GITHUB_ENV
    - name: Add to board
      if: ${{ env.NODE_ID != '' }}
      run: |
        gh api graphql --header 'GraphQL-Features: projects_next_graphql' -f query='
          mutation($project:ID!, $node_id:ID!) {
            addProjectNextItem(input: {projectId: $project, contentId: $node_id}) {
              projectNextItem {
                id
              }
            }
          }' -f project=$PROJECT_ID -f node_id=$NODE_ID
  dev-experience-board:
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: MDExOlByb2plY3ROZXh0NDI1Nw== # https://github.com/orgs/sourcegraph/projects/212
      GITHUB_TOKEN: ${{ secrets.GH_PROJECTS_ACTION_TOKEN }}
    steps:
    - name: Get issue if relevant
      if: ${{ contains(github.event.issue.labels.*.name, 'dx') || contains(github.event.issue.labels.*.name, 'team/devx') }}
      env:
        NODE_ID: ${{ github.event.issue.node_id }}
      run: echo 'NODE_ID='$NODE_ID >> $GITHUB_ENV
    - name: Get pull request if relevant
      if: ${{ contains(github.event.pull_request.labels.*.name, 'dx') || contains(github.event.pull_request.labels.*.name, 'team/devx') }}
      env:
        NODE_ID: ${{ github.event.pull_request.node_id }}
      run: echo 'NODE_ID='$NODE_ID >> $GITHUB_ENV
    - name: Add to Distribution board
      if: ${{ env.NODE_ID != '' }}
      run: |
        gh api graphql --header 'GraphQL-Features: projects_next_graphql' -f query='
          mutation($project:ID!, $node_id:ID!) {
            addProjectNextItem(input: {projectId: $project, contentId: $node_id}) {
              projectNextItem {
                id
              }
            }
          }' -f project=$PROJECT_ID -f node_id=$NODE_ID
  integrations-board:
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: MDExOlByb2plY3ROZXh0NDMyNg== # https://github.com/orgs/sourcegraph/projects/213
      GITHUB_TOKEN: ${{ secrets.GH_PROJECTS_ACTION_TOKEN }}
    steps:
    - name: Get issue if relevant
      if: ${{ contains(github.event.issue.labels.*.name, 'team/integrations') }}
      env:
        NODE_ID: ${{ github.event.issue.node_id }}
      run: echo 'NODE_ID='$NODE_ID >> $GITHUB_ENV
    - name: Get pull request if relevant
      if: ${{ contains(github.event.pull_request.labels.*.name, 'team/integrations') }}
      env:
        NODE_ID: ${{ github.event.pull_request.node_id }}
      run: echo 'NODE_ID='$NODE_ID >> $GITHUB_ENV
    - name: Add to Integrations board
      if: ${{ env.NODE_ID != '' }}
      run: |
        gh api graphql --header 'GraphQL-Features: projects_next_graphql' -f query='
          mutation($project:ID!, $node_id:ID!) {
            addProjectNextItem(input: {projectId: $project, contentId: $node_id}) {
              projectNextItem {
                id
              }
            }
          }' -f project=$PROJECT_ID -f node_id=$NODE_ID
  batchers-board:
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: PN_kwDOADy5QM0WXg== # https://github.com/orgs/sourcegraph/projects/216
      GITHUB_TOKEN: ${{ secrets.GH_PROJECTS_ACTION_TOKEN }}
    steps:
    - name: Get issue if relevant
      if: ${{ contains(github.event.issue.labels.*.name, 'team/batchers') }}
      env:
        NODE_ID: ${{ github.event.issue.node_id }}
      run: echo 'NODE_ID='$NODE_ID >> $GITHUB_ENV
    - name: Get pull request if relevant
      if: ${{ contains(github.event.pull_request.labels.*.name, 'team/batchers') }}
      env:
        NODE_ID: ${{ github.event.pull_request.node_id }}
      run: echo 'NODE_ID='$NODE_ID >> $GITHUB_ENV
    - name: Add to Batchers board
      if: ${{ env.NODE_ID != '' }}
      run: |
        gh api graphql --header 'GraphQL-Features: projects_next_graphql' -f query='
          mutation($project:ID!, $node_id:ID!) {
            addProjectNextItem(input: {projectId: $project, contentId: $node_id}) {
              projectNextItem {
                id
              }
            }
          }' -f project=$PROJECT_ID -f node_id=$NODE_ID
  dev-ops-board:
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: PN_kwDOADy5QM1D1Q # https://github.com/orgs/sourcegraph/projects/220
      GITHUB_TOKEN: ${{ secrets.GH_PROJECTS_ACTION_TOKEN }}
    steps:
      - name: Get issue if relevant
        if: ${{ contains(github.event.issue.labels.*.name, 'team/devops') }}
        env:
          NODE_ID: ${{ github.event.issue.node_id }}
        run: echo 'NODE_ID='$NODE_ID >> $GITHUB_ENV
      - name: Get pull request if relevant
        if: ${{ contains(github.event.pull_request.labels.*.name, 'team/devops') }}
        env:
          NODE_ID: ${{ github.event.pull_request.node_id }}
        run: echo 'NODE_ID='$NODE_ID >> $GITHUB_ENV
      - name: Add to devops board
        if: ${{ env.NODE_ID != '' }}
        run: |
          gh api graphql --header 'GraphQL-Features: projects_next_graphql' -f query='
            mutation($project:ID!, $node_id:ID!) {
              addProjectNextItem(input: {projectId: $project, contentId: $node_id}) {
                projectNextItem {
                  id
                }
              }
            }' -f project=$PROJECT_ID -f node_id=$NODE_ID
  frontend-platform-board:
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: PN_kwDOADy5QM2FqQ== # https://github.com/orgs/sourcegraph/projects/222
      GITHUB_TOKEN: ${{ secrets.GH_PROJECTS_ACTION_TOKEN }}
    steps:
    - name: Get issue if relevant
      if: ${{ contains(github.event.issue.labels.*.name, 'team/frontend-platform') }}
      env:
        NODE_ID: ${{ github.event.issue.node_id }}
      run: echo 'NODE_ID='$NODE_ID >> $GITHUB_ENV
    - name: Add to Frontend Platform board
      if: ${{ env.NODE_ID != '' }}
      run: |
        gh api graphql --header 'GraphQL-Features: projects_next_graphql' -f query='
          mutation($project:ID!, $node_id:ID!) {
            addProjectNextItem(input: {projectId: $project, contentId: $node_id}) {
              projectNextItem {
                id
              }
            }
          }' -f project=$PROJECT_ID -f node_id=$NODE_ID
  delivery-board:
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: MDExOlByb2plY3ROZXh0Mzg2Mw== # https://github.com/orgs/sourcegraph/projects/205
      GITHUB_TOKEN: ${{ secrets.GH_PROJECTS_ACTION_TOKEN }}
    steps:
    - name: Get issue if relevant
      if: ${{ contains(github.event.issue.labels.*.name, 'team/delivery') }}
      env:
        NODE_ID: ${{ github.event.issue.node_id }}
      run: echo 'NODE_ID='$NODE_ID >> $GITHUB_ENV
    - name: Get pull request if relevant
      if: ${{ contains(github.event.pull_request.labels.*.name, 'team/delivery') }}
      env:
        NODE_ID: ${{ github.event.pull_request.node_id }}
      run: echo 'NODE_ID='$NODE_ID >> $GITHUB_ENV
    - name: Add to Delivery board
      if: ${{ env.NODE_ID != '' }}
      run: |
        gh api graphql --header 'GraphQL-Features: projects_next_graphql' -f query='
          mutation($project:ID!, $node_id:ID!) {
            addProjectNextItem(input: {projectId: $project, contentId: $node_id}) {
              projectNextItem {
                id
              }
            }
          }' -f project=$PROJECT_ID -f node_id=$NODE_ID
  wcag-accessibility-board:
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: PN_kwDOADy5QM4AAyDB # https://github.com/orgs/sourcegraph/projects/238
      GITHUB_TOKEN: ${{ secrets.GH_PROJECTS_ACTION_TOKEN }}
    steps:
    - name: Get issue if relevant
      if: ${{ contains(github.event.issue.labels.*.name, 'wcag/2.1') }}
      env:
        NODE_ID: ${{ github.event.issue.node_id }}
      run: echo 'NODE_ID='$NODE_ID >> $GITHUB_ENV
    - name: Add to Accessibility board
      if: ${{ env.NODE_ID != '' }}
      run: |
        gh api graphql --header 'GraphQL-Features: projects_next_graphql' -f query='
          mutation($project:ID!, $node_id:ID!) {
            addProjectNextItem(input: {projectId: $project, contentId: $node_id}) {
              projectNextItem {
                id
              }
            }
          }' -f project=$PROJECT_ID -f node_id=$NODE_ID
  growth-board:
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: PN_kwDOADy5QM4ABLw3 # https://github.com/orgs/sourcegraph/projects/253
      GITHUB_TOKEN: ${{ secrets.GH_PROJECTS_ACTION_TOKEN }}
    steps:
    - name: Get issue if relevant
      if: ${{ contains(github.event.issue.labels.*.name, 'team/growth') }}
      env:
        NODE_ID: ${{ github.event.issue.node_id }}
      run: echo 'NODE_ID='$NODE_ID >> $GITHUB_ENV
    - name: Get pull request if relevant
      if: ${{ contains(github.event.pull_request.labels.*.name, 'team/growth') }}
      env:
        NODE_ID: ${{ github.event.pull_request.node_id }}
      run: echo 'NODE_ID='$NODE_ID >> $GITHUB_ENV
    - name: Add to Growth board
      if: ${{ env.NODE_ID != '' }}
      run: |
        gh api graphql --header 'GraphQL-Features: projects_next_graphql' -f query='
          mutation($project:ID!, $node_id:ID!) {
            addProjectNextItem(input: {projectId: $project, contentId: $node_id}) {
              projectNextItem {
                id
              }
            }
          }' -f project=$PROJECT_ID -f node_id=$NODE_ID
  iam-board:
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: PN_kwDOADy5QM4ABlJF # https://github.com/orgs/sourcegraph/projects/259
      GITHUB_TOKEN: ${{ secrets.GH_PROJECTS_ACTION_TOKEN }}
    steps:
    - name: Get issue if relevant
      if: ${{ contains(github.event.issue.labels.*.name, 'team/iam') }}
      env:
        NODE_ID: ${{ github.event.issue.node_id }}
      run: echo 'NODE_ID='$NODE_ID >> $GITHUB_ENV
    - name: Get pull request if relevant
      if: ${{ contains(github.event.pull_request.labels.*.name, 'team/iam') }}
      env:
        NODE_ID: ${{ github.event.pull_request.node_id }}
      run: echo 'NODE_ID='$NODE_ID >> $GITHUB_ENV
    - name: Add to IAM team board
      if: ${{ env.NODE_ID != '' }}
      run: |
        gh api graphql --header 'GraphQL-Features: projects_next_graphql' -f query='
          mutation($project:ID!, $node_id:ID!) {
            addProjectNextItem(input: {projectId: $project, contentId: $node_id}) {
              projectNextItem {
                id
              }
            }
          }' -f project=$PROJECT_ID -f node_id=$NODE_ID
  executors-board:
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: PN_kwDOADy5QM4ADYmX # https://github.com/orgs/sourcegraph/projects/267
      GITHUB_TOKEN: ${{ secrets.GH_PROJECTS_ACTION_TOKEN }}
    steps:
    - name: Get issue if relevant
      if: ${{ contains(github.event.issue.labels.*.name, 'user-code-execution') || contains(github.event.issue.labels.*.name, 'rfc-696') }}
      env:
        NODE_ID: ${{ github.event.issue.node_id }}
      run: echo 'NODE_ID='$NODE_ID >> $GITHUB_ENV
    - name: Get pull request if relevant
      if: ${{ contains(github.event.pull_request.labels.*.name, 'user-code-execution') || contains(github.event.pull_request.labels.*.name, 'rfc-696') }}
      env:
        NODE_ID: ${{ github.event.pull_request.node_id }}
      run: echo 'NODE_ID='$NODE_ID >> $GITHUB_ENV
    - name: Add to IAM and Admin Exp board
      if: ${{ env.NODE_ID != '' }}
      run: |
        gh api graphql --header 'GraphQL-Features: projects_next_graphql' -f query='
          mutation($project:ID!, $node_id:ID!) {
            addProjectNextItem(input: {projectId: $project, contentId: $node_id}) {
              projectNextItem {
                id
              }
            }
          }' -f project=$PROJECT_ID -f node_id=$NODE_ID

