// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CampaignPlanSpecificationFields has initial value and calls onChange 1`] = `
<div>
  <div
    className="row campaign-details__property-row"
  >
    <h3
      className="mr-3 mb-0 campaign-details__property-label"
    >
      Type
    </h3>
    <div
      className="flex-grow-1 form-group mb-0"
    >
      <select
        className="form-control w-auto d-inline-block e2e-campaign-type"
        onChange={[Function]}
        placeholder="Select campaign type"
        value="comby"
      >
        <option
          value="manual"
        >
          Manual
        </option>
        <option
          value="comby"
        >
          Comby search and replace
        </option>
        <option
          value="credentials"
        >
          Find leaked credentials
        </option>
      </select>
      <small
        className="ml-1"
      >
        <a
          href="https://comby.dev/#match-syntax"
          rel="noopener noreferrer"
          target="_blank"
        >
          Learn about comby syntax
        </a>
      </small>
    </div>
  </div>
  <div
    className="row mt-3"
  >
    <h3
      className="mr-3 mb-0 flex-grow-0 campaign-details__property-label"
    >
      Arguments
    </h3>
    <MonacoSettingsEditor
      className="flex-grow-1 e2e-campaign-arguments"
      height={110}
      isLightTheme={true}
      jsonSchema={
        Object {
          "$id": "comby-spec.json#",
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "Schema for comby options",
          "properties": Object {
            "matchTemplate": Object {
              "description": "See https://comby.dev/#match-syntax for syntax",
              "minLength": 1,
              "type": "string",
            },
            "rewriteTemplate": Object {
              "description": "See https://comby.dev/#match-syntax for syntax",
              "type": "string",
            },
            "scopeQuery": Object {
              "description": "Define a scope to narrow down repositories affected by this change. Only GitHub and Bitbucket Server are supported.",
              "minLength": 1,
              "type": "string",
            },
          },
          "required": Array [
            "scopeQuery",
            "matchTemplate",
            "rewriteTemplate",
          ],
          "type": "object",
        }
      }
      onChange={[Function]}
      value="{
    \\"scopeQuery\\": \\"repo:github.com/foo/bar\\",
    \\"matchTemplate\\": \\"\\",
    \\"rewriteTemplate\\": \\"\\"
}"
    />
  </div>
</div>
`;

exports[`CampaignPlanSpecificationFields manual type editable 1`] = `
<div>
  <div
    className="row campaign-details__property-row"
  >
    <h3
      className="mr-3 mb-0 campaign-details__property-label"
    >
      Type
    </h3>
    <div
      className="flex-grow-1 form-group mb-0"
    >
      <React.Fragment>
        <select
          className="form-control w-auto d-inline-block e2e-campaign-type"
          onChange={[Function]}
          placeholder="Select campaign type"
          value="manual"
        >
          <option
            value="manual"
          >
            Manual
          </option>
          <option
            value="comby"
          >
            Comby search and replace
          </option>
          <option
            value="credentials"
          >
            Find leaked credentials
          </option>
        </select>
      </React.Fragment>
    </div>
  </div>
</div>
`;

exports[`CampaignPlanSpecificationFields manual type read-only 1`] = `
<div>
  <div
    className="row campaign-details__property-row"
  >
    <h3
      className="mr-3 mb-0 campaign-details__property-label"
    >
      Type
    </h3>
    <div
      className="flex-grow-1 form-group mb-0"
    >
      <p
        className="mb-0"
      >
        Manual
      </p>
    </div>
  </div>
</div>
`;

exports[`CampaignPlanSpecificationFields non-manual type editable 1`] = `
<div>
  <div
    className="row campaign-details__property-row"
  >
    <h3
      className="mr-3 mb-0 campaign-details__property-label"
    >
      Type
    </h3>
    <div
      className="flex-grow-1 form-group mb-0"
    >
      <React.Fragment>
        <select
          className="form-control w-auto d-inline-block e2e-campaign-type"
          onChange={[Function]}
          placeholder="Select campaign type"
          value="comby"
        >
          <option
            value="manual"
          >
            Manual
          </option>
          <option
            value="comby"
          >
            Comby search and replace
          </option>
          <option
            value="credentials"
          >
            Find leaked credentials
          </option>
        </select>
        <small
          className="ml-1"
        >
          <a
            href="https://comby.dev/#match-syntax"
            rel="noopener noreferrer"
            target="_blank"
          >
            Learn about comby syntax
          </a>
        </small>
      </React.Fragment>
    </div>
  </div>
  <div
    className="row mt-3"
  >
    <h3
      className="mr-3 mb-0 flex-grow-0 campaign-details__property-label"
    >
      Arguments
    </h3>
    <MonacoSettingsEditor
      className="flex-grow-1 e2e-campaign-arguments"
      height={110}
      isLightTheme={true}
      jsonSchema={
        Object {
          "$id": "comby-spec.json#",
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "Schema for comby options",
          "properties": Object {
            "matchTemplate": Object {
              "description": "See https://comby.dev/#match-syntax for syntax",
              "minLength": 1,
              "type": "string",
            },
            "rewriteTemplate": Object {
              "description": "See https://comby.dev/#match-syntax for syntax",
              "type": "string",
            },
            "scopeQuery": Object {
              "description": "Define a scope to narrow down repositories affected by this change. Only GitHub and Bitbucket Server are supported.",
              "minLength": 1,
              "type": "string",
            },
          },
          "required": Array [
            "scopeQuery",
            "matchTemplate",
            "rewriteTemplate",
          ],
          "type": "object",
        }
      }
      onChange={[Function]}
      readOnly={false}
      value=""
    />
  </div>
</div>
`;

exports[`CampaignPlanSpecificationFields non-manual type read-only 1`] = `
<div>
  <div
    className="row campaign-details__property-row"
  >
    <h3
      className="mr-3 mb-0 campaign-details__property-label"
    >
      Type
    </h3>
    <div
      className="flex-grow-1 form-group mb-0"
    >
      <p
        className="mb-0"
      >
        Comby search and replace
      </p>
    </div>
  </div>
  <div
    className="row mt-3"
  >
    <h3
      className="mr-3 mb-0 flex-grow-0 campaign-details__property-label"
    >
      Arguments
    </h3>
    <MonacoSettingsEditor
      className="flex-grow-1 e2e-campaign-arguments"
      height={110}
      isLightTheme={true}
      jsonSchema={
        Object {
          "$id": "comby-spec.json#",
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "Schema for comby options",
          "properties": Object {
            "matchTemplate": Object {
              "description": "See https://comby.dev/#match-syntax for syntax",
              "minLength": 1,
              "type": "string",
            },
            "rewriteTemplate": Object {
              "description": "See https://comby.dev/#match-syntax for syntax",
              "type": "string",
            },
            "scopeQuery": Object {
              "description": "Define a scope to narrow down repositories affected by this change. Only GitHub and Bitbucket Server are supported.",
              "minLength": 1,
              "type": "string",
            },
          },
          "required": Array [
            "scopeQuery",
            "matchTemplate",
            "rewriteTemplate",
          ],
          "type": "object",
        }
      }
      onChange={[Function]}
      readOnly={true}
      value=""
    />
  </div>
</div>
`;
