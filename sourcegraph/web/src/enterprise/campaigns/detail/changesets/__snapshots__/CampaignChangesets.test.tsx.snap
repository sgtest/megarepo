// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CampaignChangesets renders 1`] = `
<CampaignChangesets
  campaignID="123"
  campaignUpdates="[Subject]"
  changesetUpdates="[Subject]"
  history="[History]"
  isLightTheme={true}
  location="[Location path=/]"
  queryChangesets={[Function]}
  telemetryService={
    Object {
      "log": [Function],
      "logViewEvent": [Function],
    }
  }
  viewerCanAdminister={true}
>
  <ChangesetFilterRow
    history="[History]"
    location="[Location path=/]"
    onFiltersChange={[Function]}
  >
    <div
      className="form-inline m-0"
    >
      <ChangesetFilter
        className="mr-2"
        label="State"
        onChange={[Function]}
        values={
          Array [
            "OPEN",
            "CLOSED",
            "MERGED",
            "DELETED",
          ]
        }
      >
        <select
          className="form-control mr-2"
          onChange={[Function]}
        >
          <option
            value=""
          >
            State
          </option>
          <option
            key="OPEN"
            value="OPEN"
          >
            Open
          </option>
          <option
            key="CLOSED"
            value="CLOSED"
          >
            Closed
          </option>
          <option
            key="MERGED"
            value="MERGED"
          >
            Merged
          </option>
          <option
            key="DELETED"
            value="DELETED"
          >
            Deleted
          </option>
        </select>
      </ChangesetFilter>
      <ChangesetFilter
        className="mr-2"
        label="Review state"
        onChange={[Function]}
        values={
          Array [
            "APPROVED",
            "CHANGES_REQUESTED",
            "PENDING",
            "COMMENTED",
            "DISMISSED",
          ]
        }
      >
        <select
          className="form-control mr-2"
          onChange={[Function]}
        >
          <option
            value=""
          >
            Review state
          </option>
          <option
            key="APPROVED"
            value="APPROVED"
          >
            Approved
          </option>
          <option
            key="CHANGES_REQUESTED"
            value="CHANGES_REQUESTED"
          >
            Changes requested
          </option>
          <option
            key="PENDING"
            value="PENDING"
          >
            Pending
          </option>
          <option
            key="COMMENTED"
            value="COMMENTED"
          >
            Commented
          </option>
          <option
            key="DISMISSED"
            value="DISMISSED"
          >
            Dismissed
          </option>
        </select>
      </ChangesetFilter>
      <ChangesetFilter
        label="Check state"
        onChange={[Function]}
        values={
          Array [
            "PENDING",
            "PASSED",
            "FAILED",
          ]
        }
      >
        <select
          className="form-control"
          onChange={[Function]}
        >
          <option
            value=""
          >
            Check state
          </option>
          <option
            key="PENDING"
            value="PENDING"
          >
            Pending
          </option>
          <option
            key="PASSED"
            value="PASSED"
          >
            Passed
          </option>
          <option
            key="FAILED"
            value="FAILED"
          >
            Failed
          </option>
        </select>
      </ChangesetFilter>
    </div>
  </ChangesetFilterRow>
  <div
    className="list-group position-relative"
  >
    <FilteredConnection
      className="mt-2"
      defaultFirst={15}
      headComponent={[Function]}
      hideSearch={true}
      history="[History]"
      listClassName="campaign-changesets__grid mb-3"
      listComponent="div"
      location="[Location path=/]"
      nodeComponent={[Function]}
      nodeComponentProps={
        Object {
          "campaignUpdates": "[Subject]",
          "extensionInfo": Object {
            "extensionsController": undefined,
            "hoverifier": Object {
              "hoverState": Object {
                "actionsOrError": undefined,
                "highlightedRange": undefined,
                "hoverOverlayProps": undefined,
                "hoveredTokenElement": undefined,
                "selectedPosition": undefined,
              },
              "hoverStateUpdates": "[Subject]",
              "hoverify": [Function],
              "unsubscribe": [Function],
            },
          },
          "history": "[History]",
          "isLightTheme": true,
          "location": "[Location path=/]",
          "queryExternalChangesetWithFileDiffs": undefined,
          "viewerCanAdminister": true,
        }
      }
      noun="changeset"
      pluralNoun="changesets"
      queryConnection={[Function]}
      useURLQuery={true}
    >
      <div
        className="filtered-connection test-filtered-connection filtered-connection--noncompact mt-2"
      >
        <ConnectionNodes
          connection={
            Object {
              "nodes": Array [
                Object {
                  "__typename": "HiddenExternalChangeset",
                  "createdAt": "2020-01-03T00:00:00.000Z",
                  "externalState": "OPEN",
                  "id": "0",
                  "nextSyncAt": null,
                  "publicationState": "PUBLISHED",
                  "reconcilerState": "COMPLETED",
                  "updatedAt": "2020-01-04T00:00:00.000Z",
                },
              ],
              "pageInfo": Object {
                "endCursor": null,
                "hasNextPage": false,
              },
              "totalCount": 1,
            }
          }
          connectionQuery=""
          first={15}
          headComponent={[Function]}
          listClassName="campaign-changesets__grid mb-3"
          listComponent="div"
          loading={false}
          location="[Location path=/]"
          nodeComponent={[Function]}
          nodeComponentProps={
            Object {
              "campaignUpdates": "[Subject]",
              "extensionInfo": Object {
                "extensionsController": undefined,
                "hoverifier": Object {
                  "hoverState": Object {
                    "actionsOrError": undefined,
                    "highlightedRange": undefined,
                    "hoverOverlayProps": undefined,
                    "hoveredTokenElement": undefined,
                    "selectedPosition": undefined,
                  },
                  "hoverStateUpdates": "[Subject]",
                  "hoverify": [Function],
                  "unsubscribe": [Function],
                },
              },
              "history": "[History]",
              "isLightTheme": true,
              "location": "[Location path=/]",
              "queryExternalChangesetWithFileDiffs": undefined,
              "viewerCanAdminister": true,
            }
          }
          noun="changeset"
          onShowMore={[Function]}
          pluralNoun="changesets"
          query=""
        >
          <div
            className="filtered-connection__nodes campaign-changesets__grid mb-3"
          >
            <CampaignChangesetsHeader
              nodes={
                Array [
                  Object {
                    "__typename": "HiddenExternalChangeset",
                    "createdAt": "2020-01-03T00:00:00.000Z",
                    "externalState": "OPEN",
                    "id": "0",
                    "nextSyncAt": null,
                    "publicationState": "PUBLISHED",
                    "reconcilerState": "COMPLETED",
                    "updatedAt": "2020-01-04T00:00:00.000Z",
                  },
                ]
              }
              totalCount={1}
            >
              <div
                className="changeset-spec-list-header__title mb-2"
              >
                <strong>
                  Displaying 
                  1
                   of 
                  1
                   changesets
                </strong>
              </div>
              <span />
              <h5
                className="text-uppercase text-center text-nowrap text-muted"
              >
                Status
              </h5>
              <h5
                className="text-uppercase text-nowrap text-muted"
              >
                Changeset information
              </h5>
              <h5
                className="text-uppercase text-center text-nowrap text-muted"
              >
                Check state
              </h5>
              <h5
                className="text-uppercase text-center text-nowrap text-muted"
              >
                Review state
              </h5>
              <h5
                className="text-uppercase text-right text-nowrap text-muted"
              >
                Changes
              </h5>
            </CampaignChangesetsHeader>
            <ChangesetNode
              campaignUpdates="[Subject]"
              extensionInfo={
                Object {
                  "extensionsController": undefined,
                  "hoverifier": Object {
                    "hoverState": Object {
                      "actionsOrError": undefined,
                      "highlightedRange": undefined,
                      "hoverOverlayProps": undefined,
                      "hoveredTokenElement": undefined,
                      "selectedPosition": undefined,
                    },
                    "hoverStateUpdates": "[Subject]",
                    "hoverify": [Function],
                    "unsubscribe": [Function],
                  },
                }
              }
              history="[History]"
              isLightTheme={true}
              key="0"
              location="[Location path=/]"
              node={
                Object {
                  "__typename": "HiddenExternalChangeset",
                  "createdAt": "2020-01-03T00:00:00.000Z",
                  "externalState": "OPEN",
                  "id": "0",
                  "nextSyncAt": null,
                  "publicationState": "PUBLISHED",
                  "reconcilerState": "COMPLETED",
                  "updatedAt": "2020-01-04T00:00:00.000Z",
                }
              }
              viewerCanAdminister={true}
            >
              <span
                className="changeset-spec-node__separator"
              />
              <HiddenExternalChangesetNode
                campaignUpdates="[Subject]"
                extensionInfo={
                  Object {
                    "extensionsController": undefined,
                    "hoverifier": Object {
                      "hoverState": Object {
                        "actionsOrError": undefined,
                        "highlightedRange": undefined,
                        "hoverOverlayProps": undefined,
                        "hoveredTokenElement": undefined,
                        "selectedPosition": undefined,
                      },
                      "hoverStateUpdates": "[Subject]",
                      "hoverify": [Function],
                      "unsubscribe": [Function],
                    },
                  }
                }
                history="[History]"
                isLightTheme={true}
                location="[Location path=/]"
                node={
                  Object {
                    "__typename": "HiddenExternalChangeset",
                    "createdAt": "2020-01-03T00:00:00.000Z",
                    "externalState": "OPEN",
                    "id": "0",
                    "nextSyncAt": null,
                    "publicationState": "PUBLISHED",
                    "reconcilerState": "COMPLETED",
                    "updatedAt": "2020-01-04T00:00:00.000Z",
                  }
                }
                viewerCanAdminister={true}
              >
                <span />
                <ChangesetStatusCell
                  changeset={
                    Object {
                      "__typename": "HiddenExternalChangeset",
                      "createdAt": "2020-01-03T00:00:00.000Z",
                      "externalState": "OPEN",
                      "id": "0",
                      "nextSyncAt": null,
                      "publicationState": "PUBLISHED",
                      "reconcilerState": "COMPLETED",
                      "updatedAt": "2020-01-04T00:00:00.000Z",
                    }
                  }
                >
                  <ChangesetStatusOpen>
                    <div
                      className="m-0 text-nowrap d-flex flex-column align-items-center justify-content-center text-success"
                    >
                      <Memo(SourcePullIcon)>
                        <svg
                          className="mdi-icon "
                          fill="currentColor"
                          height={24}
                          viewBox="0 0 24 24"
                          width={24}
                        >
                          <path
                            d="M6,3A3,3 0 0,1 9,6C9,7.31 8.17,8.42 7,8.83V15.17C8.17,15.58 9,16.69 9,18A3,3 0 0,1 6,21A3,3 0 0,1 3,18C3,16.69 3.83,15.58 5,15.17V8.83C3.83,8.42 3,7.31 3,6A3,3 0 0,1 6,3M6,5A1,1 0 0,0 5,6A1,1 0 0,0 6,7A1,1 0 0,0 7,6A1,1 0 0,0 6,5M6,17A1,1 0 0,0 5,18A1,1 0 0,0 6,19A1,1 0 0,0 7,18A1,1 0 0,0 6,17M21,18A3,3 0 0,1 18,21A3,3 0 0,1 15,18C15,16.69 15.83,15.58 17,15.17V7H15V10.25L10.75,6L15,1.75V5H17A2,2 0 0,1 19,7V15.17C20.17,15.58 21,16.69 21,18M18,17A1,1 0 0,0 17,18A1,1 0 0,0 18,19A1,1 0 0,0 19,18A1,1 0 0,0 18,17Z"
                          />
                        </svg>
                      </Memo(SourcePullIcon)>
                      <span
                        className="text-muted"
                      >
                        Open
                      </span>
                    </div>
                  </ChangesetStatusOpen>
                </ChangesetStatusCell>
                <div
                  className="d-flex flex-column"
                >
                  <div
                    className="m-0 mb-2"
                  >
                    <h3
                      className="m-0 d-inline"
                    >
                      <span
                        className="text-muted"
                      >
                        Changeset in a private repository
                      </span>
                    </h3>
                  </div>
                  <div>
                    <ChangesetLastSynced
                      changeset={
                        Object {
                          "__typename": "HiddenExternalChangeset",
                          "createdAt": "2020-01-03T00:00:00.000Z",
                          "externalState": "OPEN",
                          "id": "0",
                          "nextSyncAt": null,
                          "publicationState": "PUBLISHED",
                          "reconcilerState": "COMPLETED",
                          "updatedAt": "2020-01-04T00:00:00.000Z",
                        }
                      }
                      viewerCanAdminister={false}
                    >
                      <small
                        className="text-muted"
                      >
                        Last synced 
                        about 14 years
                         ago.
                         
                        <span
                          data-tooltip="Not scheduled for syncing."
                        >
                          <Memo(InfoCircleOutlineIcon)
                            className="icon-inline"
                            onClick={[Function]}
                          >
                            <svg
                              className="mdi-icon icon-inline"
                              fill="currentColor"
                              height={24}
                              onClick={[Function]}
                              viewBox="0 0 24 24"
                              width={24}
                            >
                              <path
                                d="M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M11,17H13V11H11V17Z"
                              />
                            </svg>
                          </Memo(InfoCircleOutlineIcon)>
                        </span>
                      </small>
                    </ChangesetLastSynced>
                  </div>
                </div>
                <span />
                <span />
                <span />
              </HiddenExternalChangesetNode>
            </ChangesetNode>
          </div>
          <p
            className="filtered-connection__summary"
          >
            <small>
              <span>
                1
                 
                changeset
                 
                total
              </span>
               
            </small>
          </p>
        </ConnectionNodes>
      </div>
    </FilteredConnection>
  </div>
</CampaignChangesets>
`;
