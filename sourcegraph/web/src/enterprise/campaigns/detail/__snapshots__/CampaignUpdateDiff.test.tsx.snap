// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CampaignUpdateDiff renders 1`] = `
<CampaignUpdateDiff
  _queryChangesets={[Function]}
  _queryPatchesFromCampaign={[Function]}
  _queryPatchesFromPatchSet={[Function]}
  campaign={
    Object {
      "changesets": Object {
        "totalCount": 1,
      },
      "id": "somecampaign",
      "patches": Object {
        "totalCount": 1,
      },
      "viewerCanAdminister": true,
    }
  }
  history="[History]"
  isLightTheme={true}
  location="[Location path=/campaigns/Q2FtcGFpZ25QbGFuOjE4Mw%3D%3D?patchSet=Q2FtcGFpZ25QbGFuOjE4Mw%3D%3D]"
  patchSet={
    Object {
      "id": "someothercampaign",
      "patches": Object {
        "totalCount": 1,
      },
    }
  }
>
  <div>
    <h3
      className="mt-4 mb-2"
    >
      Preview of changes
    </h3>
    <p>
      Campaign currently has 
      2
       
      changesets
       (
      1
       published, 
      1
       
      draft
      ), after update it will have
       
      1
       
      changeset
       (
      1
       published, 
      0
       
      drafts
      ):
    </p>
    <TabsWithLocalStorageViewStatePersistence
      storageKey="campaignUpdateDiffTabs"
      tabClassName="tab-bar__tab--h5like"
      tabs={
        Array [
          Object {
            "id": "added",
            "label": <span>
              To be created 
              <span
                className="badge badge-secondary badge-pill"
              >
                0
              </span>
            </span>,
          },
          Object {
            "id": "changed",
            "label": <span>
              To be updated 
              <span
                className="badge badge-secondary badge-pill"
              >
                1
              </span>
            </span>,
          },
          Object {
            "id": "unmodified",
            "label": <span>
              Unmodified 
              <span
                className="badge badge-secondary badge-pill"
              >
                0
              </span>
            </span>,
          },
          Object {
            "id": "deleted",
            "label": <span>
              To be closed 
              <span
                className="badge badge-secondary badge-pill"
              >
                0
              </span>
            </span>,
          },
        ]
      }
    >
      <Tabs
        activeTab="added"
        onSelectTab={[Function]}
        storageKey="campaignUpdateDiffTabs"
        tabClassName="tab-bar__tab--h5like"
        tabComponent={[Function]}
        tabs={
          Array [
            Object {
              "id": "added",
              "label": <span>
                To be created 
                <span
                  className="badge badge-secondary badge-pill"
                >
                  0
                </span>
              </span>,
            },
            Object {
              "id": "changed",
              "label": <span>
                To be updated 
                <span
                  className="badge badge-secondary badge-pill"
                >
                  1
                </span>
              </span>,
            },
            Object {
              "id": "unmodified",
              "label": <span>
                Unmodified 
                <span
                  className="badge badge-secondary badge-pill"
                >
                  0
                </span>
              </span>,
            },
            Object {
              "id": "deleted",
              "label": <span>
                To be closed 
                <span
                  className="badge badge-secondary badge-pill"
                >
                  0
                </span>
              </span>,
            },
          ]
        }
      >
        <div
          className="tabs "
        >
          <TabBar
            activeTab="added"
            tabClassName="tab-bar__tab--h5like"
            tabComponent={[Function]}
            tabs={
              Array [
                Object {
                  "id": "added",
                  "label": <span>
                    To be created 
                    <span
                      className="badge badge-secondary badge-pill"
                    >
                      0
                    </span>
                  </span>,
                },
                Object {
                  "id": "changed",
                  "label": <span>
                    To be updated 
                    <span
                      className="badge badge-secondary badge-pill"
                    >
                      1
                    </span>
                  </span>,
                },
                Object {
                  "id": "unmodified",
                  "label": <span>
                    Unmodified 
                    <span
                      className="badge badge-secondary badge-pill"
                    >
                      0
                    </span>
                  </span>,
                },
                Object {
                  "id": "deleted",
                  "label": <span>
                    To be closed 
                    <span
                      className="badge badge-secondary badge-pill"
                    >
                      0
                    </span>
                  </span>,
                },
              ]
            }
          >
            <div
              className="tab-bar "
            >
              <Component
                className="btn btn-link btn-sm tab-bar__tab tab-bar__tab--flex-grow tab-bar__tab--active tab-bar__tab--h5like"
                key="added"
                tab={
                  Object {
                    "id": "added",
                    "label": <span>
                      To be created 
                      <span
                        className="badge badge-secondary badge-pill"
                      >
                        0
                      </span>
                    </span>,
                  }
                }
              >
                <button
                  className="btn btn-link btn-sm tab-bar__tab tab-bar__tab--flex-grow tab-bar__tab--active tab-bar__tab--h5like"
                  data-test-tab="added"
                  onClick={[Function]}
                  type="button"
                >
                  <span>
                    To be created 
                    <span
                      className="badge badge-secondary badge-pill"
                    >
                      0
                    </span>
                  </span>
                </button>
              </Component>
              <Component
                className="btn btn-link btn-sm tab-bar__tab tab-bar__tab--flex-grow tab-bar__tab--inactive tab-bar__tab--h5like"
                key="changed"
                tab={
                  Object {
                    "id": "changed",
                    "label": <span>
                      To be updated 
                      <span
                        className="badge badge-secondary badge-pill"
                      >
                        1
                      </span>
                    </span>,
                  }
                }
              >
                <button
                  className="btn btn-link btn-sm tab-bar__tab tab-bar__tab--flex-grow tab-bar__tab--inactive tab-bar__tab--h5like"
                  data-test-tab="changed"
                  onClick={[Function]}
                  type="button"
                >
                  <span>
                    To be updated 
                    <span
                      className="badge badge-secondary badge-pill"
                    >
                      1
                    </span>
                  </span>
                </button>
              </Component>
              <Component
                className="btn btn-link btn-sm tab-bar__tab tab-bar__tab--flex-grow tab-bar__tab--inactive tab-bar__tab--h5like"
                key="unmodified"
                tab={
                  Object {
                    "id": "unmodified",
                    "label": <span>
                      Unmodified 
                      <span
                        className="badge badge-secondary badge-pill"
                      >
                        0
                      </span>
                    </span>,
                  }
                }
              >
                <button
                  className="btn btn-link btn-sm tab-bar__tab tab-bar__tab--flex-grow tab-bar__tab--inactive tab-bar__tab--h5like"
                  data-test-tab="unmodified"
                  onClick={[Function]}
                  type="button"
                >
                  <span>
                    Unmodified 
                    <span
                      className="badge badge-secondary badge-pill"
                    >
                      0
                    </span>
                  </span>
                </button>
              </Component>
              <Component
                className="btn btn-link btn-sm tab-bar__tab tab-bar__tab--flex-grow tab-bar__tab--inactive tab-bar__tab--h5like"
                key="deleted"
                tab={
                  Object {
                    "id": "deleted",
                    "label": <span>
                      To be closed 
                      <span
                        className="badge badge-secondary badge-pill"
                      >
                        0
                      </span>
                    </span>,
                  }
                }
              >
                <button
                  className="btn btn-link btn-sm tab-bar__tab tab-bar__tab--flex-grow tab-bar__tab--inactive tab-bar__tab--h5like"
                  data-test-tab="deleted"
                  onClick={[Function]}
                  type="button"
                >
                  <span>
                    To be closed 
                    <span
                      className="badge badge-secondary badge-pill"
                    >
                      0
                    </span>
                  </span>
                </button>
              </Component>
            </div>
          </TabBar>
          <div
            className="pt-3"
            key="added"
          >
            <span
              className="text-muted"
            >
              No changesets
            </span>
          </div>
        </div>
      </Tabs>
    </TabsWithLocalStorageViewStatePersistence>
    <div
      className="alert alert-info mt-2"
    >
      <Memo(AlertCircleIcon)
        className="icon-inline"
      >
        <svg
          className="mdi-icon icon-inline"
          fill="currentColor"
          height={24}
          viewBox="0 0 24 24"
          width={24}
        >
          <path
            d="M13,13H11V7H13M13,17H11V15H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z"
          />
        </svg>
      </Memo(AlertCircleIcon)>
       You are updating an existing campaign. By clicking 'Update', all above changesets that are not 'unmodified' will be updated on the codehost.
    </div>
  </div>
</CampaignUpdateDiff>
`;

exports[`CampaignUpdateDiff renders a loader 1`] = `
<CampaignUpdateDiff
  _queryChangesets={[Function]}
  _queryPatchesFromCampaign={[Function]}
  _queryPatchesFromPatchSet={[Function]}
  campaign={
    Object {
      "changesets": Object {
        "totalCount": 1,
      },
      "id": "somecampaign",
      "patches": Object {
        "totalCount": 1,
      },
      "viewerCanAdminister": true,
    }
  }
  history="[History]"
  isLightTheme={true}
  location="[Location path=/campaigns/Q2FtcGFpZ25QbGFuOjE4Mw%3D%3D?patchSet=Q2FtcGFpZ25QbGFuOjE4Mw%3D%3D]"
  patchSet={
    Object {
      "id": "someothercampaign",
      "patches": Object {
        "totalCount": 1,
      },
    }
  }
>
  <div>
    <h3
      className="mt-4 mb-2"
    >
      Preview of changes
    </h3>
    <p>
      Campaign currently has 
      2
       
      changesets
       (
      1
       published, 
      1
       
      draft
      ), after update it will have
       
      1
       
      changeset
       (
      1
       published, 
      0
       
      drafts
      ):
    </p>
    <TabsWithLocalStorageViewStatePersistence
      storageKey="campaignUpdateDiffTabs"
      tabClassName="tab-bar__tab--h5like"
      tabs={
        Array [
          Object {
            "id": "added",
            "label": <span>
              To be created 
              <span
                className="badge badge-secondary badge-pill"
              >
                0
              </span>
            </span>,
          },
          Object {
            "id": "changed",
            "label": <span>
              To be updated 
              <span
                className="badge badge-secondary badge-pill"
              >
                1
              </span>
            </span>,
          },
          Object {
            "id": "unmodified",
            "label": <span>
              Unmodified 
              <span
                className="badge badge-secondary badge-pill"
              >
                0
              </span>
            </span>,
          },
          Object {
            "id": "deleted",
            "label": <span>
              To be closed 
              <span
                className="badge badge-secondary badge-pill"
              >
                0
              </span>
            </span>,
          },
        ]
      }
    >
      <Tabs
        activeTab="added"
        onSelectTab={[Function]}
        storageKey="campaignUpdateDiffTabs"
        tabClassName="tab-bar__tab--h5like"
        tabComponent={[Function]}
        tabs={
          Array [
            Object {
              "id": "added",
              "label": <span>
                To be created 
                <span
                  className="badge badge-secondary badge-pill"
                >
                  0
                </span>
              </span>,
            },
            Object {
              "id": "changed",
              "label": <span>
                To be updated 
                <span
                  className="badge badge-secondary badge-pill"
                >
                  1
                </span>
              </span>,
            },
            Object {
              "id": "unmodified",
              "label": <span>
                Unmodified 
                <span
                  className="badge badge-secondary badge-pill"
                >
                  0
                </span>
              </span>,
            },
            Object {
              "id": "deleted",
              "label": <span>
                To be closed 
                <span
                  className="badge badge-secondary badge-pill"
                >
                  0
                </span>
              </span>,
            },
          ]
        }
      >
        <div
          className="tabs "
        >
          <TabBar
            activeTab="added"
            tabClassName="tab-bar__tab--h5like"
            tabComponent={[Function]}
            tabs={
              Array [
                Object {
                  "id": "added",
                  "label": <span>
                    To be created 
                    <span
                      className="badge badge-secondary badge-pill"
                    >
                      0
                    </span>
                  </span>,
                },
                Object {
                  "id": "changed",
                  "label": <span>
                    To be updated 
                    <span
                      className="badge badge-secondary badge-pill"
                    >
                      1
                    </span>
                  </span>,
                },
                Object {
                  "id": "unmodified",
                  "label": <span>
                    Unmodified 
                    <span
                      className="badge badge-secondary badge-pill"
                    >
                      0
                    </span>
                  </span>,
                },
                Object {
                  "id": "deleted",
                  "label": <span>
                    To be closed 
                    <span
                      className="badge badge-secondary badge-pill"
                    >
                      0
                    </span>
                  </span>,
                },
              ]
            }
          >
            <div
              className="tab-bar "
            >
              <Component
                className="btn btn-link btn-sm tab-bar__tab tab-bar__tab--flex-grow tab-bar__tab--active tab-bar__tab--h5like"
                key="added"
                tab={
                  Object {
                    "id": "added",
                    "label": <span>
                      To be created 
                      <span
                        className="badge badge-secondary badge-pill"
                      >
                        0
                      </span>
                    </span>,
                  }
                }
              >
                <button
                  className="btn btn-link btn-sm tab-bar__tab tab-bar__tab--flex-grow tab-bar__tab--active tab-bar__tab--h5like"
                  data-test-tab="added"
                  onClick={[Function]}
                  type="button"
                >
                  <span>
                    To be created 
                    <span
                      className="badge badge-secondary badge-pill"
                    >
                      0
                    </span>
                  </span>
                </button>
              </Component>
              <Component
                className="btn btn-link btn-sm tab-bar__tab tab-bar__tab--flex-grow tab-bar__tab--inactive tab-bar__tab--h5like"
                key="changed"
                tab={
                  Object {
                    "id": "changed",
                    "label": <span>
                      To be updated 
                      <span
                        className="badge badge-secondary badge-pill"
                      >
                        1
                      </span>
                    </span>,
                  }
                }
              >
                <button
                  className="btn btn-link btn-sm tab-bar__tab tab-bar__tab--flex-grow tab-bar__tab--inactive tab-bar__tab--h5like"
                  data-test-tab="changed"
                  onClick={[Function]}
                  type="button"
                >
                  <span>
                    To be updated 
                    <span
                      className="badge badge-secondary badge-pill"
                    >
                      1
                    </span>
                  </span>
                </button>
              </Component>
              <Component
                className="btn btn-link btn-sm tab-bar__tab tab-bar__tab--flex-grow tab-bar__tab--inactive tab-bar__tab--h5like"
                key="unmodified"
                tab={
                  Object {
                    "id": "unmodified",
                    "label": <span>
                      Unmodified 
                      <span
                        className="badge badge-secondary badge-pill"
                      >
                        0
                      </span>
                    </span>,
                  }
                }
              >
                <button
                  className="btn btn-link btn-sm tab-bar__tab tab-bar__tab--flex-grow tab-bar__tab--inactive tab-bar__tab--h5like"
                  data-test-tab="unmodified"
                  onClick={[Function]}
                  type="button"
                >
                  <span>
                    Unmodified 
                    <span
                      className="badge badge-secondary badge-pill"
                    >
                      0
                    </span>
                  </span>
                </button>
              </Component>
              <Component
                className="btn btn-link btn-sm tab-bar__tab tab-bar__tab--flex-grow tab-bar__tab--inactive tab-bar__tab--h5like"
                key="deleted"
                tab={
                  Object {
                    "id": "deleted",
                    "label": <span>
                      To be closed 
                      <span
                        className="badge badge-secondary badge-pill"
                      >
                        0
                      </span>
                    </span>,
                  }
                }
              >
                <button
                  className="btn btn-link btn-sm tab-bar__tab tab-bar__tab--flex-grow tab-bar__tab--inactive tab-bar__tab--h5like"
                  data-test-tab="deleted"
                  onClick={[Function]}
                  type="button"
                >
                  <span>
                    To be closed 
                    <span
                      className="badge badge-secondary badge-pill"
                    >
                      0
                    </span>
                  </span>
                </button>
              </Component>
            </div>
          </TabBar>
          <div
            className="pt-3"
            key="added"
          >
            <span
              className="text-muted"
            >
              No changesets
            </span>
          </div>
        </div>
      </Tabs>
    </TabsWithLocalStorageViewStatePersistence>
    <div
      className="alert alert-info mt-2"
    >
      <Memo(AlertCircleIcon)
        className="icon-inline"
      >
        <svg
          className="mdi-icon icon-inline"
          fill="currentColor"
          height={24}
          viewBox="0 0 24 24"
          width={24}
        >
          <path
            d="M13,13H11V7H13M13,17H11V15H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z"
          />
        </svg>
      </Memo(AlertCircleIcon)>
       You are updating an existing campaign. By clicking 'Update', all above changesets that are not 'unmodified' will be updated on the codehost.
    </div>
  </div>
</CampaignUpdateDiff>
`;
