{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://raw.githubusercontent.com/sourcegraph/sourcegraph/master/shared/src/schema/extension.schema.json#",
  "title": "Sourcegraph extension manifest",
  "description": "The Sourcegraph extension manifest describes the extension and the features it provides.",
  "type": "object",
  "additionalProperties": true,
  "required": ["activationEvents", "publisher"],
  "properties": {
    "description": {
      "description": "The extension's description, which summarizes the extension's purpose and features. It should not exceed a few sentences.",
      "type": "string",
      "maxLength": 280
    },
    "publisher": {
      "description": "The Sourcegraph user or organization name publishing the extension.",
      "type": "string"
    },
    "url": {
      "description": "A URL to a file containing the bundled JavaScript source code of this extension.",
      "type": "string",
      "format": "uri"
    },
    "repository": {
      "description": "The location of the version control repository for this extension.",
      "type": "object",
      "additionalProperties": false,
      "required": ["url"],
      "properties": {
        "type": {
          "description": "The version control system (e.g. git).",
          "type": "string"
        },
        "url": {
          "description": "A URL to the source code for this extension.",
          "type": "string",
          "format": "uri"
        }
      }
    },
    "categories": {
      "description": "The categories that describe this extension, to help users browsing the extension registry to discover this extension.",
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "Programming languages",
          "Linters",
          "Code analysis",
          "External services",
          "Reports and stats",
          "Other",
          "Demos"
        ]
      }
    },
    "tags": {
      "description": "Arbitrary tags that describe this extension.",
      "type": "array",
      "items": { "type": "string" }
    },
    "activationEvents": {
      "description": "A list of events that cause this extension to be activated. '*' means that it will always be activated.",
      "type": "array",
      "items": {
        "type": "string",
        "pattern": "^(\\*|onLanguage:\\w+)$",
        "examples": ["onLanguage:javascript", "onLanguage:python", "*"]
      }
    },
    "contributes": {
      "description": "Features contributed by this extension. Extensions may also register certain types of contributions dynamically.",
      "type": "object",
      "properties": {
        "actions": {
          "description": "Actions contributed by the extension.",
          "type": "array",
          "items": {
            "additionalProperties": false,
            "description": "An action contribution describes a command that can be invoked, along with a title, description, icon, etc.",
            "properties": {
              "actionItem": {
                "description": "A specification of how to display this action as a button on a toolbar. The client is responsible for\ndisplaying contributions and defining which parts of its interface are considered to be toolbars. Generally,\nitems on a toolbar are always visible and, compared to items in a dropdown menu or list, are expected to be\nsmaller and to convey information (in addition to performing an action).\n\nFor example, a \"Toggle code coverage\" action may prefer to display a summarized status (such as \"Coverage:\n77%\") on a toolbar instead of the full title.\n\nClients: If the label is empty and only an iconURL is set, and the client decides not to display the icon\n(e.g., because the client is not graphical), then the client may hide the item from the toolbar.",
                "additionalProperties": false,
                "properties": {
                  "description": {
                    "description": "A description associated with this action item.\n\nClients: The description should be shown in a tooltip when the user focuses or hovers this toolbar item.",
                    "type": "string"
                  },
                  "iconDescription": {
                    "description": "A description of the information represented by the icon.\n\nClients: The client should not display this text directly. Instead, the client should use the\naccessibility facilities of the client's platform (such as the <img alt> attribute) to make it available\nto users needing the textual description.",
                    "type": "string"
                  },
                  "iconURL": {
                    "description": "The icon URL for this action (data: URIs are OK).\n\nClients: The client should this icon before the label (if any), proportionally scaling the dimensions as\nnecessary to avoid unduly enlarging the toolbar item beyond the dimensions necessary to show the label.\nIn space-constrained situations, the client should show only the icon and omit the label. The client\nmust not display a border around the icon. The client may choose not to display this icon.",
                    "type": "string"
                  },
                  "label": {
                    "description": "The text label for this item.",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "category": {
                "description": "The category that describes the group of related actions of which this action is a member.\n\nClients: When displaying this action's title alongside titles of actions from other groups, the client\nshould display each action as \"${category}: ${title}\" if the prefix is set.",
                "type": "string"
              },
              "command": {
                "description": "The command that this action invokes. It can refer to a command registered by the same extension or any\nother extension, or to a builtin command.\n\nExtensions: The command must be registered (unless it is a builtin command). Extensions can register\ncommands in the `initialize` response or via `client/registerCapability`.\n\n## Builtin client commands\n\nClients: All clients must handle the following commands as specified.\n\n### `open` {@link ActionContributionClientCommandOpen}\n\nThe builtin command `open` causes the client to open a URL (specified as a string in the first element of\ncommandArguments) using the default URL handler, instead of invoking the command on the extension.\n\nClients: The client should treat the first element of commandArguments as a URL (string) to open with the\ndefault URL handler (instead of sending a request to the extension to execute this command). If the client\nis running in a web browser, the client should render the action as an HTML <a> element so that it behaves\nlike a link.\n\n### `updateConfiguration` {@link ActionContributionClientCommandUpdateConfiguration}\n\nThe builtin command `updateConfiguration` causes the client to apply an update to the configuration settings.",
                "type": "string"
              },
              "commandArguments": {
                "description": "Optional arguments to pass to the extension when the action is invoked.",
                "items": {},
                "type": "array"
              },
              "description": {
                "description": "A longer description of the action taken by this action.\n\nExtensions: The description should not be unnecessarily repetitive with the title.\n\nClients: If the description is shown, the title must be shown nearby.",
                "type": "string"
              },
              "iconURL": {
                "description": "A URL to an icon for this action (data: URIs are OK).\n\nClients: The client should show this icon before the title, proportionally scaling the dimensions as\nnecessary to avoid unduly enlarging the item beyond the dimensions necessary to render the text. The client\nshould assume the icon is square (or roughly square). The client must not display a border around the icon.\nThe client may choose not to display this icon.",
                "type": "string"
              },
              "id": {
                "description": "The identifier for this action, which must be unique among all contributed actions.\n\nExtensions: By convention, this is a dotted string of the form `myExtensionName.myActionName`. It is common\nto use the same values for `id` and `command` (for the common case where the command has only one action\nthat mentions it).",
                "type": "string"
              },
              "title": {
                "description": "The title that succinctly describes what this action does.",
                "type": "string"
              }
            },
            "required": ["command", "id"],
            "type": "object"
          }
        },
        "configuration": {
          "description": "The JSON Schema for the settings used by this extension. This schema is merged with the Sourcegraph settings schema. The final schema for settings is the union of Sourcegraph settings and all added extensions' settings.",
          "$ref": "http://json-schema.org/draft-07/schema#"
        },
        "menus": {
          "description": "Menu items contributed by the extension.",
          "additionalProperties": false,
          "properties": {
            "commandPalette": {
              "items": {
                "$ref": "#/properties/contributes/definitions/MenuItemContribution"
              },
              "type": "array"
            },
            "directory/page": {
              "items": {
                "$ref": "#/properties/contributes/definitions/MenuItemContribution"
              },
              "type": "array"
            },
            "editor/title": {
              "items": {
                "$ref": "#/properties/contributes/definitions/MenuItemContribution"
              },
              "type": "array"
            },
            "global/nav": {
              "items": {
                "$ref": "#/properties/contributes/definitions/MenuItemContribution"
              },
              "type": "array"
            },
            "hover": {
              "items": {
                "$ref": "#/properties/contributes/definitions/MenuItemContribution"
              },
              "type": "array"
            },
            "panel/toolbar": {
              "items": {
                "$ref": "#/properties/contributes/definitions/MenuItemContribution"
              },
              "type": "array"
            },
            "help": {
              "items": {
                "$ref": "#/properties/contributes/definitions/MenuItemContribution"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "searchFilters": {
          "type": "array",
          "description": "Search filters contributed by the extension.",
          "items": {
            "additionalProperties": false,
            "description": "A search filters interface with `name` and `value` to display on a filter chip in the search results filters bar.",
            "properties": {
              "name": {
                "description": "The name to be displayed on the search filter chip.",
                "type": "string"
              },
              "value": {
                "description": "The value of the search filter chip (i.e. the literal search query string).",
                "type": "string"
              }
            },
            "type": "array"
          }
        }
      },
      "definitions": {
        "MenuItemContribution": {
          "additionalProperties": false,
          "description": "MenuItemContribution is a menu item contributed by an extension.",
          "properties": {
            "action": {
              "description": "The action to invoke when the item is selected. The value refers to a {@link ActionContribution#id} value.",
              "type": "string"
            },
            "alt": {
              "description": "An alternative action to invoke when the item is selected while pressing the Option/Alt/Meta/Ctrl/Cmd keys\nor using the middle mouse button. The value refers to a {@link ActionContribution#id} value.",
              "type": "string"
            },
            "group": {
              "description": "The group in which this item is displayed. This defines the sort order of menu items. The group value is an\nopaque string (it is just compared relative to other items' group values); there is no specification set of\nexpected or supported values.\n\nClients: On a toolbar, the client should sort toolbar items by (group, action), with toolbar items lacking a\ngroup sorting last. The client must not display the group value.",
              "type": "string"
            },
            "when": {
              "description": "An expression that, if given, must evaluate to true (or a truthy value) for this contribution to be\ndisplayed. The expression may use values from the context in which the contribution would be displayed.",
              "type": "string"
            }
          },
          "required": ["action"],
          "type": "object"
        }
      }
    }
  }
}
