load("//dev:go_defs.bzl", "go_test")
load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "monitoring",
    srcs = [
        "cloudsql.go",
        "common.go",
        "custom.go",
        "dashboard.go",
        "job.go",
        "monitoring.go",
        "nobl9.go",
        "redis.go",
        "response_codes.go",
        "sentry.go",
        "service.go",
    ],
    importpath = "github.com/sourcegraph/sourcegraph/dev/managedservicesplatform/stacks/monitoring",
    tags = [TAG_INFRA_CORESERVICES],
    visibility = [
        "//dev/managedservicesplatform:__subpackages__",
        "//dev/sg/msp:__pkg__",
    ],
    deps = [
        "//dev/managedservicesplatform/googlesecretsmanager",
        "//dev/managedservicesplatform/internal/resource/alertpolicy",
        "//dev/managedservicesplatform/internal/resource/gsmsecret",
        "//dev/managedservicesplatform/internal/resource/logcountmetric",
        "//dev/managedservicesplatform/internal/resource/random",
        "//dev/managedservicesplatform/internal/resource/sentryalert",
        "//dev/managedservicesplatform/internal/resource/serviceaccount",
        "//dev/managedservicesplatform/internal/resourceid",
        "//dev/managedservicesplatform/internal/stack",
        "//dev/managedservicesplatform/internal/stack/options/googleprovider",
        "//dev/managedservicesplatform/internal/stack/options/nobl9provider",
        "//dev/managedservicesplatform/internal/stack/options/opsgenieprovider",
        "//dev/managedservicesplatform/internal/stack/options/sentryprovider",
        "//dev/managedservicesplatform/internal/stack/options/slackprovider",
        "//dev/managedservicesplatform/spec",
        "//lib/errors",
        "//lib/pointers",
        "@com_github_hashicorp_terraform_cdk_go_cdktf//:cdktf",
        "@com_github_sourcegraph_managed_services_platform_cdktf_gen_google//monitoringalertpolicy",
        "@com_github_sourcegraph_managed_services_platform_cdktf_gen_google//monitoringdashboard",
        "@com_github_sourcegraph_managed_services_platform_cdktf_gen_google//monitoringnotificationchannel",
        "@com_github_sourcegraph_managed_services_platform_cdktf_gen_google//monitoringuptimecheckconfig",
        "@com_github_sourcegraph_managed_services_platform_cdktf_gen_google//serviceaccountkey",
        "@com_github_sourcegraph_managed_services_platform_cdktf_gen_nobl9//directgcm",
        "@com_github_sourcegraph_managed_services_platform_cdktf_gen_nobl9//project",
        "@com_github_sourcegraph_managed_services_platform_cdktf_gen_nobl9//service",
        "@com_github_sourcegraph_managed_services_platform_cdktf_gen_opsgenie//apiintegration",
        "@com_github_sourcegraph_managed_services_platform_cdktf_gen_opsgenie//dataopsgenieteam",
        "@com_github_sourcegraph_managed_services_platform_cdktf_gen_opsgenie//service",
        "@com_github_sourcegraph_managed_services_platform_cdktf_gen_sentry//datasentryorganizationintegration",
        "@com_github_sourcegraph_managed_services_platform_cdktf_gen_sentry//notificationaction",
        "@com_github_sourcegraph_managed_services_platform_cdktf_gen_sentry//project",
        "@com_github_sourcegraph_managed_services_platform_cdktf_gen_slack//conversation",
        "@org_golang_x_exp//maps",
    ],
)

go_test(
    name = "monitoring_test",
    srcs = ["dashboard_test.go"],
    embed = [":monitoring"],
    tags = [TAG_INFRA_CORESERVICES],
    deps = [
        "@com_github_hexops_autogold_v2//:autogold",
        "@com_github_sourcegraph_managed_services_platform_cdktf_gen_google//monitoringalertpolicy",
    ],
)
