func.func @FloorMod_platform_elem_type_output_type(%arg0: tensor<*xelem_type>, %arg1: tensor<*xelem_type>)
    -> tensor<*xoutput_type> attributes {tf_entry, llvm.emit_c_interface} {
  %0 = chlo.broadcast_remainder %arg0, %arg1 : (tensor<*xelem_type>, tensor<*xelem_type>) -> tensor<*xelem_type>
  %1 = mhlo.constant dense<0.000000e+00> : tensor<elem_type>
  %2 = chlo.broadcast_compare %0, %1 {comparison_direction = #chlo<comparison_direction NE>} : (tensor<*xelem_type>, tensor<elem_type>) -> tensor<*xi1>
  %3 = mhlo.constant dense<0.000000e+00> : tensor<elem_type>
  %4 = chlo.broadcast_compare %arg1, %3 {comparison_direction = #chlo<comparison_direction LT>} : (tensor<*xelem_type>, tensor<elem_type>) -> tensor<*xi1>
  %5 = chlo.broadcast_compare %0, %3 {comparison_direction = #chlo<comparison_direction LT>} : (tensor<*xelem_type>, tensor<elem_type>) -> tensor<*xi1>
  %6 = chlo.broadcast_compare %4, %5 {comparison_direction = #chlo<comparison_direction NE>} : (tensor<*xi1>, tensor<*xi1>) -> tensor<*xi1>
  %7 = chlo.broadcast_and %2, %6 : (tensor<*xi1>, tensor<*xi1>) -> tensor<*xi1>
  %8 = chlo.broadcast_add %arg1, %0 : (tensor<*xelem_type>, tensor<*xelem_type>) -> tensor<*xelem_type>
  %9 = mhlo.select %7, %8, %0 : tensor<*xi1>, tensor<*xelem_type>
  func.return %9 : tensor<*xoutput_type>
}
