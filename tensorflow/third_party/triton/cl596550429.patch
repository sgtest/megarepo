==== triton/lib/Target/LLVMIR/LLVMDIScope.cpp#2 - /google/src/cloud/tomnatan/mlir_bae1fdea712fcd0b0ea525b115e661f92263f2e7_1704716315/triton/lib/Target/LLVMIR/LLVMDIScope.cpp ====
# action=edit type=text
--- triton/lib/Target/LLVMIR/LLVMDIScope.cpp	2024-01-08 03:37:57.000000000 -0800
+++ triton/lib/Target/LLVMIR/LLVMDIScope.cpp	2024-01-08 04:22:40.000000000 -0800
@@ -73,11 +73,11 @@
           context, llvm::sys::path::filename(inputFilePath),
           llvm::sys::path::parent_path(inputFilePath));
     }
+    auto distinctId = mlir::DistinctAttr::create(mlir::UnitAttr::get(context));
     if (!compileUnitAttr) {
       compileUnitAttr = LLVM::DICompileUnitAttr::get(
-          context,
-          mlir::DistinctAttr::create(mlir::UnitAttr::get(&getContext())),
-          llvm::dwarf::DW_LANG_C, fileAttr, StringAttr::get(context, "triton"),
+          context, distinctId, llvm::dwarf::DW_LANG_C, fileAttr,
+          StringAttr::get(context, "triton"),
           /*isOptimized=*/true, LLVM::DIEmissionKind::LineTablesOnly);
     }
     auto subroutineTypeAttr =
@@ -87,14 +87,14 @@
     // Note that scopeline is set differently from LLVM's
     // DIScopeForLLVMFuncOpPass. I don't find reasons why scopeline should be
     // the column offset
-    auto subprogramAttr =
-        LLVM::DISubprogramAttr::get(context, compileUnitAttr, fileAttr,
-                                    funcNameAttr, funcNameAttr, fileAttr,
-                                    /*line=*/line,
-                                    /*scopeline=*/line,
-                                    LLVM::DISubprogramFlags::Definition |
-                                        LLVM::DISubprogramFlags::Optimized,
-                                    subroutineTypeAttr);
+    auto subprogramAttr = LLVM::DISubprogramAttr::get(
+        context, distinctId, compileUnitAttr, fileAttr, funcNameAttr,
+        funcNameAttr, fileAttr,
+        /*line=*/line,
+        /*scopeline=*/line,
+        LLVM::DISubprogramFlags::Definition |
+            LLVM::DISubprogramFlags::Optimized,
+        subroutineTypeAttr);
     funcOp->setLoc(FusedLoc::get(context, {loc}, subprogramAttr));
   }
 
