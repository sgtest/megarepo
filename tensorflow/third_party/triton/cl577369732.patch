==== triton/lib/Dialect/TritonGPU/Transforms/Pipeline.cpp#19 - /google/src/cloud/springerm/mlir_3cd2a0bc1a2dcf851f1821765946b77d0e65bd2e_1698463035/triton/lib/Dialect/TritonGPU/Transforms/Pipeline.cpp ====
# action=edit type=text
--- triton/lib/Dialect/TritonGPU/Transforms/Pipeline.cpp	2023-10-19 14:55:11.000000000 -0700
+++ triton/lib/Dialect/TritonGPU/Transforms/Pipeline.cpp	2023-10-27 20:17:46.000000000 -0700
@@ -759,7 +759,7 @@
   OpBuilder builder(forOp);
   // Get init operands for loop carried values
   for (BlockArgument &arg : forOp.getRegionIterArgs()) {
-    OpOperand &operand = forOp.getOpOperandForRegionIterArg(arg);
+    OpOperand &operand = *forOp.getTiedLoopInit(arg);
     setValueMapping(arg, operand.get(), 0);
   }
 
==== triton/lib/Dialect/TritonGPU/Transforms/Prefetch.cpp#10 - /google/src/cloud/springerm/mlir_3cd2a0bc1a2dcf851f1821765946b77d0e65bd2e_1698463035/triton/lib/Dialect/TritonGPU/Transforms/Prefetch.cpp ====
# action=edit type=text
--- triton/lib/Dialect/TritonGPU/Transforms/Prefetch.cpp	2023-10-19 14:55:11.000000000 -0700
+++ triton/lib/Dialect/TritonGPU/Transforms/Prefetch.cpp	2023-10-27 20:17:46.000000000 -0700
@@ -188,7 +188,7 @@
   auto getIncomingOp = [this](Value v) -> Value {
     if (auto arg = v.dyn_cast<BlockArgument>())
       if (arg.getOwner()->getParentOp() == forOp.getOperation())
-        return forOp.getOpOperandForRegionIterArg(arg).get();
+        return forOp.getTiedLoopInit(arg)->get();
     return Value();
   };
 
@@ -298,10 +298,10 @@
       Operation *firstDot = builder.clone(*dot, mapping);
       if (Value a = operand2headPrefetch.lookup(dot.getA()))
         firstDot->setOperand(
-            0, newForOp.getRegionIterArgForOpOperand(*a.use_begin()));
+            0, newForOp.getTiedLoopRegionIterArg(&*a.use_begin()));
       if (Value b = operand2headPrefetch.lookup(dot.getB()))
         firstDot->setOperand(
-            1, newForOp.getRegionIterArgForOpOperand(*b.use_begin()));
+            1, newForOp.getTiedLoopRegionIterArg(&*b.use_begin()));
 
       // remaining part
       int64_t kOff = prefetchWidth;
==== triton/lib/Dialect/TritonGPU/Transforms/RemoveLayoutConversions.cpp#18 - /google/src/cloud/springerm/mlir_3cd2a0bc1a2dcf851f1821765946b77d0e65bd2e_1698463035/triton/lib/Dialect/TritonGPU/Transforms/RemoveLayoutConversions.cpp ====
# action=edit type=text
--- triton/lib/Dialect/TritonGPU/Transforms/RemoveLayoutConversions.cpp	2023-10-24 18:31:01.000000000 -0700
+++ triton/lib/Dialect/TritonGPU/Transforms/RemoveLayoutConversions.cpp	2023-10-27 20:17:46.000000000 -0700
@@ -245,7 +245,7 @@
   for (OpOperand &use : value.getUses()) {
     Operation *user = use.getOwner();
     if (auto forOp = dyn_cast<scf::ForOp>(user)) {
-      Value arg = forOp.getRegionIterArgForOpOperand(use);
+      Value arg = forOp.getTiedLoopRegionIterArg(&use);
       Value result = forOp.getResultForOpOperand(use);
       setEncoding({arg, result}, info, changed, user);
       continue;
@@ -767,7 +767,7 @@
       SmallVector<Value> newOperands;
       for (auto arg : forOp.getRegionIterArgs()) {
         if (slice.count(arg)) {
-          OpOperand &initVal = forOp.getOpOperandForRegionIterArg(arg);
+          OpOperand &initVal = *forOp.getTiedLoopInit(arg);
           argMapping.push_back(std::make_pair(
               forOp.getResultForOpOperand(initVal).getResultNumber(),
               forOp.getInitArgs().size() + newOperands.size()));
==== triton/lib/Dialect/TritonGPU/Transforms/Utility.cpp#16 - /google/src/cloud/springerm/mlir_3cd2a0bc1a2dcf851f1821765946b77d0e65bd2e_1698463035/triton/lib/Dialect/TritonGPU/Transforms/Utility.cpp ====
# action=edit type=text
--- triton/lib/Dialect/TritonGPU/Transforms/Utility.cpp	2023-10-24 18:31:01.000000000 -0700
+++ triton/lib/Dialect/TritonGPU/Transforms/Utility.cpp	2023-10-27 20:17:46.000000000 -0700
@@ -430,10 +430,10 @@
     Block *block = blockArg.getOwner();
     Operation *parentOp = block->getParentOp();
     if (auto forOp = dyn_cast<scf::ForOp>(parentOp)) {
-      OpOperand &initOperand = forOp.getOpOperandForRegionIterArg(blockArg);
+      OpOperand *initOperand = forOp.getTiedLoopInit(blockArg);
       Value yieldOperand = forOp.getBody()->getTerminator()->getOperand(
           blockArg.getArgNumber() - forOp.getNumInductionVars());
-      queue.push_back({initOperand.get(), encoding});
+      queue.push_back({initOperand->get(), encoding});
       queue.push_back({yieldOperand, encoding});
       continue;
     }
==== triton/lib/Dialect/TritonNvidiaGPU/Transforms/Utility.cpp#1 - /google/src/cloud/springerm/mlir_3cd2a0bc1a2dcf851f1821765946b77d0e65bd2e_1698463035/triton/lib/Dialect/TritonNvidiaGPU/Transforms/Utility.cpp ====
# action=edit type=text
--- triton/lib/Dialect/TritonNvidiaGPU/Transforms/Utility.cpp	2023-10-12 01:35:16.000000000 -0700
+++ triton/lib/Dialect/TritonNvidiaGPU/Transforms/Utility.cpp	2023-10-27 20:17:46.000000000 -0700
@@ -88,9 +88,8 @@
     auto parentOp = blockArg.getOwner()->getParentOp();
     if (auto forOp = dyn_cast<scf::ForOp>(parentOp)) {
       if (blockArg.getArgNumber() >= forOp.getNumInductionVars()) {
-        if (failed(getDependentPointers(
-                forOp.getOpOperandForRegionIterArg(blockArg).get(),
-                dependentSet, processedSet)))
+        if (failed(getDependentPointers(forOp.getTiedLoopInit(blockArg)->get(),
+                                        dependentSet, processedSet)))
           return failure();
 
         unsigned operandIdx =
@@ -383,7 +382,7 @@
       if (failed(addControlOperandsForForOp(forOp)))
         return failure();
       if (blockArg.getArgNumber() >= forOp.getNumInductionVars()) {
-        Value operand = forOp.getOpOperandForRegionIterArg(blockArg).get();
+        Value operand = forOp.getTiedLoopInit(blockArg)->get();
         if (failed(tryInsertAndPropagate(operand)))
           return failure();
 
==== triton/test/lib/Analysis/TestAlias.cpp#5 - /google/src/cloud/springerm/mlir_3cd2a0bc1a2dcf851f1821765946b77d0e65bd2e_1698463035/triton/test/lib/Analysis/TestAlias.cpp ====
# action=edit type=text
--- triton/test/lib/Analysis/TestAlias.cpp	2023-10-19 14:55:11.000000000 -0700
+++ triton/test/lib/Analysis/TestAlias.cpp	2023-10-27 20:17:47.000000000 -0700
@@ -87,7 +87,7 @@
       }
       if (auto forOp = dyn_cast<scf::ForOp>(op)) {
         for (auto arg : llvm::enumerate(forOp.getRegionIterArgs())) {
-          auto operand = forOp.getOpOperandForRegionIterArg(arg.value()).get();
+          auto operand = forOp.getTiedLoopInit(arg.value())->get();
           auto opNames = getAllocOpNames(operand);
           auto argName = getValueOperandName(arg.value(), state);
           print(argName, opNames, os);
