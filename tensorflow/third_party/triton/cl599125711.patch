==== triton/lib/Conversion/TritonGPUToLLVM/TritonGPUToLLVMPass.cpp#19 - /google/src/cloud/bchetioui/mlir_5fcf907b34355980f77d7665a175b05fea7a6b7b_1705493395/triton/lib/Conversion/TritonGPUToLLVM/TritonGPUToLLVMPass.cpp ====
# action=edit type=text
--- triton/lib/Conversion/TritonGPUToLLVM/TritonGPUToLLVMPass.cpp	2024-01-15 03:54:37.000000000 -0800
+++ triton/lib/Conversion/TritonGPUToLLVM/TritonGPUToLLVMPass.cpp	2024-01-17 04:14:45.000000000 -0800
@@ -88,7 +88,7 @@
     auto splatOp = insertOp.getMask().getDefiningOp<triton::SplatOp>();
     if (!splatOp)
       return failure();
-    rewriter.updateRootInPlace(insertOp, [&]() {
+    rewriter.modifyOpInPlace(insertOp, [&]() {
       insertOp.getMaskMutable().assign(splatOp->getOperand(0));
     });
     return mlir::success();
==== triton/lib/Conversion/TritonToTritonGPU/TritonToTritonGPUPass.cpp#23 - /google/src/cloud/bchetioui/mlir_5fcf907b34355980f77d7665a175b05fea7a6b7b_1705493395/triton/lib/Conversion/TritonToTritonGPU/TritonToTritonGPUPass.cpp ====
# action=edit type=text
--- triton/lib/Conversion/TritonToTritonGPU/TritonToTritonGPUPass.cpp	2023-12-15 04:43:34.000000000 -0800
+++ triton/lib/Conversion/TritonToTritonGPU/TritonToTritonGPUPass.cpp	2024-01-17 04:21:13.000000000 -0800
@@ -650,8 +650,8 @@
   LogicalResult
   matchAndRewrite(scf::ConditionOp op, OpAdaptor adaptor,
                   ConversionPatternRewriter &rewriter) const override {
-    rewriter.updateRootInPlace(
-        op, [&]() { op->setOperands(adaptor.getOperands()); });
+    rewriter.modifyOpInPlace(op,
+                             [&]() { op->setOperands(adaptor.getOperands()); });
     return success();
   }
 };
==== triton/lib/Dialect/TritonGPU/Transforms/OptimizeDotOperands.cpp#17 - /google/src/cloud/bchetioui/mlir_5fcf907b34355980f77d7665a175b05fea7a6b7b_1705493395/triton/lib/Dialect/TritonGPU/Transforms/OptimizeDotOperands.cpp ====
# action=edit type=text
--- triton/lib/Dialect/TritonGPU/Transforms/OptimizeDotOperands.cpp	2024-01-05 23:46:53.000000000 -0800
+++ triton/lib/Dialect/TritonGPU/Transforms/OptimizeDotOperands.cpp	2024-01-17 04:21:13.000000000 -0800
@@ -284,8 +284,7 @@
         srcType.getShape(), srcType.getElementType(), dotOperandEncoding);
     Value newOperand = rewriter.create<ConvertLayoutOp>(dotOp.getLoc(), newType,
                                                         convertLhs.getSrc());
-    rewriter.updateRootInPlace(dotOp,
-                               [&]() { dotOp.setOperand(0, newOperand); });
+    rewriter.modifyOpInPlace(dotOp, [&]() { dotOp.setOperand(0, newOperand); });
     return success();
   }
 };
==== triton/lib/Dialect/TritonGPU/Transforms/OptimizeThreadLocality.cpp#6 - /google/src/cloud/bchetioui/mlir_5fcf907b34355980f77d7665a175b05fea7a6b7b_1705493395/triton/lib/Dialect/TritonGPU/Transforms/OptimizeThreadLocality.cpp ====
# action=edit type=text
--- triton/lib/Dialect/TritonGPU/Transforms/OptimizeThreadLocality.cpp	2024-01-15 03:54:37.000000000 -0800
+++ triton/lib/Dialect/TritonGPU/Transforms/OptimizeThreadLocality.cpp	2024-01-17 04:14:45.000000000 -0800
@@ -73,7 +73,7 @@
     if (triton::gpu::isExpensiveView(viewOp.getSrc().getType(), newType))
       return failure();
     rewriter.setInsertionPointAfter(viewOp);
-    rewriter.updateRootInPlace(viewOp, [&]() {
+    rewriter.modifyOpInPlace(viewOp, [&]() {
       viewOp.getResult().setType(newType);
       viewOp.setEfficientLayout(true);
     });
==== triton/lib/Dialect/TritonGPU/Transforms/Utility.cpp#22 - /google/src/cloud/bchetioui/mlir_5fcf907b34355980f77d7665a175b05fea7a6b7b_1705493395/triton/lib/Dialect/TritonGPU/Transforms/Utility.cpp ====
# action=edit type=text
--- triton/lib/Dialect/TritonGPU/Transforms/Utility.cpp	2023-12-15 04:43:34.000000000 -0800
+++ triton/lib/Dialect/TritonGPU/Transforms/Utility.cpp	2024-01-17 04:14:45.000000000 -0800
@@ -706,7 +706,7 @@
     }
     if (deadArg.empty())
       return failure();
-    rewriter.updateRootInPlace(forOp, [&]() {
+    rewriter.modifyOpInPlace(forOp, [&]() {
       // For simplicity we just change the dead yield operand to use the
       // associated argument and leave the operations and argument removal to
       // dead code elimination.
