==== triton/lib/Dialect/TritonGPU/Transforms/AccelerateMatmul.cpp#3 - /google/src/cloud/jreiffers/hmhmmm/triton/lib/Dialect/TritonGPU/Transforms/AccelerateMatmul.cpp ====
# action=edit type=text
--- triton/lib/Dialect/TritonGPU/Transforms/AccelerateMatmul.cpp	2023-05-26 16:07:06.000000000 -0700
+++ triton/lib/Dialect/TritonGPU/Transforms/AccelerateMatmul.cpp	2023-06-09 04:38:55.000000000 -0700
@@ -44,7 +44,7 @@
 SmallVector<unsigned, 2> warpsPerTileV2(triton::DotOp dotOp,
                                         const ArrayRef<int64_t> shape,
                                         int numWarps) {
-  auto filter = [&dotOp](Operation *op) {
+  mlir::TransitiveFilter filter = [&dotOp](Operation *op) {
     return op->getParentRegion() == dotOp->getParentRegion();
   };
   auto slices = mlir::getSlice(dotOp, filter);
@@ -116,7 +116,9 @@
     triton::gpu::MmaEncodingAttr mmaEnc;
     if (versionMajor == 1) {
       SetVector<Operation *> aBwdSlices, bBwdSlices;
-      auto isCvt = [](Operation *op) { return isa<ConvertLayoutOp>(op); };
+      mlir::TransitiveFilter isCvt = [](Operation *op) {
+        return isa<ConvertLayoutOp>(op);
+      };
       getBackwardSlice(a, &aBwdSlices, isCvt);
       getBackwardSlice(b, &bBwdSlices, isCvt);
       // get the source of the first conversion found in slices
==== triton/lib/Dialect/TritonGPU/Transforms/RemoveLayoutConversions.cpp#8 - /google/src/cloud/jreiffers/hmhmmm/triton/lib/Dialect/TritonGPU/Transforms/RemoveLayoutConversions.cpp ====
# action=edit type=text
--- triton/lib/Dialect/TritonGPU/Transforms/RemoveLayoutConversions.cpp	2023-06-01 05:23:23.000000000 -0700
+++ triton/lib/Dialect/TritonGPU/Transforms/RemoveLayoutConversions.cpp	2023-06-09 04:35:01.000000000 -0700
@@ -347,7 +347,7 @@
     if (srcEncoding.isa<triton::gpu::SliceEncodingAttr>())
       return failure();
     SetVector<Operation *> cvtSlices;
-    auto filter = [&](Operation *op) {
+    mlir::TransitiveFilter filter = [&](Operation *op) {
       return op->getBlock() == cvt->getBlock() &&
              !isa<triton::gpu::ConvertLayoutOp, scf::YieldOp>(op) &&
              !(isa<triton::ReduceOp>(op) &&
