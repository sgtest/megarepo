Auto generated patch. Do not edit or delete it, even if empty.
diff -ruN --strip-trailing-cr a/clang/lib/Sema/SemaDecl.cpp b/clang/lib/Sema/SemaDecl.cpp
--- a/clang/lib/Sema/SemaDecl.cpp
+++ b/clang/lib/Sema/SemaDecl.cpp
@@ -6377,6 +6377,12 @@
   } else if (DiagnoseUnexpandedParameterPack(NameInfo, UPPC_DeclarationType))
     return nullptr;
 
+  // The scope passed in may not be a decl scope.  Zip up the scope tree until
+  // we find one that is.
+  while ((S->getFlags() & Scope::DeclScope) == 0 ||
+         (S->getFlags() & Scope::TemplateParamScope) != 0)
+    S = S->getParent();
+
   DeclContext *DC = CurContext;
   if (D.getCXXScopeSpec().isInvalid())
     D.setInvalidType();
@@ -6529,12 +6535,6 @@
   if (getLangOpts().CPlusPlus)
     CheckExtraCXXDefaultArguments(D);
 
-  // The scope passed in may not be a decl scope.  Zip up the scope tree until
-  // we find one that is.
-  while ((S->getFlags() & Scope::DeclScope) == 0 ||
-         (S->getFlags() & Scope::TemplateParamScope) != 0)
-    S = S->getParent();
-
   NamedDecl *New;
 
   bool AddToScope = true;
diff -ruN --strip-trailing-cr a/clang/test/CXX/temp/temp.res/temp.local/p6.cpp b/clang/test/CXX/temp/temp.res/temp.local/p6.cpp
--- a/clang/test/CXX/temp/temp.res/temp.local/p6.cpp
+++ b/clang/test/CXX/temp/temp.res/temp.local/p6.cpp
@@ -127,30 +127,16 @@
 template<typename T> // expected-note {{declared here}}
 void f(int T) {} // expected-error {{declaration of 'T' shadows template parameter}}
 
+// FIXME: These are ill-formed: a template-parameter shall not have the same name as the template name.
 namespace A {
   template<typename T> struct T {};  // expected-error{{declaration of 'T' shadows template parameter}}
                                      // expected-note@-1{{template parameter is declared here}}
-  template<typename T> struct U {
-    template<typename V> struct V {}; // expected-error{{declaration of 'V' shadows template parameter}}
-                                      // expected-note@-1{{template parameter is declared here}}
-  };
 }
 namespace B {
-  template<typename T> void T() {} // expected-error{{declaration of 'T' shadows template parameter}}
-                                   // expected-note@-1{{template parameter is declared here}}
-
-  template<typename T> struct U {
-    template<typename V> void V(); // expected-error{{declaration of 'V' shadows template parameter}}
-                                   // expected-note@-1{{template parameter is declared here}}
-  };
+  template<typename T> void T() {}
 }
 namespace C {
-  template<typename T> int T; // expected-error{{declaration of 'T' shadows template parameter}}
-                              // expected-note@-1{{template parameter is declared here}}
-  template<typename T> struct U {
-    template<typename V> static int V; // expected-error{{declaration of 'V' shadows template parameter}}
-                                       // expected-note@-1{{template parameter is declared here}}
-  };
+  template<typename T> int T;
 }
 
 namespace PR28023 {
