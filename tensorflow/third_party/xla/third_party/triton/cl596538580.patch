==== triton/lib/Target/LLVMIR/LLVMDIScope.cpp#1 - /google/src/cloud/tomnatan/mlir_b3037ae1fc6d26459e37f813757ad30872eb2eee_1704712559/triton/lib/Target/LLVMIR/LLVMDIScope.cpp ====
# action=edit type=text
--- triton/lib/Target/LLVMIR/LLVMDIScope.cpp	2023-07-12 12:22:54.000000000 -0700
+++ triton/lib/Target/LLVMIR/LLVMDIScope.cpp	2024-01-08 03:26:39.000000000 -0800
@@ -1,6 +1,7 @@
 #include "triton/Target/LLVMIR/Passes.h"
 
 #include "mlir/Dialect/LLVMIR/LLVMDialect.h"
+#include "mlir/IR/BuiltinAttributes.h"
 #include "mlir/Pass/Pass.h"
 #include "llvm/BinaryFormat/Dwarf.h"
 #include "llvm/Support/Debug.h"
@@ -75,9 +76,10 @@
     }
     if (!compileUnitAttr) {
       compileUnitAttr = LLVM::DICompileUnitAttr::get(
-          context, llvm::dwarf::DW_LANG_C, fileAttr,
-          StringAttr::get(context, "triton"), /*isOptimized=*/true,
-          LLVM::DIEmissionKind::LineTablesOnly);
+          context,
+          mlir::DistinctAttr::create(mlir::UnitAttr::get(&getContext())),
+          llvm::dwarf::DW_LANG_C, fileAttr, StringAttr::get(context, "triton"),
+          /*isOptimized=*/true, LLVM::DIEmissionKind::LineTablesOnly);
     }
     auto subroutineTypeAttr =
         LLVM::DISubroutineTypeAttr::get(context, llvm::dwarf::DW_CC_normal, {});
