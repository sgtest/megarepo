diff --git a/lib/Target/LLVMIR/LLVMDIScope.cpp b/lib/Target/LLVMIR/LLVMDIScope.cpp
index 489aa455..a9de0b31 100644
--- a/lib/Target/LLVMIR/LLVMDIScope.cpp
+++ b/lib/Target/LLVMIR/LLVMDIScope.cpp
@@ -73,16 +73,24 @@ struct LLVMDIScopePass : public LLVMDIScopeBase<LLVMDIScopePass> {
           context, llvm::sys::path::filename(inputFilePath),
           llvm::sys::path::parent_path(inputFilePath));
     }
-    auto distinctId = mlir::DistinctAttr::create(mlir::UnitAttr::get(context));
-    if (!compileUnitAttr) {
-      compileUnitAttr = LLVM::DICompileUnitAttr::get(
-          context, distinctId, llvm::dwarf::DW_LANG_C, fileAttr,
-          StringAttr::get(context, "triton"),
-          /*isOptimized=*/true, LLVM::DIEmissionKind::LineTablesOnly);
-    }
     auto subroutineTypeAttr =
         LLVM::DISubroutineTypeAttr::get(context, llvm::dwarf::DW_CC_normal, {});
 
+    DistinctAttr distinctId;
+    auto subprogramFlags = LLVM::DISubprogramFlags::Optimized;
+    if (!funcOp.isExternal()) {
+      distinctId = mlir::DistinctAttr::create(mlir::UnitAttr::get(context));
+      if (!compileUnitAttr) {
+        compileUnitAttr = LLVM::DICompileUnitAttr::get(
+            context, distinctId, llvm::dwarf::DW_LANG_C, fileAttr,
+            StringAttr::get(context, "triton"),
+            /*isOptimized=*/true, LLVM::DIEmissionKind::LineTablesOnly);
+      }
+      subprogramFlags = subprogramFlags | LLVM::DISubprogramFlags::Definition;
+    } else {
+      compileUnitAttr = {};
+    }
+
     StringAttr funcNameAttr = funcOp.getNameAttr();
     // Note that scopeline is set differently from LLVM's
     // DIScopeForLLVMFuncOpPass. I don't find reasons why scopeline should be
@@ -92,8 +100,7 @@ struct LLVMDIScopePass : public LLVMDIScopeBase<LLVMDIScopePass> {
         funcNameAttr, fileAttr,
         /*line=*/line,
         /*scopeline=*/line,
-        LLVM::DISubprogramFlags::Definition |
-            LLVM::DISubprogramFlags::Optimized,
+        subprogramFlags,
         subroutineTypeAttr);
     funcOp->setLoc(FusedLoc::get(context, {loc}, subprogramAttr));
   }
